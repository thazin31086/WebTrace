@{
    ViewBag.Title = "Home Page";
}
<div class="container">
    <h3>Use Case and Test Case Trace Matrix</h3>
    <hr />
    <div class="row">
        <div class="col-sm-2">
            <table class="table table-hover">
                @{
                    var termmap = ViewData["TermMap"] as List<string>;
                    <thead>Terms (Total = @termmap.Count()) </thead>
                    foreach (var item in ViewData["TermMap"] as List<string>)
                    {
                        <tr><td> @item</td></tr>
                    }
                }
            </table>
        </div>
        <div class="col-sm-2">
            <table class="table table-hover">
                @{
                    var DocMap = ViewData["DocMap"] as List<string>;
                    <thead>Documents (Total = @DocMap.Count())</thead>
                    foreach (var item in ViewData["DocMap"] as List<string>)
                    {
                        <tr><td>@item</td></tr>
                    }
                }
            </table>
        </div>
        <div class="col-sm-2">
            <table class="table table-hover">
                <thead>Rawmartix</thead>
                @{
                    var RawMatrix = ViewData["RawMatrix"] as double[][];
                    var TermIndexLookup = ViewData["TermIndexLookup"] as Dictionary<string, int>;
                    var DocIndexLookup = ViewData["DocIndexLookup"] as Dictionary<string, int>;
                    for (int x = 0; x < RawMatrix.GetUpperBound(0); x++)
                    {
                        <tr>
                            <td>
                                <div class="panel panel-primary">
                                    <div class="page-heading">
                                        @DocIndexLookup.Where(z => z.Value == Convert.ToInt64(RawMatrix[x][0])).Select(z => z.Key).FirstOrDefault()
                                    </div>
                                    <div class="panel-body">
                                        @for (int y = 0; y < RawMatrix.GetUpperBound(0); y++)
                                        {                                            
                                            <table class="table table-bordered">
                                                <tr>
                                                    <td>@RawMatrix[x][y] </td>
                                                    <td>@TermIndexLookup.Where(z => z.Value == y).Select(z => z.Key).FirstOrDefault()</td>
                                                </tr>
                                            </table>
                                        }
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>

    </div>
</div>
@*<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner" role="listbox">
            <div class="item active">
                <img src="~/images/DirectTracing.PNG" style="display:block; margin:auto;" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        Direct Tracing means recovering traceability links between two artifacts of different kinds. <br/>
                        For example, recovering traceability links between user story and source code
                        <a class="btn btn-default" href="#">
                            Learn More..
                        </a>
                    </p>
                </div>
            </div>
            <div class="item">
                <img src="~/images/HierarchicalTracing.PNG" style="display:block; margin:auto;" alt="Hierarchical Tracing" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        Indirect Direct tracing means recovering traceability links between source and target arifacts using an existing artifact of the system.
                        <a class="btn btn-default" href="#">
                            Learn More..
                        </a>
                    </p>
                </div>
            </div>
            <div class="item">
                <img src="~/images/Indirect Tracing.PNG" style="display:block; margin:auto;" class="img-responsive" />
                <div class="carousel-caption" role="option">
                    <p>
                        Hierarchical tracing means recovering traceability links between multiple aritfacts, which have parent-child relationships between them.<br/>
                        For example, user story can be seem as parent artifact of source code and test case artifacts.
                        <a class="btn btn-default" href="#">
                            Learn More..
                        </a>
                    </p>
                </div>
            </div>
        </div>
        <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>

    <div class="row">
        <div class="col-md-3">
            <h2>Requirements Engineering Activities Supported by TLR</h2>
            <ul>
                <li>Requirements Verification and Validation (V&V)</li>
                <li>Identify outdated requirements</li>
                <li>Requirements Coverage Analysis</li>
                <li>Test Case Selection</li>
                <li>Bug Localization</li>
                <li>Change Impact Analysis</li>
                <li>Compliance Verification</li>
                <li>Issue Assignment</li>
            </ul>
        </div>
        <div class="col-md-3">
            <h2>IR-based Traceability Links Recovery</h2>
            <ul>
                <li>Vector Space Model</li>
                <li><a href="https://go.microsoft.com/fwlink/?LinkId=518004">Bower</a> for managing client-side libraries</li>
                <li>Theming using <a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
            </ul>
        </div>
    </div>*@
