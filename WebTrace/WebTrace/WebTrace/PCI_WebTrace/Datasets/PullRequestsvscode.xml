<PullRequests>
  <PullRequest>
    <IssueID>40914</IssueID>
    <Title>Monokai Dimmed &amp; Light Themes - Increase foreground, hover contrast. Fixes: #40731, #40732</Title>
    <Description>Monokai Dimmed:
- Increase contrast for the list hover

Light Defaults, Quiet Light:
- Increase contrast for the list hover


Fixes: #40731, #40732
  </Description>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>03/01/2018</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>40731</IssueID>
        <Title>Merge master into features/patterns3</Title>
        <Description>
        </Description>
        <CreatedDate>03/01/2020</CreatedDate>
        <ClosedDate>03/01/2020</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>3075</IssueID>
        <Title>Proposal: Delegates with suggested parameter names to simplify lambda expressions</Title>
        <Description>Now the lambda expresion is used a lot, for example with the classic Where extension introduced with Linq:

`... EnumerableClass.Where(Element =&gt; Element.IsGood()) ...`

From System.Linq we have:

`public static IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate);`

The Where method wants a predicate that is a delegate of type Func&lt;TSource,  bool&gt; that takes in a TSource and returns a bool.

**The proposal is to introduce a suggested name in the delegate to use to simplify lambda** expressions:  Func&lt;TSource  **_value_**,  bool&gt; so we might have:

`... EnumerableClass.Where( =&gt;    value. IsGood()) ...`

The compiler sees that the delegate has a suggested name for input variable name of type TSource, and therefore allows you to use in addition to traditional syntax an even more simplified one where there is no need to specify the signature of the Lambda Expression.
</Description>
        <CreatedDate>03/01/2020</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharpTest/RemoveUnusedMembers/RemoveUnusedMembersTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/RemoveUnusedParametersAndValues/RemoveUnusedValueAssignmentTests.cs</File>
      <File>src/Features/Core/Portable/RemoveUnusedMembers/AbstractRemoveUnusedMembersDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/RemoveUnusedParametersAndValues/AbstractRemoveUnusedValuesCodeFixProvider.cs</File>
      <File>src/Tools/AnalyzerRunner/CodeRefactoringRunner.cs</File>
      <File>src/Tools/AnalyzerRunner/DiagnosticAnalyzerRunner.cs</File>
      <File>src/Tools/AnalyzerRunner/LooseAssemblyVersionLoader.cs</File>
      <File>src/Tools/AnalyzerRunner/PerformanceTracker.cs</File>
      <File>src/Tools/AnalyzerRunner/Program.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/SyntaxNodeExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSyntaxFactsService.cs</File>
      <File>src/Workspaces/Core/Portable/LanguageServices/SyntaxFactsService/ISyntaxFactsService.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>40460</IssueID>
    <Title>Add theme-specific color customizations. Fix #36860</Title>
    <Description>My attempt at implementing theme-scoped color customizations #36860 .

![update_theme](https://user-images.githubusercontent.com/9638156/34192106-011e03d4-e55d-11e7-8c22-78faac39a64c.gif)
![intellisense](https://user-images.githubusercontent.com/9638156/34192118-0fcb295c-e55d-11e7-96fe-de719bd97c2b.png)

- [x] IntelliSense in settings
- [x] Colors update on settings change
- [x] Colors update on theme change
- [x] Priority `scoped` =&gt; `customized` =&gt; `theme`

---
Settings example:
```json
"workbench.colorCustomizations": {
    "[Monokai Dimmed]": {
        "activityBar.background": "#66F",
    },
    "activityBar.background": "#ddd",
    "[Monokai]": {
        "activityBar.background": "#F66"
    }
},
"editor.tokenColorCustomizations": {
    "[Monokai Dimmed]": {
        "comments": "#66F",
    },
    "comments": "#ddd",
    "[Monokai]": {
        "textMateRules": [{
            "scope": "comment",
            "settings": {
                "foreground": "#F66"
            },   
        }]
    },
},
```

cc @aeschli </Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>36860</IssueID>
        <Title>Merge master to master-vs-deps</Title>
        <Description>
This is an automatically generated pull request from master into master-vs-deps.

``` bash
git fetch --all
git checkout merges/master-to-master-vs-deps
git reset --hard upstream/master-vs-deps
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-master-vs-deps --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</Description>
        <CreatedDate>28/06/2019</CreatedDate>
        <ClosedDate>28/06/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>66</IssueID>
        <Title>Change encoding on files to be "git compatible"</Title>
        <Description>Git think some of .cs files are binary because they use "UCS-2 Little Endian"(according to Notepad++):
![image](https://cloud.githubusercontent.com/assets/774791/5888789/432c5b7a-a40d-11e4-9138-8ec2efafb212.png)

If I convert file to UTF8 git applications start displaying this files as text file(diff works).
Without this change pull requests look like this: https://github.com/dotnet/roslyn/pull/65/files

I think some tool should be used to convert all files to UTF8.
</Description>
        <CreatedDate>24/01/2015</CreatedDate>
        <ClosedDate>25/01/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>66</IssueID>
        <Title>Change encoding on files to be "git compatible"</Title>
        <Description>Git think some of .cs files are binary because they use "UCS-2 Little Endian"(according to Notepad++):
![image](https://cloud.githubusercontent.com/assets/774791/5888789/432c5b7a-a40d-11e4-9138-8ec2efafb212.png)

If I convert file to UTF8 git applications start displaying this files as text file(diff works).
Without this change pull requests look like this: https://github.com/dotnet/roslyn/pull/65/files

I think some tool should be used to convert all files to UTF8.
</Description>
        <CreatedDate>24/01/2015</CreatedDate>
        <ClosedDate>25/01/2015</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Conversions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Crefs.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Deconstruct.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Statements.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Symbols.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_TupleOperators.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/AccessCheck.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/Conversions/ConversionsBase.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/OverloadResolution/MethodTypeInference.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/OverloadResolution/OverloadResolution.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/BoundNode.cs</File>
      <File>src/Compilers/CSharp/Portable/CodeGen/EmitExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/CSharpCompilation.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/CSharpSemanticModel.cs</File>
      <File>src/Compilers/CSharp/Portable/Compiler/ClsComplianceChecker.cs</File>
      <File>src/Compilers/CSharp/Portable/Declarations/MergedTypeDeclaration.cs</File>
      <File>src/Compilers/CSharp/Portable/DocumentationComments/DocumentationCommentIDVisitor.PartVisitor.cs</File>
      <File>src/Compilers/CSharp/Portable/Emitter/EditAndContinue/CSharpSymbolMatcher.cs</File>
      <File>src/Compilers/CSharp/Portable/Emitter/Model/PEModuleBuilder.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/DefiniteAssignment.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/LocalDataFlowPass.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/AsyncRewriter/AsyncMethodBuilderMemberCollection.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Conversion.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_DeconstructionAssignmentOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Field.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TupleBinaryOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TupleCreationExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/MethodToClassRewriter.cs</File>
      <File>src/Compilers/CSharp/Portable/SymbolDisplay/SymbolDisplayVisitor.Types.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AbstractTypeMap.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AnonymousTypes/PublicSymbols/AnonymousType.TypePublicSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AnonymousTypes/SynthesizedSymbols/AnonymousType.TemplateSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/BaseTypeAnalysis.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Compilation_WellKnownMembers.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstraintsHelper.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstructedMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstructedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ErrorTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/EventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ExtendedErrorTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/FieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/DynamicTypeDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/MetadataDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/PENamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/PEParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/TupleTypeDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MetadataOrSourceAssemblySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MissingMetadataTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaAmbiguousCanonicalTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaIllegalGenericInstantiationSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaMissingCanonicalTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/PropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingSymbolTranslator.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/ImplicitNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceAssemblySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceMemberContainerSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceUserDefinedOperatorSymbolBase.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedEventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedPropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Symbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Synthesized/SynthesizedContainer.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Synthesized/SynthesizedEmbeddedAttributeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleErrorFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleEventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TuplePropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeSymbolExtensions.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeUnification.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeWithAnnotations.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/UnboundGenericType.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/UnsupportedMetadataTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/VarianceSafety.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Wrapped/WrappedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxFactory.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxFacts.cs</File>
      <File>src/Compilers/CSharp/Portable/Utilities/TypeSymbolExtensions.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Attributes/AttributeTests_WellKnownAttributes.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenDeconstructTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenInParametersTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenNullCoalescingAssignmentTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenOperators.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefConditionalOperatorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefReadonlyReturnTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleEqualityTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/ForeachTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/SwitchTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/EditAndContinueTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/LocalSlotMappingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTupleTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/DeconstructionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/LocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OperatorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OutVarTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OverloadResolutionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/RefEscapingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/StackAllocInitializerTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/ValueTupleTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Compilation/SemanticModelGetDeclaredSymbolAPITests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/SymbolDisplay/SymbolDisplayTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/MockNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Retargeting/NoPia.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/ClsComplianceTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/CustomModifierCopyTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/FieldTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/SymbolErrorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/AsyncParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/AwaitParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ExpressionParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/LocalFunctionParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/PatternParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ScriptParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/StatementParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Syntax/SyntaxFactoryTests.cs</File>
      <File>src/Compilers/Core/Portable/CodeGen/CompilationTestData.cs</File>
      <File>src/Compilers/Core/Portable/MemberDescriptor.cs</File>
      <File>src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayFormat.cs</File>
      <File>src/Compilers/Core/Portable/Symbols/INamedTypeSymbol.cs</File>
      <File>src/Compilers/Core/Portable/Symbols/ISymbolExtensions.cs</File>
      <File>src/Compilers/Test/Utilities/CSharp/SymbolUtilities.cs</File>
      <File>src/EditorFeatures/CSharp/Highlighting/KeywordHighlighters/AsyncAwaitHighlighter.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/InlineTemporary/InlineTemporaryTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/IntroduceVariable/IntroduceVariableTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/ConvertTupleToStruct/ConvertTupleToStructTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/Nullable/CSharpDeclareAsNullableCodeFixTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/GenerateVariable/GenerateVariableTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SemanticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/UseNamedArguments/UseNamedArgumentsTests.cs</File>
      <File>src/EditorFeatures/Core/FindUsages/IDefinitionsAndReferencesFactory.cs</File>
      <File>src/EditorFeatures/TestUtilities/Completion/AbstractCompletionProviderTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspace_Create.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspace_XmlConsumption.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/Symbols/EENamedTypeSymbol.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ExpressionCompiler/MissingAssemblyTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ExpressionCompiler/TupleTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ResultProvider/TupleTests.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/Nullable/CSharpDeclareAsNullableCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/IntroduceVariable/CSharpIntroduceVariableService_IntroduceField.cs</File>
      <File>src/Features/Core/Portable/IntroduceVariable/AbstractIntroduceVariableService.AbstractIntroduceVariableCodeAction.cs</File>
      <File>src/Features/Core/Portable/IntroduceVariable/AbstractIntroduceVariableService.cs</File>
      <File>src/Features/Core/Portable/LanguageServices/SymbolDisplayService/AbstractSymbolDisplayService.AbstractSymbolDescriptionBuilder.cs</File>
      <File>src/Features/Core/Portable/MetadataAsSource/DocumentationCommentUtilities.cs</File>
      <File>src/Features/Core/Portable/UseCollectionInitializer/ObjectCreationExpressionAnalyzer.cs</File>
      <File>src/Features/Core/Portable/UseObjectInitializer/ObjectCreationExpressionAnalyzer.cs</File>
      <File>src/Test/Utilities/Portable/Assert/AssertEx.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/ParenthesizedExpressionSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpSimplificationService.Expander.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/Reducers/CSharpCastReducer.cs</File>
      <File>src/Workspaces/Core/Portable/Editing/ImportAdderService.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/RegularExpressions/LanguageServices/RegexSyntaxClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolTree/SymbolTreeInfo_Metadata.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SyntaxTree/SyntaxTreeIndex_Create.cs</File>
      <File>src/Workspaces/Core/Portable/LanguageServices/SyntaxFactsService/AbstractSyntaxFactsService.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Collections/IntervalTree`1.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ISymbolExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Utilities/XmlFragmentParser.cs</File>
      <File>src/Workspaces/Core/Portable/Storage/SQLite/SQLitePersistentStorage_BulkPopulateIds.cs</File>
      <File>src/Workspaces/Core/Portable/SymbolKey/SymbolKey.SymbolKeyReader.cs</File>
      <File>src/Workspaces/Core/Portable/SymbolKey/SymbolKey.SymbolKeyWriter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>40211</IssueID>
    <Title>Use the async version of Electron's dialog API</Title>
    <Description>fixes #39536, #9262, #39729
Improves: #17552</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>39536</IssueID>
        <Title>IntroduceVariable should not trigger on the name in a local declaration</Title>
        <Description>Repro:
```C#
class C
{
    int M()
    {
        int x[||] = M();
        System.Console.Write(x);
    }
}
```

An "introduce local" refactoring is offered.
I expect there would be no "introduce local" offered, and "inline temporary variable" would be the top choice.

![image](https://user-images.githubusercontent.com/12466233/67611454-a50b4600-f74e-11e9-98c3-c85e22eb3607.png)

FYI @jasonmalinowski @petrroll</Description>
        <CreatedDate>26/10/2019</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>9262</IssueID>
        <Title>[Test Failure] &lt;description&gt; in prtest/win/vsi/p0 on PR #9259</Title>
        <Description>PR: [#9259](https://github.com/dotnet/roslyn/pull/9259) _Fix devenv /build and devenv /upgrade_ by @jmarolf
Failure: http://dotnet-ci.cloudapp.net/job/dotnet_roslyn_prtest_win_vsi_p0/344/

Nuget restore failed
</Description>
        <CreatedDate>26/02/2016</CreatedDate>
        <ClosedDate>27/02/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>39729</IssueID>
        <Title>Don't store pooled object in cache</Title>
        <Description>The AnalyzerConfigSet had a race where we were storing the pooled object
in the cache. It turns out that this often works, due to hash codes mapping
different sets to different buckets, but is wildly unsafe and can produce
almost any result.

This change allocates a new list for the cache when adding.

Fixes #39599</Description>
        <CreatedDate>07/11/2019</CreatedDate>
        <ClosedDate>11/11/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>17552</IssueID>
        <Title>Merge master to dev16</Title>
        <Description>
This is an automatically generated pull request from master into dev16.

``` bash
git fetch --all
git checkout merges/master-to-dev16-20170304-011208
git reset --hard upstream/dev16
git merge upstream/master
# Fix merge conflicts
git commit
git push merges/master-to-dev16-20170304-011208 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</Description>
        <CreatedDate>04/03/2017</CreatedDate>
        <ClosedDate>04/03/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharp/Highlighting/KeywordHighlighters/AsyncAwaitHighlighter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>40049</IssueID>
    <Title>Handle Ruby auto-indent issues</Title>
    <Description>Addressing issues #40042 and #29970.

Updated behavior:
![case](https://a.safe.moe/Fa2lK.gif)
![if](https://a.safe.moe/TuCOp.gif)

Current behavior can be seen in #40042.</Description>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>40042</IssueID>
        <Title>Generic class operators derived from interface seems broken</Title>
        <Description>Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary&lt;T, T&gt; to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.

The class looks like this:


    public class CaseInsensitiveDictionary&lt;TValue&gt;
        : ConcurrentDictionary&lt;string, TValue&gt;
    {
        public CaseInsensitiveDictionary()
            : base(StringComparer.InvariantCultureIgnoreCase)
        {
        }

        private CaseInsensitiveDictionary(IDictionary&lt;string, TValue&gt; attributes)
            : this()
        {
            AddRange(attributes);
        }

        public void Add(string key, TValue value)
        {
            this.TryAdd(key, value);
        }

        public void AddRange(IDictionary&lt;string, TValue&gt; entries)
        {
            foreach (var item in entries)
            {
                this.TryAdd(item.Key, item.Value);
            }
        }

        public static CaseInsensitiveDictionary&lt;TValue&gt; Create(IDictionary&lt;string, TValue&gt; attributes = null)
        {
            if (attributes == null)
            {
                return new CaseInsensitiveDictionary&lt;TValue&gt;();
            }
            return new CaseInsensitiveDictionary&lt;TValue&gt;(attributes);
        }

        public static implicit operator Dictionary&lt;string, TValue&gt;(CaseInsensitiveDictionary&lt;TValue&gt; data)
        {
            return new Dictionary&lt;string, TValue&gt;(data);
        }

        public static implicit operator CaseInsensitiveDictionary&lt;TValue&gt;(Dictionary&lt;string, TValue&gt; data)
        {
            return Create(data);
        }

    }


`  


Let's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:



        public void FromDictionaryToCaseInsensitiveDictionaryTest()
        {

            Dictionary&lt;string, string&gt; dc2 = new Dictionary&lt;string, string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (CaseInsensitiveDictionary&lt;string&gt;)dc2;
            Console.WriteLine("FromDictionaryToCaseInsensitiveDictionaryTest success");
        }

        public void FromIDictionaryToCaseInsensitiveDictionaryTest()
        {
            IDictionary&lt;string, string&gt; dc2 = new Dictionary&lt;string, string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (CaseInsensitiveDictionary&lt;string&gt;)dc2;

            Console.WriteLine("FromIDictionaryToCaseInsensitiveDictionaryTest success");
        }


        public void FromCaseInsensitiveDictionaryToDictionaryTest()
        {

            var dc2 = new CaseInsensitiveDictionary&lt;string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (Dictionary&lt;string, string&gt;)dc2;

            Console.WriteLine("FromCaseInsensitiveDictionaryToDictionaryTest success");

        }



The first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.

The second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'
.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, 

With this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  

Please let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.

Thanks!

</Description>
        <CreatedDate>27/11/2019</CreatedDate>
        <ClosedDate>02/12/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>29970</IssueID>
        <Title>Track nullable state for tuple items</Title>
        <Description>```
        [Fact]
        public void TupleTypeInference_06()
        {
            var source =
@"class C
{
    static void F(object? x, object? y)
    {
        if (y != null)
        {
            ((object? x, object? y), object? z) t = ((x, y), y);
            t.Item1.Item1.ToString();
            t.Item1.Item2.ToString();
            t.Item2.ToString();
            t.Item1.x.ToString();
            t.Item1.y.ToString();
            t.z.ToString();
        }
    }
}";
            var comp = CreateCompilation(new[] { source, NonNullTypesTrue, NonNullTypesAttributesDefinition });
            // PROTOTYPE(NullableReferenceTypes): Should not report warning for
            // `t.Item1.Item2`, `t.Item2`, `t.Item1.y`, or `t.z`.
            comp.VerifyDiagnostics(
                // (8,13): warning CS8602: Possible dereference of a null reference.
                //             t.Item1.Item1.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.Item1.Item1").WithLocation(8, 13),
                // (9,13): warning CS8602: Possible dereference of a null reference.
                //             t.Item1.Item2.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.Item1.Item2").WithLocation(9, 13),
                // (10,13): warning CS8602: Possible dereference of a null reference.
                //             t.Item2.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.Item2").WithLocation(10, 13),
                // (11,13): warning CS8602: Possible dereference of a null reference.
                //             t.Item1.x.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.Item1.x").WithLocation(11, 13),
                // (12,13): warning CS8602: Possible dereference of a null reference.
                //             t.Item1.y.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.Item1.y").WithLocation(12, 13),
                // (13,13): warning CS8602: Possible dereference of a null reference.
                //             t.z.ToString();
                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, "t.z").WithLocation(13, 13));
        }
```

Related to https://github.com/dotnet/roslyn/issues/29699 (should conversion warnings be reported on elements or the whole tuple?)</Description>
        <CreatedDate>17/09/2018</CreatedDate>
        <ClosedDate>20/01/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>40042</IssueID>
        <Title>Generic class operators derived from interface seems broken</Title>
        <Description>Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary&lt;T, T&gt; to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.

The class looks like this:


    public class CaseInsensitiveDictionary&lt;TValue&gt;
        : ConcurrentDictionary&lt;string, TValue&gt;
    {
        public CaseInsensitiveDictionary()
            : base(StringComparer.InvariantCultureIgnoreCase)
        {
        }

        private CaseInsensitiveDictionary(IDictionary&lt;string, TValue&gt; attributes)
            : this()
        {
            AddRange(attributes);
        }

        public void Add(string key, TValue value)
        {
            this.TryAdd(key, value);
        }

        public void AddRange(IDictionary&lt;string, TValue&gt; entries)
        {
            foreach (var item in entries)
            {
                this.TryAdd(item.Key, item.Value);
            }
        }

        public static CaseInsensitiveDictionary&lt;TValue&gt; Create(IDictionary&lt;string, TValue&gt; attributes = null)
        {
            if (attributes == null)
            {
                return new CaseInsensitiveDictionary&lt;TValue&gt;();
            }
            return new CaseInsensitiveDictionary&lt;TValue&gt;(attributes);
        }

        public static implicit operator Dictionary&lt;string, TValue&gt;(CaseInsensitiveDictionary&lt;TValue&gt; data)
        {
            return new Dictionary&lt;string, TValue&gt;(data);
        }

        public static implicit operator CaseInsensitiveDictionary&lt;TValue&gt;(Dictionary&lt;string, TValue&gt; data)
        {
            return Create(data);
        }

    }


`  


Let's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:



        public void FromDictionaryToCaseInsensitiveDictionaryTest()
        {

            Dictionary&lt;string, string&gt; dc2 = new Dictionary&lt;string, string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (CaseInsensitiveDictionary&lt;string&gt;)dc2;
            Console.WriteLine("FromDictionaryToCaseInsensitiveDictionaryTest success");
        }

        public void FromIDictionaryToCaseInsensitiveDictionaryTest()
        {
            IDictionary&lt;string, string&gt; dc2 = new Dictionary&lt;string, string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (CaseInsensitiveDictionary&lt;string&gt;)dc2;

            Console.WriteLine("FromIDictionaryToCaseInsensitiveDictionaryTest success");
        }


        public void FromCaseInsensitiveDictionaryToDictionaryTest()
        {

            var dc2 = new CaseInsensitiveDictionary&lt;string&gt;();
            dc2.Add("test1", "test1 value");

            var dc3 = (Dictionary&lt;string, string&gt;)dc2;

            Console.WriteLine("FromCaseInsensitiveDictionaryToDictionaryTest success");

        }



The first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.

The second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'
.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, 

With this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  

Please let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.

Thanks!

</Description>
        <CreatedDate>27/11/2019</CreatedDate>
        <ClosedDate>02/12/2019</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/Configuration/ConfigureSeverity/MultipleCodeStyleOptionBasedSeverityConfigurationTests.cs</File>
      <File>src/EditorFeatures/Test/Diagnostics/IDEDiagnosticIDConfigurationTests.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Configuration/ConfigurationUpdater.cs</File>
      <File>src/Features/Core/Portable/UseInferredMemberName/AbstractUseInferredMemberNameDiagnosticAnalyzer.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>39370</IssueID>
    <Title>Tilde expansion for files to include and exclude (fixes #36792)</Title>
    <Description>Fixes issue #36792. Uses the untildify method added in PR #39122 to expand paths that start with ~ to their absolute path.</Description>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>36792</IssueID>
        <Title>Flow to master-vs-deps</Title>
        <Description>In preparation for snap</Description>
        <CreatedDate>26/06/2019</CreatedDate>
        <ClosedDate>26/06/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>39122</IssueID>
        <Title>Calling GetTypeInfo on CastExpressionSyntax.Type returns wrong nullable information</Title>
        <Description>```c#
#nullable enable

using System;

class C
{
    void M()
    {
        object? o = null;
        var s = [|(string?)o|];
        Console.WriteLine(s);
    }
}
```

where `[||]` shows the CastExpressionSyntax being used. 

![image](https://user-images.githubusercontent.com/475144/66356903-a00e6000-e921-11e9-8cfd-ee7fb41f72a9.png)
</Description>
        <CreatedDate>07/10/2019</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Conversions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Crefs.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Deconstruct.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Statements.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Symbols.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_TupleOperators.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/AccessCheck.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/Conversions/ConversionsBase.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/OverloadResolution/MethodTypeInference.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/OverloadResolution/OverloadResolution.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/BoundNode.cs</File>
      <File>src/Compilers/CSharp/Portable/CodeGen/EmitExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/CSharpCompilation.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/CSharpSemanticModel.cs</File>
      <File>src/Compilers/CSharp/Portable/Compiler/ClsComplianceChecker.cs</File>
      <File>src/Compilers/CSharp/Portable/Declarations/MergedTypeDeclaration.cs</File>
      <File>src/Compilers/CSharp/Portable/DocumentationComments/DocumentationCommentIDVisitor.PartVisitor.cs</File>
      <File>src/Compilers/CSharp/Portable/Emitter/EditAndContinue/CSharpSymbolMatcher.cs</File>
      <File>src/Compilers/CSharp/Portable/Emitter/Model/PEModuleBuilder.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/DefiniteAssignment.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/LocalDataFlowPass.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/AsyncRewriter/AsyncMethodBuilderMemberCollection.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Conversion.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_DeconstructionAssignmentOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Field.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TupleBinaryOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TupleCreationExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/MethodToClassRewriter.cs</File>
      <File>src/Compilers/CSharp/Portable/SymbolDisplay/SymbolDisplayVisitor.Types.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AbstractTypeMap.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AnonymousTypes/PublicSymbols/AnonymousType.TypePublicSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/AnonymousTypes/SynthesizedSymbols/AnonymousType.TemplateSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/BaseTypeAnalysis.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Compilation_WellKnownMembers.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstraintsHelper.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstructedMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ConstructedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ErrorTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/EventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/ExtendedErrorTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/FieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/DynamicTypeDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/MetadataDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/PENamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/PEParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Metadata/PE/TupleTypeDecoder.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MetadataOrSourceAssemblySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/MissingMetadataTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaAmbiguousCanonicalTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaIllegalGenericInstantiationSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NoPiaMissingCanonicalTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/PropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Retargeting/RetargetingSymbolTranslator.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/ImplicitNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceAssemblySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceMemberContainerSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceUserDefinedOperatorSymbolBase.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedEventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SubstitutedPropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Symbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Synthesized/SynthesizedContainer.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Synthesized/SynthesizedEmbeddedAttributeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleErrorFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleEventSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleFieldSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TuplePropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Tuples/TupleTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeSymbolExtensions.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeUnification.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeWithAnnotations.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/UnboundGenericType.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/UnsupportedMetadataTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/VarianceSafety.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Wrapped/WrappedNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxFacts.cs</File>
      <File>src/Compilers/CSharp/Portable/Utilities/TypeSymbolExtensions.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Attributes/AttributeTests_WellKnownAttributes.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenDeconstructTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenInParametersTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenNullCoalescingAssignmentTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenOperators.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefConditionalOperatorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefReadonlyReturnTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleEqualityTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/ForeachTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/SwitchTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/EditAndContinueTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/LocalSlotMappingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTupleTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/DeconstructionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/LocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OperatorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OutVarTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OverloadResolutionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/RefEscapingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/StackAllocInitializerTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/ValueTupleTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Compilation/SemanticModelGetDeclaredSymbolAPITests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/SymbolDisplay/SymbolDisplayTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/MockNamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Retargeting/NoPia.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/ClsComplianceTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/CustomModifierCopyTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/FieldTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/SymbolErrorTests.cs</File>
      <File>src/Compilers/Core/Portable/CodeGen/CompilationTestData.cs</File>
      <File>src/Compilers/Core/Portable/MemberDescriptor.cs</File>
      <File>src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayFormat.cs</File>
      <File>src/Compilers/Core/Portable/Symbols/INamedTypeSymbol.cs</File>
      <File>src/Compilers/Core/Portable/Symbols/ISymbolExtensions.cs</File>
      <File>src/Compilers/Test/Utilities/CSharp/SymbolUtilities.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/InlineTemporary/InlineTemporaryTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/ConvertTupleToStruct/ConvertTupleToStructTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/GenerateVariable/GenerateVariableTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SemanticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/UseNamedArguments/UseNamedArgumentsTests.cs</File>
      <File>src/EditorFeatures/Core/FindUsages/IDefinitionsAndReferencesFactory.cs</File>
      <File>src/EditorFeatures/TestUtilities/Completion/AbstractCompletionProviderTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspace_Create.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspace_XmlConsumption.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/Symbols/EENamedTypeSymbol.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ExpressionCompiler/MissingAssemblyTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ExpressionCompiler/TupleTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ResultProvider/TupleTests.cs</File>
      <File>src/Features/Core/Portable/LanguageServices/SymbolDisplayService/AbstractSymbolDisplayService.AbstractSymbolDescriptionBuilder.cs</File>
      <File>src/Test/Utilities/Portable/Assert/AssertEx.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpSimplificationService.Expander.cs</File>
      <File>src/Workspaces/Core/Portable/Editing/ImportAdderService.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ISymbolExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/SymbolKey/SymbolKey.SymbolKeyWriter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>34947</IssueID>
    <Title>replace 'Courier New' with 'monospace' in Linux font list</Title>
    <Description>A workaround better than #33319.

Close #5742.</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>02/10/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>33319</IssueID>
        <Title>Merge master to features/NullableDogfood</Title>
        <Description>
This is an automatically generated pull request from master into features/NullableDogfood.

``` bash
git fetch --all
git checkout merges/master-to-features/NullableDogfood
git reset --hard upstream/features/NullableDogfood
git merge upstream/master
# Fix merge conflicts
git commit
git push upstream merges/master-to-features/NullableDogfood --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</Description>
        <CreatedDate>12/02/2019</CreatedDate>
        <ClosedDate>12/02/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>5742</IssueID>
        <Title>Retrieve a cached semantic model if possible when compiling methods.</Title>
        <Description>
        </Description>
        <CreatedDate>07/10/2015</CreatedDate>
        <ClosedDate>29/02/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Semantics/BestTypeInferrer.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker_Patterns.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_BinaryOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeSymbolExtensions.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/TypeWithState.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesVsPatterns.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OperatorTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/SyncNamespace/SyncNamespaceTests_ChangeNamespace.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/UpgradeProject/UpgradeProjectTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/MoveToNamespace/MoveToNamespaceTests.cs</File>
      <File>src/Features/CSharp/Portable/UpgradeProject/CSharpUpgradeProjectCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/CodeRefactorings/SyncNamespace/AbstractChangeNamespaceService.cs</File>
      <File>src/Features/Core/Portable/UpgradeProject/AbstractUpgradeProjectCodeFixProvider.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>34055</IssueID>
    <Title>Add optional CompletionContext to provideCompletionItems</Title>
    <Description>Handles the completion item provider part of #752

Adds a new overload of `provideCompletionItems` that takes a context argument. This context is currently used to provide the trigger character of the suggestion

Part of #21543</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>752</IssueID>
        <Title>Suggestion: Select the span automatically based on cursor position for introduce local / constant</Title>
        <Description>Ported from TFS WorkItem: **1065670**, originally filed by @shyamnamboodiripad 

---

**Repro Steps:**

Currently, I&amp;nbsp;if I want to invoke introduce local /constant&amp;nbsp;refactoring on a multiline string literal, I am forced to select the entire string first. It&amp;nbsp;would be nice if&amp;nbsp;I could invoke the&amp;nbsp;refactoring by simply placing cursor somewhere in the string and hitting ctrl +&amp;nbsp;.&amp;nbsp;

Can't we figure out the minimum enclosing span for the current cursor position&amp;nbsp;(i.e. expand to&amp;nbsp;span of innermost node / expression&amp;nbsp;containing the cursor) and offer refactorings as if the user had selected this span? I could also imagine this being useful for other&amp;nbsp;expressions (date literals,&amp;nbsp;expressions / method calls&amp;nbsp;involving long identifiers etc.)

![image](https://cloud.githubusercontent.com/assets/4213867/6311587/a001512c-b919-11e4-8be7-c0960e7576fc.png)

Looks like we do this already in some other refactorings? For example, if i select jsut 'String' in the following If statement, I am offered an extract method refactoring that extracts the entire 'typeof x isnot string' expression-

![image](https://cloud.githubusercontent.com/assets/4213867/6311588/b48d5c6c-b919-11e4-9422-40e522b8373d.png)

Revision History:

1) Created By Shyam Namboodiripad (10/16/2014 11:22:37 PM)

2) Edited By Kevin Pilch-Bisson (10/17/2014 10:03:24 AM)

Can you think about the UX here?

3) Edited By Kevin Pilch-Bisson (2/20/2015 3:21:24 PM)

Yes, I think this is a good idea to help with our refactoring discoverability.&amp;nbsp; It may not fit in RTM though.&amp;nbsp; Can you port to GitHub.
</Description>
        <CreatedDate>20/02/2015</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>21543</IssueID>
        <Title>Compiler crashes in VS15.3, analyzer throws NullReferenceException in master, when call local function from nested lambda</Title>
        <Description>I found the issue #16895 that mentioning compiler crash caused by local function and nested lambda. But  I can build that issue's code successfully in VS15.3 so I think this issue is different issue.

**Version Used**: VS2017 15.3.0, master(d67a95f1c01dc7064a47caecf02326a060292649)([demo at  sharplab.io](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQBMQGoA+ABADAAmwEYBuAWAChLsAmfABQQHsBzBCMSgb0vz/1gQYASwDGhACz4AsnBgALJigAUxOhFEimAOwCU+LvgC+lXv0Ejx2KdIjDty3Wb48K/d/nsx8ANwgAbAFc4fABefFxyNw8+WQUlZUcwgD5nD1cYmP8mUQDHKMyPa3xs3P9HNMKMwsyAYR0oJn84ADoAdQRheAAZezhlPyC4XQKamLjFFSTQ1Oix92r5zNK8kcr5ozW5mpNt903Rvl3doA===))

**Steps to Reproduce**:
```cs
using System;

class Program
{
    static void Method(Action action) { }

    static void Main()
    {
        int value = 0;
        Method(() =&gt;
        {
            local();
            void local()
            {
                Console.WriteLine(value);
                Method(() =&gt;
                {
                    local();
                });
            }
        });
    }
}
```

**Expected Behavior**:
I can build the above code without any errors and warnings.

**Actual Behavior**:
If I build the above code in VS15.3, the build failed due to `"csc.exe" exited with code -2146232797`.
I found a stack trace in `eventvwr.msc` -&gt; `Windows Logs` -&gt; `Application` -&gt; `.NET Runtime`:
```
Application: csc.exe
Framework Version: v4.0.30319
Description: The application requested process termination through System.Environment.FailFast(string message).
Message: System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at System.ThrowHelper.ThrowKeyNotFoundException()
   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitLocalLoad(BoundLocal local, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(BoundExpression expression, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitDelegateCreation(BoundExpression node, BoundExpression receiver, Boolean isExtensionMethod, MethodSymbol method, TypeSymbol delegateType, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitDelegateCreationExpression(BoundDelegateCreationExpression expression, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(BoundExpression expression, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitArguments(ImmutableArray`1 arguments, ImmutableArray`1 parameters)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitCallExpression(BoundCall call, UseKind useKind)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpressionCoreWithStackGuard(BoundExpression expression, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(BoundExpression expression, Boolean used)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatementAndCountInstructions(BoundStatement statement)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitSequencePointStatement(BoundSequencePoint node)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatements(ImmutableArray`1 statements)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitBlock(BoundBlock block)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.GenerateImpl()
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(PEModuleBuilder moduleBuilder, MethodSymbol method, Int32 methodOrdinal, BoundStatement block, ImmutableArray`1 lambdaDebugInfo, ImmutableArray`1 closureDebugInfo, StateMachineTypeSymbol stateMachineTypeOpt, VariableSlotAllocator variableSlotAllocatorOpt, DiagnosticBag diagnostics, DebugDocumentProvider debugDocumentProvider, ImportChain importChainOpt, Boolean emittingPdb, Boolean emitTestCoverageData, ImmutableArray`1 dynamicAnalysisSpans)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileSynthesizedMethods(TypeCompilationState compilationState)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.&lt;&gt;c__DisplayClass21_0.&lt;CompileNamedTypeAsTask&gt;b__0()
Stack:
   at System.Environment.FailFast(System.String, System.Exception)
   at Microsoft.CodeAnalysis.FatalError.Report(System.Exception, System.Action`1&lt;System.Exception&gt;)
   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+&lt;&gt;c__DisplayClass21_0.&lt;CompileNamedTypeAsTask&gt;b__0()
   at System.ThrowHelper.ThrowKeyNotFoundException()
   at System.Collections.Generic.Dictionary`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].get_Item(System.__Canon)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitLocalLoad(Microsoft.CodeAnalysis.CSharp.BoundLocal, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitDelegateCreation(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression, Boolean, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitDelegateCreationExpression(Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitArguments(System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CSharp.BoundExpression&gt;, System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol&gt;)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitCallExpression(Microsoft.CodeAnalysis.CSharp.BoundCall, UseKind)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpressionCoreWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression, Boolean)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatementAndCountInstructions(Microsoft.CodeAnalysis.CSharp.BoundStatement)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitSequencePointStatement(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatements(System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CSharp.BoundStatement&gt;)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)
   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.GenerateImpl()
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo&gt;, System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo&gt;, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.CSharp.ImportChain, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.CodeGen.SourceSpan&gt;)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileSynthesizedMethods(Microsoft.CodeAnalysis.CSharp.TypeCompilationState)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)
   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+&lt;&gt;c__DisplayClass21_0.&lt;CompileNamedTypeAsTask&gt;b__0()
   at Roslyn.Utilities.UICultureUtilities+&lt;&gt;c__DisplayClass5_0.&lt;WithCurrentUICulture&gt;b__0()
   at System.Threading.Tasks.Task.Execute()
   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)
   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
```

If I build the above code in master, the build succeeded but I get the following warning(same warning occurs 5 times):
```
warning AD0001: Analyzer 'Microsoft.CodeAnalysis.CSharp.ValidateFormatString.CSharpValidateFormatStringDiagnosticAnalyzer' threw an exception of type 'System.NullReferenceException' with message 'Object reference not set to an instance of an object.'.
```</Description>
        <CreatedDate>16/08/2017</CreatedDate>
        <ClosedDate>15/09/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/VisualStudio/Core/Def/Implementation/GCManager.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>34001</IssueID>
    <Title>Functional style formatter. Color range is all float numb…</Title>
    <Description>Fix #32235. 

Per discussion points in #32235

* Color value ranges. Now we only expose float number between 0...1 .
* Color.fromHex, Color.fromHSL are removed from the API.
* Color Insertion. This is not done, but it's not a blocker to the API finalization.

With the new API,

* The title of Color Picker only shows four color format, RGB, HEX, HSL, HSA, which are representatives of RGB color model. When users click on it, we iterate through them.
* When users move the cursor inside the saturation box, we only make updates to the document when mouse up.
* Since we only make changes when the color is finalized (mouse up), we ask the provider for string representative of selected color. We don't flood the extensions of both API call or content change.
* Extensions format the color per Color Format users select in the color picker.

For now, the four formats are good enough as long as we are only targeting RGB color model. If there is other feature request, we need to update both `provideColorRange` and `resolveColor` as the color can no longer be represented as RGB. cc @joaomoreno @jrieken </Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>32235</IssueID>
        <Title>MessageArgs in CodeFixProvider</Title>
        <Description>I am creating a rule that defines variable prefixes. Examples:

``` c#
int intA;
double dobB;
decimal decC;
Random varD;
DataTable dttE;
string strF;
```

When I created the analyzer, to check if the prefix was correct I had to consult it. During the creation of the diagnosis, he was part of the MessageArgs (following code):

``` c#
////////////////////////////////////
//Consider Prefix is already defined
////////////////////////////////////
private void AnalisaVariavelG(SyntaxNodeAnalysisContext obj)
{
    var varIden = ((FieldDeclarationSyntax)obj.Node).Declaration.Variables;
    for (int i = 0; i &lt; varIden.Count; i++) //For each attribute in declaration
    {
        var al = varIden[i].Identifier.Text;
        if (al.Length &lt;= 3 || Prefix != al.Substring(0, 3))
        {
            var diagnostic = Diagnostic.Create(Rule, varIden[i].Identifier.GetLocation(), al, Prefix);
            obj.ReportDiagnostic(diagnostic);
        }
    }
}
```

But when I try to access the arguments in CodeFixProvider, the list is always empty. If these arguments were received, I would avoid a new query.

``` c#
public sealed override async Task RegisterCodeFixesAsync(CodeFixContext context)
{
    for (int i = 0; i &lt; context.Diagnostics.Length; i++)
    {
        ...
        var span = context.Diagnostics[i].Location.SourceSpan;
        context.RegisterCodeFix(CodeAction.Create("Corrigir prefixo", 
                        c =&gt; CorrigePrefixoAsync(context.Document, span, c)), 
                        context.Diagnostics[i]);
        //context.RegisterCodeFix(CodeAction.Create("Corrigir prefixo", 
                        c =&gt; CorrigePrefixoAsync(context.Document, span, c, context.Diagnostics[i].messageArgs)),
                         context.Diagnostics[i]); 
        //The commented would be ideal (By the way, messageArgs is protected for some reason (_messageArgs))
        ...
    }
}
```</Description>
        <CreatedDate>08/01/2019</CreatedDate>
        <ClosedDate>09/01/2019</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>32235</IssueID>
        <Title>MessageArgs in CodeFixProvider</Title>
        <Description>I am creating a rule that defines variable prefixes. Examples:

``` c#
int intA;
double dobB;
decimal decC;
Random varD;
DataTable dttE;
string strF;
```

When I created the analyzer, to check if the prefix was correct I had to consult it. During the creation of the diagnosis, he was part of the MessageArgs (following code):

``` c#
////////////////////////////////////
//Consider Prefix is already defined
////////////////////////////////////
private void AnalisaVariavelG(SyntaxNodeAnalysisContext obj)
{
    var varIden = ((FieldDeclarationSyntax)obj.Node).Declaration.Variables;
    for (int i = 0; i &lt; varIden.Count; i++) //For each attribute in declaration
    {
        var al = varIden[i].Identifier.Text;
        if (al.Length &lt;= 3 || Prefix != al.Substring(0, 3))
        {
            var diagnostic = Diagnostic.Create(Rule, varIden[i].Identifier.GetLocation(), al, Prefix);
            obj.ReportDiagnostic(diagnostic);
        }
    }
}
```

But when I try to access the arguments in CodeFixProvider, the list is always empty. If these arguments were received, I would avoid a new query.

``` c#
public sealed override async Task RegisterCodeFixesAsync(CodeFixContext context)
{
    for (int i = 0; i &lt; context.Diagnostics.Length; i++)
    {
        ...
        var span = context.Diagnostics[i].Location.SourceSpan;
        context.RegisterCodeFix(CodeAction.Create("Corrigir prefixo", 
                        c =&gt; CorrigePrefixoAsync(context.Document, span, c)), 
                        context.Diagnostics[i]);
        //context.RegisterCodeFix(CodeAction.Create("Corrigir prefixo", 
                        c =&gt; CorrigePrefixoAsync(context.Document, span, c, context.Diagnostics[i].messageArgs)),
                         context.Diagnostics[i]); 
        //The commented would be ideal (By the way, messageArgs is protected for some reason (_messageArgs))
        ...
    }
}
```</Description>
        <CreatedDate>08/01/2019</CreatedDate>
        <ClosedDate>09/01/2019</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharp/SplitStringLiteral/SplitStringLiteralCommandHandler.StringSplitter.cs</File>
      <File>src/EditorFeatures/CSharp/SplitStringLiteral/SplitStringLiteralCommandHandler.cs</File>
      <File>src/EditorFeatures/CSharpTest/Formatting/Indentation/SmartIndenterEnterOnTokenTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Formatting/Indentation/SmartIndenterTests.cs</File>
      <File>src/EditorFeatures/Core/Implementation/SmartIndent/SmartIndent.cs</File>
      <File>src/EditorFeatures/Core/Wrapping/AbstractCodeActionComputer.cs</File>
      <File>src/EditorFeatures/TestUtilities/Formatting/CoreFormatterTestsBase.cs</File>
      <File>src/Tools/ExternalAccess/FSharp/Internal/Editor/FSharpSynchronousIndentationService.cs</File>
      <File>src/Workspaces/Core/Portable/Indentation/AbstractIndentationService.cs</File>
      <File>src/Workspaces/Core/Portable/Indentation/IIndentationService.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>33935</IssueID>
    <Title>fixed the terminal and find widget key presses</Title>
    <Description>This should fix #30994 and #33833.

This function was added in [this commit](https://github.com/Microsoft/vscode/commit/8ffd4d78fc8a741fad7d3d0e4e8b76824fe6ffed), which fixed an interaction with the Esc key when the terminal find widget was visible.

I tried multiple scenarios with the Ctrl+A, Ctrl+V, Esc keys (both in the terminal and editor, with the find widget opened or closed) and I don't think there are any regressions.

CC @Tyriar </Description>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>30994</IssueID>
        <Title>Merge dev16.0-preview2 into features/recursive-patterns</Title>
        <Description>
        </Description>
        <CreatedDate>06/11/2018</CreatedDate>
        <ClosedDate>13/11/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>4636</IssueID>
        <Title>Adding an assembly reference via CPS does not update Roslyn MetadataReferences.</Title>
        <Description>**Version Used**: 
2.9.0

**Steps to Reproduce**:

1.  Open a solution with a C# project.
2.  Obtain a `ConfiguredProject` interface for the C# project.
3.  Add a reference to a GAC'd assembly via the following calls:
```
await configuredProject.Services.AssemblyReferences.AddAsync(assemblyName, null);

await configuredProject.UnconfiguredProject.SaveAsync();
```
4. Note that the `.csproj` file is properly updated to include the reference.
5. Obtain a reference to the `VisualStudioWorkspace` and locate the `Project` to which the reference was added.
6.  Note that the `MetadataReferences` on that `Project` do NOT include the reference added via the CPS calls above.

**Expected Behavior**:
The Roslyn project should pick up the added reference.

**Actual Behavior**:
The Roslyn project does not include the added reference.
</Description>
        <CreatedDate>02/03/2019</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder.ValueChecks.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Invocation.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Operators.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Statements.cs</File>
      <File>src/Compilers/CSharp/Portable/CSharpResources.Designer.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/NullableWalker.cs</File>
      <File>src/Compilers/CSharp/Portable/Parser/LanguageParser.cs</File>
      <File>src/Compilers/CSharp/Portable/SymbolDisplay/SymbolDisplayVisitor.Types.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/LambdaTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/NullableParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/StatementParsingTests.cs</File>
      <File>src/EditorFeatures/CSharpTest2/Recommendations/AssemblyKeywordRecommenderTests.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Helpers.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/IntellisenseQuickInfoBuilder.cs</File>
      <File>src/EditorFeatures/Test/DocCommentFormatting/DocCommentFormattingTests.cs</File>
      <File>src/Features/CSharp/Portable/Completion/KeywordRecommenders/AssemblyKeywordRecommender.cs</File>
      <File>src/Features/Core/Portable/DocumentationComments/AbstractDocumentationCommentFormattingService.cs</File>
      <File>src/Features/Core/Portable/LanguageServices/SymbolDisplayService/AbstractSymbolDisplayService.AbstractSymbolDescriptionBuilder.cs</File>
      <File>src/Features/Core/Portable/Shared/Extensions/ISymbolExtensions_2.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/AbstractEditorTest.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/AbstractIntegrationTest.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/AbstractInteractiveWindowTest.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/AbstractUpdateProjectTest.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpAddMissingReference.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpAutomaticBraceCompletion.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpBuild.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpChangeSignatureDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpClassification.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpCodeActions.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpEncapsulateField.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpErrorListCommon.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpErrorListDesktop.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpErrorListNetCore.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpExtractInterfaceDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpExtractMethod.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpF1Help.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpFindReferences.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpFormatting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpGenerateFromUsage.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpGenerateTypeDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpGoToDefinition.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpGoToImplementation.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpImmediate.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpIntelliSense.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractive.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveAsyncOutput.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveBoxSelection.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveCommands.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveDirectives.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpInteractiveFormsAndWpf.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpKeywordHighlighting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpNavigateTo.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpNavigationBar.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpOrganizing.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpOutlining.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpQuickInfo.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpReferenceHighlighting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpRename.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpReplClassification.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpReplIdeFeatures.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpReplIntellisense.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpSendToInteractive.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpSignatureHelp.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpSquigglesCommon.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpSquigglesDesktop.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpSquigglesNetCore.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpUpdateProjectToAllowUnsafe.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpUpgradeProject.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/CSharp/CSharpWinForms.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicAddMissingReference.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicAutomaticBraceCompletion.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicBuild.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicChangeSignatureDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicClassification.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicCodeActions.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicEditAndContinue.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicEncapsulateField.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicEndConstruct.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicErrorListCommon.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicErrorListDesktop.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicErrorListNetCore.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicExpressionEvaluator.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicExtractInterfaceDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicExtractMethod.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicF1Help.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicFindReferences.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicFormatting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGenerateConstructorDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGenerateEqualsAndGetHashCodeDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGenerateFromUsage.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGenerateTypeDialog.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGoToDefinition.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicGoToImplementation.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicImmediate.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicIntelliSense.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicKeywordHighlighting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicLineCommit.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicNavigateTo.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicNavigationBar.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicOrganizing.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicOutlining.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicQuickInfo.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicReferenceHighlighting.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicRename.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicSignatureHelp.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicSquigglesCommon.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicSquigglesDesktop.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicSquigglesNetCore.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/VisualBasic/BasicWinForms.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/Workspace/WorkspaceBase.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/Workspace/WorkspacesDesktop.cs</File>
      <File>src/VisualStudio/IntegrationTest/IntegrationTests/Workspace/WorkspacesNetCore.cs</File>
      <File>src/VisualStudio/IntegrationTest/TestUtilities/InProcess/QuickInfoToStringConverter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>29596</IssueID>
    <Title>Multi root folders view name is not updated on removing …</Title>
    <Description>…root folder

Fixes #29559 
Fixes #29525 </Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>29559</IssueID>
        <Title>Updated optimization training data.</Title>
        <Description>Updated optimization data based on training from lab/ml build. Depending on how long myget takes to make this available, some builds may fail to restore, it should fix itself within short order.</Description>
        <CreatedDate>27/08/2018</CreatedDate>
        <ClosedDate>28/08/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>29525</IssueID>
        <Title>Roslyn demands unrestricted permissions to everything</Title>
        <Description>**Version Used**: 
2.9.0

**Steps to Reproduce**:

1. Call Roslyn from an AppDomain where the permissions are restricted to, say, Internet zone.

**Expected Behavior**:
Scripts run and only crash if they call on code that requires elevated permissions such as file I/O.

**Actual Behavior**:
Roslyn crashes immediately demanding unrestricted permissions to everything: this is the permissions that the SecurityException says it is demanding:

&lt;PermissionSet class="System.Security.PermissionSet"version="1"Unrestricted="true"/&gt;

Unless I'm missing something here, this make Roslyn completely unusable for scenarios where potentially untrustworthy code could be executed, e.g. plugin architectures or game modding.

[RoslynClassLibrary.zip](https://github.com/dotnet/roslyn/files/2321949/RoslynClassLibrary.zip)</Description>
        <CreatedDate>26/08/2018</CreatedDate>
        <ClosedDate>27/08/2018</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Symbols/Attributes/AttributeData.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceModuleSymbol.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/NullableReferenceTypesTests.cs</File>
      <File>src/Compilers/Core/Portable/Symbols/Attributes/AttributeDescription.cs</File>
      <File>src/Compilers/Test/Utilities/CSharp/CSharpTestBase.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>29509</IssueID>
    <Title>Various kinds of sorting in explorer</Title>
    <Description>Addresses #29329, #5222, #22529, #11823</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>06/07/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>29329</IssueID>
        <Title>Merge master to features/caller-expression</Title>
        <Description>
This is an automatically generated pull request from master into features/caller-expression.

``` bash
git fetch --all
git checkout merges/master-to-features/caller-expression
git reset --hard upstream/features/caller-expression
git merge upstream/master
# Fix merge conflicts
git commit
git push merges/master-to-features/caller-expression --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</Description>
        <CreatedDate>16/08/2018</CreatedDate>
        <ClosedDate>16/08/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>5222</IssueID>
        <Title>Improve Preview Changes experience</Title>
        <Description>The Visual Studio 2015 implementation of the Preview Changes dialog is mostly a recreation of the experience from Visual Studio 2013. Should we consider improving upon this experience? Some possibilities:
1. Integrate a proper diff view
2. Construct a broader preview experience that allows navigation, find refs, etc.
</Description>
        <CreatedDate>14/09/2015</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>22529</IssueID>
        <Title>C# "prefer inferred tuple element names" option change is not effective immediately</Title>
        <Description>https://developercommunity.visualstudio.com/content/problem/122804/c-prefer-inferred-tuple-element-names-option-chang.html

I have the following code that shows a suggestion to remove "two:" from the code

var a = new { two = 1 };
var t = (one: 1, two: a.two);

2. Open Tools | Options dialog, locate the "prefer inferred tuple element names" option, and change Severity to Error

3. Click OK button

Actual:
I waited and waited, but eventually had to make a change to the code in order for the suggestion to change to an error.

I didn't check other options, is this behavior by-design?</Description>
        <CreatedDate>04/10/2017</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>11823</IssueID>
        <Title>New PCL project wizard in VS uses dnxcore50 when ASP.NET Core 1.0 is checked</Title>
        <Description>**Version Used**: 

Visual Studio 2015 U3 Preview
Visual Studio Tools for Universal Windows Apps 14.0.25219.0

**Steps to Reproduce**:
1. Create a new PCL.
2. Check **.NET Framework 4.6** and **ASP.NET Core 1.0**.
3. Create the project and look at the project.json.

**Expected Behavior**:

project.json should contain a guardrail for `netcoreapp1.0`, since this is what the new ASP.NET tooling is producing:
https://github.com/aspnet/Templates/blob/77fefe61b91616a6bcb9b77355324245e46923b2/src/BaseTemplates/EmptyWeb/project.json#L19

The target framework should be some `netstandard` version.

**Actual Behavior**:

The supports guardrails contains `dnxcore50.app` and the target framework is `dotnet`. Both of these are deprecated.

**Related**:

https://github.com/dotnet/corefx/issues/9232
https://github.com/NuGet/Home/issues/2908

@rchande 
</Description>
        <CreatedDate>07/06/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/CSharpResources.Designer.cs</File>
      <File>src/Compilers/CSharp/Portable/Operations/CSharpOperationFactory.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/NamedTypeSymbol.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Attributes/AttributeTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Attributes/AttributeTests_CallerInfoAttributes.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Attributes/AttributeTests_Security.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenAsyncEHTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenAsyncLocalsTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenClosureLambdaTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenDeconstructTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenExprLambdaTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenLocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/SwitchTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/DeterministicTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/DynamicAnalysis/DynamicAnalysisResourceTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/DynamicAnalysis/DynamicInstrumentationTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/AssemblyReferencesTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/EditAndContinuePdbTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/EditAndContinueStateMachineTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/EditAndContinue/LocalSlotMappingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/ResourceTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/CheckSumTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBAsyncTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBConstantTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBDynamicLocalsTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBIteratorTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBLambdaTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBLocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBSourceLinkTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBTupleTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBWinMdExpTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Perf.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Diagnostics/DiagnosticAnalyzerTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/IOperation/IOperationTests_IBranchOperation.Extensions.cs</File>
      <File>src/Compilers/Core/MSBuildTask/ManagedCompiler.cs</File>
      <File>src/Compilers/Core/Portable/CodeAnalysisResources.Designer.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalysisState.PerAnalyzerState.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalysisState.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerActionCounts.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.CodeBlockAnalyzerActions.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.EventProcessedState.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.GroupedAnalyzerActions.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerExecutor.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerManager.AnalyzerExecutionContext.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerManager.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerTelemetry.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/CompilationWithAnalyzers.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContextHelpers.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerAction.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticStartAnalysisScope.cs</File>
      <File>src/Compilers/Core/Portable/Operations/OperationExtensions.cs</File>
      <File>src/Compilers/Extension/CompilerPackage.cs</File>
      <File>src/Compilers/Server/VBCSCompiler/BuildServerController.cs</File>
      <File>src/Compilers/Server/VBCSCompiler/DesktopBuildServerController.cs</File>
      <File>src/Compilers/Server/VBCSCompilerTests/CompilerServerApiTest.cs</File>
      <File>src/Compilers/Server/VBCSCompilerTests/CompilerServerTests.cs</File>
      <File>src/Compilers/Server/VBCSCompilerTests/DesktopBuildServerControllerTests.cs</File>
      <File>src/Compilers/Server/VBCSCompilerTests/ServerUtil.cs</File>
      <File>src/Compilers/Shared/BuildServerConnection.cs</File>
      <File>src/Compilers/Shared/DesktopBuildClient.cs</File>
      <File>src/EditorFeatures/CSharp/AutomaticCompletion/CSharpBraceCompletionSessionProvider.cs</File>
      <File>src/EditorFeatures/CSharp/FindUsages/CSharpFindUsagesService.cs</File>
      <File>src/EditorFeatures/CSharp/Formatting/CSharpEditorFormattingService.cs</File>
      <File>src/EditorFeatures/CSharp/Formatting/Indentation/SmartTokenFormatter.cs</File>
      <File>src/EditorFeatures/CSharp/GoToDefinition/CSharpGoToSymbolService.cs</File>
      <File>src/EditorFeatures/CSharpTest/Classification/SemanticClassifierTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Classification/SyntacticTaggerTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/ConvertLinq/ConvertForEachToLinqQueryTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/IntroduceVariable/IntroduceVariableTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/Preview/PreviewExceptionTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/RemoveUnnecessaryCast/RemoveUnnecessaryCastTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/Suppression/SuppressionTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Formatting/Indentation/SmartTokenFormatterFormatRangeTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/InitializeParameter/AddParameterCheckTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/InitializeParameter/InitializeMemberFromParameterTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Interactive/BraceMatching/InteractiveBraceHighlightingTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/MakeFieldReadonly/MakeFieldReadonlyTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/QualifyMemberAccess/QualifyMemberAccessTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Semantics/SpeculationAnalyzerTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/SignatureHelp/TupleConstructionSignatureHelpProviderTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/UseExpressionBody/Analyzer/UseExpressionBodyForMethodsAnalyzerTests.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/AbstractAdornmentManagerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/AdornmentManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Classification/ClassificationTypeFormatDefinitions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionPresenter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionPresenterSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/RoslynCompletionSet.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/ToolTipProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/IWpfDifferenceViewerExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/IWpfTextViewExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameSession.OpenTextBufferManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/LineSeparatorAdornmentManagerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/LineSeparatorTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemProvider.Searcher.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/PreviewFactoryService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/ProjectionBufferDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.QuickInfoPresenterSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.QuickInfoSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/AbstractStructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/BlockContextProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/BlockTagState.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/RoslynBlockTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/RoslynOutliningRegionTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/VisualStudio14StructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/VisualStudio15StructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/PreviewChanges/PreviewChangesSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionWithNestedActions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionWithNestedFlavors.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/CodeFixSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/CodeRefactoringSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/FixAllSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/SuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionsSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionsSourceProvider.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/AbstractCompletionCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/CompletionCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/QuickInfoCommandHandlerAndSourceProvider.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/SignatureHelpCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/EditorFeaturesResources.Designer.cs</File>
      <File>src/EditorFeatures/Core/FindReferences/FindReferencesCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/FindUsages/AbstractFindUsagesService.ProgressAdapter.cs</File>
      <File>src/EditorFeatures/Core/FindUsages/AbstractFindUsagesService.cs</File>
      <File>src/EditorFeatures/Core/FindUsages/IDefinitionsAndReferencesFactory.cs</File>
      <File>src/EditorFeatures/Core/GoToDefinition/AbstractGoToSymbolService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/AutomaticCompletion/AbstractEditorBraceCompletionSessionFactory.cs</File>
      <File>src/EditorFeatures/Core/Implementation/AutomaticCompletion/BraceCompletionSessionProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/BraceMatching/BraceHighlightingViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/ClassificationTypeDefinitions.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SemanticClassificationBufferTaggerProvider.Tagger.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SemanticClassificationBufferTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SemanticClassificationViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SyntacticClassificationTaggerProvider.TagComputer.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SyntacticClassificationTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/CodeActions/CodeActionEditHandlerService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/CodeFixes/CodeFixService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/AbstractDiagnosticsAdornmentTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/AbstractDiagnosticsTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/DiagnosticsClassificationTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/DiagnosticsSquiggleTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/DiagnosticsSuggestionTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ActiveStatementTagger.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ActiveStatementTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ActiveStatementTrackingService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ReadOnlyDocumentTracker.cs</File>
      <File>src/EditorFeatures/Core/Implementation/ForegroundNotification/ForegroundNotificationService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Formatting/FormatCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/AbstractController.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/AsyncCompletionService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller.Session_ComputeModel.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_CommitUniqueCompletionListItem.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/IDocumentProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/ModelComputation.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Controller.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Session.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Controller.Session.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Controller.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpPresenter.SignatureHelpPresenterSession.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpPresenter.SignatureHelpSource.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpPresenter.cs</File>
      <File>src/EditorFeatures/Core/Implementation/KeywordHighlighting/HighlighterViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigationBar/NavigationBarController.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigationBar/NavigationBarControllerFactoryService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigationBar/NavigationBarController_ModelComputation.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingDiagnosticAnalyzer.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.RenameTrackingCommitter.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.StateMachine.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.TrackingSession.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/SolutionPreviewResult.cs</File>
      <File>src/EditorFeatures/Core/ReferenceHighlighting/ReferenceHighlightingViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Shared/Preview/PreviewSolutionCrawlerRegistrationService.cs</File>
      <File>src/EditorFeatures/Core/Shared/Tagging/EventSources/TaggerEventSources.SemanticChangedEventSource.cs</File>
      <File>src/EditorFeatures/Core/Shared/Tagging/EventSources/TaggerEventSources.ViewSpanChangedEventSource.cs</File>
      <File>src/EditorFeatures/Core/Shared/Tagging/EventSources/TaggerEventSources.cs</File>
      <File>src/EditorFeatures/Core/Shared/Threading/AsynchronousSerialWorkQueue.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ForegroundThreadAffinitizedObject.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/IThreadingContext.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/MainThreadAwaitableExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ResettableDelay.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ThreadingContext+DenyExecutionSynchronizationContext.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ThreadingContext.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.BatchChangeNotifier.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.TagSource.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.Tagger.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AsynchronousTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AsynchronousViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Test/CodeFixes/CodeFixServiceTests.cs</File>
      <File>src/EditorFeatures/Test/Diagnostics/DiagnosticsSquiggleTaggerProviderTests.cs</File>
      <File>src/EditorFeatures/Test/EditAndContinue/DebuggeeModuleMetadataCacheTests.cs</File>
      <File>src/EditorFeatures/Test/LineSeparators/AdornmentManagerTests.cs</File>
      <File>src/EditorFeatures/Test/Preview/PreviewWorkspaceTests.cs</File>
      <File>src/EditorFeatures/Test/RenameTracking/RenameTrackingTestState.cs</File>
      <File>src/EditorFeatures/Test/Structure/StructureTaggerTests.cs</File>
      <File>src/EditorFeatures/Test/Tagging/AsynchronousTaggerTests.cs</File>
      <File>src/EditorFeatures/Test/Threading/AsynchronousWorkerTests.cs</File>
      <File>src/EditorFeatures/Test/Threading/ForegroundNotificationServiceTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/Async/WaitHelper.cs</File>
      <File>src/EditorFeatures/TestUtilities/AutomaticCompletion/AbstractAutomaticBraceCompletionTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/BraceHighlighting/AbstractBraceHighlightingTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/Classification/FormattedClassifications.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/DiagnosticTaggerWrapper.cs</File>
      <File>src/EditorFeatures/TestUtilities/EditorFactory.cs</File>
      <File>src/EditorFeatures/TestUtilities/MinimalTestExportProvider.cs</File>
      <File>src/EditorFeatures/TestUtilities/StubVsEditorAdaptersFactoryService.cs</File>
      <File>src/EditorFeatures/TestUtilities/TestExportJoinableTaskContext.cs</File>
      <File>src/EditorFeatures/TestUtilities/TestExportProvider.cs</File>
      <File>src/EditorFeatures/TestUtilities/Threading/SynchronizationContextTaskScheduler.cs</File>
      <File>src/EditorFeatures/TestUtilities/Threading/WpfTestRunner.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestHostDocument.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspace.cs</File>
      <File>src/Features/CSharp/Portable/ChangeSignature/CSharpChangeSignatureService.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/AbstractConverter.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/AbstractToMethodConverter.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/CSharpConvertForEachToLinqQueryProvider.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/DefaultConverter.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/ToCountConverter.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/ToToListConverter.cs</File>
      <File>src/Features/CSharp/Portable/ConvertLinq/ConvertForEachToLinqQuery/YieldReturnConverter.cs</File>
      <File>src/Features/CSharp/Portable/GenerateType/CSharpGenerateTypeService.cs</File>
      <File>src/Features/CSharp/Portable/MakeFieldReadonly/CSharpMakeFieldReadonlyDiagnosticAnalyzer.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForAccessorsHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForConstructorsHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForConversionOperatorsHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForIndexersHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForMethodsHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForOperatorsHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyForPropertiesHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyHelper.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/Helpers/UseExpressionBodyHelper`1.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/UseExpressionBodyCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/UseExpressionBody/UseExpressionBodyCodeRefactoringProvider.cs</File>
      <File>src/Features/Core/Portable/AddParameter/AbstractAddParameterCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/ChangeSignature/AbstractChangeSignatureService.cs</File>
      <File>src/Features/Core/Portable/ChangeSignature/DelegateInvokeMethodReferenceFinder.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/AbstractMemberInsertingCompletionProvider.cs</File>
      <File>src/Features/Core/Portable/ConvertLinq/ConvertForEachToLinqQuery/AbstractConvertForEachToLinqQueryProvider.cs</File>
      <File>src/Features/Core/Portable/ConvertLinq/ConvertForEachToLinqQuery/IConverter.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticAnalyzerService_UpdateSource.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticResultSerializer.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Log/DiagnosticLogAggregator.cs</File>
      <File>src/Features/Core/Portable/DocumentHighlighting/AbstractDocumentHighlightsService.cs</File>
      <File>src/Features/Core/Portable/EditAndContinue/DebuggeeModuleInfo.cs</File>
      <File>src/Features/Core/Portable/EditAndContinue/DebuggeeModuleInfoCache.cs</File>
      <File>src/Features/Core/Portable/EditAndContinue/IDebuggeeModuleMetadataProvider.cs</File>
      <File>src/Features/Core/Portable/ExtractInterface/AbstractExtractInterfaceService.cs</File>
      <File>src/Features/Core/Portable/FeaturesResources.Designer.cs</File>
      <File>src/Features/Core/Portable/GenerateType/AbstractGenerateTypeService.State.cs</File>
      <File>src/Features/Core/Portable/InitializeParameter/AbstractInitializeParameterCodeRefactoringProvider.cs</File>
      <File>src/Features/Core/Portable/MakeFieldReadonly/AbstractMakeFieldReadonlyDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/MakeFieldReadonly/MakeFieldReadonlyDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/QualifyMemberAccess/AbstractQualifyMemberAccessDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/UseConditionalExpression/ForAssignment/AbstractUseConditionalExpressionForAssignmentCodeFixProvider.cs</File>
      <File>src/Interactive/EditorFeatures/CSharp/Interactive/CSharpInteractiveEvaluator.cs</File>
      <File>src/Interactive/EditorFeatures/Core/CommandHandlers/InteractiveCompletionCommandHandler.cs</File>
      <File>src/Interactive/EditorFeatures/Core/Extensibility/Interactive/InteractiveEvaluator.cs</File>
      <File>src/Interactive/EditorFeatures/Core/Implementation/Completion/Presentation/CompletionPresenter.cs</File>
      <File>src/Interactive/Features/Interactive/Core/InteractiveHost.RemoteService.cs</File>
      <File>src/Scripting/CSharpTest/ScriptTests.cs</File>
      <File>src/Test/Diagnostics/TestingOnly_WaitingService.cs</File>
      <File>src/Test/PdbUtilities/Reader/NotImplementedSymUnmanagedReader.cs</File>
      <File>src/Test/Perf/Utilities/VsPerfTest.cs</File>
      <File>src/Test/Utilities/Portable/Assert/ConditionalFactAttribute.cs</File>
      <File>src/Test/Utilities/Portable/CommonTestBase.cs</File>
      <File>src/Test/Utilities/Portable/Diagnostics/CommonDiagnosticAnalyzers.cs</File>
      <File>src/Test/Utilities/Portable/Diagnostics/DiagnosticDescription.cs</File>
      <File>src/Tools/AnalyzerRunner/Extensions.cs</File>
      <File>src/Tools/AnalyzerRunner/Program.cs</File>
      <File>src/Tools/BuildBoss/CompilerNuGetCheckerUtil.cs</File>
      <File>src/Tools/CompilerBenchmarks/EmitBenchmark.cs</File>
      <File>src/Tools/CompilerBenchmarks/FixedCsProjGenerator.cs</File>
      <File>src/Tools/CompilerBenchmarks/Helpers.cs</File>
      <File>src/Tools/CompilerBenchmarks/Program.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupSessionManager.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupSessionManager_EventHookupSession.cs</File>
      <File>src/VisualStudio/CSharp/Impl/LanguageService/CSharpOptionPageService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/LanguageService/HACK_CSharpCreateServicesOnUIThread.cs</File>
      <File>src/VisualStudio/CSharp/Impl/ObjectBrowser/CSharpSyncClassViewCommandHandler.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Progression/CSharpGraphProvider.cs</File>
      <File>src/VisualStudio/CSharp/Impl/ProjectSystemShim/CSharpProjectShim.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/CSharpSnippetInfoService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/SnippetCommandHandler.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/SnippetExpansionClient.cs</File>
      <File>src/VisualStudio/CSharp/Repl/CSharpVsInteractiveWindowProvider.cs</File>
      <File>src/VisualStudio/CSharp/Test/CodeModel/FileCodeModelTestHelpers.cs</File>
      <File>src/VisualStudio/CSharp/Test/EventHookup/EventHookupTestState.cs</File>
      <File>src/VisualStudio/Core/Def/Experimentation/VisualStudioExperimentationService.cs</File>
      <File>src/VisualStudio/Core/Def/HACK_ThemeColorFixer.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DesignerAttribute/DesignerAttributeIncrementalAnalyzer.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DesignerAttribute/DesignerAttributeIncrementalAnalyzerProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Diagnostics/VisualStudioWorkspaceDiagnosticAnalyzerProviderService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/DebuggeeModuleMetadataProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/VsENCRebuildableProjectImpl.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/VsReadOnlyDocumentTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Experimentation/AnalyzerVsixSuggestedActionCallback.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Experimentation/KeybindingResetDetector.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/Entries/DocumentSpanEntry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/StreamingFindUsagesPresenter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/ToolTips/LazyToolTip.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/InfoBar/VisualStudioInfoBarService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Interop/CleanableWeakComHandleTable.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractPackage.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/HACK_AbstractCreateServicesOnUiThread.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/ClassView/AbstractSyncClassViewCommandHandler.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/ObjectBrowser/AbstractObjectBrowserLibraryManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/LanguageSettingsPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/LocalUserRegistryOptionPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/RoamingVisualStudioProfileOptionPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/AbstractChange.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/ChangeList.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/PreviewEngine.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/PreviewService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/PreviewUpdater.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/PreviewPane/PreviewPaneService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Progression/GraphNavigatorExtension.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Progression/GraphProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/AbstractProject.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/DocumentProvider.StandardTextDocument.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/DocumentProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/Legacy/AbstractLegacyProject.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/LinkedFileUtilities.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MetadataReferences/VisualStudioFrameworkAssemblyPathResolverFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MiscellaneousFilesWorkspace.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioAnalyzer.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectManagementService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioWorkspaceImpl.DeferredInitialization.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioWorkspaceImpl.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioWorkspaceImpl_IVsSolutionLoadEvents.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Remote/RemoteHostClientServiceFactory.RemoteHostClientService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Remote/RemoteHostClientServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetCommandHandler.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetExpansionClient.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetInfoService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedDocument.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedLanguage.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/VirtualMemoryNotificationListener.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/VsRefactorNotifyService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/GlobalUndoServiceFactory.WorkspaceGlobalUndoTransaction.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/GlobalUndoServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioDocumentNavigationService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioDocumentNavigationServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioSymbolNavigationService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioTaskSchedulerFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/WorkspaceFailureOutputPane.cs</File>
      <File>src/VisualStudio/Core/Def/Packaging/PackageInstallerServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/RoslynPackage.cs</File>
      <File>src/VisualStudio/Core/Def/Shared/VisualStudioImageMonikerService.cs</File>
      <File>src/VisualStudio/Core/Def/Storage/VisualStudioPersistentStorageLocationService.cs</File>
      <File>src/VisualStudio/Core/Def/SymbolSearch/AbstractDelayStartedService.cs</File>
      <File>src/VisualStudio/Core/Def/SymbolSearch/VisualStudioSymbolSearchService.LogService.cs</File>
      <File>src/VisualStudio/Core/Def/SymbolSearch/VisualStudioSymbolSearchService.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/CodeModelProjectCache.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/CodeModelState.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/FileCodeModel.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/ProjectCodeModel.cs</File>
      <File>src/VisualStudio/Core/Impl/ProjectSystem/CPS/CPSProject.cs</File>
      <File>src/VisualStudio/Core/Impl/ProjectSystem/CPS/CPSProjectFactory.cs</File>
      <File>src/VisualStudio/Core/Impl/ProjectSystem/CPS/CPSProject_IWorkspaceProjectContext.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Remote/RemoteHostClientServiceFactoryTests.cs</File>
      <File>src/VisualStudio/IntegrationTest/TestUtilities/InProcess/InProcComponent.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/SyntaxClassification/CSharpSyntaxClassificationService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/SyntaxClassification/EmbeddedLanguagesTokenClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/SyntaxClassification/NameSyntaxClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/SyntaxClassification/SyntaxTokenClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/SyntaxClassification/UsingDirectiveSyntaxClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/EmbeddedLanguages/LanguageServices/CSharpEmbeddedLanguagesProvider.cs</File>
      <File>src/Workspaces/CSharp/Portable/EmbeddedLanguages/VirtualChars/CSharpVirtualCharService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/ExpressionSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSemanticFactsService.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSyntaxFactsService.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpTypeInferenceService.TypeInferrer.cs</File>
      <File>src/Workspaces/CSharp/Portable/Rename/CSharpRenameRewriterLanguageService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Utilities/SpeculationAnalyzer.cs</File>
      <File>src/Workspaces/CSharpTest/EmbeddedLanguages/VirtualChars/CSharpVirtualCharServiceTests.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/ClassificationTypeNames.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/SyntaxClassification/AbstractEmbeddedLanguagesTokenClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/SyntaxClassification/AbstractSyntaxClassificationService.Worker.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/SyntaxClassification/AbstractSyntaxClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/SyntaxClassification/ISyntaxClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/AbstractEmbeddedLanguagesProvider.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/FallbackEmbeddedClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/FallbackEmbeddedLanguage.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/IEmbeddedClassifier.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/IEmbeddedLanguage.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/LanguageServices/IEmbeddedLanguagesProvider.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/VirtualChars/AbstractVirtualCharService.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/VirtualChars/IVirtualCharService.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/VirtualChars/VirtualChar.cs</File>
      <File>src/Workspaces/Core/Portable/EmbeddedLanguages/VirtualChars/VirtualCharExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferencesSearchEngine.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferencesSearchEngine_DocumentProcessing.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferencesSearchEngine_MapCreation.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferencesSearchOptions.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/AbstractMemberScopedReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/AbstractMethodOrPropertyOrEventSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/AbstractReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/ConstructorInitializerSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/ConstructorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/DestructorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/EventSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/ExplicitInterfaceMethodReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/FieldSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/FinderLocation.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/IReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/LinkedFileReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/MethodTypeParameterSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/NamedTypeSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/NamespaceSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/OperatorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/OrdinaryMethodReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/ParameterSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/PropertyAccessorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/PropertySymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/TypeParameterSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/IRemoteSymbolFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder_FindReferences_Current.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder_FindReferences_Legacy.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder_FindRenamableReferences.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder_Hierarchy.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Formatter.cs</File>
      <File>src/Workspaces/Core/Portable/LanguageServices/SemanticsFactsService/ISemanticFactsService.cs</File>
      <File>src/Workspaces/Core/Portable/LanguageServices/SyntaxFactsService/ISyntaxFactsService.cs</File>
      <File>src/Workspaces/Core/Portable/LanguageServices/SyntaxFactsService/ISyntaxFactsServiceExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Remote/RemoteArguments.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/IFindReferencesResultExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ISymbolExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/AbstractSpeculationAnalyzer.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/ForegroundThreadDataKind.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/TaskExtensions.cs</File>
      <File>src/Workspaces/CoreTestUtilities/DispatcherExtensions.cs</File>
      <File>src/Workspaces/CoreTestUtilities/TestExportJoinableTaskContext.cs</File>
      <File>src/Workspaces/CoreTestUtilities/UseExportProviderAttribute.cs</File>
      <File>src/Workspaces/MSBuildTest/MSBuildWorkspaceTests.cs</File>
      <File>src/Workspaces/Remote/ServiceHub/Services/CodeAnalysisService_SymbolFinder.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>28713</IssueID>
    <Title>Add functionality to toggle break rendering mode for markdown preview</Title>
    <Description>Addresses #22987, #24585, #25008</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>22987</IssueID>
        <Title>Disable autosign of SWIX projects</Title>
        <Description>This disables the automatic signing of SWIX projects. Instead they are
signed as a part of our normal batch build.

</Description>
        <CreatedDate>02/11/2017</CreatedDate>
        <ClosedDate>02/11/2017</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>24585</IssueID>
        <Title>CS1628 error text mentions in parameters; fixes #24584</Title>
        <Description>Updated ERR_AnonDelegateCantUse error text to mention in parameters. Updated a failing test, too.</Description>
        <CreatedDate>01/02/2018</CreatedDate>
        <ClosedDate>01/02/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>25008</IssueID>
        <Title>Add docs on editorconfig external file support</Title>
        <Description>
        </Description>
        <CreatedDate>23/02/2018</CreatedDate>
        <ClosedDate>23/04/2018</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Operators.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/FixedSizeBufferTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/UnsafeTests.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractVsTextViewFilter`2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.VsLanguageDebugInfo.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/VenusCommandFilter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>27843</IssueID>
    <Title>Automated smoke test</Title>
    <Description>This is the result of #25291 with automated smoke test under `/test/smoke`. Tested in #27456</Description>
    <CreatedDate>01/06/2017</CreatedDate>
    <ClosedDate>01/06/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>25291</IssueID>
        <Title>Refresh features/tuple-equality with latest bits from features/compiler</Title>
        <Description>The last commit updates the tuple-equality tests to use the new test APIs.
Also, equality with `default` literal was updated in `features/compiler` and impacts the tuple equality feature (that's expected). I skipped those tests with a PROTOTYPE marker for now.</Description>
        <CreatedDate>07/03/2018</CreatedDate>
        <ClosedDate>07/03/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>27456</IssueID>
        <Title>Editor Completion Test Failures: TestNamedParameterAgainstMRU [Needs Backspace]</Title>
        <Description>**Version Used**: 

**Steps to Reproduce**:

1. 
2. 
3. 

**Expected Behavior**:

**Actual Behavior**:
</Description>
        <CreatedDate>04/06/2018</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/TestUtilities/Threading/StaTaskScheduler.cs</File>
      <File>src/EditorFeatures/TestUtilities/Threading/WpfTestRunner.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>24451</IssueID>
    <Title>Link detection for the exception widget and debug console</Title>
    <Description>1. Extracted link detection to a separate common class, shared and reused between REPL viewer and exception widget. 
2. Updated link detection to handle multiple links in a provided string.
3. Added link validation to resolve only files which are part of file system.

Partially reused regex of the reverted PR by @felixfbecker, credits to you!

![image](https://cloud.githubusercontent.com/assets/2239563/24871735/ef9965ea-1e1a-11e7-8c5d-e01d915a4c44.png)
![image](https://cloud.githubusercontent.com/assets/2239563/24871911/9f107a04-1e1b-11e7-9278-ffe90b694cbe.png)

Fixes #15760, #17085 (and all its ancestors).
Partially implements #21349. </Description>
    <CreatedDate>10/04/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>15760</IssueID>
        <Title>The Error List shows different results based on whether you've ever opened a source file</Title>
        <Description>1. Clone this repo to this commit: https://github.com/dotnet/roslyn-project-system/commit/e8f444a1ebe3d78b6b494d5dc355e95b7da19086
2. From a VS command prompt, run build.cmd from the root
3. Open src\ProjectSystem.sln (build 26005.0 D15PreRel)
4. Change your VB code style settings to:
![image](https://cloud.githubusercontent.com/assets/1103906/21003545/17200750-bd80-11e6-9058-5a78ad4bd2bd.png)
6. Make sure Background Analysis is turned on for VB
7. Wait till Error List no longer has "..." after name
-- Error List should look something like --
![image](https://cloud.githubusercontent.com/assets/1103906/21003576/4dff3b6a-bd80-11e6-819f-ea045f4aa7f6.png)



7. Open src\Microsoft.VisualStudio.AppDesigner\ApplicationDesigner\ApplicationDesignerView.vb
8. Close that file

-- Error List should look something like (Notice that there's 22 more messages that have appeared) -- 

![image](https://cloud.githubusercontent.com/assets/1103906/21003625/887fae82-bd80-11e6-8cf9-f8661b17b043.png)


Very confused how or why messages show up the Error List? What exactly do I need to do to show *all* possible messages?</Description>
        <CreatedDate>08/12/2016</CreatedDate>
        <ClosedDate>04/02/2020</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>17085</IssueID>
        <Title>Unloading a project freezes Visual Studio forever</Title>
        <Description>VS 2017 RC4.

1. Load a solution (https://github.com/Microsoft/visualfsharp/blob/master/VisualFSharp.sln in my case)
2. Unload a project (https://github.com/Microsoft/visualfsharp/blob/master/src/fsharp/FSharp.Compiler/FSharp.Compiler.fsproj in my case)
3. VS hangs forever, no CPU load

![image](https://cloud.githubusercontent.com/assets/873919/22828802/5de18eea-efb0-11e6-80e7-3146ffeda402.png)

Dump is here https://drive.google.com/open?id=0B8HLQUKik9VteUFrZ2NjMnRkSk0</Description>
        <CreatedDate>10/02/2017</CreatedDate>
        <ClosedDate>28/02/2017</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>21349</IssueID>
        <Title>Use 15.3 Preview 7 for VSI CI machines</Title>
        <Description>Equivalent to #21325 except for the dev15.5.x branch.

Note that integration tests for this PR will fail because the Jenkins jobs will only be re-created after this is merged.</Description>
        <CreatedDate>07/08/2017</CreatedDate>
        <ClosedDate>07/08/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Workspaces/Core/Portable/Remote/WellKnownRemoteHostServices.cs</File>
      <File>src/Workspaces/Core/Portable/Remote/WellKnownServiceHubServices.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>23832</IssueID>
    <Title>Fixes #1623 and #20953</Title>
    <Description>Issues #1623 and #20953 had root causes in the emmet library.
The fix was made in the emmet library and cherry-picked to our custom emmet library
https://github.com/ramya-rao-a/emmet/commit/b4d3edc30de7fa98032302cd1f017a940ab879fd and https://github.com/ramya-rao-a/emmet/commit/4fce82e3a49aabaa7a666b3d6308f1cfbd40018d

This PR is to update the commit hash for emmet, so that fix is available in VS Code as well</Description>
    <CreatedDate>03/04/2017</CreatedDate>
    <ClosedDate>03/04/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>1623</IssueID>
        <Title>More CoreFx porting work</Title>
        <Description>This is more progress on moving Microsoft.CodeAnalysis.Desktop to be a CoreFx compatible assembly. 
</Description>
        <CreatedDate>26/03/2015</CreatedDate>
        <ClosedDate>27/03/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>20953</IssueID>
        <Title>Test failures in AssertIsForeground (RenameTracking and DiagnosticsTaggerProvider)</Title>
        <Description>https://ci.dot.net/job/dotnet_roslyn/view/Official%20Builds/job/master/job/windows_debug_unit32_prtest/8289/artifact/Binaries/Debug/UnitTests/EditorServicesTest2/xUnitResults/Roslyn.Services.Editor2.UnitTests.dll.out.log

```
 Microsoft.CodeAnalysis.Editor.UnitTests.Peek.PeekTests.TestPeekAcrossProjectsInvolvingPortableReferences
      System.AggregateException : 3 exception(s) were thrown during test.
      Note: exceptions may have been thrown by another test running concurrently with
      this test.  This can happen with any tests that share the same ExportProvider.
      Examining individual exception stacks may help reveal the original test and source 
      of the problem.
      
      Exception 0:
      Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException: When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
         at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
         at System.Diagnostics.TraceListener.Fail(String message)
         at System.Diagnostics.TraceInternal.Fail(String message)
         at System.Diagnostics.Debug.Assert(Boolean condition, String message)
         at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
         at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.StateMachine.Connect()
         at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.Tagger..ctor(StateMachine stateMachine, ITextUndoHistoryRegistry undoHistoryRegistry, IWaitIndicator waitIndicator, IEnumerable`1 refactorNotifyServices)
         at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.CreateTagger[T](ITextBuffer buffer)
         at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
      
      Exception 1:
      Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException: When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
         at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
         at System.Diagnostics.TraceListener.Fail(String message)
         at System.Diagnostics.TraceInternal.Fail(String message)
         at System.Diagnostics.Debug.Assert(Boolean condition, String message)
         at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.AggregatingTagger.OnTaggerCreated()
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.CreateTagger[T](ITextBuffer buffer)
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.Microsoft.VisualStudio.Text.Tagging.ITaggerProvider.CreateTagger[T](ITextBuffer buffer)
         at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
      
      Exception 2:
      Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException: When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
         at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
         at System.Diagnostics.TraceListener.Fail(String message)
         at System.Diagnostics.TraceInternal.Fail(String message)
         at System.Diagnostics.Debug.Assert(Boolean condition, String message)
         at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.AggregatingTagger.OnTaggerCreated()
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.CreateTagger[T](ITextBuffer buffer)
         at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.Microsoft.VisualStudio.Text.Tagging.ITaggerProvider.CreateTagger[T](ITextBuffer buffer)
         at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
      
      
      ---- Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException : When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
      ---- Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException : When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
      ---- Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException : When created kind       : StaUnitTest
      When created thread id  : 11
      When created thread name: StaTaskScheduler thread
      Current thread id       : 6
      Current thread name     : 
      
      Stack Trace:
           at Microsoft.CodeAnalysis.Editor.UnitTests.Workspaces.TestWorkspace.Dispose(Boolean finalize)
           at Microsoft.CodeAnalysis.Workspace.Dispose()
        q:\roslyn\src\EditorFeatures\Test2\Peek\PeekTests.vb(181,0): at Microsoft.CodeAnalysis.Editor.UnitTests.Peek.PeekTests.TestPeekAcrossProjectsInvolvingPortableReferences()
        ----- Inner Stack Trace #1 (Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException) -----
           at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
           at System.Diagnostics.TraceListener.Fail(String message)
           at System.Diagnostics.TraceInternal.Fail(String message)
           at System.Diagnostics.Debug.Assert(Boolean condition, String message)
           at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
           at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.StateMachine.Connect()
           at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.Tagger..ctor(StateMachine stateMachine, ITextUndoHistoryRegistry undoHistoryRegistry, IWaitIndicator waitIndicator, IEnumerable`1 refactorNotifyServices)
           at Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingTaggerProvider.CreateTagger[T](ITextBuffer buffer)
           at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
        ----- Inner Stack Trace #2 (Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException) -----
           at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
           at System.Diagnostics.TraceListener.Fail(String message)
           at System.Diagnostics.TraceInternal.Fail(String message)
           at System.Diagnostics.Debug.Assert(Boolean condition, String message)
           at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.AggregatingTagger.OnTaggerCreated()
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.CreateTagger[T](ITextBuffer buffer)
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.Microsoft.VisualStudio.Text.Tagging.ITaggerProvider.CreateTagger[T](ITextBuffer buffer)
           at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
        ----- Inner Stack Trace #3 (Microsoft.CodeAnalysis.ThrowingTraceListener+DebugAssertFailureException) -----
           at Microsoft.CodeAnalysis.ThrowingTraceListener.Fail(String message, String detailMessage)
           at System.Diagnostics.TraceListener.Fail(String message)
           at System.Diagnostics.TraceInternal.Fail(String message)
           at System.Diagnostics.Debug.Assert(Boolean condition, String message)
           at Microsoft.CodeAnalysis.Editor.Shared.Utilities.ForegroundThreadAffinitizedObject.AssertIsForeground()
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.AggregatingTagger.OnTaggerCreated()
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.CreateTagger[T](ITextBuffer buffer)
           at Microsoft.CodeAnalysis.Editor.Implementation.Diagnostics.AbstractDiagnosticsTaggerProvider`1.Microsoft.VisualStudio.Text.Tagging.ITaggerProvider.CreateTagger[T](ITextBuffer buffer)
           at Microsoft.VisualStudio.Text.Tagging.Implementation.TagAggregator`1.GatherTaggers(ITextBuffer textBuffer)
```</Description>
        <CreatedDate>18/07/2017</CreatedDate>
        <ClosedDate>04/02/2019</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/Core/Portable/Diagnostic/Diagnostic.cs</File>
      <File>src/EditorFeatures/CSharp/CallHierarchy/CallHierarchyCommandHandler.cs</File>
      <File>src/EditorFeatures/CSharp/QuickInfo/SemanticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/CSharp/QuickInfo/SyntacticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SemanticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SyntacticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/AbstractAdornmentManagerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/AdornmentManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/GraphicsResult.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Adornments/GraphicsTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/BraceMatching/ClassificationTypeFormatDefinitions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Classification/ClassificationTypeFormatDefinitions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/CodeAnalysisColors.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionPresenter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionPresenterSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CompletionSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/CustomCommitCompletion.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/ImageMonikers.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/RoslynCompletionSet.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/RoslynIntellisenseFilter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Completion/Presentation/ToolTipProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/ConflictTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/DependencyObjectExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Diagnostics/UnnecessaryCodeFormatDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/EditAndContinue/ActiveStatementTagFormatDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/EditAndContinue/EditAndContinueErrorTypeFormatDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/EditorFeaturesWpfResources.Designer.cs</File>
      <File>src/EditorFeatures/Core.Wpf/GlyphExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/IWpfDifferenceViewerExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/IWpfTextViewExtensions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractEditorInlineRenameService.FailureInlineRenameInfo.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractEditorInlineRenameService.InlineRenameLocationSet.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractEditorInlineRenameService.InlineRenameReplacementInfo.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractEditorInlineRenameService.SymbolRenameInfo.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractEditorInlineRenameService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/AbstractInlineRenameUndoManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CSharpEditorInlineRenameService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_BackspaceDeleteHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_CutPasteHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_EscapeHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_LineStartEndHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_MoveSelectedLinesHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_OpenLineAboveHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_OpenLineBelowHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_RefactoringWithCommandHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_RenameHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_ReturnHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_SaveHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_SelectAllHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_TabHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_TypeCharHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_UndoRedoHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/CommandHandlers/RenameCommandHandler_WordDeleteHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/Dashboard.xaml.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/DashboardAdornmentManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/DashboardAdornmentProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/DashboardAutomationPeer.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/DashboardSeverity.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/DashboardViewModel.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Dashboard/RenameShortcutKeys.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameConflictTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameConflictTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameFieldBackgroundAndBorderTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameFieldBackgroundAndBorderTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameFixupTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/HighlightTags/RenameFixupTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/IInlineRenameUndoManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameSession.OpenTextBufferManager.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/InlineRenameSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/RenameLogMessage.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/RenameTrackingSpan.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/AbstractRenameTagger.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/ClassificationTypeDefinitions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/RenameClassificationTagger.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/RenameClassificationTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/RenameTagger.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/Taggers/RenameTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/TrackingSpanIntrospector.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/UndoManagerServiceFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/InlineRename/VisualBasicEditorInlineRenameService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Interactive/InteractivePasteCommandHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/EditorFormatMapChangedEventSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/LineSeparatorAdornmentManagerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/LineSeparatorTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/LineSeparators/LineSeparatorTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/DefaultNavigateToPreviewService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/DefaultNavigateToPreviewServiceFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/INavigateToPreviewService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemDisplay.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemDisplayFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemProvider.Searcher.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/NavigateTo/NavigateToItemProviderFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Notification/EditorNotificationServiceFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Options/EditorConfigDocumentOptionsProvider.DocumentOptions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Options/EditorConfigDocumentOptionsProvider.EmptyCodingConventionContext.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Options/EditorConfigDocumentOptionsProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Options/EditorConfigDocumentOptionsProviderFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/AbstractPreviewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/DifferenceViewerPreview.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/PreviewConflictViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/PreviewFactoryService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/PreviewReferenceHighlightingTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Preview/PreviewWarningViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/PreviewWarningTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/ClassifiableDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/DocumentationCommentDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/IDeferredQuickInfoContentToFrameworkElementConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/ProjectionBufferDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/QuickInfoDisplayDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Converters/SymbolGlyphDeferredContentConverter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/DeferredContentFrameworkElementFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.QuickInfoPresenterSession.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.QuickInfoSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/Presentation/QuickInfoPresenter.cs</File>
      <File>src/EditorFeatures/Core.Wpf/QuickInfo/QuickInfoDisplayPanel.cs</File>
      <File>src/EditorFeatures/Core.Wpf/ReferenceHighlighting/DefinitionHighlightTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/ReferenceHighlighting/WrittenReferenceHighlightTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/RenameTracking/RenameTrackingTagDefinition.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/AbstractStructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/BlockContextProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/BlockTagState.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/InvalidOutliningRegionException.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/OutliningCommandHandler.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/RoslynBlockTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/RoslynOutliningRegionTag.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/VisualStudio14StructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Structure/VisualStudio15StructureTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/FixAll/FixAllGetFixesService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/FixAll/FixMultipleOccurrencesService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/ISuggestedActionCallback.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/PreviewChanges/PreviewChangesCodeAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/PreviewChanges/PreviewChangesSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionSetComparer.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionWithNestedActions.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionWithNestedFlavors.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/CodeFixSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/CodeRefactoringSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/FixAllSuggestedAction.FixAllCodeAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/FixAllSuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/SuggestedAction.CaretPositionRestorer.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActions/SuggestedAction.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionsSource.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Suggestions/SuggestedActionsSourceProvider.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IAddReferenceDatabaseWrapper.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IDatabaseFactoryService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IDelayService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IIOService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IPatchService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/IRemoteControlService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/Patching/Delta.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.DatabaseFactoryService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.DelayService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.IOService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.PatchService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.RemoteControlService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.Update.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngine.cs</File>
      <File>src/EditorFeatures/Core.Wpf/SymbolSearch/SymbolSearchUpdateEngineFactory.cs</File>
      <File>src/EditorFeatures/Core.Wpf/Tags/DefaultImageMonikerService.cs</File>
      <File>src/EditorFeatures/Core.Wpf/ViewHostingControl.cs</File>
      <File>src/EditorFeatures/Core.Wpf/WpfClassificationExtensions.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/SignatureHelpCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/QuickInfo/IDeferredQuickInfoContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/BraceMatching/ClassificationTypeDefinitions.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/ClassificationTags.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/ClassificationTypeDefinitions.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/ClassificationTypeDefinitions.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/DiagnosticsClassificationTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/DiagnosticsSuggestionTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/EditAndContinueErrorTypeDefinition.cs</File>
      <File>src/EditorFeatures/Core/Implementation/ITextBufferAssociatedViewService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/DeferredContent/ClassifiableDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/DeferredContent/ProjectionBufferDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/DeferredContent/QuickInfoDisplayDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/DeferredContent/SymbolGlyphDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Providers/AbstractQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Providers/AbstractSemanticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Providers/DocumentationCommentDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/SolutionPreviewItem.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TextBufferAssociatedViewService.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/ClassificationExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/GlyphExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/ISymbolExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Tagging/EventSources/TaggerEventSources.EditorFormatMapChangedEventSource.cs</File>
      <File>src/EditorFeatures/Core/Shared/Tagging/EventSources/TaggerEventSources.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ClassificationTypeMap.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ForegroundThreadAffinitizedObject.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/HighContrastChecker.cs</File>
      <File>src/EditorFeatures/TestUtilities/CallHierarchy/CallHierarchyTestState.cs</File>
      <File>src/EditorFeatures/TestUtilities/Classification/ClassificationTestHelper.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/DiagnosticTaggerWrapper.cs</File>
      <File>src/EditorFeatures/TestUtilities/MinimalTestExportProvider.cs</File>
      <File>src/EditorFeatures/TestUtilities/NavigateTo/AbstractNavigateToTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/QuickInfo/AbstractSemanticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/ServiceTestExportProvider.cs</File>
      <File>src/EditorFeatures/TestUtilities/Threading/WpfTestCase.cs</File>
      <File>src/EditorFeatures/TestUtilities/Workspaces/TestWorkspaceFixture.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler_SessionCancellingCommands.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler_ShadowedCommands.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler_TabKeyCommand.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupCommandHandler_TypeCharCommand.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupQuickInfoSource.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupQuickInfoSourceProvider.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupSessionManager.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/EventHookupSessionManager_EventHookupSession.cs</File>
      <File>src/VisualStudio/CSharp/Impl/EventHookup/IHACK_EventHookupDismissalOnBufferChangePreventerService.cs</File>
      <File>src/VisualStudio/CSharp/Test/CallHierarchy/CSharpCallHierarchyTests.cs</File>
      <File>src/VisualStudio/CSharp/Test/EventHookup/EventHookupCommandHandlerTests.cs</File>
      <File>src/VisualStudio/CSharp/Test/EventHookup/EventHookupTestState.cs</File>
      <File>src/VisualStudio/CSharp/Test/GlyphExtensionsTests.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/CallHierarchyCommandHandler.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/CallHierarchyDetail.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/CallHierarchyItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/CallHierarchyProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/FieldInitializerItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/AbstractCallFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/BaseMemberFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/CallToOverrideFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/FieldReferenceFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/ImplementerFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/InterfaceImplementationCallFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/MethodCallFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/Finders/OverridingMemberFinder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/CallHierarchy/ICallHierarchyPresenter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ChangeSignature/ChangeSignatureDialogViewModel.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ChangeSignature/VisualStudioChangeSignatureOptionsService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ExtractInterface/ExtractInterfaceDialogViewModel.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/Entries/AbstractDocumentSpanEntry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/Entries/DefinitionItemEntry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/Entries/DocumentSpanEntry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/Entries/Entry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/RoslynDefinitionBucket.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/StreamingFindUsagesPresenter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Interactive/IAbstractResetInteractiveCommand.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractPackage.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/ObjectBrowser/Lists/SymbolListItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/PickMembers/PickMembersDialogViewModel.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/TopLevelChange.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Utilities/GlyphExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Shared/VisualStudioImageMonikerService.cs</File>
      <File>src/VisualStudio/IntegrationTest/TestSetup/IntegrationTestServicePackage.cs</File>
      <File>src/VisualStudio/Setup/AssemblyRedirects.cs</File>
      <File>src/Workspaces/Core/Desktop/WorkspaceDesktopResources.Designer.cs</File>
      <File>src/Workspaces/Core/Portable/Diagnostics/DiagnosticData.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/Checksum.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>21416</IssueID>
    <Title>Auto guess encoding</Title>
    <Description>This related to #5388.
This PR is modified one of #10013.

From #10013,
Added `'files.autoDetectEncoding'` in `settings.json`  to decide whether to automatically detect encoding.</Description>
    <CreatedDate>25/02/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>5388</IssueID>
        <Title>Implement string concatenation in loops via manipulating a StringBuilder instead of emitting String.Concat()</Title>
        <Description>At the moment, addition assignment operator for strings compiles into a `String.Concat()` call like this:

``` C#
string result = string.Empty;
for(int i = 0; i &lt; 1000; ++i)
   result += i.ToString();
```

-&gt;

``` C#
string result = string.Empty;
for(int i = 0; i &lt; 1000; ++i)
   result = String.Concat(result, i.ToString());
```

This leads to allocating a new string every time in the loop which may not be desired. I propose using a `StringBuilder` instead, wherever a `+=` operator appears in a loop (ideally in a optimized build) — providing more readable code beside of taking advantage of a pre-allocated buffer.
So the code above would be compiled to:

``` C#
StringBuilder sb = new StringBuilder(string.Empty);
for(int i = 0; i &lt; 1000; ++i)
   sb.Append(i.ToString());
string result = sb.ToString();
```
</Description>
        <CreatedDate>22/09/2015</CreatedDate>
        <ClosedDate>22/09/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>10013</IssueID>
        <Title>Project System: On retargeting a WPF project, System.Xaml is added when .NET Framework 4.0</Title>
        <Description>On retargeting a WPF flavor, it adds System.Xaml if WPF is referenced if targeting .NET Framework 4.0 or higher.
</Description>
        <CreatedDate>23/03/2016</CreatedDate>
        <ClosedDate>13/05/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>10013</IssueID>
        <Title>Project System: On retargeting a WPF project, System.Xaml is added when .NET Framework 4.0</Title>
        <Description>On retargeting a WPF flavor, it adds System.Xaml if WPF is referenced if targeting .NET Framework 4.0 or higher.
</Description>
        <CreatedDate>23/03/2016</CreatedDate>
        <ClosedDate>13/05/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharpTest/CodeActions/ReplaceMethodWithProperty/ReplaceMethodWithPropertyTests.cs</File>
      <File>src/EditorFeatures/Test/MetadataAsSource/MetadataAsSourceTests.CSharp.cs</File>
      <File>src/EditorFeatures/Test/MetadataAsSource/MetadataAsSourceTests.VisualBasic.cs</File>
      <File>src/EditorFeatures/Test/MetadataAsSource/MetadataAsSourceTests.cs</File>
      <File>src/Features/CSharp/Portable/DocumentationComments/DocumentationCommentUtilities.cs</File>
      <File>src/Features/CSharp/Portable/MetadataAsSource/CSharpMetadataAsSourceService.cs</File>
      <File>src/Features/CSharp/Portable/ReplaceMethodWithProperty/CSharpReplaceMethodWithPropertyService.cs</File>
      <File>src/Features/Core/Portable/FeaturesResources.Designer.cs</File>
      <File>src/Features/Core/Portable/MetadataAsSource/DocumentationCommentUtilities.cs</File>
      <File>src/Features/Core/Portable/ReplaceMethodWithProperty/AbstractReplaceMethodWithPropertyService.cs</File>
      <File>src/Features/Core/Portable/ReplaceMethodWithProperty/ReplaceMethodWithPropertyCodeRefactoringProvider.cs</File>
      <File>src/Tools/Source/RunTests/Cache/AssemblyUtil.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolTree/SymbolTreeInfo_Serialization.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>20149</IssueID>
    <Title>Handle root, network path or disk drive letter</Title>
    <Description>Fix for #19382 and #19384

Always preserve root path (/root/path), network path (\\network\path) or disk drive (diskDrive:\path)

Windows tests are passing. Could anyone please check if non windows tests are also passing?</Description>
    <CreatedDate>07/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>19382</IssueID>
        <Title>A combination of discard with arglist crashes compiler</Title>
        <Description>```
        [Fact]
        public void DiscardAndArgList()
        {
            var text = @"
using System;
public class C
{
    static void Main()
    {
        M(out _, __arglist(2, 3, true));
    }
    
    static void M(out int x, __arglist)
    {    
        x = 0;
        DumpArgs(new ArgIterator(__arglist));
    }

    static void DumpArgs(ArgIterator args)
    {
        while(args.GetRemainingCount() &gt; 0)
        {
            TypedReference tr = args.GetNextArg();
            object arg = TypedReference.ToObject(tr);
            Console.Write(arg);
        }
    }
}";
            var compilation = CreateStandardCompilation(text, options: TestOptions.ReleaseExe, parseOptions: TestOptions.Regular);

            compilation.VerifyDiagnostics(
                );

            CompileAndVerify(compilation, expectedOutput: "23True");
        }
```

{"Unexpected value 'DiscardExpression' of type 'Microsoft.CodeAnalysis.CSharp.BoundKind'"}
&gt;	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpressionCore(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, bool used) Line 314	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, bool used) Line 56	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitAddressOfTempClone(Microsoft.CodeAnalysis.CSharp.BoundExpression expression) Line 194	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitAddress(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.AddressKind addressKind) Line 117	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitArgument(Microsoft.CodeAnalysis.CSharp.BoundExpression argument, Microsoft.CodeAnalysis.RefKind refKind) Line 584	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitArguments(System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CSharp.BoundExpression&gt; arguments, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol&gt; parameters) Line 759	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitCallExpression(Microsoft.CodeAnalysis.CSharp.BoundCall call, Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.UseKind useKind) Line 1488	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpressionCore(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, bool used) Line 92	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpressionCoreWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, bool used) Line 72	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression expression, bool used) Line 60	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 40	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatementAndCountInstructions(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 99	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitSequencePointStatement(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint node) Line 342	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 32	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatements(System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CSharp.BoundStatement&gt; statements) Line 639	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock block) Line 616	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 24	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatementList(Microsoft.CodeAnalysis.CSharp.BoundStatementList list) Line 107	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.EmitStatement(Microsoft.CodeAnalysis.CSharp.BoundStatement statement) Line 44	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.GenerateImpl() Line 248	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator.Generate() Line 183	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder moduleBuilder, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol method, int methodOrdinal, Microsoft.CodeAnalysis.CSharp.BoundStatement block, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo&gt; lambdaDebugInfo, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo&gt; closureDebugInfo, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol stateMachineTypeOpt, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator variableSlotAllocatorOpt, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, Microsoft.CodeAnalysis.CSharp.ImportChain importChainOpt, bool emittingPdb, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CodeGen.SourceSpan&gt; dynamicAnalysisSpans) Line 1339	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol methodSymbol, int methodOrdinal, ref Microsoft.CodeAnalysis.CSharp.Binder.ProcessedFieldInitializers processedInitializers, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState compilationState) Line 1109	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol containingType) Line 434	C#
 	Microsoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedTypeAsTask.AnonymousMethod__0() Line 324	C#

</Description>
        <CreatedDate>10/05/2017</CreatedDate>
        <ClosedDate>18/05/2017</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>19384</IssueID>
        <Title>Merge master to dev16</Title>
        <Description>
This is an automatically generated pull request from master into dev16.

``` bash
git fetch --all
git checkout merges/master-to-dev16-20170510-070012
git reset --hard upstream/dev16
git merge upstream/master
# Fix merge conflicts
git commit
git push merges/master-to-dev16-20170510-070012 --force
```

Once all conflicts are resolved and all the tests pass, you are free to merge the pull request.</Description>
        <CreatedDate>10/05/2017</CreatedDate>
        <ClosedDate>10/05/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/FileChangeTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioAnalyzer.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>19655</IssueID>
    <Title>Use patched emmet to support svg and orphaned quote bug</Title>
    <Description>Fixes #17166 and #11333 and #8135</Description>
    <CreatedDate>01/02/2017</CreatedDate>
    <ClosedDate>07/02/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>17166</IssueID>
        <Title>Make the csharp_compiler and hello_world tests run</Title>
        <Description>And only run one copy of each

cc @TyOverby @mavasani @KevinH-MS </Description>
        <CreatedDate>15/02/2017</CreatedDate>
        <ClosedDate>15/02/2017</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>11333</IssueID>
        <Title>Enable UseAutoProperyAnalyzer - this should be fixed with the v2 IDE …</Title>
        <Description>…diagnostic engine.

Fixes #5408
</Description>
        <CreatedDate>16/05/2016</CreatedDate>
        <ClosedDate>16/05/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>8135</IssueID>
        <Title>Rename tries to rename explicit metadata interface implementations</Title>
        <Description>Ported from http://roslyn.codeplex.com/workitem/483 by @slaks

Source:

``` C#
class X : IComparer {
    int IComparer.Compare(object x, object y) =&gt; 0;
}
class Y : X, IComparer {
    public int Compare(object x, object y) =&gt; ((IComparer)this).Compare(x, y);
}
```

Renaming `Y.Compare` will also rename the two references to the interface method, and will show one unresolvable conflict.
</Description>
        <CreatedDate>24/01/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Conversions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Invocation.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Query.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Statements.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/BoundExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/BoundObjectCreationExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/Constructors.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/Expression.cs</File>
      <File>src/Compilers/CSharp/Portable/CodeGen/Optimizer.cs</File>
      <File>src/Compilers/CSharp/Portable/Compiler/MethodBodySynthesizer.cs</File>
      <File>src/Compilers/CSharp/Portable/Compiler/MethodCompiler.cs</File>
      <File>src/Compilers/CSharp/Portable/Generated/BoundNodes.xml.Generated.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/AsyncRewriter/AwaitExpressionSpiller.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LambdaRewriter/LambdaRewriter.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_AnonymousObjectCreation.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_BinaryOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Call.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_CompoundAssignmentOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Conversion.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_IndexerAccess.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_Literal.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_ObjectCreationExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TryStatement.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_TupleCreationExpression.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_UnaryOperator.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/MethodToClassRewriter.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/SyntheticBoundNodeFactory.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Synthesized/SynthesizedEntryPointSymbol.cs</File>
      <File>src/Compilers/CSharp/Test/CommandLine/CommandLineTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenCheckedTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenLocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTryFinally.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenTupleTest.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/Emit/DeterministicTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Diagnostics/OperationAnalyzerTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/IOperation/IOperationTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/IOperation/IOperationTests_IArgument.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/IOperation/IOperationTests_InvalidExpression.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OutVarTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/RefLocalsAndReturnsTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/TargetTypedDefaultTests.cs</File>
      <File>src/Compilers/Core/Portable/CommandLine/CommonCommandLineArguments.cs</File>
      <File>src/Compilers/Core/Portable/CommandLine/CommonCompiler.cs</File>
      <File>src/Compilers/Core/Portable/Compilation/Compilation.cs</File>
      <File>src/Compilers/Core/Portable/FileSystem/PathUtilities.cs</File>
      <File>src/Compilers/Core/Portable/SourceFileResolver.cs</File>
      <File>src/Compilers/Test/Utilities/CSharp/CSharpTestBase.cs</File>
      <File>src/Compilers/Test/Utilities/CSharp/SemanticModelTestBase.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/ConvertNumericLiteral/ConvertNumericLiteralTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/CompilationContext.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/Rewriters/LocalDeclarationRewriter.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/Symbols/EEMethodSymbol.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Test/ExpressionCompiler/LocalsTests.cs</File>
      <File>src/Features/Core/Portable/ConvertNumericLiteral/AbstractConvertNumericLiteralCodeRefactoringProvider.cs</File>
      <File>src/Test/Utilities/Portable/Traits/CompilerFeature.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Experimentation/AnalyzerVsixSuggestedActionCallback.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpSyntaxGenerator.cs</File>
      <File>src/Workspaces/CSharp/Portable/Formatting/Rules/SpacingFormattingRule.cs</File>
      <File>src/Workspaces/CSharpTest/Formatting/FormattingTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>15919</IssueID>
    <Title>Allow markdown preview to scroll past content</Title>
    <Description>Issue #15795

Allows the markdown preview to scroll past its contents, like we do with the markdown editor.

![nov-22-2016 13-00-26](https://cloud.githubusercontent.com/assets/12821956/20541802/878af7f4-b0b3-11e6-9866-75474675a3e6.gif)

Closes #15795</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>15795</IssueID>
        <Title>clean up code that no longer needed</Title>
        <Description>fix https://github.com/dotnet/roslyn/issues/12665

no product change. just removing bunch of internal options we added when we doing initial analyzers work to try out different user experiences.

</Description>
        <CreatedDate>09/12/2016</CreatedDate>
        <ClosedDate>09/12/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>15795</IssueID>
        <Title>clean up code that no longer needed</Title>
        <Description>fix https://github.com/dotnet/roslyn/issues/12665

no product change. just removing bunch of internal options we added when we doing initial analyzers work to try out different user experiences.

</Description>
        <CreatedDate>09/12/2016</CreatedDate>
        <ClosedDate>09/12/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Parser/Lexer.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ParserRegressionTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>15686</IssueID>
    <Title>Fix exception on launch.json with empty configurations</Title>
    <Description>Issue #15685

**Bug**

Create an empty project with a `launch.json` like this:

```
{
    "version": "0.2.0",
    "configurations": [
    ]
}
```

Try to start debugging.

See an exception message

**Fix**
Instead of returning undefined for the promise result, return a promise of null like we do in other cases. This means that we show this message instead of the exception message:

![screen shot 2016-11-17 at 5 55 23 pm](https://cloud.githubusercontent.com/assets/12821956/20415719/fe84360e-acee-11e6-943a-7ce30c0897ce.png)


closes #15685</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>15685</IssueID>
        <Title>Preview pane for code style options should be resizable.</Title>
        <Description>In the screenshot below, the preview pane on the bottom cannot be resized and always takes up 50% of the window.  This behavior is probably fine for the initial showing of the window, but I'd like to be able to resize it (e.g., insert a grid size grip between the top and bottom panels).

![image](https://cloud.githubusercontent.com/assets/926281/20903235/67a8943c-baef-11e6-9394-7a7f8d28641c.png)
</Description>
        <CreatedDate>05/12/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>15685</IssueID>
        <Title>Preview pane for code style options should be resizable.</Title>
        <Description>In the screenshot below, the preview pane on the bottom cannot be resized and always takes up 50% of the window.  This behavior is probably fine for the initial showing of the window, but I'd like to be able to resize it (e.g., insert a grid size grip between the top and bottom panels).

![image](https://cloud.githubusercontent.com/assets/926281/20903235/67a8943c-baef-11e6-9394-7a7f8d28641c.png)
</Description>
        <CreatedDate>05/12/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/TestUtilities/Remote/InProcRemostHostClient.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Remote/RemoteHostClientServiceFactory.RemoteHostClientService.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/AssetServiceTests.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/AssetStorageTests.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/ChecksumUtils.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/ServiceHubServicesTests.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/SolutionServiceTests.cs</File>
      <File>src/VisualStudio/Core/Test.Next/Services/VisualStudioDiagnosticAnalyzerExecutorTests.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/AssetStorages.Storage.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/CustomAssetBuilder.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/Serializer.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/ProjectState_Checksum.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/SolutionState_Checksum.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/StateChecksums.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/TextDocumentState_Checksum.cs</File>
      <File>src/Workspaces/CoreTest/Execution/SnapshotSerializationTests.cs</File>
      <File>src/Workspaces/Remote/Core/Services/AssetService.cs</File>
      <File>src/Workspaces/Remote/Core/Services/AssetStorage.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>15407</IssueID>
    <Title>Fixes #13905: Set relaunch command for window</Title>
    <Description>Sets relaunch command to open a new window.

Requires electron/electron#7952.
Fixes #13905.</Description>
    <CreatedDate>12/11/2016</CreatedDate>
    <ClosedDate>03/04/2017</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>7952</IssueID>
        <Title>Naming a property "group" in an anonymous class breaks parsing</Title>
        <Description>Using the following code:

```
using System.Linq;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main( string[] args )
        {
            var numbers = new int[] { 1, 2, 3 };
            var query = from n in numbers select new {group = 1};

            query.ToList();
        }
    }
}
```

generates CS1513 and a couple of other compiler errors, basically the parser chokes on the code. Rename the anonymous class' property to "groupa" fixes the compiler errors. 

Roslyn should allow naming anonymous properties "group".

Tested using: 

```
Microsoft Visual Studio Community 2015
Version 14.0.24720.00 Update 1
Microsoft .NET Framework
Version 4.6.01055

Installed Version: Community

Visual Basic 2015   00322-20000-00000-AA876
Microsoft Visual Basic 2015

Visual C# 2015   00322-20000-00000-AA876
Microsoft Visual C# 2015
```
</Description>
        <CreatedDate>14/01/2016</CreatedDate>
        <ClosedDate>19/07/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>13905</IssueID>
        <Title>Specification says dynamic is convertible to any type, but it's not convertible to pointer</Title>
        <Description>[The C# specification says this about Explicit dynamic conversions](https://github.com/ljw1004/csharpspec/blob/gh-pages/conversions.md#explicit-dynamic-conversions):

&gt; An implicit dynamic conversion exists from an expression of type `dynamic` to any type `T`.

Except this is not true, an implicit conversion does not exist from an expression of type `dynamic` to a pointer type. E.g.:

``` c#
unsafe
{
    dynamic d = null;
    void* x = d;
}
```

This produces the following error:

&gt; CS0029 Cannot implicitly convert type 'dynamic' to 'void*'

I think the compile error is correct and that the specification is unclear: when it says "any type", it means "any safe type". While everything related to unsafe code is generally in its own separate section, I think it would be clearer if it was spelled out that `dynamic` is not convertible to pointer types, possibly like this:

&gt; An implicit dynamic conversion exists from an expression of type `dynamic` to any value type, reference type or type parameter `T`.
</Description>
        <CreatedDate>19/09/2016</CreatedDate>
        <ClosedDate>27/03/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/Core/Portable/Collections/ImmutableArrayExtensions.cs</File>
      <File>src/Compilers/Core/Portable/Collections/OrderPreservingMultiDictionary.cs</File>
      <File>src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerAssemblyLoader.cs</File>
      <File>src/Compilers/Core/Portable/InternalUtilities/ConcurrentLruCache.cs</File>
      <File>src/Compilers/Core/Portable/InternalUtilities/ConcurrentSet.cs</File>
      <File>src/Compilers/Core/Portable/InternalUtilities/MultiDictionary.cs</File>
      <File>src/Compilers/Core/Portable/InternalUtilities/StringExtensions.cs</File>
      <File>src/Compilers/Core/Portable/InternalUtilities/WeakReferenceExtensions.cs</File>
      <File>src/Compilers/Core/Portable/Serialization/FixedObjectBinder.cs</File>
      <File>src/Compilers/Core/Portable/Serialization/ObjectReader.cs</File>
      <File>src/Compilers/Core/Portable/Serialization/ObjectWriter.cs</File>
      <File>src/Compilers/Core/Portable/Serialization/SimpleRecordingObjectBinder.cs</File>
      <File>src/Dependencies/CodeAnalysis.Metadata/CustomDebugInfoReader.cs</File>
      <File>src/Dependencies/PooledObjects/ArrayBuilder.cs</File>
      <File>src/EditorFeatures/CSharp/AutomaticCompletion/AutomaticLineEnderCommandHandler.cs</File>
      <File>src/EditorFeatures/CSharp/EventHookup/EventHookupCommandHandler_TabKeyCommand.cs</File>
      <File>src/EditorFeatures/CSharp/EventHookup/EventHookupQuickInfoSource.cs</File>
      <File>src/EditorFeatures/CSharp/QuickInfo/SyntacticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/Preview/PreviewExceptionTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/Preview/PreviewTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Completion/CompletionProviders/OverrideCompletionProviderTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Completion/CompletionProviders/SuggestionModeCompletionProviderTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/Suppression/SuppressionTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/EditAndContinue/Helpers/RudeEditTestBase.cs</File>
      <File>src/EditorFeatures/CSharpTest/Extensions/ContextQuery/AbstractContextTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/ExtractMethod/MiscTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Formatting/FormattingEngineTestBase.cs</File>
      <File>src/EditorFeatures/CSharpTest/SplitStringLiteral/SplitStringLiteralCommandHandlerTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/TypeInferrer/TypeInferrerTests.Delegate.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/AbstractCompletionCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/InteractivePasteCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/QuickInfoCommandHandlerAndSourceProvider.QuickInfoSource.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/QuickInfoCommandHandlerAndSourceProvider.cs</File>
      <File>src/EditorFeatures/Core/CommandHandlers/SignatureHelpCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Adornments/AdornmentManager.cs</File>
      <File>src/EditorFeatures/Core/Implementation/BraceMatching/AbstractBraceMatcher.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/ClassificationUtilities.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SyntacticClassificationTaggerProvider.TagComputer.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Classification/SyntacticClassificationTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/CodeActions/CodeActionEditHandlerService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/CodeFixes/CodeFixService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Commands/CommandHandlerService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/AbstractDiagnosticsTaggerProvider.TaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ActiveStatementTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ActiveStatementTrackingService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EditAndContinue/ReadOnlyDocumentTracker.cs</File>
      <File>src/EditorFeatures/Core/Implementation/EncapsulateField/AbstractEncapsulateFieldCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/ForegroundNotification/ForegroundNotificationService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler_LineStartEndHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler_RenameHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler_SelectAllHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler_WordDeleteHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/Dashboard/DashboardAdornmentManager.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/Dashboard/DashboardAdornmentProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/InlineRenameSession.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/Taggers/AbstractRenameTagger.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/UndoManagerServiceFactory.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/AsyncCompletionService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller.Session_FilterModel.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_AutomaticLineEnder.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_Backspace.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_CaretPositionChanged.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_ReturnKey.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_TabKey.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_ToggleCompletionMode.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/FileSystem/CurrentWorkingDirectoryDiscoveryService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Model.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Presentation/CompletionSource.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Presentation/Roslyn14CompletionSet.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Presentation/QuickInfoPresenter.QuickInfoSource.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpClassifier.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpPresenter.SignatureHelpPresenterSession.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/SignatureHelp/Presentation/SignatureHelpPresenter.SignatureHelpSource.cs</File>
      <File>src/EditorFeatures/Core/Implementation/MetadataAsSource/MetadataAsSourceFileService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigateTo/NavigateToIconFactory.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigationBar/NavigationBarController.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigationBar/NavigationBarSymbolIdIndexProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Organizing/OrganizeDocumentCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Peek/PeekableItemFactory.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Preview/AbstractPreviewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/ReferenceHighlighting/ReferenceHighlightingViewTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.RenameTrackingCodeAction.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.StateMachine.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.Tagger.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.UndoPrimitive.cs</File>
      <File>src/EditorFeatures/Core/Implementation/RenameTracking/RenameTrackingTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/Suggestions/SuggestedActionWithNestedFlavors.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TextBufferAssociatedViewService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TextStructureNavigation/AbstractTextStructureNavigatorProvider.TextStructureNavigator.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TodoComment/TodoCommentIncrementalAnalyzerProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TodoComment/TodoCommentState.cs</File>
      <File>src/EditorFeatures/Core/Implementation/TodoComment/TodoCommentTokens.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/HostWorkspaceServicesExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/IEditorOptionsFactoryServiceExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/ITextViewExtensions.AutoClosingViewProperty.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/ITextViewExtensions.PerSubjectBufferProperty.cs</File>
      <File>src/EditorFeatures/Core/Shared/Extensions/ITextViewExtensions.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/CaretPreservingEditTransaction.cs</File>
      <File>src/EditorFeatures/Core/Shared/Utilities/ClassificationTypeMap.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.TagSource_ProduceTags.cs</File>
      <File>src/EditorFeatures/Core/Tagging/AbstractAsynchronousTaggerProvider.cs</File>
      <File>src/EditorFeatures/Core/Tagging/TaggerContext.cs</File>
      <File>src/EditorFeatures/Test/CodeFixes/CodeFixServiceTests.cs</File>
      <File>src/EditorFeatures/Test/Collections/Immutable/Maps/BidirectionalMapTests.cs</File>
      <File>src/EditorFeatures/Test/Extensions/ITextSnapshotExtensionsTests.cs</File>
      <File>src/EditorFeatures/Test/MetadataAsSource/AbstractMetadataAsSourceTests.TestContext.cs</File>
      <File>src/EditorFeatures/Test/SolutionCrawler/WorkCoordinatorTests.cs</File>
      <File>src/EditorFeatures/Test/Utilities/PatternMatcherTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/AbstractCommandHandlerTestState.cs</File>
      <File>src/EditorFeatures/TestUtilities/AutomaticCompletion/AbstractAutomaticBraceCompletionTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/AutomaticCompletion/AbstractAutomaticLineEnderTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/BlockCommentEditing/AbstractBlockCommentEditingTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/BraceMatching/AbstractBraceMatcherTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/CodeActions/AbstractCodeActionOrUserDiagnosticTest.cs</File>
      <File>src/EditorFeatures/TestUtilities/Completion/AbstractCompletionProviderTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/AbstractDiagnosticProviderBasedUserDiagnosticTest.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/AbstractSuppressionDiagnosticTest.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/AbstractUserDiagnosticTest.cs</File>
      <File>src/EditorFeatures/TestUtilities/Diagnostics/TestAnalyzerReferenceByLanguage.cs</File>
      <File>src/EditorFeatures/TestUtilities/DocumentationComments/AbstractDocumentationCommentTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/DocumentationComments/AbstractXmlTagCompletionTests.cs</File>
      <File>src/EditorFeatures/TestUtilities/MoveType/AbstractMoveTypeTest.cs</File>
      <File>src/EditorFeatures/TestUtilities/TypeInferrer/TypeInferrerTestBase.cs</File>
      <File>src/EditorFeatures/Text/Extensions.TextBufferMapper.cs</File>
      <File>src/EditorFeatures/Text/Extensions.cs</File>
      <File>src/Features/CSharp/Portable/AddImport/CSharpAddImportCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/Async/CSharpAddAwaitCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/Iterator/CSharpAddYieldCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/Iterator/CSharpChangeToIEnumerableCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/SimplifyTypeNames/SimplifyTypeNamesCodeFixProvider.SimplifyTypeNamesFixAllProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/SimplifyTypeNames/SimplifyTypeNamesCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeRefactorings/InvertIf/InvertIfCodeRefactoringProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/CompletionProviders/CrefCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/CompletionProviders/ExplicitInterfaceCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/CompletionProviders/PartialTypeCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/CompletionProviders/SpeculativeTCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/CompletionProviders/SymbolCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Completion/SuggestionMode/CSharpSuggestionModeCompletionProvider.cs</File>
      <File>src/Features/CSharp/Portable/Diagnostics/Analyzers/CSharpSimplifyTypeNamesDiagnosticAnalyzer.cs</File>
      <File>src/Features/CSharp/Portable/Diagnostics/Analyzers/CSharpTypeStyleDiagnosticAnalyzerBase.cs</File>
      <File>src/Features/CSharp/Portable/EditAndContinue/CSharpEditAndContinueAnalyzer.cs</File>
      <File>src/Features/CSharp/Portable/EditAndContinue/StatementSyntaxComparer.cs</File>
      <File>src/Features/CSharp/Portable/EditAndContinue/SyntaxComparer.cs</File>
      <File>src/Features/CSharp/Portable/EditAndContinue/SyntaxUtilities.cs</File>
      <File>src/Features/CSharp/Portable/EditAndContinue/TopSyntaxComparer.cs</File>
      <File>src/Features/CSharp/Portable/GenerateMember/GenerateConstructor/CSharpGenerateConstructorService.cs</File>
      <File>src/Features/CSharp/Portable/OrganizeImports/CSharpOrganizeImportsService.Rewriter.cs</File>
      <File>src/Features/CSharp/Portable/RemoveUnnecessaryImports/AbstractCSharpRemoveUnnecessaryImportsService.Rewriter.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/AttributeSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/ConstructorInitializerSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/ElementAccessExpressionSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/GenericNameSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/InvocationExpressionSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/ObjectCreationExpressionSignatureHelpProvider.cs</File>
      <File>src/Features/CSharp/Portable/SignatureHelp/TupleConstructionSignatureHelpProvider.cs</File>
      <File>src/Features/Core/Portable/AddImport/SearchScope.cs</File>
      <File>src/Features/Core/Portable/AddImport/SymbolReferenceFinder.cs</File>
      <File>src/Features/Core/Portable/ChangeSignature/AbstractChangeSignatureService.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Async/AbstractAsyncCodeFix.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Iterator/AbstractIteratorCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Qualify/AbstractFullyQualifyCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Suppression/AbstractSuppressionCodeFixProvider.GlobalSuppressMessageFixAllCodeAction.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Suppression/AbstractSuppressionCodeFixProvider.PragmaBatchFixHelpers.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Suppression/AbstractSuppressionCodeFixProvider.PragmaHelpers.cs</File>
      <File>src/Features/Core/Portable/CodeFixes/Suppression/AbstractSuppressionCodeFixProvider.RemoveSuppressionCodeAction_Pragma.cs</File>
      <File>src/Features/Core/Portable/CodeRefactorings/CodeRefactoringService.cs</File>
      <File>src/Features/Core/Portable/Completion/CommonCompletionItem.cs</File>
      <File>src/Features/Core/Portable/Completion/CompletionHelper.cs</File>
      <File>src/Features/Core/Portable/Completion/CompletionServiceWithProviders.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/AbstractOverrideCompletionProvider.ItemGetter.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/AbstractPartialMethodCompletionProvider.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/AbstractSymbolCompletionProvider.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/MemberInsertingCompletionItem.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/SymbolCompletionItem.cs</File>
      <File>src/Features/Core/Portable/Completion/Providers/XmlDocCommentCompletionItem.cs</File>
      <File>src/Features/Core/Portable/ConvertToInterpolatedString/AbstractConvertConcatenationToInterpolatedStringRefactoringProvider.cs</File>
      <File>src/Features/Core/Portable/ConvertToInterpolatedString/AbstractConvertPlaceholderToInterpolatedStringRefactoringProvider.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/AbstractHostDiagnosticUpdateSource.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/AnalyzerHelper.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Analyzers/NamingStyles/NamingStyleDiagnosticAnalyzerBase.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Analyzers/PreferFrameworkTypeDiagnosticAnalyzerBase.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Analyzers/RemoveUnnecessaryCastDiagnosticAnalyzerBase.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Analyzers/SimplifyTypeNamesDiagnosticAnalyzerBase.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticAnalyzerService.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticAnalyzerService_BuildSynchronization.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticAnalyzerService_IncrementalAnalyzer.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/DiagnosticService.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.CompilationManager.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.Executor.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.InMemoryStorage.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.ProjectState.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.StateManager.HostStates.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.StateManager.ProjectStates.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.StateManager.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.StateSet.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer_GetDiagnostics.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer_GetDiagnosticsForSpan.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/HostAnalyzerManager.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/Log/DiagnosticAnalyzerLogger.cs</File>
      <File>src/Features/Core/Portable/EditAndContinue/AbstractEditAndContinueAnalyzer.cs</File>
      <File>src/Features/Core/Portable/EditAndContinue/EditSession.cs</File>
      <File>src/Features/Core/Portable/ExtractInterface/AbstractExtractInterfaceService.cs</File>
      <File>src/Features/Core/Portable/ExtractMethod/MethodExtractor.Analyzer.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateConstructor/AbstractGenerateConstructorService.Editor.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateConstructor/AbstractGenerateConstructorService.State.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateDefaultConstructors/AbstractGenerateDefaultConstructorsService.State.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateEnumMember/AbstractGenerateEnumMemberService.State.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateParameterizedMember/AbstractGenerateConversionService.State.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateVariable/AbstractGenerateVariableService.GenerateLocalCodeAction.cs</File>
      <File>src/Features/Core/Portable/GenerateMember/GenerateVariable/AbstractGenerateVariableService.State.cs</File>
      <File>src/Features/Core/Portable/GenerateType/AbstractGenerateTypeService.CodeAction.cs</File>
      <File>src/Features/Core/Portable/GenerateType/AbstractGenerateTypeService.GenerateNamedType.cs</File>
      <File>src/Features/Core/Portable/GenerateType/AbstractGenerateTypeService.State.cs</File>
      <File>src/Features/Core/Portable/ImplementAbstractClass/AbstractImplementAbstractClassService.State.cs</File>
      <File>src/Features/Core/Portable/ImplementInterface/AbstractImplementInterfaceService.State.cs</File>
      <File>src/Features/Core/Portable/IncrementalCaches/SymbolTreeInfoIncrementalAnalyzerProvider.cs</File>
      <File>src/Features/Core/Portable/LanguageServices/AnonymousTypeDisplayService/AnonymousTypeDisplayInfo.cs</File>
      <File>src/Features/Core/Portable/LanguageServices/SymbolDisplayService/AbstractSymbolDisplayService.AbstractSymbolDescriptionBuilder.cs</File>
      <File>src/Features/Core/Portable/MakeMethodAsynchronous/AbstractMakeMethodAsynchronousCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/MakeMethodSynchronous/AbstractMakeMethodSynchronousCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/Notification/SemanticChangeNotificationService.cs</File>
      <File>src/Features/Core/Portable/PopulateSwitch/PopulateSwitchCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/PopulateSwitch/PopulateSwitchDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/SignatureHelp/CommonSignatureHelpUtilities.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/AbstractDocumentDifferenceService.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/AggregateIncrementalAnalyzer.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/SolutionCrawlerRegistrationService.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/State/AbstractAnalyzerState.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.AsyncDocumentWorkItemQueue.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.AsyncProjectWorkItemQueue.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.AsyncWorkItemQueue.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.HighPriorityProcessor.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.IncrementalAnalyzerProcessor.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.LowPriorityProcessor.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.NormalPriorityProcessor.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/WorkCoordinator.SemanticChangeProcessor.cs</File>
      <File>src/Features/Core/Portable/SpellCheck/AbstractSpellCheckCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/Structure/Syntax/BlockSpanCollector.cs</File>
      <File>src/Features/Core/Portable/UseCoalesceExpression/AbstractUseCoalesceExpressionDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/UseCoalesceExpression/AbstractUseCoalesceExpressionForNullableDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/UseCoalesceExpression/UseCoalesceExpressionCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/UseNullPropagation/AbstractUseNullPropagationCodeFixProvider.cs</File>
      <File>src/Features/Core/Portable/UseNullPropagation/AbstractUseNullPropagationDiagnosticAnalyzer.cs</File>
      <File>src/Features/Core/Portable/Workspace/BackgroundParser.cs</File>
      <File>src/Features/Core/Portable/Workspace/ProjectCacheService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/CodeModel/CSharpCodeModelService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/CodeModel/SyntaxNodeExtensions.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Debugging/CSharpBreakpointResolutionService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/LanguageService/CSharpHelpContextService.cs</File>
      <File>src/VisualStudio/CSharp/Impl/ProjectSystemShim/CSharpProjectShim.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/SnippetCommandHandler.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/SnippetExpansionClient.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Snippets/SnippetFunctions/SnippetFunctionGenerateSwitchCases.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Telemetry/CSharpCompilationErrorTelemetryIncrementalAnalyzer.cs</File>
      <File>src/VisualStudio/CSharp/Impl/Telemetry/CompilationErrorDetailDiscoverer.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractEditorFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.Query.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractVsTextViewFilter`2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AnalyzerDependency/AnalyzerDependencyCheckingService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AnalyzerDependency/AnalyzerFileWatcherService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DebuggerIntelliSense/AbstractDebuggerIntelliSenseContext.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DebuggerIntelliSense/DebuggerIntellisenseFilter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Debugging/AbstractBreakpointResolver.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DesignerAttribute/AbstractDesignerAttributeIncrementalAnalyzer.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Diagnostics/VisualStudioDiagnosticAnalyzerExecutor.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Diagnostics/VisualStudioDiagnosticAnalyzerService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Diagnostics/VisualStudioVenusSpanMappingService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/DocumentationComments/VisualStudioDocumentationProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/VsENCRebuildableProjectImpl.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/VsReadOnlyDocumentTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Extensions/DocumentExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Extensions/SnapshotSpanExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Extensions/SourceTextExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Extensions/VisualStudioWorkspaceImplExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/InlineRename/InlineRenameUndoManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Interactive/AbstractResetInteractiveMenuCommand.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Interop/CleanableWeakComHandleTable.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.IVsContainedLanguageFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.IVsImmediateStatementCompletion2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.VsCodeWindowManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.VsLanguageDebugInfo.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractLanguageService`2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/LanguageService/AbstractPackage`2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/AbstractLibraryManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/FindResults/TreeItems/SourceReferenceTreeItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/ObjectBrowser/Extensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/ObjectBrowser/ObjectList.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/VsNavInfo/NavInfoFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/NavigationBar/NavigationBarClient.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Notification/VSNotificationServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/LanguageSettingsPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/LocalUserRegistryOptionPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Options/RoamingVisualStudioProfileOptionPersister.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/PreviewEngine.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Preview/PreviewUpdater.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/PreviewPane/PreviewPaneService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Progression/GraphBuilder.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/AbstractProject.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/AbstractProject_Analyzers.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/ComEventSink.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/DocumentProvider.StandardTextDocument.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/DocumentProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/Extensions/IVsHierarchyExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/Extensions/ProjectItemsExtensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/FileChangeTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/InvisibleEditor.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/Legacy/AbstractLegacyProject.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/LinkedFileUtilities.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MetadataReferences/VisualStudioFrameworkAssemblyPathResolverFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MetadataReferences/VisualStudioMetadataReferenceManager.MetadataCache.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MetadataReferences/VisualStudioMetadataReferenceManager.RecoverableMetadataValueSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MetadataReferences/VisualStudioMetadataReferenceManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MiscellaneousFilesWorkspace.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/RuleSets/RuleSetEventHandler.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/RuleSets/VisualStudioRuleSetManager.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectManagementService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectTracker.WorkspaceHostState.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioProjectTracker_IVsSolutionLoadEvents.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioWorkspaceImpl.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/SaveEventsService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetCommandHandler.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetExpansionClient.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetInfoService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/SnippetFunctions/AbstractSnippetFunctionClassName.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/SnippetFunctions/AbstractSnippetFunctionGenerateSwitchCases.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/SnippetFunctions/AbstractSnippetFunctionSimpleTypeName.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/AbstractTableControlEventProcessorProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/AbstractTableDataSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/AbstractTableEntriesSnapshot.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/Extensions.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/OpenDocumentTracker.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/Suppression/SuppressionStateColumnDefinition.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/Suppression/VisualStudioDiagnosticListSuppressionStateService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/Suppression/VisualStudioSuppressionFixService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/TableEntriesFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/VisualStudioBaseDiagnosticListTable.LiveTableDataSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TableDataSource/VisualStudioBaseDiagnosticListTable.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TaskList/ExternalErrorDiagnosticUpdateSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TaskList/HostDiagnosticUpdateSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/TaskList/ProjectExternalErrorReporter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Utilities/BrowserHelper.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Utilities/VisualStudioWaitContext.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Utilities/VisualStudioWaitIndicator.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedDocument.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedLanguage.IVsContainedLanguageCodeSupport.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedLanguage.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Venus/ContainedLanguageCodeSupport.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Versions/SemanticVersionTrackingService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/VirtualMemoryNotificationListener.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/VsRefactorNotifyService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioDocumentNavigationService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioDocumentTrackingService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioErrorReportingService.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Workspace/VisualStudioSymbolNavigationService.cs</File>
      <File>src/VisualStudio/Core/Def/Packaging/PackageInstallerServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/SolutionEventMonitor.cs</File>
      <File>src/VisualStudio/Core/Def/Telemetry/CodeMarkerLogger.cs</File>
      <File>src/VisualStudio/Core/Def/Telemetry/ProjectTelemetryIncrementalAnalyzerProvider.cs</File>
      <File>src/VisualStudio/Core/Def/Telemetry/VSTelemetryActivityLogger.cs</File>
      <File>src/VisualStudio/Core/Def/Utilities/IVsEditorAdaptersFactoryServiceExtensions.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/AbstractCodeModelService.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/CodeModelIncrementalAnalyzer.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/CodeModelProjectCache.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/AttributeCollection.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/CodeElementSnapshot.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/InheritsImplementsCollection.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/NamespaceCollection.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/NodeSnapshot.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Collections/ParameterCollection.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/ExternalElements/AbstractExternalCodeElement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/FileCodeModel.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/FileCodeModel_CodeGen.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/FileCodeModel_Events.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/AbstractCodeElement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/AbstractCodeType.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/AbstractKeyedCodeElement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeAccessorFunction.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeAttribute.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeAttributeArgument.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeImplementsStatement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeImport.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeInheritsStatement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeOptionsStatement.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeParameter.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/InternalElements/CodeProperty.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/Interop/CodeModelInterop.cs</File>
      <File>src/VisualStudio/Core/Impl/CodeModel/TextManagerAdapter.cs</File>
      <File>src/VisualStudio/Core/Impl/ProjectSystem/CPS/CPSProjectCodeModel.cs</File>
      <File>src/VisualStudio/Core/Impl/ProjectSystem/CPS/CPSProjectFactory.cs</File>
      <File>src/VisualStudio/Core/Next/FindReferences/StreamingFindUsagesPresenter.TableDataSourceFindUsagesContext.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzerItemTracker.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzerReferenceManager.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzersCommandHandler.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzersFolderItem/AnalyzersFolderItem.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzersFolderItem/AnalyzersFolderItemProvider.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/DiagnosticItem/DiagnosticItem.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/Classifiers/NameSyntaxClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/Classification/Classifiers/SyntaxTokenClassifier.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpCodeGenerationHelpers.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpCodeGenerationService.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpDeclarationComparer.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpSyntaxGenerator.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/NamespaceGenerator.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/UsingDirectivesAdder.Rewriter.cs</File>
      <File>src/Workspaces/CSharp/Portable/Execution/CSharpOptionsSerializationService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/CastExpressionSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/ContextQuery/SyntaxTreeExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/DirectiveSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/ExpressionSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/MemberDeclarationSyntaxExtensions.DeclarationFinder.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/MemberDeclarationSyntaxExtensions.LocalDeclarationMap.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/SemanticModelExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/SyntaxNodeExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/SyntaxTreeExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/TypeDeclarationSyntaxExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Formatting/Engine/Trivia/CSharpTriviaFormatter.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSemanticFactsService.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSyntaxFactsService.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpSyntaxTreeFactoryService.RecoverableSyntaxTree.cs</File>
      <File>src/Workspaces/CSharp/Portable/Rename/CSharpRenameRewriterLanguageService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpNameReducer.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpSimplificationService.Expander.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpSimplificationService.cs</File>
      <File>src/Workspaces/CSharp/Portable/Utilities/CompilationOptionsConversion.cs</File>
      <File>src/Workspaces/CSharp/Portable/Utilities/FormattingRangeHelper.cs</File>
      <File>src/Workspaces/CSharp/Portable/Utilities/SpeculationAnalyzer.cs</File>
      <File>src/Workspaces/CSharp/Portable/Utilities/UsingsAndExternAliasesOrganizer.cs</File>
      <File>src/Workspaces/Core/Portable/CodeCleanup/AbstractCodeCleanerService.cs</File>
      <File>src/Workspaces/Core/Portable/CodeCleanup/Providers/FormatCodeCleanupProvider.cs</File>
      <File>src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/BatchFixAllProvider.cs</File>
      <File>src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/BatchSimplificationFixAllProvider.cs</File>
      <File>src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.DiagnosticProvider.cs</File>
      <File>src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllState.FixMultipleDiagnosticProvider.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/AbstractCodeGenerationService_FindDeclaration.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationConstructorInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationDestructorInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationEventInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationFieldInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationMethodInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationNamespaceInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationPropertyInfo.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/Symbols/CodeGenerationSymbol.cs</File>
      <File>src/Workspaces/Core/Portable/Diagnostics/DiagnosticAnalysisResult.cs</File>
      <File>src/Workspaces/Core/Portable/Diagnostics/DiagnosticData.cs</File>
      <File>src/Workspaces/Core/Portable/Differencing/EditScript.cs</File>
      <File>src/Workspaces/Core/Portable/Differencing/Match.cs</File>
      <File>src/Workspaces/Core/Portable/Differencing/TreeComparer.cs</File>
      <File>src/Workspaces/Core/Portable/Editing/DeclarationModifiers.cs</File>
      <File>src/Workspaces/Core/Portable/Editing/SolutionEditor.cs</File>
      <File>src/Workspaces/Core/Portable/Editing/SymbolEditor.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/AbstractOptionsSerializationService.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/AssetStorages.Storage.cs</File>
      <File>src/Workspaces/Core/Portable/Execution/AssetStorages.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/Extensions.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/DependentProjectsFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferenceCache.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/FindReferencesSearchEngine_ProjectProcessing.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/AbstractReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/ConstructorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/NamedTypeSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/FindReferences/Finders/OperatorSymbolReferenceFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/ReferenceLocationExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolFinder_Hierarchy.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolTree/SymbolTreeInfo.cs</File>
      <File>src/Workspaces/Core/Portable/FindSymbols/SymbolTree/SymbolTreeInfo_Serialization.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Context/FormattingContext.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/AbstractFormatEngine.OperationApplier.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/AbstractFormatEngine.Partitioner.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/AbstractTriviaDataFactory.AbstractComplexTrivia.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/TokenStream.Changes.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/TokenStream.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/Engine/TreeData.cs</File>
      <File>src/Workspaces/Core/Portable/Formatting/TriviaEngine/AbstractTriviaFormatter.cs</File>
      <File>src/Workspaces/Core/Portable/Log/LogAggregator.cs</File>
      <File>src/Workspaces/Core/Portable/Options/GlobalOptionService.cs</File>
      <File>src/Workspaces/Core/Portable/Options/OptionServiceFactory.cs</File>
      <File>src/Workspaces/Core/Portable/Options/WorkspaceOptionSet.cs</File>
      <File>src/Workspaces/Core/Portable/PatternMatching/PatternMatcher.cs</File>
      <File>src/Workspaces/Core/Portable/Rename/ConflictEngine/ConflictResolver.cs</File>
      <File>src/Workspaces/Core/Portable/Rename/ConflictEngine/DeclarationConflictHelpers.cs</File>
      <File>src/Workspaces/Core/Portable/Rename/ConflictEngine/RenamedSpansTracker.cs</File>
      <File>src/Workspaces/Core/Portable/SemanticModelWorkspaceService/SemanticModelWorkspaceServiceFactory.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/DocumentExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ICodeDefinitionFactoryExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ISymbolExtensions_Accessibility.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ITypeSymbolExtensions.SubstituteTypesVisitor.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/StringExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/SyntaxNodeExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Utilities/AliasSymbolCache.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Utilities/DocumentationComment.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Utilities/StringBreaker.cs</File>
      <File>src/Workspaces/Core/Portable/SymbolKey/SymbolKey.SymbolKeyWriter.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/AbstractSpeculationAnalyzer.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/AnnotationTable.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/BKTree.Builder.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/BidirectionalMap.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/CancellableLazy`1.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/CompilerUtilities/ImmutableDictionaryExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/CompilerUtilities/ImmutableHashMap.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/CompilerUtilities/ImmutableHashMapExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/CompilerUtilities/linkedhashqueue.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/Documentation/XmlDocumentationProvider.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/EditDistance.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/EventMap.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/IDictionaryExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/IReadOnlyDictionaryExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/SpellChecker.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/SyntaxPath.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/ValuesSources/CachedWeakValueSource.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/ValuesSources/RecoverableWeakValueSource.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/ValuesSources/ValueSource.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/ValuesSources/WeakConstantValueSource.cs</File>
      <File>src/Workspaces/Core/Portable/Utilities/WeakEventHandler.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Host/Mef/MefLanguageServices.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Host/Mef/MefWorkspaceServices.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Host/Metadata/MetadataReferenceCache.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Host/SyntaxTreeFactory/AbstractSyntaxTreeFactoryService.AbstractRecoverableSyntaxRoot.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/Document.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/DocumentState.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/DocumentState_TreeTextSource.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/MetadataOnlyReference.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/MetadataReferenceManager.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/ProjectState.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/RecoverableTextAndVersion.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/Solution.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/SolutionState.CompilationTracker.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/SolutionState.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/StateChecksums.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Solution/TextDocumentState.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/TextExtensions.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Workspace.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/AddMissingTokensTests.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/CodeCleanupTests.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/FixIncorrectTokenTests.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/NormalizeModifiersOrOperatorsTests.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/ReduceTokenTests.cs</File>
      <File>src/Workspaces/CoreTest/CodeCleanup/RemoveUnnecessaryLineContinuationTests.cs</File>
      <File>src/Workspaces/CoreTest/Differencing/MatchTests.cs</File>
      <File>src/Workspaces/CoreTest/Execution/SnapshotSerializationTestBase.cs</File>
      <File>src/Workspaces/CoreTest/SolutionTests/ProjectDependencyGraphTests.cs</File>
      <File>src/Workspaces/CoreTest/SolutionTests/SolutionTests.cs</File>
      <File>src/Workspaces/CoreTest/SymbolKeyTests.cs</File>
      <File>src/Workspaces/CoreTest/SyntaxPathTests.cs</File>
      <File>src/Workspaces/CoreTest/WorkspaceTests/AdhocWorkspaceTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>15220</IssueID>
    <Title>Fix Markdown Colorization of Indented Block Quotes</Title>
    <Description>Issue #12948

**Bug**
- Block quotes are not colorized if they start with a space. Up to three spaces should be supported (4 spaces makes it a code block)
- The second line of blocks quotes should be able to have any number of leading spaces.

**Fix**
Add support for both of these cases

![screen shot 2016-11-08 at 3 56 52 pm](https://cloud.githubusercontent.com/assets/12821956/20122367/ff3f55b2-a5cb-11e6-81e1-e0125bab27b4.png)


Closes #12948</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>11/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12948</IssueID>
        <Title>Add new assembly to support XAML.</Title>
        <Description>The main purpose of this new XAML support assembly is to:
1. Create and track documents for XAML files using XamlProjects that track the same IVsHierarchy as the real project they are in.
2. Provide a shim to expose internal Roslyn functionality, such as inline rename, organize usings, and document analyzer, to the XamlLanguageService in Visual Studio.
</Description>
        <CreatedDate>05/08/2016</CreatedDate>
        <ClosedDate>16/08/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>12948</IssueID>
        <Title>Add new assembly to support XAML.</Title>
        <Description>The main purpose of this new XAML support assembly is to:
1. Create and track documents for XAML files using XamlProjects that track the same IVsHierarchy as the real project they are in.
2. Provide a shim to expose internal Roslyn functionality, such as inline rename, organize usings, and document analyzer, to the XamlLanguageService in Visual Studio.
</Description>
        <CreatedDate>05/08/2016</CreatedDate>
        <ClosedDate>16/08/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharp/AutomaticCompletion/AutomaticLineEnderCommandHandler.cs</File>
      <File>src/EditorFeatures/CSharp/NavigationBar/CSharpNavigationBarItemService.cs</File>
      <File>src/Features/Core/Portable/Shared/Extensions/ISymbolExtensions_2.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Debugging/AbstractBreakpointResolver.cs</File>
      <File>src/Workspaces/CSharp/Portable/LanguageServices/CSharpTypeInferenceService.TypeInferrer.cs</File>
      <File>src/Workspaces/Core/Portable/CodeGeneration/AbstractCodeGenerationService.cs</File>
      <File>src/Workspaces/Core/Portable/Shared/Extensions/ITypeSymbolExtensions.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>15213</IssueID>
    <Title>Remove jsconfig.json lightbulb hint</Title>
    <Description>Issue #15205

**Bug**
Typescript now infers the js project if no `jsconfig.json` is found. This means that the light bulb hint about creating a `jsconfig.json` file is not required.

**Fix**
Remove the `jsconfig.json` light bulb logic.

closes #15205</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>09/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>15205</IssueID>
        <Title>IntelliSense doesn't show read-only class properties in object initializers</Title>
        <Description>**Version Used**: 2015, 15

```C#
class C {
	int x;
	C P { get; } = new C {  };
}
```

Inside the last pair of braces, IntelliSense should show `P`, to allow `new C { P = { x = 2 } }` (which is completely legal).

It currently only shows writable properties and concrete collection properties.</Description>
        <CreatedDate>13/11/2016</CreatedDate>
        <ClosedDate>20/09/2018</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>15205</IssueID>
        <Title>IntelliSense doesn't show read-only class properties in object initializers</Title>
        <Description>**Version Used**: 2015, 15

```C#
class C {
	int x;
	C P { get; } = new C {  };
}
```

Inside the last pair of braces, IntelliSense should show `P`, to allow `new C { P = { x = 2 } }` (which is completely legal).

It currently only shows writable properties and concrete collection properties.</Description>
        <CreatedDate>13/11/2016</CreatedDate>
        <ClosedDate>20/09/2018</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Symbols/RefKindExtensions.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxKindExtensions.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/CSharp/CSharpFunctionResolver.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/CSharp/GreenNode.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/CSharp/MemberSignatureParser.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/CSharp/Scanner.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/FunctionResolver.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/FunctionResolverBase.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/MetadataDecoder.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/MetadataResolver.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/Name.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/ParameterSignature.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/RequestSignature.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/SpecialTypeExtensions.cs</File>
      <File>src/ExpressionEvaluator/Core/Source/FunctionResolver/TypeSignature.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/CSharpFunctionResolverTests.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/CSharpParsingTests.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/Module.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/NameComparer.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/ParameterComparer.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/Process.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/Request.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/Resolver.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/FunctionResolver/TypeComparer.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/ResultProvider/Debugger/Engine/DkmClrModuleInstance.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/ResultProvider/Debugger/Engine/DkmProcess.cs</File>
      <File>src/ExpressionEvaluator/Core/Test/ResultProvider/Debugger/Engine/DkmRuntimeInstance.cs</File>
      <File>src/ExpressionEvaluator/Package/AssemblyRedirects.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>14626</IssueID>
    <Title>Fix Fenced Code Syntax Highlighting in Markdown Leaking</Title>
    <Description>### Bug

This builds on #14488  to fix a number of issues where syntax  highlighting leaks outside of code blocks in markdown files. A simple repo currently is this markdown:

``````
**a**

```js
(
```

**a**
``````

Which is incorrectly colored as:

&lt;img width="154" alt="screen shot 2016-10-27 at 1 41 58 pm" src="https://cloud.githubusercontent.com/assets/12821956/19784601/31a71600-9c4b-11e6-8782-f5039c45eb1a.png"&gt;

### Fix

Leverage the updated while rule logic from  #14488 to break out of language syntax highlighting when the end of a code block is detected:

&lt;img width="169" alt="screen shot 2016-10-27 at 1 42 53 pm" src="https://cloud.githubusercontent.com/assets/12821956/19784638/5d51d448-9c4b-11e6-9122-5c22812f5959.png"&gt;

Also includes work to fix fenced code blocks where the size of the trailing fence is larger than the size of the starting fence:

``````
```js
1;
`````
``````

And cases such as:

``````
```js
1;
                 `````
``````

Possibly fixed issues include #9457, #8903, #8259, #13149, and others

This is not something we'd want to take into the current months release. I'd like to get some usage in insiders builds and target next month's release.
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>14488</IssueID>
        <Title>Propagate InvolvesNarrowingFromNumericConstant flag for tuple conversions.</Title>
        <Description>Related to #14255.
Fixes #14473.

@dotnet/roslyn-compiler, @VSadov, @jcouv Please review.
</Description>
        <CreatedDate>13/10/2016</CreatedDate>
        <ClosedDate>13/10/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>14488</IssueID>
        <Title>Propagate InvolvesNarrowingFromNumericConstant flag for tuple conversions.</Title>
        <Description>Related to #14255.
Fixes #14473.

@dotnet/roslyn-compiler, @VSadov, @jcouv Please review.
</Description>
        <CreatedDate>13/10/2016</CreatedDate>
        <ClosedDate>13/10/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>9457</IssueID>
        <Title>Update what we archive after a run.</Title>
        <Description>Exclude our massive nuget zip.  But include pngs/xml files.
</Description>
        <CreatedDate>03/03/2016</CreatedDate>
        <ClosedDate>08/03/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>8903</IssueID>
        <Title>IOperation: VB - BoundLateMemberAccess, some information is not exposed through ILateBoundMemberReferenceExpression</Title>
        <Description>```
    &lt;!--"Type" argument of the LateCall method. Optional when there is a receiver object. --&gt;
    &lt;Field Name="ContainerTypeOpt" Type="TypeSymbol" Null="allow"/&gt;
    &lt;Field Name="TypeArgumentsOpt" Type="BoundTypeArguments" Null="allow"/&gt;
```
</Description>
        <CreatedDate>19/02/2016</CreatedDate>
        <ClosedDate>03/07/2017</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>8259</IssueID>
        <Title>Outlining spans are not created for parenthesized lambda expressions</Title>
        <Description>![image](https://cloud.githubusercontent.com/assets/116161/12690463/92dec6a4-c698-11e5-8c03-0bd012e317a3.png)

``` C#
class Program
{
    static void Main(string[] args)
    {
        Func&lt;int&gt; f1 = () =&gt;
        {
            return 1;
        };

        Func&lt;int, int&gt; f2 = x =&gt;
        {
            return x;
        };

        Func&lt;int, int, int&gt; f3 = (x, y) =&gt;
        {
            return x + y;
        };

        Func&lt;int&gt; f4 = delegate
        {
            return 1;
        };
    }
}
```
</Description>
        <CreatedDate>29/01/2016</CreatedDate>
        <ClosedDate>08/02/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>13149</IssueID>
        <Title>ImplementAbstractClassCodeFixProvider throws NRE on partial class</Title>
        <Description>**Version Used**: 

Commit f93cffec394e1bfbf1467a3c370fb286b52e3a70 (Latest now)

**Steps to Reproduce**:

``` C#
// a.cs
public abstract class Base : IDisposable { public abstract void Dispose(); }

partial class A : Base { }

// b.cs
partial class A { }
```

**Expected Behavior**:

ImplementAbstractClassCodeFixProvider provides fixes at **all** partial declarations **which have the base class definition** (this time, `class A` in a.cs).

**Actual Behavior**:

Seems that the IntelliSense always creates CS0534 ('A' does not implement inherited abstract member 'B') at **the last declaration** (this time, `class A` in b.cs).

So when `ImplementAbstractClassCodeFixProvider.RegisterCodeFixesAsync()` is called, `classNode.BaseList` in `foreach (var baseTypeSyntax in classNode.BaseList.Types)` ([ImplementAbstractClassCodeFixProvider.cs Line 50](https://github.com/dotnet/roslyn/blob/master/src/Features/CSharp/Portable/CodeFixes/ImplementAbstractClass/ImplementAbstractClassCodeFixProvider.cs#L50)) is `null` (this partial declaration doesn't have base class syntax?).

When building, the CS0534 is in a.cs, so it's more confusing that, when you double-click the error message, it takes you to a.cs but there is no code fix.

And, the "Rename file to A.cs" and "Rename type to B" fixes should not be provided for these partial types in multiple files.
</Description>
        <CreatedDate>13/08/2016</CreatedDate>
        <ClosedDate>23/08/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/VisualStudio/Xaml/Impl/Diagnostics/XamlDiagnosticIds.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>13241</IssueID>
    <Title>Improve overflowing widgets layout</Title>
    <Description>Fixes #12794, #13004 and #9882

Some widgets specify a fixed width via CSS, like the suggest widget. The overflowing code currently in place works well with those.

Others want to be as wide as their content is, up to a certain point. Most others are, namely the hover and parameter hints. This behaviour is broken currently because the text within these widgets wrap at the right-most point of their closer layout parent. We should let these widgets stretch as much as they want to.

Some widgets have a [strange](https://cloud.githubusercontent.com/assets/1794099/18745950/d1b80656-80c4-11e6-8025-95d958d5ea0f.png) [layout](https://cloud.githubusercontent.com/assets/2193314/18884526/a0c30510-849c-11e6-86a5-dfa3fb19ad50.png), while [others definitely break](https://cloud.githubusercontent.com/assets/22350/19110275/5afc1cca-8af9-11e6-9fdd-9d3310bf204c.png). 😨 

This PR places the overflowing widgets in a `fixed` container, stretched to fill the whole window.

I gave it a good smoke test around Code and the Monaco editor, but I need a quick review from your @alexandrudima just to be sure I'm not missing anything.
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12794</IssueID>
        <Title>update list of files to copy to include recently renamed one</Title>
        <Description>More signed build breaks.

FYI @shyamnamboodiripad @jmarolf 
</Description>
        <CreatedDate>28/07/2016</CreatedDate>
        <ClosedDate>28/07/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>13004</IssueID>
        <Title>Allocate less when converting symbols into syntax.</Title>
        <Description>Fixes https://github.com/dotnet/roslyn/issues/12980
</Description>
        <CreatedDate>08/08/2016</CreatedDate>
        <ClosedDate>08/08/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>9882</IssueID>
        <Title>tuples and disposable objects</Title>
        <Description>Hi,
  I'm following the discussion about tuples, and I have a question about this.
  Often I have methods the return disposable objects (the most common is a ef or ado.net db connection, and to be sure that are correctly dispose I use **using (...**

```
using( var db = obj.getDbConnection()) {
 ...
}

```

Now, if one of the members of the tuple is an object like this, how can I handle its disposal in a proper way? For example I can have a method that returns both an ado.net sqlconnection and the related transaction object, because I want to encapsulate the creation procedure.
</Description>
        <CreatedDate>18/03/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/Core/Implementation/Diagnostics/AbstractDiagnosticsTaggerProvider.AggregatingTagger.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12944</IssueID>
    <Title>Add Space After Default Extension Queries</Title>
    <Description>Adds a space after the default extension search queries so that users can start typing a query term right away. See Issue #12924 for details

Closes #12924
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12924</IssueID>
        <Title>C# Interactive, Roslyn &amp; .NET Version</Title>
        <Description>**Scenario**
I'm writing a .NET Core application targetting netcoreapp1.0/dnxcore50

**Problem**
The .NET target in the C# Interactive window does not reflect the target of the current project.

**Example**
In the C# Interactive window `typeof(Guid).GetProperties();`  compiles.
In my .NET Core app, `typeof(Guid).GetProperties();` causes a compiler error.

**Solution**
The .NET target in the C# Interactive window should reflect the current project or should be manually configurable through the C# Interactive toolbar
</Description>
        <CreatedDate>04/08/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>12924</IssueID>
        <Title>C# Interactive, Roslyn &amp; .NET Version</Title>
        <Description>**Scenario**
I'm writing a .NET Core application targetting netcoreapp1.0/dnxcore50

**Problem**
The .NET target in the C# Interactive window does not reflect the target of the current project.

**Example**
In the C# Interactive window `typeof(Guid).GetProperties();`  compiles.
In my .NET Core app, `typeof(Guid).GetProperties();` causes a compiler error.

**Solution**
The .NET target in the C# Interactive window should reflect the current project or should be manually configurable through the C# Interactive toolbar
</Description>
        <CreatedDate>04/08/2016</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBUsingTests.cs</File>
      <File>src/Test/PdbUtilities/Metadata/MetadataVisualizer.cs</File>
      <File>src/Tools/Source/MetadataVisualizer/Arguments.cs</File>
      <File>src/Tools/Source/MetadataVisualizer/Program.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12841</IssueID>
    <Title>Highlight Markdown Image Starting ! Punctuator</Title>
    <Description>Issue #12835

Adds colorization for the `!` that defines a markdown image link. The `!` is colored the same as the `[` after it.

![screen shot 2016-09-27 at 4 08 24 pm](https://cloud.githubusercontent.com/assets/12821956/18895194/a4f2f598-84cc-11e6-92b1-c1a40461f925.png)

Closes #12835
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12835</IssueID>
        <Title>Question: Any plans to implement support for transactional memory ?</Title>
        <Description>New Skylake CPU have support for transactional memory and optimistic locks. Such features can greatly ease write multithreaded apps, and improve their performance.
Best way to implement TM is probably implement it in CLR and language. But it may be possible to implement it only by language by using pinvoke, so CLR do not need to be changed. 
</Description>
        <CreatedDate>30/07/2016</CreatedDate>
        <ClosedDate>17/08/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>12835</IssueID>
        <Title>Question: Any plans to implement support for transactional memory ?</Title>
        <Description>New Skylake CPU have support for transactional memory and optimistic locks. Such features can greatly ease write multithreaded apps, and improve their performance.
Best way to implement TM is probably implement it in CLR and language. But it may be possible to implement it only by language by using pinvoke, so CLR do not need to be changed. 
</Description>
        <CreatedDate>30/07/2016</CreatedDate>
        <ClosedDate>17/08/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Patterns.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Statements.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/Binder_Symbols.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/CatchClauseBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/FixedStatementBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/ForLoopBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/LocalScopeBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/PatternVariableBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/PatternVariableFinder.cs</File>
      <File>src/Compilers/CSharp/Portable/Binder/UsingStatementBinder.cs</File>
      <File>src/Compilers/CSharp/Portable/BoundTree/UnboundLambda.cs</File>
      <File>src/Compilers/CSharp/Portable/CSharpResources.Designer.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/CSharpSemanticModel.cs</File>
      <File>src/Compilers/CSharp/Portable/Compilation/MemberSemanticModel.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/DiagnosticsPass_ExpressionTrees.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/Instrumentation/DynamicAnalysisInjector.cs</File>
      <File>src/Compilers/CSharp/Portable/Parser/LanguageParser.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/LocalFunctionSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceDelegateMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceLocalSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourceMemberMethodSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/Source/SourcePropertySymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/ArrowExpressionClauseSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/DelegateDeclarationSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/EqualsValueClauseSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/ForStatementSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/IncompleteMemberSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/IndexerDeclarationSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/LocalDeclarationStatementSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/MethodDeclarationSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/ParenthesizedLambdaExpressionSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/PropertyDeclarationSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/ReturnStatementSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SimpleLambdaExpressionSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxKind.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxNodeExtensions.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefLocalTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenRefReturnTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/ConstantTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/LocalFunctionTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/PatternMatchingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/Source/MethodTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/DeclarationParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ExpressionParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/LocalFunctionParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/StatementParsingTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/CodeActions/InlineTemporary/InlineTemporaryTests.cs</File>
      <File>src/ExpressionEvaluator/CSharp/Source/ExpressionCompiler/Binders/PlaceholderLocalBinder.cs</File>
      <File>src/Features/CSharp/Portable/ChangeSignature/CSharpChangeSignatureService.cs</File>
      <File>src/Features/CSharp/Portable/CodeFixes/Async/CSharpAddAsyncCodeFixProvider.cs</File>
      <File>src/Features/CSharp/Portable/CodeRefactorings/InlineTemporary/InlineTemporaryCodeRefactoringProvider.cs</File>
      <File>src/Features/CSharp/Portable/ExtractMethod/CSharpMethodExtractor.CSharpCodeGenerator.CallSiteContainerRewriter.cs</File>
      <File>src/Features/CSharp/Portable/ExtractMethod/CSharpMethodExtractor.CSharpCodeGenerator.cs</File>
      <File>src/Features/CSharp/Portable/Organizing/Organizers/IndexerDeclarationOrganizer.cs</File>
      <File>src/Features/CSharp/Portable/Organizing/Organizers/MethodDeclarationOrganizer.cs</File>
      <File>src/Samples/CSharp/APISampleUnitTests/SyntaxTrees.cs</File>
      <File>src/VisualStudio/CSharp/Test/Debugging/LocationInfoGetterTests.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpSyntaxGenerator.cs</File>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/MethodGenerator.cs</File>
      <File>src/Workspaces/CSharp/Portable/Extensions/ITypeSymbolExtensions.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpMiscellaneousReducer.cs</File>
      <File>src/Workspaces/CSharp/Portable/Simplification/CSharpSimplificationService.Expander.cs</File>
      <File>src/Workspaces/CSharpTest/Formatting/FormattingElasticTriviaTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12477</IssueID>
    <Title>Using Cmd+Scroll to zoom on a mac</Title>
    <Description>Issue Microsoft/monaco-editor#201

Bug
Cmd + Scroll doesn't work on a mac. Only Ctrl+Scroll. 
Most mac users would be used to using Cmd instead of Ctrl. 

Fix
Zoom on both Ctrl+Scroll and Cmd+Scroll (metaKey). 

closes Microsoft/monaco-editor#201
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>201</IssueID>
        <Title>Simplify creation of FixAllProvider for a Document</Title>
        <Description>Currently, if a user needs to implement a `FixAllProvider` (or wants to for efficiency), they need to implement full support for fixing all instances of a diagnostic in three scopes: document, project, and solution. For many code fixes, changes are localized to a single document. It would be helpful to have an abstract `FixAllProvider` which allows the user to implement the "fix all" operation for a single document, but have the project and solution scopes handled by the base class (delegating handling for individual documents to the document handler as necessary).

This request is based on the challenges and concerns faced while implementing a custom `FixAllProvider` in DotNetAnalyzers/StyleCopAnalyzers#441 and DotNetAnalyzers/StyleCopAnalyzers#442, along with the feedback received in #199.
</Description>
        <CreatedDate>02/02/2015</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
      <Issue>
        <IssueID>201</IssueID>
        <Title>Simplify creation of FixAllProvider for a Document</Title>
        <Description>Currently, if a user needs to implement a `FixAllProvider` (or wants to for efficiency), they need to implement full support for fixing all instances of a diagnostic in three scopes: document, project, and solution. For many code fixes, changes are localized to a single document. It would be helpful to have an abstract `FixAllProvider` which allows the user to implement the "fix all" operation for a single document, but have the project and solution scopes handled by the base class (delegating handling for individual documents to the document handler as necessary).

This request is based on the challenges and concerns faced while implementing a custom `FixAllProvider` in DotNetAnalyzers/StyleCopAnalyzers#441 and DotNetAnalyzers/StyleCopAnalyzers#442, along with the feedback received in #199.
</Description>
        <CreatedDate>02/02/2015</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharp/QuickInfo/SemanticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/CSharp/QuickInfo/SyntacticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SemanticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/QuickInfo/SyntacticQuickInfoSourceTests.cs</File>
      <File>src/EditorFeatures/Core/Commands/AsyncFindReferencesCommandArgs.cs</File>
      <File>src/EditorFeatures/Core/Commands/FindReferencesCommandArgs.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/INavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/NavigableItemFactory.DeclaredSymbolNavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/NavigableItemFactory.SymbolLocationNavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Host/IAsyncFindReferencesPresenter.cs</File>
      <File>src/EditorFeatures/Core/Implementation/FindReferences/AbstractFindReferencesService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/FindReferences/FindReferencesCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/FindReferences/FindReferencesContext.cs</File>
      <File>src/EditorFeatures/Core/Implementation/FindReferences/IFindReferencesService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/DeferredContent/ClassifiableDeferredContent.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Providers/AbstractQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/QuickInfo/Providers/AbstractSemanticQuickInfoProvider.cs</File>
      <File>src/EditorFeatures/Test/FindReferences/FindReferencesCommandHandlerTests.cs</File>
      <File>src/Features/CSharp/Portable/LanguageServices/CSharpSymbolDisplayService.SymbolDescriptionBuilder.cs</File>
      <File>src/Features/Core/Portable/Shared/TestHooks/FeatureAttribute_Names.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.Execute.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.Query.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/AsyncFindReferencesPresenter.DataSource.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/AsyncFindReferencesPresenter.Subscription.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/AsyncFindReferencesPresenter.TableEntriesSnapshot.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/AsyncFindReferencesPresenter.TableEntry.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/AsyncFindReferencesPresenter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/FindReferences/ReferencedSymbolsPresenter.cs</File>
      <File>src/Workspaces/Core/Portable/Classification/Classifier.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12469</IssueID>
    <Title>Fix markdown  colorization of links inside of lists and quotes</Title>
    <Description>Issue #12344

**Bug**
Currently, markdown colorization is different for inlines of inside lists and quotes. For example, links inside lists or block quotes end up getting colored differently than normal links.

&lt;img width="456" alt="screen shot 2016-09-22 at 10 37 54 am" src="https://cloud.githubusercontent.com/assets/12821956/18759286/aacc0cd6-80b0-11e6-8374-ae4f4faaf9ee.png"&gt;

**Fix**
- Add a scope to the textmate markdown grammar so that we can identify the symbol that starts a list or quote.
- Remove foreground rule for lists and quotes since this just duplicates the normal text color. The generated CSS selector is more specific than the one for link descriptions, so the list foreground color overrides it.
- Only apply special puctuator colorization to the start symbol for lists and quotes.

&lt;img width="402" alt="screen shot 2016-09-22 at 10 35 16 am" src="https://cloud.githubusercontent.com/assets/12821956/18759263/980199cc-80b0-11e6-8472-3d13303de163.png"&gt;

This only currently updates the dark and light themes. I'll investigate update the others as well.

Closes #12344
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>26/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12344</IssueID>
        <Title>Implements simple cases of tuple name roundtripping</Title>
        <Description>For the most part, this change implements the same encoding
for tuples that we use for dynamic. This means that interface
implementations and generic constraints are not covered, but
base types and type parameters are.

This change also doesn't have full tests for "long" tuples (nested tuple
transformations) or tuple types that can only be constructed in
metadata.
</Description>
        <CreatedDate>05/07/2016</CreatedDate>
        <ClosedDate>12/07/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>12344</IssueID>
        <Title>Implements simple cases of tuple name roundtripping</Title>
        <Description>For the most part, this change implements the same encoding
for tuples that we use for dynamic. This means that interface
implementations and generic constraints are not covered, but
base types and type parameters are.

This change also doesn't have full tests for "long" tuples (nested tuple
transformations) or tuple types that can only be constructed in
metadata.
</Description>
        <CreatedDate>05/07/2016</CreatedDate>
        <ClosedDate>12/07/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/Core/MSBuildTask/Shared/Vbc.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12342</IssueID>
    <Title>Fix markdown highlighting for fenced code block close with space prefix</Title>
    <Description>Issue #8636

**Bug**
Fenced code block closing tags break colorization if they are prefixed with spaces like so:

``````
*a*

```json
{}
  ```

*b*
``````

 According to the commonmark spec, up to three spaces are allowed: http://spec.commonmark.org/0.25/#fenced-code-blocks

**Fix**
Update defintion of fenced code block closing tag to support up to three spaces before and any number of spaces after.

Closes #8636
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>26/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>8636</IssueID>
        <Title>Ambiguous assemblies Option B: Handle an additional "duplicate reference" error code in the EE</Title>
        <Description>**Problem**: the EE can't evaluate expressions when there are multiple assemblies with the same (weak) name loaded.

**Solution**: enable the existing retry logic in this particular scenario (by adding another error code to the list).

**Pro**: Conservative - only kicks in if regular evaluation fails.  Can't break anything but the C# EE.

**Con**: Only helps on retry.  As soon as there are ambiguous assemblies, every single expression will have to be evaluated twice.
</Description>
        <CreatedDate>12/02/2016</CreatedDate>
        <ClosedDate>16/02/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>8636</IssueID>
        <Title>Ambiguous assemblies Option B: Handle an additional "duplicate reference" error code in the EE</Title>
        <Description>**Problem**: the EE can't evaluate expressions when there are multiple assemblies with the same (weak) name loaded.

**Solution**: enable the existing retry logic in this particular scenario (by adding another error code to the list).

**Pro**: Conservative - only kicks in if regular evaluation fails.  Can't break anything but the C# EE.

**Con**: Only helps on retry.  As soon as there are ambiguous assemblies, every single expression will have to be evaluated twice.
</Description>
        <CreatedDate>12/02/2016</CreatedDate>
        <ClosedDate>16/02/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Controller_Commit.cs</File>
      <File>src/EditorFeatures/Core/Implementation/IntelliSense/Completion/Model.cs</File>
      <File>src/Features/Core/Portable/Diagnostics/EngineV2/DiagnosticIncrementalAnalyzer_IncrementalAnalyzer.cs</File>
      <File>src/Features/Core/Portable/SolutionCrawler/SolutionCrawlerRegistrationService.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12290</IssueID>
    <Title>Fix colorization of html prefixed by spaces in markdown files</Title>
    <Description>Issue #12289

**Bug**
Html tags prefixed by 1 to 4 spaces are not colorized properly in markdown files

**Fix**
Consume optional leading whitespace when matching html tags instead of only starting from previous match location

&lt;img width="229" alt="screen shot 2016-09-19 at 4 13 47 pm" src="https://cloud.githubusercontent.com/assets/12821956/18652037/111374ae-7e84-11e6-9688-be48a445baae.png"&gt;

closes #12289
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>26/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12289</IssueID>
        <Title>CSharpErrorLog fails due to an API change</Title>
        <Description>The CSharpErrorLog Integration Test is currently creating an instance of `Microsoft.CodeAnalysis.ErrorLog` via reflection.

However, the class was changed to an abstract class in https://github.com/dotnet/roslyn/commit/ce29dfd1bfc0299ee54a24114a798e962df6c9a7 thus breaking the test.

The test needs to be updated to support the new changes.
</Description>
        <CreatedDate>29/06/2016</CreatedDate>
        <ClosedDate>07/07/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>12289</IssueID>
        <Title>CSharpErrorLog fails due to an API change</Title>
        <Description>The CSharpErrorLog Integration Test is currently creating an instance of `Microsoft.CodeAnalysis.ErrorLog` via reflection.

However, the class was changed to an abstract class in https://github.com/dotnet/roslyn/commit/ce29dfd1bfc0299ee54a24114a798e962df6c9a7 thus breaking the test.

The test needs to be updated to support the new changes.
</Description>
        <CreatedDate>29/06/2016</CreatedDate>
        <ClosedDate>07/07/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharpTest/Workspaces/WorkspaceTests.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/MiscellaneousFilesWorkspace.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/ProjectSystem/VisualStudioWorkspaceImpl.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Workspace.cs</File>
      <File>src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>12104</IssueID>
    <Title>Fixes #12063: Enable "Open with Code" on drives but not recycle bin</Title>
    <Description>Fixes #12063.
This is a complement to #11870.
Removed the "Folder" registry keys, restored the "directory" ones and added the "Drive" ones.
</Description>
    <CreatedDate>15/09/2016</CreatedDate>
    <ClosedDate>16/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>12063</IssueID>
        <Title>Improve lambda type inference when wrong number of lambda parameters</Title>
        <Description>In this program

``` cs
using System;

class Program
{
    static void Main(string[] args)
    {
        Ma(string.Empty, (x, y) =&gt; x.ToString());
        Mb(string.Empty, (x, y) =&gt; x.ToString());
    }
    static void Ma&lt;T&gt;(T t, Action&lt;T, T, int&gt; action) { }
    static void Mb&lt;T&gt;(T t, Action&lt;T, T, int&gt; action) { }
    static void Mb() { }
}
```

The type of `x` inside the lambda should be `string` in both cases. However, currently it is `string` in the first case, but an error type in the second.
</Description>
        <CreatedDate>16/06/2016</CreatedDate>
        <ClosedDate>22/06/2016</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>11870</IssueID>
        <Title>Remove unnecessary field.</Title>
        <Description>
        </Description>
        <CreatedDate>08/06/2016</CreatedDate>
        <ClosedDate>09/06/2016</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/CSharpResources.Designer.cs</File>
      <File>src/Compilers/CSharp/Portable/Errors/ErrorCode.cs</File>
      <File>src/Compilers/CSharp/Portable/GlobalSuppressions.cs</File>
      <File>src/Compilers/CSharp/Portable/Parser/LanguageParser.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/ForEachStatementSyntax.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxFactory.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxFacts.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/SyntaxKind.cs</File>
      <File>src/Compilers/CSharp/Portable/Syntax/VariableDeclarationSyntax.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenDeconstructTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Diagnostics/DiagnosticAnalyzerTests.AllInOne.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/DeconstructionTest.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/ParsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/StatementParsingTests.cs</File>
      <File>src/EditorFeatures/CSharpTest/Diagnostics/DiagnosticAnalyzerDriver/DiagnosticAnalyzerDriverTests.cs</File>
      <File>src/Tools/Source/CompilerGeneratorTools/Source/CSharpSyntaxGenerator/Model/Node.cs</File>
      <File>src/Tools/Source/CompilerGeneratorTools/Source/CSharpSyntaxGenerator/SourceWriter.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>11987</IssueID>
    <Title>Fix Markdown Preview Code in Header Font Size</Title>
    <Description>**Bug**
Issue #1121 In Markdown preview, code blocks in headers are the wrong font size.

**Fix**
Specify that code blocks in headers should inherit their font-size, instead of brining their own.

![screen shot 2016-09-13 at 3 09 19 pm](https://cloud.githubusercontent.com/assets/12821956/18493520/d67026fc-79c5-11e6-8ed9-a58415fe2aa0.png)

Closes #1121 
</Description>
    <CreatedDate>13/09/2016</CreatedDate>
    <ClosedDate>26/09/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>1121</IssueID>
        <Title>Adjust sequence points in VB let clause</Title>
        <Description>VB compiler does not correctly place sequence points in let clause. As a result the debugger does not hit a sequence point set to let clause. Before this fix, we have the following in PDB:

```
&lt;sequencePoints&gt;
    &lt;entry offset="0x0" hidden="true" document="0"/&gt;
    &lt;entry offset="0x1" startLine="8" startColumn="25" endLine="8" endColumn="30" document="0"/&gt;
&lt;/sequencePoints&gt;
```

After having this fix, we have as in Dev12:

```
&lt;sequencePoints&gt;
    &lt;entry offset="0x0" startLine="8" startColumn="25" endLine="8" endColumn="30" document="0"/&gt;
&lt;/sequencePoints&gt;
```
</Description>
        <CreatedDate>07/03/2015</CreatedDate>
        <ClosedDate>09/03/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>1121</IssueID>
        <Title>Adjust sequence points in VB let clause</Title>
        <Description>VB compiler does not correctly place sequence points in let clause. As a result the debugger does not hit a sequence point set to let clause. Before this fix, we have the following in PDB:

```
&lt;sequencePoints&gt;
    &lt;entry offset="0x0" hidden="true" document="0"/&gt;
    &lt;entry offset="0x1" startLine="8" startColumn="25" endLine="8" endColumn="30" document="0"/&gt;
&lt;/sequencePoints&gt;
```

After having this fix, we have as in Dev12:

```
&lt;sequencePoints&gt;
    &lt;entry offset="0x0" startLine="8" startColumn="25" endLine="8" endColumn="30" document="0"/&gt;
&lt;/sequencePoints&gt;
```
</Description>
        <CreatedDate>07/03/2015</CreatedDate>
        <ClosedDate>09/03/2015</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/BoundTree/Formatting.cs</File>
      <File>src/Compilers/CSharp/Portable/FlowAnalysis/PreciseAbstractFlowPass.cs</File>
      <File>src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_LocalDeclaration.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OutVarTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>6317</IssueID>
    <Title>Support Vuejs file (fix #6290)</Title>
    <Description>fix #6290.
[Vuejs file](http://vuejs.org/guide/application.html#Single-File-Components) is like HTML.
And this related #6191 and #4700.
</Description>
    <CreatedDate>12/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>6290</IssueID>
        <Title>LocalCouldBeConst analyzer</Title>
        <Description>This change set adds an analyzer for the System C# "local could be const" rule, based on operation actions.

This analyzer required adding a RegisterOperationBlockStartAction method to AnalysisContext, which I overlooked when I added a similar method to compilation contexts.

A correction to the FieldCouldBeReadOnly analyzer comes along--assignments to fields of value types are now treated as assignments to the enclosing structure.

@mavasani @srivatsn are most likely to take an interest.
</Description>
        <CreatedDate>24/10/2015</CreatedDate>
        <ClosedDate>26/10/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>6191</IssueID>
        <Title>ibcmerge fails intermittently</Title>
        <Description>Replaced by internal bug 156325.
</Description>
        <CreatedDate>20/10/2015</CreatedDate>
        <ClosedDate>20/10/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>4700</IssueID>
        <Title>Declaring multiple variables with "As New" on a single line does not initialize them all</Title>
        <Description>declarations such as:

``` vb
Private bw1, bw2, bw3, bw4 As New BackgroundWorker()
```

only creates an instance for bw4 and not its predecessors

[@gafter: I believe this problem occurs for field declarations]

[Migrated from TFS/DevDiv 1197285]
</Description>
        <CreatedDate>20/08/2015</CreatedDate>
        <ClosedDate>20/08/2015</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Portable/BoundTree/UnboundLambda.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SignatureOnlyParameterSymbol.cs</File>
      <File>src/Compilers/CSharp/Portable/Symbols/SymbolDistinguisher.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/SymbolDisplay/SymbolDisplayTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/SymbolDistinguisherTests.cs</File>
      <File>src/Compilers/Core/Portable/Diagnostic/CommonDiagnosticComparer.cs</File>
      <File>src/Compilers/Core/Portable/Diagnostic/DiagnosticInfo.cs</File>
      <File>src/Compilers/Core/Portable/SymbolDisplay/FormattedSymbol.cs</File>
      <File>src/EditorFeatures/Test/Diagnostics/DiagnosticStateTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>4702</IssueID>
    <Title>Sash double clicks</Title>
    <Description>Start implementing #4660.

The provided code defines a new event that is fired when a “stash” is double-clicked, and two usages of it—the first one on the spitted editor frontiers, and the second one on the bottom panel border. It is easier to review this PR commit per commit.

The capture below demonstrates the feature on the spitted editor:

![vscode-resize](https://cloud.githubusercontent.com/assets/1730702/14068179/47de5f96-f47b-11e5-94c7-30ffc826a52d.gif)

I may want in implement the “sidebar optimal sizing” that originally motivated #4660, but I would like to have some guidance on the code structure:
- Is `IViewletView` the right place to implement an optional `getOptimalWidth` method? [edit: I’ve chosen `IViewlet` instead]
- What is the best way to perform the HTML elements width measurement? [edit: I’ve found `DOM.getTotalWidth` and `DOM.getRelativeLeft`]
- How do I get the current viewlet in `vs/workbench/layout.ts`? [edit: the [viewlet service](https://github.com/Microsoft/vscode/blob/84a6e40d4356f747c8c3bc841d87d4edc254f7c4/src/vs/workbench/services/viewlet/common/viewletService.ts#L24)]
- Where and how should I write some tests?

Thank you in advance for considering this contribution :-)
</Description>
    <CreatedDate>27/03/2016</CreatedDate>
    <ClosedDate>15/04/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>4660</IssueID>
        <Title>MSBuildWorkspace should add Project references correctly</Title>
        <Description>While using MsBuildWorkspace to add project references to a project.
Working on project file: "C:\source\project1\project1.csproj"
and adding project reference to: "C:\source\project1.foo\project1.foo.csproj"

the project reference vil get an incorrect relative path as: ".foo\project1.foo.csproj"
it should have been: "..\project1.foo\project1.foo.csproj"

the bug is in: roslyn/src/Workspaces/Core/Desktop/InternalUtilities/FilePathUtilities.cs

``` C#
        public static bool IsNestedPath(string basePath, string fullPath)
        {
            return fullPath.StartsWith(basePath, StringComparison.OrdinalIgnoreCase);
        }
```

Adding a backslash probably solves the bug.

``` C#
        public static bool IsNestedPath(string basePath, string fullPath)
        {
            return fullPath.StartsWith(basePath + "\", StringComparison.OrdinalIgnoreCase);
        }
```

I will happily make a repro project if needed, or a PR for the fix
</Description>
        <CreatedDate>19/08/2015</CreatedDate>
        <ClosedDate>09/10/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>4660</IssueID>
        <Title>MSBuildWorkspace should add Project references correctly</Title>
        <Description>While using MsBuildWorkspace to add project references to a project.
Working on project file: "C:\source\project1\project1.csproj"
and adding project reference to: "C:\source\project1.foo\project1.foo.csproj"

the project reference vil get an incorrect relative path as: ".foo\project1.foo.csproj"
it should have been: "..\project1.foo\project1.foo.csproj"

the bug is in: roslyn/src/Workspaces/Core/Desktop/InternalUtilities/FilePathUtilities.cs

``` C#
        public static bool IsNestedPath(string basePath, string fullPath)
        {
            return fullPath.StartsWith(basePath, StringComparison.OrdinalIgnoreCase);
        }
```

Adding a backslash probably solves the bug.

``` C#
        public static bool IsNestedPath(string basePath, string fullPath)
        {
            return fullPath.StartsWith(basePath + "\", StringComparison.OrdinalIgnoreCase);
        }
```

I will happily make a repro project if needed, or a PR for the fix
</Description>
        <CreatedDate>19/08/2015</CreatedDate>
        <ClosedDate>09/10/2015</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/EditorFeatures/CSharp/GoToImplementation/CSharpGoToImplementationService.cs</File>
      <File>src/EditorFeatures/Core/Commands/GoToDefinitionCommandArgs.cs</File>
      <File>src/EditorFeatures/Core/Commands/GoToImplementationCommandArgs.cs</File>
      <File>src/EditorFeatures/Core/EditorFeaturesResources.Designer.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Commands/PredefinedCommandHandlerNames.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/INavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/NavigableItemFactory.DeclaredSymbolNavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/NavigableItemFactory.SymbolLocationNavigableItem.cs</File>
      <File>src/EditorFeatures/Core/Extensibility/Navigation/NavigableItemFactory.cs</File>
      <File>src/EditorFeatures/Core/Host/INavigableItemsPresenter.cs</File>
      <File>src/EditorFeatures/Core/Implementation/ExtractMethod/AbstractExtractMethodCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToDefinition/AbstractGoToDefinitionService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToDefinition/GoToDefinitionCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToDefinition/GoToDefinitionHelpers.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToImplementation/AbstractGoToImplementationService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToImplementation/GoToImplementationCommandHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/GoToImplementation/IGoToImplementationService.cs</File>
      <File>src/EditorFeatures/Core/Implementation/InlineRename/CommandHandlers/RenameCommandHandler_RenameHandler.cs</File>
      <File>src/EditorFeatures/Core/Implementation/NavigateTo/NavigateToItemProvider.NavigateToItemDisplay.cs</File>
      <File>src/EditorFeatures/Test/TestExportProvider.cs</File>
      <File>src/EditorFeatures/TestUtilities/Traits.cs</File>
      <File>src/Features/Core/Portable/Notification/INotificationService.cs</File>
      <File>src/VisualStudio/Core/Def/ID.RoslynCommands.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.Execute.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/AbstractOleCommandTarget.Query.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/EditAndContinue/VsENCRebuildableProjectImpl.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/GoToDefinition/NavigableItemsPresenter.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/FindResults/LibraryManager_GoToDefinition.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/FindResults/TreeItems/AbstractTreeItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Library/FindResults/TreeItems/SourceReferenceTreeItem.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Notification/VSNotificationServiceFactory.cs</File>
      <File>src/VisualStudio/Core/Def/Implementation/Snippets/AbstractSnippetExpansionClient.cs</File>
      <File>src/VisualStudio/Core/Def/RoslynPackage.cs</File>
      <File>src/VisualStudio/Core/Impl/RoslynVisualStudioWorkspace.cs</File>
      <File>src/VisualStudio/Core/SolutionExplorerShim/AnalyzersCommandHandler.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>3971</IssueID>
    <Title>Extension status bar improvements &amp; polish</Title>
    <Description>related to #2835, #3540
</Description>
    <CreatedDate>10/03/2016</CreatedDate>
    <ClosedDate>11/03/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>2835</IssueID>
        <Title>Installing the Microsoft.CodeAnalysis.Compilers NuGet package adds references to my project</Title>
        <Description>I want to 'lock in' the version of the compiler that I'm building my project with. But when I install the `Microsoft.CodeAnalysis.Compilers` NuGet package, all the other Roslyn-related packages get chained in and added as references to my C# class library project. Can this be avoided?
</Description>
        <CreatedDate>16/05/2015</CreatedDate>
        <ClosedDate>16/05/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>3540</IssueID>
        <Title>Expose Signature Help API</Title>
        <Description>
        </Description>
        <CreatedDate>16/06/2015</CreatedDate>
        <ClosedDate>
        </ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Compilers/CSharp/Test/CommandLine/CommandLineTests.cs</File>
      <File>src/Compilers/CSharp/Test/CommandLine/TouchedFileLoggingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenImplicitlyTypeArraysTests.cs</File>
      <File>src/Compilers/CSharp/Test/Emit/PDB/PDBUsingTests.cs</File>
      <File>src/Compilers/CSharp/Test/Semantic/Semantics/OverloadResolutionTestBase.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Compilation/ReferenceManagerTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/AssemblyAndNamespaceTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/CompilationCreationTests.cs</File>
      <File>src/Compilers/CSharp/Test/Symbol/Symbols/CorLibrary/CorTypes.cs</File>
      <File>src/Compilers/CSharp/Test/Syntax/Parsing/FuzzTesting.cs</File>
      <File>src/Compilers/CSharp/Test/WinRT/CodeGen/WinRTCollectionTests.cs</File>
      <File>src/Compilers/CSharp/Test/WinRT/Metadata/WinMdDumpTest.cs</File>
      <File>src/Compilers/Core/CodeAnalysisTest/MetadataReferences/MetadataReferenceTests.cs</File>
      <File>src/Compilers/Core/CodeAnalysisTest/MetadataReferences/ModuleMetadataTests.cs</File>
      <File>src/Compilers/Core/CodeAnalysisTest/Text/EncodedStringTextTests.cs</File>
      <File>src/Compilers/Core/CodeAnalysisTest/Text/SourceTextTests.cs</File>
      <File>src/Compilers/Core/VBCSCompilerTests/CompilerServerTests.cs</File>
      <File>src/Compilers/Test/Utilities/Core2/TestReferences.cs</File>
      <File>src/Test/Utilities/TestBase.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>2702</IssueID>
    <Title>Use the List widget in the Suggest widget</Title>
    <Description>Related to #2490, #1923.

Ping @Wosi
</Description>
    <CreatedDate>04/02/2016</CreatedDate>
    <ClosedDate>08/02/2016</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>2490</IssueID>
        <Title>Add support for IVsLanguageBlock.GetCurrentBlock</Title>
        <Description>Fixes internal TFS bug 1043580.
</Description>
        <CreatedDate>04/05/2015</CreatedDate>
        <ClosedDate>05/05/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>1923</IssueID>
        <Title>EnvDTE.CodeClass.Namespace causes exception for nested classes</Title>
        <Description>See MS Connect bug opened by Patrick Smacchia:

https://connect.microsoft.com/VisualStudio/feedback/details/1238355/envdte-codetype-namespace-throws-invalidoperationexception-for-nested-type

Steps to reproduce the problem:

1) Create a VB.NET package with this command handler:

   Protected Overrides Sub Initialize()
      MyBase.Initialize()

```
  ' Add our command handlers for menu (commands must exist in the .vsct file)
  Dim mcs As OleMenuCommandService = TryCast(GetService(GetType(IMenuCommandService)), OleMenuCommandService)
  If Not mcs Is Nothing Then
     ' Create the command for the menu item.
     Dim menuCommandID As New CommandID(GuidList.guidVSPackage1CmdSet, CInt(PkgCmdIDList.cmdidMyCommand))
     Dim menuItem As New MenuCommand(New EventHandler(AddressOf MenuItemCallback), menuCommandID)
     mcs.AddCommand(menuItem)
  End If
```

   End Sub

   Private Sub MenuItemCallback(ByVal sender As Object, ByVal e As EventArgs)

```
  Dim dte As EnvDTE.DTE

  dte = CType(MyBase.GetService(GetType(EnvDTE.DTE)), EnvDTE.DTE)

  ShowCodeElements(dte.ActiveDocument.ProjectItem.FileCodeModel.CodeElements)
```

   End Sub

   Sub ShowCodeElements(codeElements As EnvDTE.CodeElements)

```
  Dim codeClass As EnvDTE.CodeClass
  Dim codeNamespace As EnvDTE.CodeNamespace

  For Each codeElement As EnvDTE.CodeElement In codeElements

     Select Case codeElement.Kind

        Case EnvDTE.vsCMElement.vsCMElementNamespace

           codeNamespace = CType(codeElement, EnvDTE.CodeNamespace)
           ShowCodeElements(codeNamespace.Members)

        Case EnvDTE.vsCMElement.vsCMElementClass

           codeClass = CType(codeElement, EnvDTE.CodeClass)

           Try
              codeNamespace = codeClass.Namespace
           Catch ex As Exception
              System.Windows.Forms.MessageBox.Show(ex.ToString())
           End Try

           ShowCodeElements(codeClass.Members)

     End Select

  Next
```

   End Sub

2) Run the package and in the second VS instance, create a C# Class Library with this code in Class1.cs:

namespace ClassLibrary1
{
    public class Class1
    {
        public class Class11
        {
        }
    }
}

3) Click the Tools &gt; My Command Name menu.

The following exception happens when retrieving the namespace of the nested Class11 class: System.InvalidOperationException: Operation is not valid due to the current state of the object
</Description>
        <CreatedDate>10/04/2015</CreatedDate>
        <ClosedDate>14/04/2015</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/VisualStudio/CSharp/Test/F1Help/F1HelpTests.cs</File>
    </Files>
  </PullRequest>
  <PullRequest>
    <IssueID>1676</IssueID>
    <Title>Isidorn/conditional breakpoints</Title>
    <Description>Adds conditional breakpoints support to vscode

fixes #1582, #1671 
</Description>
    <CreatedDate>28/12/2015</CreatedDate>
    <ClosedDate>28/12/2015</ClosedDate>
    <Issues>
      <Issue>
        <IssueID>1582</IssueID>
        <Title>Change /errorlog output for issues with no locations (command line compilation)</Title>
        <Description>Currently, for compilation diagnostics with Location.None, we emit a dummy location in error log file with uri = None. Design decision was to instead emit no locations for such issues.
</Description>
        <CreatedDate>25/03/2015</CreatedDate>
        <ClosedDate>01/04/2015</ClosedDate>
      </Issue>
      <Issue>
        <IssueID>1671</IssueID>
        <Title>[Proposal]Allow event forwarding</Title>
        <Description>For code

```
public class MyClass
{
    public event EventHandler EventOccurred {
        add {
            AnotherClassInstance.EventOccurred += value;
        }
        remove {
            AnotherClassInstance.EventOccurred -= value;
        }
    }

    public event EventHandler&lt;SomeEventArgs&gt; EventOccurred2 {
        add {
            AnotherClassInstance.EventOccurred2 += value;
        }
        remove {
            AnotherClassInstance.EventOccurred2 -= value;
        }
    }

    public AnotherClass AnotherClassInstance { get; }
}
```

I'd like to write something like

```
public class MyClass
{
    public event EventHandler EventOccurred =&gt; AnotherClassInstance.EventOccurred;

    public event EventHandler&lt;SomeEventArgs&gt; EventOccurred2 =&gt; AnotherClassInstance.EventOccurred2;

    public AnotherClass AnotherClassInstance { get; }
}
```

Or If this approach is wrong, then explain me why?
</Description>
        <CreatedDate>30/03/2015</CreatedDate>
        <ClosedDate>20/03/2017</ClosedDate>
      </Issue>
    </Issues>
    <Files>
      <File>src/Workspaces/CSharp/Portable/CodeGeneration/CSharpSyntaxGenerator.cs</File>
      <File>src/Workspaces/CSharpTest/CodeGeneration/SyntaxGeneratorTests.cs</File>
    </Files>
  </PullRequest>
</PullRequests>