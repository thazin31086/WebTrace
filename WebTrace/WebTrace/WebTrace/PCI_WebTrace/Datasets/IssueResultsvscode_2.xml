<Issues>
  <Issue>
    <IssueID>40942</IssueID>
    <Title>Need a fast way to del chars in integrated terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issue to prefill these. --&gt;
- VSCode Version: Dec 2017
- OS Version: Windows 10 (Latest stable)
- Integrated Terminal: Powershell (With no user profile)

Steps to Reproduce:

1. Open integrated terminal
2. Type something
3. I suddenly want to remove these commands.
4. Then I try Ctrl+C (This works in Powershell)
5. But VSCode just adds a ^C after the command, doesn't start a new line.
6. Then I try Ctrl+[Backspace] (Also works in Powershell)
6. But VSCode just adds a ^W after the command, doesn't behave like Powershell (remove a block.)
7. So I have to long-press on [Backspace]
/** 8. Then I found I can Ctrl+A then [Backspace] */

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
Yes.</Description>
    <CreatedDate>29/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40935</IssueID>
    <Title>file position wrong in my workspace</Title>
    <Description>Hi there,
file position wrong when i open floder routes, the floder is deep in my workspace.
![image](https://user-images.githubusercontent.com/19400528/34434439-1df09506-ecc1-11e7-897d-091a40bdc4de.png)

![image](https://user-images.githubusercontent.com/19400528/34434617-3a68fc18-ecc2-11e7-8a78-0aa1859c9e1e.png)


- VSCode Version: Code 1.19.1 (0759f77bb8d86658bc935a10a64f6182c5a1eeba, 2017-12-19T09:35:14.671Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
swagger-viewer|Arj|1.4.0
vscode-docker|Pet|0.0.22
vscode-svgviewer|css|1.4.3
vscode-dash|dee|1.7.1
phpunit|ema|2.1.1
json-tools|eri|1.0.2
php-debug|fel|1.12.1
php-intellisense|fel|1.5.2
php-pack|fel|1.0.1
swagger-doc-viewer|mim|1.0.4
mssql|ms-|1.2.1
php-docblocker|nei|1.3.2
partial-diff|ryu|0.3.3



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40908</IssueID>
    <Title>Search and Replace in broken in files using only CR as line-ending</Title>
    <Description>- VSCode Version: 1.19.1
- OS Version: Windows 10 (1709)

It appears that there is a bug with the search and replace functionality. It is encountered when editing multiple XML files. I have recorded a screen capture to illustrate the issue.

https://youtu.be/ehuqer244S4

Content of one XML file:

```xml
&lt;assets&gt;
	&lt;output mode="c" filename="../../../assetlist/_generated/I_NOTE_HELP000/header.h" rcname="../../../assetlist/_generated/I_NOTE_HELP000/assetR" fileList="g_fileNames" pathprefix="data/"/&gt;
	&lt;asset source="%ED8_PSV%/data/images/note/help/note_help000foo" symbol="I_NOTE_HELP000"/&gt;
&lt;/assets&gt;

```

Steps to Reproduce:

1. Open a folder containing a bunch of XML files.
2. *Search and replace* a string as shown in the video.
3. Observe the changes done to the XML files.

Reproduces without extensions: Yes</Description>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40903</IssueID>
    <Title>Reverting Emmet's Remove Tag command results in autoclosing opening tag</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issue to prefill these. --&gt;
- VSCode Version: 1.19.1
- OS Version: Ubuntu 17.10

If `html.autoClosingTags` is set to `true`, reverting `Emmet: Remove Tag` command (e.g. with &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Z&lt;/kbd&gt;) results in duplicate closing tag.

Steps to Reproduce:

1. Make sure that `"html.autoClosingTags": true` in Settings.
2. Write some HTML tags:
```html
&lt;div&gt;
  &lt;span&gt;&lt;/span&gt;
&lt;/div&gt;
```
2. Move cursor to the opening (or closing) `div` tag.
3. Run `Emmet: Remove Tag` command. Tag is properly removed.
4. Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Z&lt;/kbd&gt;.
5. Stare at:
```html
&lt;div&gt;&lt;/div&gt;
  &lt;span&gt;&lt;/span&gt;
&lt;/div&gt;
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes, as Emmet is a built-in extension.
Not reproduced in Sublime Text with the same Emmet command, so it is more related to VSCode than to Emmet I believe.

Workaround: set `"html.autoClosingTags": false` in Settings.
</Description>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40896</IssueID>
    <Title>Latest upgrade to Version 1.19.1 (1.19.1) breaks Jest Test Debugging Capabilities</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issue to prefill these. --&gt;
- VSCode Version: Version 1.19.1 (1.19.1)
- OS Version: OS X El Capitan 10.11.6 (15G1421)

Hi there, I suspect the newest update might be breaking the Jest debugging. Here's my config taken straight from [Jest's website](https://facebook.github.io/jest/docs/en/troubleshooting.html#debugging-in-vs-code): .

 _Note: I'm using the CRA setup_


```
{
      "name": "Debug CRA Tests",
      "type": "node",
      "request": "launch",
      "runtimeExecutable": "${workspaceRoot}/client/node_modules/.bin/react-scripts",
      "runtimeArgs": ["--inspect-brk", "test"],
      "args": ["--runInBand", "--no-cache", "--env=jsdom"],
      "cwd": "${workspaceRoot}/client",
      "protocol": "inspector",
      "console": "integratedTerminal",
      "internalConsoleOptions": "neverOpen"
}
```

Steps to Reproduce:

When I try to start debugging (which I can confirm was working with previous versions) I now get the error:
`Error: Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:3269)`.

Could you please point me to what I'm missing? 
   💭
🤔 
</Description>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40886</IssueID>
    <Title>High memory usage of gpu-process.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issue to prefill these. --&gt;
- VSCode Version: 1.19.1
- OS Version: Windows 10 1709
- Screen Resolution: 3840 * 2160

Steps to Reproduce:

1. Open any folder and open the integrated terminal
2. Maximize the panel size of terminal
3. Type some commands until there is a scrollbar on the right
4. Try to use the mouse wheel to scroll the terminal many times

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Reproduces with powershell: Yes

![high-memory-usage](https://user-images.githubusercontent.com/5550931/34401612-4e11fd82-ebd7-11e7-87ca-f538fe5ce1d8.jpg)

![status](https://user-images.githubusercontent.com/5550931/34401627-5f3ba388-ebd7-11e7-8cc5-cdc5674404c5.jpg)

</Description>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40829</IssueID>
    <Title>Open terminal in separate window (support for dual screen)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.1
- OS Version: Windows 8.1

Steps to Reproduce:

1. Open VSCode
2. Open Terminal
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40823</IssueID>
    <Title>Integrated Terminal Font Abnormalities</Title>
    <Description>The integrated terminal is inserting abnormal letter spacing.  This seems to be a recurrence of an issue that appeared around the October time frame and was since corrected -- now reoccurring. The issue is present on both 'cmd' and 'powershell' terminals. Issue persists through save, shut down, restart and clean reboot.  Was successfully reproduced with over 20 different fonts.

**Use Factors**
- VSCode Version: v.1.19.1 [stable]
- OS Version: Windows 10 v16299.125[Home]
- Extensions (listed below)

**Steps to Reproduce:**
1.  Active use of Integrated Terminal following upgrade to 1.19 (.18?)
2.  Menu &gt; File &gt; Preferences &gt; Settings &gt; User Settings &gt; alter font; (save)
```
"terminal.integrated.fontFamily": "Advent Pro",
```
or
``` 
"terminal.integrated.fontFamily": "Advent Pro, sans-serif",
```



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
**Reproduces without extensions: Yes**


**SS#1 -&gt; Terminal example of "Advent Pro font"**
![image](https://user-images.githubusercontent.com/28637298/34350368-70705ca6-e9e4-11e7-9c56-375a54a3668d.png)



**SS#2 -&gt; Editor example of "Advent Pro font"** [Font appears correctly spaced]
![image](https://user-images.githubusercontent.com/28637298/34350334-46106c8a-e9e4-11e7-9b01-467b2aa88b75.png)


- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
Aurelia|beh|1.2.2
jshintrc-generator|ben|1.0.0
npm-intellisense|chr|1.3.0
vscode-markdownlint|Dav|0.12.0
jshint|dba|0.10.15
vscode-eslint|dba|1.4.3
vscode-instant-markdown|dba|1.3.0
xml|Dot|1.9.2
gitlens|eam|7.1.0
vscode-html-css|ecm|0.1.8
vscode-npm-script|eg2|0.3.3
vsc-material-theme|Equ|1.1.2
git-project-manager|fel|1.4.0
vscode-npm|fkn|3.3.0
terminal|for|0.0.10
pug2html|gin|0.0.5
githd|hui|1.0.0
Angular2|joh|2.11.2
functional-js-snippets|kol|1.0.2
vscode-jade-snippets|mrm|1.0.1
vscode-puglint|mrm|2.3.0
mssql|ms-|1.3.0
debugger-for-chrome|msj|4.0.0
live-server-preview|neg|0.0.4
material-icon-theme|PKi|3.2.0
highlight-matching-tag|vin|0.4.4
gitblame|wad|2.2.0
JavaScriptSnippets|xab|1.5.0
html-css-class-completion|Zig|1.14.0

(1 theme extensions excluded)


---

</Description>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40817</IssueID>
    <Title>Terminal interface display bug.</Title>
    <Description>- VSCode Version: Code 1.19.1 (0759f77bb8d86658bc935a10a64f6182c5a1eeba, 2017-12-19T09:35:14.671Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.12.0
EditorConfig|Edi|0.11.1
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.22
ReactSnippetsStandard|Tim|1.1.0
quokka-vscode|Wal|1.0.85
alignment|ann|0.3.0
vscode-exports-autocomplete|cap|0.5.4
vscode-wxml|cod|0.1.9
riot-tag|cri|0.1.7
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.4.3
flow-for-vscode|flo|0.7.3
code-runner|for|0.8.6
vue|jcb|0.1.5
code-beautifier|mic|1.7.2
vscode-autoprefixer|mrm|2.1.2
vscode-less|mrm|0.6.3
python|ms-|0.9.1
azure-account|ms-|0.2.2
github-issues-prs|ms-|0.9.0
node-debug2|ms-|1.19.2
vscode-wechat|qin|0.0.6
vscode-icons|rob|7.19.0
preview-vscode|sea|1.4.2
vscode-react-native|vsm|0.5.7
html-less-class-completion|wan|0.0.6
react-playground-vscode|wmi|0.0.11



---

Steps to Reproduce:

1.Open the terminal with a project containing the Chinese name
2.Drag and drop to another display
3.press Enter.(You will found the  chinese become very small.)
4.when enter cmd. Some font size also become very small. sometimes cannot read clear the texts.
![image](https://user-images.githubusercontent.com/10445790/34345758-56c9849c-ea2c-11e7-86fb-a2533b39cb26.png)

![image](https://user-images.githubusercontent.com/10445790/34345354-40dee2a6-ea29-11e7-9520-c7c2cc9690be.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40816</IssueID>
    <Title>Scrolling in Surface Laptop makes VSCode to get stuck for a few seconds before scrolling action starts.</Title>
    <Description>I have notice that VSCode doesn't respond nice to scrolling file content when using the Surface Laptop trackpad. Is this a known  issue? scrolling with a touch gesture is even more responsive. other applications do not show this lagging response when using the trackpad.

- VSCode Version: Code 1.19.1 (0759f77bb8d86658bc935a10a64f6182c5a1eeba, 2017-12-19T09:46:23.884Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
azuretoolsforvscode|bra|1.3.0
azure-functions-tools|joh|0.3.1
vscode-azureappservice|ms-|0.5.0
vscode-azurefunctions|ms-|0.4.0
mssql|ms-|1.3.0
azure-account|ms-|0.2.2
azurecli|ms-|0.3.0
cpptools|ms-|0.14.5
csharp|ms-|1.13.1
vscode-azureextensionpack|ms-|0.0.8
team|ms-|1.122.0
azurerm-vscode-tools|msa|0.3.7
vscode-docker|Pet|0.0.22
usql-vscode-ext|usq|0.2.8
application-insights|Vis|0.4.1
azure-iot-edge|vsc|0.1.3
azure-iot-toolkit|vsc|0.5.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40814</IssueID>
    <Title>[Debug] Cannot launch multiple programs in integrated terminal</Title>
    <Description>- VSCode Version: 1.19.1
- OS Version: Windows 10

**Steps to Reproduce**:
1. Install [java-debug extension](https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug)
2. Use vscode to open java project, add two launch configurations on `launch.json`, and both configurations' console setting is `integratedTerminal`.
3. Launch the first one, and you see `Java Debug Console` channel added to integrated terminal.
4. Try to launch the second one, timeout. No new terminal channel is created. 

See the gif below. The two launchInTerminal commands are sent to the same shell terminal, but the first debug session is still running so that the second one is pending. You see if i stop the first one, the second the runInTerminal commands shows up immediately at the same terminal.

![cannotlaunchinterminal](https://user-images.githubusercontent.com/14052197/34344968-4165e5f6-ea26-11e7-932c-c5df693aecb7.gif)

**Expected behavior**:

- Users should be able to launch multiple programs in integrated terminal
- Each program should have its own terminal created
</Description>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40809</IssueID>
    <Title>Install code in PATH does not persist restart or relaunch</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: macOS 10.13.2

Steps to Reproduce:

1. Install `code` using the command palette 
2. Restart VSCode or Terminal

It is basically the same as issue #17475, the issue was closed but the problem still exists.</Description>
    <CreatedDate>25/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40803</IssueID>
    <Title>UI's font size customization</Title>
    <Description>Please add new feature for customizing font-size of some UI's blocks, eg. tab, side bar, status bar... I really don't wanna change the zoom level.

Thank you!</Description>
    <CreatedDate>25/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40798</IssueID>
    <Title>Copying terminal can throw isWrapped error</Title>
    <Description>- VSCode Version: Code - Insiders 1.20.0-insider (509108f986e813e87949beb03e84ba476dc098a7, 2017-12-21T12:31:52.865Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-svgviewer|css|1.4.3
EditorConfig|Edi|0.11.1
git-project-manager|fel|1.4.0
vscode-scss|mrm|0.6.2
cpptools|ms-|0.14.5
seti-icons|qin|0.1.3
vscode-header-source|ryz|1.1.0
ayu|tea|0.11.1
lorem-ipsum|Tyr|1.1.0
shell-launcher|Tyr|0.1.6

(4 theme extensions excluded)


---

Steps to Reproduce:

1. Open terminal
2. `dir`
3. Copy by dragging from the terminal to the status bar
4. Ctrl+c

Note this only happens with https://github.com/Microsoft/vscode/pull/37290 applied</Description>
    <CreatedDate>25/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40795</IssueID>
    <Title>Retrieve output from a programmatically created Terminal</Title>
    <Description>- VSCode Version: 1.19
- OS Version: Windows 10, version 1709

Steps to Reproduce:

1. create a Terminal, using the createTerminal function,
2. only SendText function is available

This feature would be useful for creating utilities/extensions that use terminals, i.d. command prompts.

Reproduces without extensions: Yes.</Description>
    <CreatedDate>25/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40782</IssueID>
    <Title>Add Rename to filename tab context menu</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.19.1 (1.19.1)
- OS Version: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3302.0 Safari/537.36

It would be really helpful to add Rename to the tab content menu.  You want this behavior because -

1. You don't want to disturb the left stuff like search.
2. Navigating on the left requires multiple clicks

A keyboard shortcut would even be better!

![image](https://user-images.githubusercontent.com/2301847/34327207-d2a4a568-e87b-11e7-98e1-48cdefdad6c6.png)

![image](https://user-images.githubusercontent.com/2301847/34327214-02c1e81e-e87c-11e7-9e8c-24a4746181b3.png)

![image](https://user-images.githubusercontent.com/2301847/34327233-404e9240-e87c-11e7-9346-baefbd79b124.png)
</Description>
    <CreatedDate>24/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40778</IssueID>
    <Title>[Explorer] [BUG] Drag move and drop folder don't work.</Title>
    <Description>- VSCode Version: Code 1.19.1 (0759f77bb8d86658bc935a10a64f6182c5a1eeba, 2017-12-19T09:46:23.884Z)
- OS Version: Windows_NT x64 6.3.9600
Windows 8.1 &amp; Linux Ubuntu 16.04 Gnome 3
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
cpptools|ms-|0.14.5



---

Steps to Reproduce:

1. Open few folders in VSCode erplorer [MR], drag one folder and move before/behind another folder, like you want sort folders (to arrange).

Result: You can't

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40770</IssueID>
    <Title>TAB SCROLL BUTTON</Title>
    <Description>Hi,

I  have some requests 
1.please provide a tab scroll button so we can scroll through tabs with ease as it is in Sublime. 
2. For PHP  not all the functions are showing links as in sublime. It is best for JS development but not that great for PHP.
Thank You</Description>
    <CreatedDate>24/12/2017</CreatedDate>
    <ClosedDate>25/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40752</IssueID>
    <Title>Shell Command: Install 'code' command in PATH points to the wrong path intermittently because the GUID changes</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.19.1 (1.19.1)
- OS Version: MacOS Sierra 10.12.6

Steps to Reproduce:

1. Download VS Code.
2. Launch VS Code.
3. Open the Command Palette (⇧⌘P) and type 'shell command' to find the Shell Command: Install 'code' command in PATH command.
4. Open terminal and verify path -

```
🐳 $ ls -la /usr/local/bin/code
lrwxr-xr-x  1 junger  admin  167 Dec 23 05:54 /usr/local/bin/code -&gt; /private/var/folders/xf/vnnm636d0k92w3sc7lm95w040000gn/T/AppTranslocation/68134B5E-0EF8-4B3D-BAA9-EDEF3AC767CC/d/Visual Studio Code.app/Contents/Resources/app/bin/code
/usr/local/bin
```

5. Do something else but I don't know what.  What generates a new GUID?

6. Try to execute `code` from the command line and it says 
```
🐨 $ code
-bash: /usr/local/bin/code: No such file or directory
```

7. Open VS Code from spotlight.

8. Open the Command Palette (⇧⌘P) and type 'shell command' to find the Shell Command: Install 'code' command in PATH command.

9. Open terminal and verify path -

```
🐰 $ ls -la /usr/local/bin/code
lrwxr-xr-x  1 junger  admin  167 Dec 23 05:54 /usr/local/bin/code -&gt; /private/var/folders/xf/vnnm636d0k92w3sc7lm95w040000gn/T/AppTranslocation/68134B5E-0EF8-4B3D-BAA9-EDEF3AC767CC/d/Visual Studio Code.app/Contents/Resources/app/bin/code
/usr/local/bin
```

🤔 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>23/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40749</IssueID>
    <Title>Terminal does not display underscores</Title>
    <Description>The actual file name is `test_disk_space.sh` . Makes it difficult to work with Python using the terminal as most people use `snake_case`...
![bug image](http://i.imgur.com/WnYvECN.png)

- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T09:56:48.842Z)
- OS Version: Linux x64 4.13.5-100.fc25.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.22
gitlab-ci-validator|cst|1.0.0
gitlab-ci-templates|jgs|0.3.0
python|ms-|0.9.1
vscode-todo-highlight|way|0.5.11</Description>
    <CreatedDate>23/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40740</IssueID>
    <Title>is outputChannel support color?</Title>
    <Description>console.log(data) can support color
but outputChannel can't ?

![image](https://user-images.githubusercontent.com/4559753/34316452-f05189b0-e7d0-11e7-8952-38c368454f14.png)
</Description>
    <CreatedDate>23/12/2017</CreatedDate>
    <ClosedDate>23/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40718</IssueID>
    <Title>Cmd + click underlines a single word instead of the entire filename when it has dashes or kebab case on an import</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

Cmd + click underlines a single word instead of the entire filename when it has dashes or kebab case on an import

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.19.1 (1.19.1)
- OS Version: MacOS Sierra 10.12.6

Steps to Reproduce:

![dec-22-2017 04-48-31](https://user-images.githubusercontent.com/2301847/34297117-7061d6c2-e6d3-11e7-9c5d-7b33e7ba30e4.gif)

WebStorm comparison:
![dec-22-2017 04-53-38](https://user-images.githubusercontent.com/2301847/34297227-1b383b72-e6d4-11e7-88d8-1d80f33cebd3.gif)

1. Create a JS file with an import to a file with a filename being kebab case or having dashes
2. Cmd+Click and notice the underline

EXPECTING: underlines entire filename
ACTUAL: underlines single word

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>22/12/2017</CreatedDate>
    <ClosedDate>22/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40683</IssueID>
    <Title>Integrated terminal stopping in the middle of program execution</Title>
    <Description>- VSCode Version: Code 1.19.1 (0759f77bb8d86658bc935a10a64f6182c5a1eeba, 2017-12-19T09:46:23.884Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.12.0
vscode-great-icons|emm|2.1.22
easy-icons|jam|0.3.1
python|ms-|0.9.1
cpptools|ms-|0.14.5
sublime-keybindings|ms-|3.0.3
java|red|0.16.0
dot|Ste|0.0.1
vscode-java-debug|vsc|0.5.0
vscode-java-pack|vsc|0.2.0



---

Steps to Reproduce:

`int main()`
`{`
`for(int i = 0;i &lt; 100;i++)`
`cout &lt;&lt; "hello world " &lt;&lt; i &lt;&lt; endl;`
`}`
1.consider the above program, running it in the integrated terminal doesn't print upto 99(hello world 99). It stops randomly in the middle. (stops at 65,85.. and even 2)
2.I tried with three different terminals (command prompt, git Bash, developer command prompt for visual studio). The same happens for all of them.
3. The above three terminals work perfectly file externally.
I searched everywhere in the internet but could find similar result.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40661</IssueID>
    <Title>Search results in tree structure</Title>
    <Description>When i search a phrase via search bar, All files that contains the phrase appears but all in the same level.I think its maybe more useful if the files appears as tree structure by its parent folders.

- VSCode Version:  1.19.1
- OS Version: Windows 10
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40644</IssueID>
    <Title>Feature Request: planned support for Q#?</Title>
    <Description>Microsoft recently released their [Quantum Development Kit](https://marketplace.visualstudio.com/items?itemName=quantum.DevKit), which looks amazing but is unfortunately only available for VS / Windows.

Are there plans to release a VS Code compatible version of it? I would love to see it.</Description>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40619</IssueID>
    <Title>code -reuse-window failed in ArchLinux</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0
- OS Version: ArchLinux

Steps to Reproduce:

1. Open a vscode window with `code .`.
2. Try to open a vscode tab with `code -reuse-window .`

Then you will see:
```
[3326:1221/133749.760934:ERROR:browser_main_loop.cc(257)] GTK theme error: Unable to locate theme engine in module_path: "adwaita",
[3326:1221/133749.767400:ERROR:browser_main_loop.cc(257)] GTK theme error: Unable to locate theme engine in module_path: "adwaita",

Version:          Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T09:56:48.842Z)
OS Version:       Linux x64 4.14.7-1-ARCH)
CPUs:             Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz (4 x 2900)
Memory (System):  7.57GB (4.01GB free)
Load (avg):       5, 4, 2
VM:               0%
Screen Reader:    no
CPU %   Mem MB  Process
    5      109  code main
    0       23     zygote
   11      225       window (Welcome - Desktop - Visual Studio Code)
   24      248         watcherService
    2      101         extensionHost
    0       47         terminal
    0        0           /usr/bin/fish
    1      109       shared-process
    1       70     gpu-process

Workspace Stats:
|  Window (Welcome - Desktop - Visual Studio Code)
|    Folder (Desktop): more than 20004 files
|      File types: html(11866) png(1061) py(694) json(318) rs(219) rlib(151)
|                  ipynb(104) md(101) cc(98) jpeg(89)
|      Conf files: makefile(2) package.json(1) webpack.config.js(1)

```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40606</IssueID>
    <Title>Regression: Search with regular expressions is broken.</Title>
    <Description>- VSCode Version: 1.19.1
- OS Version: Debian Testing / Ubuntu 16.04

Steps to Reproduce:

1. Create a file with the following text in it:

// Copyright 2017 MyProject
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

2. Go to the Search tab, enable regex search, and type:
// Copyright 2017[\s\S]*the License\.

---&gt;&gt; vscode doesn't find anything.
---&gt;&gt; It should find the entire text above.

Reproduces without extensions: Yes.</Description>
    <CreatedDate>20/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40565</IssueID>
    <Title>Multi-root: Search for file names with same name can't include "project name" in search terms</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383)
- OS Version: Darwin x64 17.2.0

Steps to Reproduce:

1. Create a multi-root workspace with multiple projects that has a file name with the same name.
2. Press Cmd-P (on Mac) to search for a file:

&lt;img width="891" alt="image" src="https://user-images.githubusercontent.com/630613/34200946-9e20db0c-e57b-11e7-8ce9-b33a14370342.png"&gt;

It _works_, but what if I want to be able to search for a file in a particular project?

&lt;img width="866" alt="image" src="https://user-images.githubusercontent.com/630613/34200975-aef42fba-e57b-11e7-85c9-a6ebd5f4cfa2.png"&gt;

IMHO, the search function should include the "project name" as part of the searchable tokens somehow, so that you can find files _in a particular project_ if you happen to know its name.

(This is more of an annoyance than a huge problem. I just started to use multi-root workspaces the other day, a great feature - thanks a lot for implementing it! 🍰)</Description>
    <CreatedDate>20/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40562</IssueID>
    <Title>SCM icon lost when unfocuse</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19
- OS Version: Ubuntu 16.04
![tim 20171220161432](https://user-images.githubusercontent.com/6998071/34199528-080886be-e5a9-11e7-99a1-ad7761876d5f.png)

In the morning, everything is OK, but now I open vscode and can't find SCM icon.
I try View&gt;SCM, it appear.
But when I focus on other plane, it disappear again.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40542</IssueID>
    <Title>Integrated terminal display malfunction</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: OS X El Capitan 10.11.6
- Machine: Mac Book Pro (early 2015, not the one with only USB-C)
- What I am using: zsh with Oh-My-Zsh (latest)

When disconnecting from a display integrated terminal becomes blurry and when trying to input or resizing the terminal, display becomes raw un-organized UTF-8 characters (with the wrong font size)
When typing A (U+0041) it displays z(U+007A)
typing z (U+007A) gives us å(U+005E)
typing x (U+0078) gives us á(U+00E1)
(checked and there are no apparent correlations bitwise or spanwise)

Steps to Reproduce:

1. Connect mac to display (HDMI cable) and close the laptop to only use the attached display
2. Use VSCode a bit
3. Disconnect the cable and open up your laptop -&gt; the terminal can't display correctly :(

Way to make it work again: open a new tab and close your old one.

![image](https://user-images.githubusercontent.com/20456444/34187701-b15c60d6-e500-11e7-983e-f12941f84f8f.png)

![image](https://user-images.githubusercontent.com/20456444/34187750-f1177f30-e500-11e7-9732-4f9a032d5214.png)

![image](https://user-images.githubusercontent.com/20456444/34187713-c0be7122-e500-11e7-87e8-f350f7243f2e.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>20/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40523</IssueID>
    <Title>[Feature Request] Improve search usability by merging the global and local search widgets</Title>
    <Description>Currently there are two separate search widgets, one for global search in the activity bar on the left, and one for local search inside the file editor. Each search comes with separately colored results, a separate set of keyboard shortcuts to navigate the results, etc. Both searches can be active at the same time showing mixed search results within the same file. This is confusing and cumbersome to use for most search scenarios.

To improve usability I propose to merge the two search widgets (at least as a configurable option) so there will only be a single search widget in the activity bar, with single set of search results, single set of navigation keys, etc. Just add a search scope selector (`all files` | `current folder` | `current file`), that can be used to quickly select over which file(s) the search should be performed. Consequently the local search widget inside the editor will no longer be needed and can be removed from view (solving also the overlap issue it creates with the top of the edited file).
</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40517</IssueID>
    <Title>Ability to name individual terminal sessions</Title>
    <Description>Feature request

I would like to be able to name individual terminal sessions, I sometimes have as many as 4 terminals running in the same workspace doing various things and being able to give them names would make it easier to remember what each is doing so i can navigate between them better.

Right now they all say `#: bash` which is cool to tell me which type of CLI I'm using but, for me at least, they are always going to be bash. It would be cool to see `#: bash (runserver)`, `#: bash (cronjobs)`, `#: bash (unittests)`, etc... some way to at a glance know what each is doing.

OS: Windows 10
VSCode: 1.20.0-insider</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40510</IssueID>
    <Title>Search does not respect search.exclude</Title>
    <Description>1. Insiders, mac, open vscode repository
2. Search for something, notice that the .js files show up as result even though we have `search.exclude` configued in workspace settings to not include these

Please note that I have no user settings. And that this works properly in vscode stable on the same vscode workspace.
Assigning to december since it looks like a regression.</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40507</IssueID>
    <Title>Support video in markdown preview</Title>
    <Description>- VSCode Version: 1.19.0

It would be nice if the markdown preview supported some kind of proper video format, so extension authors don't have to resort to massive GIFs. I would suggest that the simplest way is to use the same syntax as images, i.e. `![alt text](my_video.mp4)` and convert it to a `&lt;video&gt;` if the file name ends with a supported video type (I guess just `.mp4` and `.webm`). I found a (long) discussion about the syntax [here](https://talk.commonmark.org/t/embedded-audio-and-video/441/97), with no conclusion.

Alternatively, the `&lt;video&gt;` tag could be whitelisted, like `&lt;b&gt;` and `&lt;img&gt;` already are. That might be easier and cleaner.</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40492</IssueID>
    <Title>Output window dropdown renders buggily</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19
- OS Version: Windows, although I think it repros on Linux/Mac too.

Steps to Reproduce:

1. Install the C/C++ extension, which during installation creates a C/C++ pane in the output window. This issue repros without this step, but it's random or something.
2. Select the dropdown box in the Output pane.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No

Bug: The dropdown box renders buggily (the exact nature of the buggy rendering can change, i.e. sometimes it renders at the wrong location). It render correctly the 2nd time the dropdown is expanded.

![image](https://user-images.githubusercontent.com/19859882/34146156-b25cecca-e44d-11e7-896d-b04651c9e9d3.png)

</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40491</IssueID>
    <Title>Dependencies are missing in apt repository when using X11 forwarding</Title>
    <Description>There seem to be missing dependencies when installting VSCode on Ubuntu 16.04 in a **vagrant box with X11 forwarding**.

- VSCode Version: 1.19.0 816be6780ca8bd0ab80314e11478c48c70d09383 x64
- OS Version: Ubuntu 16.04 Xenial Xerus

Steps to Reproduce:

1. Start up vagrant box

```bash
vagrant up --provider virtualbox --provision
vagrant ssh -- -Y
```

3. [Run installation script from documentation](https://code.visualstudio.com/docs/setup/linux#_debian-and-ubuntu-based-distributions)
```bash
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg
sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" &gt; /etc/apt/sources.list.d/vscode.list'
```
3. Install vscode

```bash
sudo apt-get update
sudo apt-get install code
```

4. Run VScode (error)

```bash
/usr/share/code/bin/../code: error while loading shared libraries: libgtk-x11-2.0.so.0: cannot open shared object file: No such file or directory
```

After some investigation, I found out these packages are missing in order to work:

- libgtk-x11-2.0
- libxss1
- libasound2
</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40490</IssueID>
    <Title>扩展宿主意外终止</Title>
    <Description>
![image](https://user-images.githubusercontent.com/6177365/34145620-ddd7b586-e4d1-11e7-98ac-6b4be850e189.png)


![image](https://user-images.githubusercontent.com/6177365/34145645-f3fd7cce-e4d1-11e7-89e5-7fc868bb5fca.png)



- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
go-builder-help|ans|2.1.2
tslint|eg2|1.0.24
phpunit|ema|2.1.1
php-debug|fel|1.12.1
php-intellisense|fel|2.1.0
php-pack|fel|1.0.1
vstortoise|flo|1.1.1
beautify|Hoo|1.1.1
Go|luk|0.6.69
Kotlin|mat|1.3.0
python|ms-|0.9.0
csharp|ms-|1.13.1
PowerShell|ms-|1.5.1
debugger-for-chrome|msj|4.0.0
vetur|oct|0.11.5
typescript-hero|rbb|1.8.0
vscode-icons|rob|7.19.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40486</IssueID>
    <Title> Uncaught TypeError: Cannot read property 'isWrapped' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;fcaa715c-3a96-f082-bab2-3229ac8462ec&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.19.0&lt;br /&gt;-  d6fbdcf19716910b26ea81efc95724f2fabe5aa6&lt;br /&gt;-  34c44f872c177d6f9439706418f8fe49bf125d08&lt;br /&gt;-  adcde8ddeb37f7a5881494707b13353e3f560097&lt;br /&gt;-  d8989c95964ce06c64ffebc2fb400a0327bd447d&lt;br /&gt;-  0fbdfff167653b233231259ceb3109f0931887ef&lt;br /&gt;-  6e90f8995da4bd999e8983b8e480a34045c1dfcf&lt;br /&gt;-  3c470706ded48fc75c05f86bc4f9c7b0f4d6c708&lt;br /&gt;-  3a7d517f65212de615f469587c2ace53275ce96e&lt;br /&gt;-  3ac890f6ed9b5a7ff9bfd222fe59d1bec9d3ddf7&lt;br /&gt;-  89b158e11cb1c3fe94a3876222478ed2d0549fc8&lt;br /&gt;-  951f5a20fc820e32a65ca05bb87af86f65027470&lt;br /&gt;-  73830a36872aa1c168c085dad8cc6e2e1a05ff45&lt;br /&gt;-  d88e71355feeb2b0deb02c021d33cb968531726e&lt;br /&gt;-  91a2020698b5220e50f60682724927a810608356&lt;br /&gt;-  c8c6b13528c03986b8dad654cb1d3e796e8dbe97&lt;br /&gt;-  8a12b294de610aab61c32c02c7c148d981cf07e4&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'isWrapped' of undefined&lt;br /&gt;    at SelectionManager.get [as selectionText] (\node_modules\xterm\lib\SelectionManager.js:106:31) &lt;no sourcemaps&gt;&lt;br /&gt;    at Object.rightClickHandler (\node_modules\xterm\lib\handlers\Clipboard.js:64:38) &lt;no sourcemaps&gt;&lt;br /&gt;    at HTMLDivElement.&lt;anonymous&gt; (\node_modules\xterm\lib\Terminal.js:270:29) &lt;no sourcemaps&gt;&lt;br /&gt;</Description>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40455</IssueID>
    <Title>code myfile.txt in an admin command prompt should always open an admin VS Code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Latest
- OS Version: Windows 10

Steps to Reproduce:

1. Open user VS Code on some folder
2. Go to a command admin prompt and type code myfile.txt

Expected: code myfile.txt opens on an Admin VS Code
Actual: code myfile.txt opens on a normal user VS Code</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40453</IssueID>
    <Title>Running command works in external terminal (cmd) but not in integrated terminal. </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0
- OS Version: Windows 10 build 16299

Steps to Reproduce:

1. Open a terminal (cmd, powershell) in vs code. 
2. xelatex cv.tex
Output:

```C:\Users\eriha\OneDrive\Documents\Jobbsøknad\resume4&gt;xelatex cv.tex
This is XeTeX, Version 3.14159265-2.6-0.99998 (MiKTeX 2.9.6500 64-bit)
entering extended mode
(cv.tex
LaTeX2e &lt;2017-04-15&gt;
Babel &lt;3.14&gt; and hyphenation patterns for 75 language(s) loaded.
(fr
Sorry, but xelatex did not succeed.

The log file hopefully contains the information to get MiKTeX going again:

  C:/Users/eriha/AppData/Local/MiKTeX/2.9/miktex/log/xelatex.log

You may want to visit the MiKTeX project page, if you need help.

C:\Users\eriha\OneDrive\Documents\Jobbsøknad\resume4&gt;
``` 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

I'm trying to compile a latex resumé, but the integrated terminal seems to fail, while doing the same task in an external terminal seems to work. I'm not sure how to troubleshoot this. </Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40451</IssueID>
    <Title>--status throwing error</Title>
    <Description>
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19
- OS Version: Windows 7

Steps to Reproduce:

1. type 'code --status' at command line while VS code running
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Not sure
 This is the error:


[main 11:11:14 AM] Startup error: x86 : The term 'x86' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the
spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:21
+ c:\Program` Files` (x86)\Microsoft` VS` Code\resources\app\out\vs\bas ...
+                     ~~~
    + CategoryInfo          : ObjectNotFound: (x86:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40450</IssueID>
    <Title>Deleted lines are disabled from selection for copying</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version: Ubuntu 16.04 64 bit

Steps to Reproduce:

1.Commit the code, change few lines.
2.View the code change in history, try to select something from the deleted code, which will starts with - symbols. You can see it disabled from selection and only reverting is possible.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40447</IssueID>
    <Title>Pipe output to editor under WSL</Title>
    <Description>- VSCode Version: Code - Insiders 1.20.0-insider (bcc46316b497d1a316dd47ae86481df3ca5784ee, 2017-12-18T11:57:54.810Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
markdown-preview-github-styles|bie|0.1.0
apiconnecttools|IBM|0.0.5
coldfusion|ili|0.0.11
wordcount|ms-|0.1.0
htmlescape-vscode-extension|ray|0.0.4
code-settings-sync|Sha|2.8.7
spellchecker|swy|1.2.13



---

Steps to Reproduce:

1. I'm using Insiders and trying to pipe output from the terminal running Unbuntu to the editor.
2. I tried a simple: cat .bashrc | code-insiders

Nothing happens. I thought perhaps it was an issue with Windows not having access to the file under WSL so I also tried something under /mnt/c and had the same response. Note, I can "which code-insiders" in Ubuntu and it correctly sees the proper path to my install.

Reproduces without extensions: I'll be honest and say I didn't check. </Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40441</IssueID>
    <Title>File /tmp/code-stdin-XXX.txt is created and opened on launch via hotkey in Ubuntu</Title>
    <Description>- VSCode Version: Code - Insiders 1.20.0-insider (bcc46316b497d1a316dd47ae86481df3ca5784ee, 2017-12-18T11:54:10.001Z)
- OS Version: Linux x64 4.13.0-19-generic (Ubuntu Artful Aardvark, Budgie desktop)
- Extensions: none
---

Steps to Reproduce:

1. Set Code to launch with hotkey via Keyboard (either `code-insiders` or `code-insiders -a`).
2. Launch via hotkey.
3. Observe a new file open at `/tmp/code-stdin-XXX.txt` (where `xxx` appears to be a randomly generated sequence of lowercase alphabetical characters).

This problem does not occur when launching via terminal or shortcut icon. This problem also does not occur with Atom or Gedit. I am currently unable to test on Gnome, so I can't say whether this is reproducible on Gnome.</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40436</IssueID>
    <Title>code-stdin-bct.txt</Title>
    <Description>What is the `code-stdin-bct.txt`? I'm builded from source vsc-oss 1.19.0 and now every time when I open vsc I see this file instead of my project.
![_2017-12-18_15-33-47](https://user-images.githubusercontent.com/9416005/34106343-e1194dfa-e408-11e7-839b-d7ff73d0dc34.png)
</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40434</IssueID>
    <Title>Breakpoints doesn't work for esm files</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T09:56:48.842Z)
- OS Version: Linux x64 4.4.0-104-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
project-manager|ale|0.23.1
vscode-color|ans|0.4.5
gitignore|cod|0.5.0
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.4.3
git-extension-pack|don|0.1.3
githistory|don|0.2.3
vscode-coffeescript-preview|dre|0.1.4
gitlens|eam|6.4.0
vscode-great-icons|emm|2.1.22
vscode-apache|mrm|1.1.1
vetur|oct|0.11.5
spellchecker|swy|1.2.13
ayu|tea|0.10.0
vscode-open-in-github|ziy|1.3.1



---

Steps to Reproduce:

1. Unpack: 
[esm_debug_bug.zip](https://github.com/Microsoft/vscode/files/1567653/esm_debug_bug.zip)
2. Run `npm i` in folder
3. Open vscode in folder
4. Set some break points in `continuousLoader.mjs`
5. Add the following launcher:
```json
{
  "type": "node",
  "request": "launch",
  "name": "ESM debug",
  "args": [
    "--experimental-modules",
    "${workspaceFolder}/continuousLoader.mjs"
  ]
}
```

Reproduces without extensions: **Yes**

Only by using the `debugger` keyword am I able to stop execution. When I see the file in vscode debug mode, it is read-only. Don't know if that is significant. - The title is *"continuousLoader.mjs read-only core module"*</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40417</IssueID>
    <Title>Missing Extension/Settings Export or Google Sign in to port VS code to my other devices</Title>
    <Description>I request a feature using which I can auto import my extensions and settings when I install vs code on my new machine.</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40404</IssueID>
    <Title>Buttons for vscode</Title>
    <Description>can vscode support quick-buttons? like most of other editors, that I can click on a button and it will do something(e.g. save, open, wrap text with a pair of tags in html,etc). so far I only see a "split window" button.

many of us actually spend more time reviewing code instead of writing, those button can work with mouse without the need of reaching keyboard. Besides, most  editors support the quick action buttons long time ago.

thanks for the consideration.</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40400</IssueID>
    <Title>feat(workbench/window): add setting to switch TouchBar on macOS</Title>
    <Description>
    </Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>22/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40399</IssueID>
    <Title>Split multiwindow</Title>
    <Description>How to implement multiple Windows. Many times I like to popup a new window, not just like left and right side which is not convenience.</Description>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40366</IssueID>
    <Title>Node debug doesn't terminate using WSL</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-html-css|ecm|0.1.8
php-intellisense|fel|2.1.0
beautify|Hoo|1.1.1
vscode-icons|rob|7.19.0
JavaScriptSnippets|xab|1.5.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Debug a node JS script
2. using htop or similar, observe a [similar](https://i.imgur.com/hfmagjB.png) output.

These processes live forever, so when I restart debugging and make a POST request, it uses an old process.

```
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [{
            "type": "node",
            "request": "launch",
            "name": "name",
            "program": "${workspaceFolder}\\models\\script.js",
            "useWSL": true
        },
        {
            "type": "node",
            "request": "launch",
            "name": "WWW",
            "program": "${workspaceFolder}\\bin\\www",
            "useWSL": true
        }
    ]
}
```</Description>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40358</IssueID>
    <Title>Environment variables on Windows should not be case-sensitive</Title>
    <Description>- Version 1.19.0
- Commit 816be6780ca8bd0ab80314e11478c48c70d09383
- OS Version: Windows 10.0.16299.64

Steps to Reproduce:

1. On a machine where `WINDIR` is actually `windir` (seems to have changed case on Win10 or at some point in the past), use "${env:WINDIR}" in .vscode/launch.json, e.g.: ${env:WINDIR}/System32/WindowsPowerShell/v1.0/powershell.exe
2. Launch the task. Debug output says /System32/... is not found (note no prefix, e.g. C:/Windows)

Environment variables on Windows are not case-sensitive, and they change. For example, my PATH is always PATH. I often override this as one of my first machine set up steps. It was always PATH in the past, as it is on other platforms. Windows 10 or perhaps 8 changed the case. So developers across Windows versions can't use a checked in launch.json (or tasks.json, etc.)? That's not a practical expectation.

Reproduces without extensions: Yes</Description>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40356</IssueID>
    <Title>Update Information on Fedora</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:34:22.110Z)
- OS Version: Linux x64 4.14.3-300.fc27.x86_64



---

Steps to Reproduce:

1. Install code through the official dnf repo
2. Check for updates in GNOME Software

Reproduces without extensions: Yes

VSCode can be successfully updated through `gnome-software` however it is shown under 'OS Updates' along with libraries rather than as an Application, I suspect the appdata.xml is missing some required information</Description>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40350</IssueID>
    <Title>Git Host Key Verification failed/Open Git Log does nothing</Title>
    <Description>- VSCode Version: Code - Insiders 1.20.0-insider (08ec16001adaab8a86183431f6aec09209caa4ab, 2017-12-15T05:15:38.886Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.4.3
vscode-npm-script|eg2|0.3.3
coldfusion|ili|0.0.11
search-node-modules|jas|1.2.0
wordcount|ms-|0.1.0
material-icon-theme|PKi|3.1.0
htmlescape-vscode-extension|ray|0.0.4
spellchecker|swy|1.2.13
nodejs-extension-pack|wad|0.1.9
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:

1. In the Git UI, select Pull
2. The error, Git Host Key Verification failed
3. Select "Open Git Log"
4. Nothing happens.

So I'm sure the issue is my fault, but asking for the log is doing nothing in VSC.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40345</IssueID>
    <Title>Regression issue with debug in WSL</Title>
    <Description>Debug in WSL is broken on the latest version 1.19.0, it used to work in v1.18.
- VSCode Version: 1.19.0
- OS Version: Windows 10

Steps to Reproduce:

1. Setup a Typescript project (I guess it has the same issue with any NodeJS project), with a file server.ts
```js
console.log("testing..."); // Set a breakpoint here
```
2. Configure launch.json with:
```js
{
      "name": "Current TS File",
      "type": "node",
      "request": "launch",
      "useWSL": true,
      "program": "${workspaceFolder}/node_modules/ts-node/dist/_bin.js",
      "args": [
        "${relativeFile}"
      ],
      "cwd": "${workspaceFolder}",
      "protocol": "inspector"
}
```
3. Open server.ts, press F5 to run
4. Notice the error as attached. Obviously the path of the current file (${relativeFile}) is incorrect, it's supposed to be /src/server.ts, but the log in the debug console shows: \src\server.ts. This worked correctly in the previous version.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![vscode-debug](https://user-images.githubusercontent.com/20307897/34069954-b14b42cc-e20f-11e7-857f-9917b3bb8b94.PNG)
</Description>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40318</IssueID>
    <Title>High CPU usage when disconnected from the internet, very unresponsive</Title>
    <Description>The VS Code processes will consume as much CPU as possible. The attached screen shot and memory dumps were captured when the issued happened.
![vscode-high cpu](https://user-images.githubusercontent.com/7583934/34055505-084a2a5a-e195-11e7-97c9-3c7ea3e69267.png)

- VSCode Version: 1.19
- OS Version:

Steps to Reproduce:

1. Disconnect internet
2. Install VS Code
3. Launch VS Code 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

I created dmp files but can't attach them
</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>20/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40316</IssueID>
    <Title>--status fails for default Windows 32 bit installation location</Title>
    <Description>- VSCode Version: 1.19
- OS Version: Windows 10

'code --status' returns:
[main 10:12:35 AM] Startup error: x86 : The term 'x86' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the
spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:21
+ c:\Program` Files` (x86)\Microsoft` VS` Code\resources\app\out\vs\bas ...
+                     ~~~
    + CategoryInfo          : ObjectNotFound: (x86:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

Looks like ' (x86)' is causing a problem</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40303</IssueID>
    <Title>Add a way to choose theme variant (Gnome dark/light theme)</Title>
    <Description>Hello,

A lot of GTK themes come with 2 variants like the default Gnome theme Adwaita . One light and one dark. Each app that implement the feature, like Gnome terminal, allow you to choose the theme variant in the preference. It will be awesome if we can do this in Vs Code.

The dark theme suit Vs Code a lot better !

![screenshot from 2017-07-03 07-27-41](https://user-images.githubusercontent.com/17159065/27779206-bbb46458-5fc1-11e7-987c-57260b02ed8f.png)

![screenshot from 2017-07-03 07-28-14](https://user-images.githubusercontent.com/17159065/27779210-c1da4e10-5fc1-11e7-8cd1-f0161d14d16c.png)

Thanks !</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>16/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40298</IssueID>
    <Title>Multi Target debug - ECONNREFUSED with Console - integrated terminal</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T09:51:12.123Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
cucumberautocomplete|ale|2.5.0



---

Multiple launch.json setups ran together fail with "Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:9228" for any configs with:
`"console": "integratedTerminal"`

Example:
```json
"version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Editor",
            "runtimeExecutable": "npm",
            "runtimeArgs": [
                "run-script",
                "debug"
            ],
            "port": 9228,
            "cwd": "${workspaceFolder}/Editor",
            "console": "integratedTerminal"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Engine",
            "runtimeExecutable": "npm",
            "runtimeArgs": [
                "run-script",
                "debug"
            ],
            "port": 9229,
            "cwd": "${workspaceFolder}/engine",
            "console": "integratedTerminal"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Applications",
            "runtimeExecutable": "npm",
            "runtimeArgs": [
                "run-script",
                "debug"
            ],
            "port": 9227,
            "cwd": "${workspaceFolder}/applications",
            "console": "integratedTerminal"
        }
    ],
    "compounds": [
        {
            "name": "All Servers",
            "configurations": ["Editor", "Engine", "Applications"]
        }
    ]
}
```
Took a while to narrow the error down to this setup. Each application individually runs ok but when ran together I get the error. 

I'm guessing "console": "externalTerminal" maybe my answer but struggling to find an example of setting this up.
Reproduces without extensions: Yes</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40291</IssueID>
    <Title>ALT + . does not work in integrated terminal</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: CentOS 7.3

Steps to Reproduce:

1. Open integrated terminal
1. Run some command e.g. `cd /tmp`
1. Press `Alt + .`

Expected result: word `/tmp` appears in terminal input.

Reproduces without extensions: Yes
Reproduces with all default keybindings (fresh installation): Yes</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40274</IssueID>
    <Title>git cannot diff UTF-16 LE file</Title>
    <Description>- VSCode Version: 19.0
- OS Version: Windows 10

![tim 20171215163736](https://user-images.githubusercontent.com/4654826/34033724-52e6b972-e1b6-11e7-9e20-80ff2fa2fc26.png)
</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40267</IssueID>
    <Title>VS Code just reverted a file, losing a whole day of work</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
prettier-vscode|esb|1.0.0
flow-for-vscode|flo|0.7.3
sublime-babel-vscode|jos|0.2.9
debugger-for-chrome|msj|4.0.0



---

I work on the same folder (on external hard drive) from two PCs. I made a lot of changes to a certain file at home, then the next day I come to work, plug in my drive, start my development server (which showed the latest version of my app), and start up VS code. It starts with three open files. I make a small change to one of them and save, and the app stops working. Then I realize that the rest of that file is a very early version that I had made a lot of changes to, so obviously it doesn't work with the rest of the app anymore.

How did it manage to pull out such an early version (even earlier than I had when I left work last night), and then used it to overwrite the current version without a warning? VS Code was not running that whole time, I literally just started it up. I don't have these files under version control.</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40255</IssueID>
    <Title>Disable when auto move to next git revert changes</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-intelephense-client|bme|0.8.2
sublime-keybindings|ms-|3.0.3
vscode-docker|Pet|0.0.22
material-icon-theme|PKi|3.1.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. In the git repo, made some changes
2. when you click the gutter and make revert changes, it'll auto go to next changes

[DEMO](https://vimeo.com/247432763)

This is annoying and we lose our focus on the document. 

Also below shortcut is not working. We need to manually click the button

```
{
  "key": "ctrl+alt+z",
  "command": "git.revertChange"
}
```
Basically it's should work as PHPStorm.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40253</IssueID>
    <Title>Git on Windows must use git.exe on %PATH% also</Title>
    <Description>- VSCode Version: 1.19.0
- OS Version: Windows 10 1703

Steps to Reproduce:

1. Install git on different path instead of the following 
  - `C:\Program Files\Git`
  - `C:\Program Files (x86)\Git`
2. Remove `git.path` on User Settings
3. Then VSCode will prompt

```
Looking for git in: C:\Program Files\Git\cmd\git.exe
Looking for git in: C:\Program Files (x86)\Git\cmd\git.exe
Looking for git in: C:\Program Files\Git\cmd\git.exe
```

Reproduces without extensions: Yes

As a workground, I have to set `git.path`</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40246</IssueID>
    <Title>Tabs for integrated terminal instead of dropdown</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T09:56:48.842Z)
- OS Version: Linux x64 4.10.0-42-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eclipse-keybindings|alp|0.9.6



---

Steps to Reproduce:

1. View -&gt; Integrated terminal
2. Click on the plus in the top-right of the terminal panel
3. Enhancement request: Switching between terminals could be easy with tabs instead of dropdown

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40245</IssueID>
    <Title>git 路径缺失</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-color|ans|0.4.5
path-intellisense|chr|1.4.2
cssrem|cip|0.0.3
bracket-pair-colorizer|Coe|0.10.14
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
jquerysnippets|don|0.0.1
vscode-html-css|ecm|0.1.8
tslint|eg2|1.0.24
vscode-npm-script|eg2|0.3.3
php-debug|fel|1.12.1
php-intellisense|fel|2.1.0
php-pack|fel|1.0.1
auto-close-tag|for|0.5.5
auto-rename-tag|for|0.0.15
beautify|Hoo|1.1.1
openchrome|hua|0.0.3
path-autocomplete|ion|1.7.0
vscode-github|Kni|0.24.0
vue|liu|0.1.5
vscode-fileheader|mik|0.0.2
HTMLHint|mka|0.4.0
vscode-filesize|mkx|1.0.0
easy-less|mrc|1.4.5
vscode-csscomb|mrm|5.2.1
sublime-keybindings|ms-|3.0.3
debugger-for-chrome|msj|3.5.0
color-highlight|nau|2.3.0
vetur|oct|0.11.4
vuehelper|oys|0.1.0
material-icon-theme|PKi|3.1.0
vscode-css-peek|pra|2.0.2
view-in-browser|qin|0.0.5
LiveServer|rit|3.0.0
vscode-icons|rob|7.19.0
background|sha|1.1.17
quokka-vscode|Wal|1.0.84
bootstrap-3-snippets|wcw|0.1.0
change-case|wma|1.0.0

(2 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40243</IssueID>
    <Title>when update this version the git.path set null.</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
gitlens|eam|6.4.0
EditorConfig|Edi|0.11.1
auto-close-tag|for|0.5.5
auto-rename-tag|for|0.0.15
docthis|joe|0.6.0
Angular1|joh|0.2.0
docomment|k--|0.0.17
node-module-intellisense|lei|1.5.0
code-beautifier|mic|1.7.2
vscode-fileheader|mik|0.0.2
vscode-filesize|mkx|1.0.0
mssql|ms-|1.3.0
csharp|ms-|1.13.1
vetur|oct|0.11.4
Csharp-ASPNETCore|rah|1.0.5
java|red|0.15.0
vscode-icons|rob|7.19.0
sass-indented|rob|1.4.5
annotator|ryu|0.10.1
markdown-preview-enhanced|shd|0.3.1
stylelint|shi|0.31.0
vscode-java-debug|vsc|0.4.0
vscode-java-pack|vsc|0.2.0
markdown-all-in-one|yzh|0.11.2



---

Steps to Reproduce:
![image](https://user-images.githubusercontent.com/11804148/34024109-78632c86-e183-11e7-8c6d-61288c3e37cc.png)

1. when i update this version ,my git.path set null.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40242</IssueID>
    <Title> there is  no  active source manage system program .</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
ng-zorro-vscode|cip|1.1.3
vscode-eslint|dba|1.4.3
tslint|eg2|1.0.24
vscode-npm-script|eg2|0.3.3
vsc-material-theme|Equ|1.1.2
vue-snippets|hol|0.1.5
beautify|Hoo|1.1.1
vscode-npm-dependency|how|1.1.4
webpack|jer|2.0.2
Go|luk|0.6.69
font-awesome-codes-html|med|0.0.7
vscode-language-babel|mgm|0.0.10
Angular-BeastCode|Mik|5.1.8
vscode-extension-auto-import|Nuc|1.4.1
material-icon-theme|PKi|3.1.0
LiveServer|rit|3.0.0
px-to-rem|sai|1.2.3
vscode-i18n-tag-schema|sko|2.2.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
![ir jrh2 4w t gj8slnpvc](https://user-images.githubusercontent.com/5639544/34023928-6f87b95c-e182-11e7-9760-30ba72cadb7f.png)

2. there is  no  active source manage system program .

i had setted the git path

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40240</IssueID>
    <Title>can‘t find Git</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.19
- OS Version:

Steps to Reproduce:

1.I install Git in E
2.Update VSCode to 1.19
3.Open my file ,can't find git in C
4. Other version of VSCode can find Git

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40236</IssueID>
    <Title>Git not found after Nov 2017 update</Title>
    <Description>- VSCode Version: Code 1.19.0 (816be6780ca8bd0ab80314e11478c48c70d09383, 2017-12-14T12:06:43.492Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
open-html-in-browser|cod|0.1.21
bracket-pair-colorizer|Coe|0.10.14
githistory|don|0.2.3
gitlens|eam|6.4.0
mssql|ms-|1.3.0
PowerShell|ms-|1.5.1
vsnotes|pat|0.4.3
vscode-icons|rob|7.19.0
html5-boilerplate|sid|1.0.1

(3 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40234</IssueID>
    <Title>Auto imports still produce broken code</Title>
    <Description>- VSCode Version: 1.19

I'm reopening #38551 to get some attention and as it was closed while not fixed, as it's a major problem.

Unlike what was announced, VS Code 1.19 doesn't solve the issue of broken auto imports, so it will be two months (at least) with an automatic feature producing broken code activated by default. That's just incomprehensible...

Or TS 2.6.2 should have included the fix, or TS 2.7 fix should have been backported in VS Code, or PR #38552 to temporatily disable auto imports by default until TS does its job well should have been accepted, but the current situation is just bad.</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40231</IssueID>
    <Title>side bar search dose not sync with find text in file</Title>
    <Description>
- VSCode Version: Version 1.19.0 (1.19.0)
- OS Version: MacOS 10.13.2 (17C88)

Steps to Reproduce:

1. Search some text in the file view panel, either by highlight the text then press ctrl-e, or by press ctrl-f and type in the text.
2. Now click the search magnifying glass on the side bar to show the global search bar, the search text in step 1 is not in the global search field.

Expected behavior:

The text in the global search field should sync with the text in the edit find search field. It was this way two versions back.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40227</IssueID>
    <Title>VSCode window starts slightly offset from bottom of screen</Title>
    <Description>Copy/paste from Reddit:

I'm on WIndows 10 Pro running 64-bit VSCode 1.18.1. I usually snap the VSCode app to the right side of my 3440x1440 screen. When I close and then restart VSCode, the bottom of the window has moved up a tad and the right side of the window has moved in ever so slightly. Can reproduce with and without using Windows' window snapping.

Not a big issue but the gap on the bottom drives me nuts.

https://www.reddit.com/r/vscode/comments/7jtlh4/vscode_window_starts_slightly_offset_from_bottom/</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40214</IssueID>
    <Title>Missing symbol in integrated terminal</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:34:22.110Z)
- OS Version: Linux x64 4.4.0-101-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
dot|Ste|0.0.1
python|ms-|0.8.0
cpptools|ms-|0.14.4
csharp|ms-|1.13.1
RustyCode|sav|0.19.1
cmake|twx|0.0.17
vscode-lldb|vad|0.7.1
cmake-tools|vec|0.10.3



---

Steps to Reproduce:

1. Open integrated terminal
2. Type echo "__pycache__"

No symbols "__" while typing and in echo output. If I have such directory ant type "ls", symbols are shown.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40199</IssueID>
    <Title>Python multithreading print error with the integrated terminal </Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
python|ms-|0.8.0
cpptools|ms-|0.14.4



---

Steps to Reproduce:

1. create python script:
```
from multiprocessing import Pool, cpu_count
import traceback
import sys

def printfunc(msg):
    for i in range(20):
        print "TEST "+ str(msg) +" Count:" + str(i)
    return 0

if __name__ == "__main__":
    try:
        testlist = list(range(1000))
        pool_size = cpu_count()
        pool = Pool(processes=pool_size)
        print "Pool Size:", pool_size
        pool.map(printfunc, testlist)
        pool.close()
        pool.join()
    except Exception,e:
        pool.terminate()
        traceback.print_exc()
        sys.exit(1)
```
2. execute the script  in integrated terminal will print error message like:

![tim 20171214160626](https://user-images.githubusercontent.com/7509521/33981680-c3cfb20c-e0e8-11e7-89fb-3e0cd14505f5.png)

3. but the script has no errors execute in external terminal (cmd or powershell)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: **Yes**</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40195</IssueID>
    <Title>Make VSCode available in the Windows Store</Title>
    <Description>Is there a reason why is VS Code not in Microsoft's own app store? Can't this be done easily with the Desktop Bridge ("Centennial")? This would remove the need to manually update the app on every new version and offload that action to the OS. Also, Microsoft putting their on apps on the Store would make it more appealing for devs to move to the new app platform. I can't wait to ditch old Win32 installers.</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40190</IssueID>
    <Title>Inconsistent formatting in integrated terminal (powershell formatting 'bleed-through')</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Windows 10: 1709

I have been having this issue with the vscode integrated terminal for probably 6 months now. The terminal appears to become 'corrupted' while running scripts like webpack or jest running in the terminal. Powershell formatting settings appear to 'bleed through' and make the terminal unreadable. I have reinstalled VScode with no effect as well as reset powershell's formatting settings with 'Set-PSReadlineOption -ResetTokenColors` to no effect.

I am not using any terminal setting that I am aware of and using Dark+ (default dark), which I believe to be completely stock. (I've tried every setting that I can think of.) The problem will persist with other themes.

Here is what it looks like:

![bug](https://user-images.githubusercontent.com/6851336/33971414-ee5de8be-e03d-11e7-8e57-47022319fe4a.PNG)

I believe that I have identified a workaround by enabling 'legacy mode' in powershell, which can be done by opening a full powershell and choosing properties &gt; options &gt; 'Use legacy console (requires relaunch)'.

As demonstrated here:

![console fix](https://user-images.githubusercontent.com/6851336/33971500-6250b6d4-e03e-11e7-81a7-f5c6d48a7ffd.PNG)

This appears to resolve the immediate issue, however, if one attempts to use bash, you will now receive the error: 'Unsupported console settings. In order to use this feature the legacy console must be disabled.'

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40177</IssueID>
    <Title>Ability to show tooltips for overflowed inputBox prompts</Title>
    <Description>For prompts that overflow, it would be helpful to either:
- show the full prompt as a tooltip
- have the ability to specify a `tooltip:` parameter in `showInputBox(options)`.


Details:
- VSCode Version: 1.19.0-insider (latest at time of writing)
- OS Version: MacOS High Sierra

Steps to Reproduce:

1. Open up an input box from the command palette that has a clipped prompt (with ellipses shown)
2. Hover over the prompt

Reproduces without extensions: Yes</Description>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>14/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40167</IssueID>
    <Title>The output type list can't work correctly when toggling the OUTPUT window after installing some extensions.</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|ms-|0.8.0
cpptools|ms-|0.14.4
csharp|ms-|1.13.1
PowerShell|ms-|1.5.1
clang-format|xav|1.6.1



---
![snipaste_20171213_213444](https://user-images.githubusercontent.com/16623398/33944545-7999c7ae-e057-11e7-889e-9dfce4f2f7e0.png)

Steps to Reproduce:

1. After updating the C/C++ extension (ms-vscode.cpptools) and reloading the vscode window to enable, it will automatically download and install some dependent packages.
2. Toggle the OUTPUT window to review the status, click the output type list to choose the "C/C++", but the list can't show anything (marked in the image). Click again, it works correctly.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>13/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40151</IssueID>
    <Title>diff view doesn't not retain its scroll position across switching tabs</Title>
    <Description>1. open a diff view
2. scroll down
3. switch to a different tab
4. get back to the diff tab
5. observe diff view scrolled all the way to the top</Description>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>15/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40146</IssueID>
    <Title>Perf: xterm is being loaded right on startup</Title>
    <Description>Even though there is code to load xterm async (https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L257) I see it showing up and taking the most part of node module loading right on startup (when running `code -p`):

![image](https://user-images.githubusercontent.com/900690/33925865-19ac6f66-dfdc-11e7-8c89-bed6bb562959.png)

It looks like we manage to require `xterm` before already and should try to avoid that if possible. </Description>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>13/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40141</IssueID>
    <Title>Syntax Highlight Problem When writing codeblock in Markdown</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
  - VSCode Version: 1.18.1
  - OS Version: Windows 10
take this pic as a example, the syntax highlight not work for the code in the bracket...
Can someone just give me some tip if it's my own problem.

![33832924-d1f0bf8e-deb8-11e7-9703-2fbd93953e4d](https://user-images.githubusercontent.com/12212092/33918493-9b9711d6-dfee-11e7-9eaa-40ecfc26b2a1.png)
</Description>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>13/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40090</IssueID>
    <Title>Debug action icon does not reflect the current session</Title>
    <Description>Create some concurrent debug sessions:
- start a "launch" debug session
- start a "attach" debug session

Observe: terminate action shows "plug" icon (for attached state)

- switch to "launch" debug session

Observe: terminate action still shows "plug" icon

- press "plug" icon terminates the "launch" session.


(I saw this with my Cluster prototype)</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40084</IssueID>
    <Title>Invisible underscore in integrated terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Fedora 26 (4.13.13-200.fc26.x86_64)

Steps to Reproduce:

1. Go to integrated terminal.
2. Type something, which contains an underscore, for example `MY_VARIABLE="test"`
![screenshot from 2017-12-12 12-04-49](https://user-images.githubusercontent.com/9593424/33881323-becf4796-df34-11e7-9bb2-a749e4b118c3.png)
Underscore is invisible.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40077</IssueID>
    <Title>Feature Request: Alt+Click on file in Source Control Side Panel opens file</Title>
    <Description>VS Code is very convienient when revieweing work. The source control panel allows one to quickly skim the changes, and asses one's next step. 

Something I do constantly, after I review my work midway, is open a file from the list to continue working on it. I right click, click `open file` (in contrast with `open changes`).

It be nice to bind it to alt+click.</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>13/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40076</IssueID>
    <Title>Indexing doesn't work for medium sized projects on Windows 10 (files don't show up in 'Search in file' and 'Go to file')</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: Windows 10 Home Edition (64 bit)

Hi guys,

I have a **problem with indexing** for both my web(default support) and Python(with the official Python extension installed) projects (**22k files &amp; 30k files projects**). For some of those(web projects) VSCode works fine but for the others I **can't find any files in Go to file and Search in files, excluding those I already opened** with the editor.

I **deleted any cache/settings** both for my **user and folder** and even **uninstalled**(then re-installed) VSCode but it still occurs in the same projects. I **tried the Insiders build(1.19.0-insider)** and it doesn't seem to be solved(yet) there. In addition, I **double verified** my user and folder **"search.exclude"** and **"files.exclude"** settings.

**NOTE: I originally commented here(requested to open a new issue):**

https://github.com/Microsoft/vscode/issues/39440#issuecomment-350900107

**It seems to be the exact _same problem_, but for medium sized projects**

Steps to Reproduce:

1. Open the problematic project

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Thanks in advance,
Elran</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40072</IssueID>
    <Title>Extension Info page reload and scrolled to top when switch back from other tab</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.11.1
beautify|Hoo|1.1.1
php-formatter|Sop|0.2.4
html-snippets|abu|0.1.0
vscode-opennewinstance|chr|0.0.4
vscode-eslint|dba|1.4.3
vscode-babel-coloring|dza|0.0.4
tslint|eg2|1.0.24
php-debug|fel|1.12.1
php-intellisense|fel|2.1.0
rest-client|hum|0.16.1
Go|luk|0.6.69
python|ms-|0.8.0
cpptools|ms-|0.14.4
node-debug2|ms-|1.19.0
debugger-for-chrome|msj|3.5.0
vetur|oct|0.11.3
vscode-icons|rob|7.19.0
language-stylus|sys|1.8.0
vim|vsc|0.10.5
vscode-react-native|vsm|0.5.7



---

Steps to Reproduce:

1.Clicked an installed extension to open its info tab, scroll down few pages in the new tab.
2.switch to other tabs
3.switch back to the tab opened in the first step.

I don't know whether this is a feature or not. Just feel a little annoy have to scroll a little when switching back from other tabs if the info page is very long. The result I expect is not reloading or just keep the old scroll position. I usually open the online doc for reference.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40071</IssueID>
    <Title>font in terminal console looks too wide</Title>
    <Description>- VSCode Version:1.18.0

Steps to Reproduce:

1. I set the editor fontFamily as:  "editor.fontFamily": "'Segoe UI', Consolas, 'Microsoft YaHei'",
2. the font in terminal console looks too wide so that it can not display the output totally


![qq 20171212142949](https://user-images.githubusercontent.com/7374965/33870655-cc5ca560-df49-11e7-8820-aa60e943ed6e.png)


Reproduces without extensions: Yes</Description>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40034</IssueID>
    <Title>terminal for task does not realize it's finished if task contains certain clear commands</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.3.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---



---

Steps to Reproduce:

1. create task with:
```
{
    "version": "2.0.0",
    "tasks": [
        {
            "command": "clear ; echo hi; clear; echo bye",
            "type": "shell",
            "args": [],
            "presentation": {
                "reveal": "always",
                "echo": false,
                "panel": "dedicated"
            },
            "label": "test"
        }
    ]
}
```
2. note that when finished terminal does *not* output `Terminal will be reused by tasks, press any key to close it.`
3. try to run task again
4. vscode complains that task is already running `The task 'test (foo)' is already active. To terminate it use 'Terminate Task...' from the Tasks menu.`
5. note that if second `clear`  is removed from the `command` string, terminal behaves as expected.  removing first `clear` but leaving the second still causes the issue.

This used to work fine; not sure if it was a newer version of vscode or mac OS that broke things.

Reproduces without extensions: Yes</Description>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40027</IssueID>
    <Title>Allow running the same task concurrently</Title>
    <Description>Currently, it is not possible to launch a task that is already running, with vscode displaying the "task is already running" popup.
Sometimes it is useful to have the same task in multiple instances. For example, I have a task which launches my app, and sometimes I need to run the app, change code, run the app again and compare both.</Description>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40019</IssueID>
    <Title>Can't create files with name which include characters that have command set with them. like L, A </Title>
    <Description>- VSCode Version: Latest Insider Build
- OS Version: Windows 10

Steps to Reproduce:
1.  Click new file icon in the file viewer
2.  Type the name in box `blade`

`L` will focus out and `A` will create a new file instead of being typed</Description>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>12/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>40007</IssueID>
    <Title>scrolling not smooth</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|ms-|0.8.0



---

Steps to Reproduce:

1. When started, scrolling with touchpad is not smooth. Scrolling stops or jumps from time to time.
2. After reloading window, the problem is gone.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>13/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39999</IssueID>
    <Title>Wonky scrolling with touchpad, touchscreen works fine. (Windows precision drivers)</Title>
    <Description>- VSCode Version: &lt;code&gt;Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)&lt;/code&gt;
- OS Version: &lt;code&gt;Windows_NT x64 10.0.16299&lt;/code&gt;
- CPUs: &lt;code&gt;Intel(R) Core(TM) i7-4720HQ CPU @ 2.60GHz (8 x 2594)&lt;/code&gt;
- Memory (System): &lt;code&gt;15.91GB (9.59GB free)&lt;/code&gt;
- Memory (Process): &lt;code&gt;215.32MB working set (215.32MB peak, 187.45MB private, 46.60MB shared)&lt;/code&gt;
- Load (avg): &lt;code&gt;0, 0, 0&lt;/code&gt;
- VM: &lt;code&gt;0%&lt;/code&gt;
- Initial Startup: &lt;code&gt;yes&lt;/code&gt;
- Screen Reader: &lt;code&gt;no&lt;/code&gt;
- Empty Workspace: &lt;code&gt;yes&lt;/code&gt;
- Timings:

|Component|Task|Time (ms)|
|---|---|---|
|main|start =&gt; app.isReady|81|
|main|app.isReady =&gt; window.loadUrl()|245|
|renderer|window.loadUrl() =&gt; begin to require(workbench.main.js)|383|
|renderer|require(workbench.main.js)|538|
|renderer|create extension host =&gt; extensions onReady()|458|
|renderer|restore viewlet|0|
|renderer|restore editor view state|617|
|renderer|overall workbench load|744|
|main + renderer|start =&gt; extensions ready|1772|
|main + renderer|start =&gt; workbench ready|2005|

---

Additional Steps to Reproduce (if any):

1. Attempt to scroll with touchpad</Description>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39996</IssueID>
    <Title>Category based coding</Title>
    <Description>Hello,
I would like to recommend a feature. 
Problem /Current Challenge: 
I many time manage multiple segments of a code base. For example, I may open a repo containing both client and server side code. 
Say on the client I am opening files related to the frontend login service. Then I am targeting backend login service. Each aspect (backend/frontend) contains multiple files. 

Current Solution - With Pain and Confusion
Current easy solution for this is opening each folder on separate vscode windows. However, we know that this feature is really meant for project distinction, not a category of my codebase. The function of opening separate windows also behaves according to that expectation. It's enough to have one more repo open alongside to make the number of vscode windows a pain to swap between.

Proposal 
It would be great if above the tabs of open files (horizontal layout of open files) it would be possible to add workspaces/files-category tabs.  They could potentially be swapped with, say, Ctrl-Shift-number.

Obviously all opened files will appear under the open category. 
I believe this will provide a more informative/mental categorization between categories of code.

This feature will allow mental isolation for focusing on:
- reviewing a framework and toggling its effect on the dependent code
- a payment system, frontend, backend mental isolation

</Description>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39988</IssueID>
    <Title>vscode forgets previously opened folders when opened by double-clicking an associated file.</Title>
    <Description>- VSCode Version: ALL
- OS Version: Windows 10 (probably all)

Steps to Reproduce:

1. Configure vscode to reopen previously open windows when starting.
2. Open several folders in different windows.
3. Carefully close vscode using the Exit from the File menu so that it will surely remember to reopen them next time you start vscode. (I've had issues in the past on Linux where it wouldn't save the open window list if you used the close button. I don't know if that still exists, I don't do it anymore.)
4. Double-click a file whose file extension is associated with vscode.
5. The file opens in vscode, but no other vscode windows open.
6. Now there is no way to get vscode to open those windows that were previously saved to be reopened.

Reproduces without extensions: Yes, not related to extensions.</Description>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>10/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39986</IssueID>
    <Title>Integrated terminal doesn't quit</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: 10.13.2

Steps to Reproduce:

1. Onep integrated terminal
2. Quit the terminal (ctrl-d)
3. Terminal should close but instead it hangs with "kernel_task"

Reproduces without extensions: Yes
Also reproducible with Code insiders.

Actually, it started to happen after the recent update to High Sierra, so I'm blaming apple, but not sure.</Description>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39977</IssueID>
    <Title>Rendering of File Links in Terminal</Title>
    <Description>
- VSCode Version: 1.18
- OS Version: WIndows 10

Steps to Reproduce:
1. Vertical Panel Layout
2. Terminal does not render the Links if the Terminal window width is not sufficient enough for showing the complete file path string. 
</Description>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39970</IssueID>
    <Title>VS for Android</Title>
    <Description>Hello,

 VS is a cool IDE, but it not supported on Android OS.
</Description>
    <CreatedDate>09/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39373</IssueID>
    <Title>[BUG] Moving Code Blocks mess up Code Spacing</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: mac OS Siera

Not sure whether this is ES6 specific but after moving the code block top to bottom and top again, the code spacing get's messed up.

![](http://g.recordit.co/iAfQWkwUqU.gif)</Description>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39367</IssueID>
    <Title>Focus lost from editor when clicking into area below suggest docs</Title>
    <Description>Steps:
* open suggest with docs to the side
* click into the seemingly empty area below docs

I would expect suggest to close. Instead focus seems to be somewhere but not in the editor anymore, so that e.g keybindings navigation does not work anymore.

![image](https://user-images.githubusercontent.com/900690/33425355-c468f636-d5be-11e7-8c3e-7e7c7749ef89.png)
</Description>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39342</IssueID>
    <Title>Keyboard cursor navigation broken when renaming a file (insider version)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0-insider
- OS Version: Windows x64

Steps to Reproduce:

1. open a workspace
2. try renaming a file
3. use the keyboard (home button, end, arrow keys)

Expect: keyboard updates location of cursor inside rename textbox
Actual: the sidebar (file list view) starting moving

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39339</IssueID>
    <Title>hsl / hsla color swatches are incorrect for 0% saturation</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: Windows 10

Steps to Reproduce:

1. In a CSS file, define a property value with `hsl(0,0%,100%)` or `hsla(0,0%,100%,1)`
2. Wait for the color swatch to appear
3. The color should be white (100% lightness), but instead appears as black.  The pop-up color picker is likewise initialized to rgb(0,0,0).

The problem is specific to 0% saturation value; isn't affected by the hue value, and applies for any lightness value (e.g., 50% lightness should be gray).  Probably incorrect handling of a divide-by-zero error in the color conversion functions.

Reproduces without extensions: Yes</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39333</IssueID>
    <Title>Cant use cursor to navigate through filename characters when renaming file. </Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (6e90f8995da4bd999e8983b8e480a34045c1dfcf, 2017-11-29T05:14:15.979Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jslint|ajh|1.2.1
vscode-postman|eri|0.5.2
rest-client|hum|0.16.1
sftp|lix|0.8.10
node-debug2|ms-|1.19.0
html-preview-vscode|tht|0.1.1
vscode-react-native|vsm|0.5.7
ReactSnippets|xab|1.7.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1. Right click on file in VSCode's Explorer.  Select "rename".
2. click on highlighted file name(like you would to change the name of the file) and try to use the arrow keys to change the cursor position in the filename letters. 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39319</IssueID>
    <Title>xhr failed</Title>
    <Description>- VSCode Version: Code 1.18.1 **[Unsupported]** (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
angular-material|1to|0.13.0
html-snippets|abu|0.1.0
ivue|dai|0.1.0
angular2-snippets|dan|1.0.16
vscode-html-css|ecm|0.1.8
vue-snippets|hol|0.1.5
vscode-angular2-emmet|jak|2.0.3
Angular1|joh|0.2.0
Angular2|joh|2.11.2
ionic1-snippets|jus|1.0.1
Angular-BeastCode|Mik|5.1.2
debugger-for-chrome|msj|3.5.0
generator-vue-components|Nic|0.1.5
vetur|oct|0.11.3
vuehelper|oys|0.1.0
vscode-html-scss|P-d|0.0.42
vue-beautify|pea|2.0.4
tsimporter|pmn|1.2.14
vue-vscode-snippets|sdr|1.2.0
background|sha|1.1.17
vue-ls|van|0.1.1
vue-ls-snippets|van|0.0.5

(1 theme extensions excluded)


---

Steps to Reproduce:

1. when select install plugins , it will show error : XHR failed.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39318</IssueID>
    <Title>Blue VSCode logo almost not visible</Title>
    <Description>![code logo](https://user-images.githubusercontent.com/7447285/33379445-6ebc7808-d518-11e7-8b92-d0c611bcf3e7.png)
</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39309</IssueID>
    <Title>While renaming a file, the cursor cannot be moved using the cursor keys</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (ddb27c63122c09a3c4800cc4d928cd9faf97cef1, 2017-11-29T06:14:43.592Z)
- OS Version: Linux x64 4.10.0-40-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
Angular-BeastCode|Mik|5.1.3
vscode-docker|Pet|0.0.22
path-intellisense|chr|1.4.2
tslint|eg2|1.0.24
vscode-npm-script|eg2|0.3.3
json-tools|eri|1.0.2
csharpextensions|jch|1.3.0
vscode-nuget-package-manager|jmr|1.1.5
csharp|ms-|1.13.1
mono-debug|ms-|0.15.8
PowerShell|ms-|1.5.1
debugger-for-chrome|msj|3.5.0
syncing|non|1.4.9
vscode-icons|rob|7.18.1
yo|sam|0.9.3
autoimport|ste|1.5.3
gitblame|wad|2.2.0



---

Steps to Reproduce:

1. Open a project
2. Select a file
3. Hit F2 to rename a file
4. Try to move the cursor in the selected filename -&gt; will fail: instead the selection in the file tree is moved

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39295</IssueID>
    <Title>Hidden spaces inserted when using Sogou Chinese input method</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: &lt;= 1.18.1
- OS Version: macOS 10.13.1
- Input Method: Sogou 4.4.0

Steps to Reproduce:
![](https://i.imgur.com/sbEm1cR.gif?noredirect)

1. Input a sentence
2. Switch to Chinese mode accidentally and want to switch back to English mode, press "Delete" twice then save first.
3. Then you found a hidden space which is not UTF-8 character. That means you can delete twice between two characters (in the video, hidden space occurs between 'i' and 'n').

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39291</IssueID>
    <Title>Native Tab function has bug on MacOS 10.13</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
material-icon-theme|PKi|3.1.0
unity-tools|Tob|0.1.9
unity-debug|Uni|1.2.1
unity-snippets|Ycl|0.1.2
vscode-eclipse-keybindings|alp|0.9.6
vscode-eslint|dba|1.4.3
vscode-dash|dee|1.7.1
tslint|eg2|1.0.24
file-icons|fil|1.0.7
code-runner|for|0.8.4
theme-monokai-pro-vscode|mon|1.1.2
python|ms-|0.8.0
csharp|ms-|1.13.1
vetur|oct|0.11.3
partial-diff|ryu|0.5.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1."window.nativeTabs": true,
2.active new tab

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39290</IssueID>
    <Title>PHP typing greater-than sign</Title>
    <Description>After typing greater-than sign in PHP file, intellisense suggestion list pops up automatically, and so, when press 'Enter' key, the first suggested PHP global variable in the list is typed. Is there any configuration options to set the suggestion list manually using the keyboard shortcut? ex: "Ctrl + ."   . Otherwise, to press "Esc" key each time after greater-than sign is very inconvenient.


- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
php-debug|fel|1.12.1
phpcs|ika|0.7.0
sublime-keybindings|ms-|3.0.3
team|ms-|1.122.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39289</IssueID>
    <Title>Lost indent spaces when copy code to OneNote</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
markdown-toc|Ala|1.5.6
vscode-markdownlint|Dav|0.12.0
beautify|Hoo|1.1.1
crane|Hvy|0.3.8
format-php|Kas|1.1.2
swift|Kas|0.0.3
vscode-html-scss|P-d|0.0.42
php-formatter|Sop|0.2.4
code-gnu-global|aus|0.2.2
vscode-database|baj|1.2.0
vscode-file-templates|bam|1.1.0
code-sql|cod|0.0.3
vscode-html-css|ecm|0.1.8
php-debug|fel|1.12.1
php-intellisense|fel|2.0.1
code-runner|for|0.8.4
mdmath|goe|2.0.7
CppSnippets|har|0.0.13
vscode-ebnf|igo|1.0.3
copy-markdown-as-html|jer|1.0.0
php-symbols|lin|2.1.0
vscode-JS-CSS-HTML-formatter|lon|0.2.3
MagicPython|mag|1.0.12
markdown-shortcuts|mdi|0.8.1
vscode-clang|mit|0.2.2
vscode-apache|mrm|1.1.1
mssql|ms-|1.2.1
python|ms-|0.8.0
cpptools|ms-|0.14.3
php-docblocker|nei|1.3.2
vscode-icons|rob|7.18.1
vscode-sql-beautify|sen|0.0.4
php-ci|sma|0.2.8
python|tht|0.2.3



---

Steps to Reproduce:

1. Select and copy the code from vscode (Python code)
2. Paste to OneNote

Result:
The indent spaces have been lost! 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39263</IssueID>
    <Title>[Feature Request] Horizontal Search Pane</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: MacOS

Would love to be able to place the search pane Horizontally like in actual Visual Studio.</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39261</IssueID>
    <Title>Search and replace does not find multiline strings</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
project-manager|ale|0.23.0
path-intellisense|chr|1.4.2
bracket-pair-colorizer|Coe|0.10.14
xml|Dot|1.9.2
php-intellisense|fel|2.0.1
file-icons|fil|1.0.7
auto-close-tag|for|0.5.3
code-runner|for|0.8.4
output-colorizer|IBM|0.1.2
csharpextensions|jch|1.3.0
mssql|ms-|1.2.1
python|ms-|0.8.0
cpptools|ms-|0.14.2
csharp|ms-|1.13.1
PowerShell|ms-|1.5.1
team|ms-|1.122.0
debugger-for-chrome|msj|3.5.0
color-highlight|nau|2.3.0
material-icon-theme|PKi|3.1.0
vscode-icons|rob|7.18.1
code-spell-checker|str|1.5.1
vim|vsc|0.10.5
html-css-class-completion|Zig|1.14.0



---

Steps to Reproduce:

Description:
When searching for multi line strings it appears that the default behavior of the search is to strip newlines from the paste. This prevents the search function from matching the string and therefore prevents multi line search and replaces.

Steps to reproduce:
1. Copy code in "Code used" and paste into a new empty file in vs code several times. 
2. Ctrl F and paste the code in Search.
3. 0 matches found since newlines are stripped.

Text to be searched.
![image](https://user-images.githubusercontent.com/5900814/33323128-1c62f13e-d411-11e7-96ef-2afa5afe7b60.png)

Search and Replace Box:
![image](https://user-images.githubusercontent.com/5900814/33323209-57b3c16e-d411-11e7-8e10-923c029ece56.png)


Code used:
`# tmp = ""
# for r in relationships:
#     if r == relationships[-1]:
#         tmp = tmp + "\n\tnew ListItem() { Value = \"" + r + "\", Text = \"" + r + "\" }\n"
#     else:
#         tmp = tmp + "\n\tnew ListItem() { Value = \"" + r + "\", Text = \"" + r + "\" },"

# out = "return new ListItem[] { " + tmp + " };\n"

# print(out)`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39260</IssueID>
    <Title>Can't paste or use navigation keys when renaming a file</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (af232487ebcdc9758da537ea9a58977c373bc2be, 2017-11-28T06:07:41.602Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
export-index|Bru|0.0.3
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.22
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
tslint|eg2|1.0.24
csharpextensions|jch|1.3.0
vscode-nuget-package-manager|jmr|1.1.5
mssql|ms-|1.2.1
azure-account|ms-|0.2.2
csharp|ms-|1.13.1
debugger-for-chrome|msj|3.5.0
vscode-icons|rob|7.18.1



---

Steps to Reproduce:

1. Open an existing project/folder. ( mine is Angular 4)
2. Select any file in the project
3. Hit enter or right click / rename
4. Hit the Left arrow key a few times

Instead of moving through the filename characters, it collapses the folder.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39253</IssueID>
    <Title>About the theme</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: none
---

The title bar and the menu bar are not very fit with the theme. For example, in visual studio, when I use the dark theme, the title bar and the menu bar are dark, too, while in vs code, they are not. Hope it could be improved, for I think VS code is almost perfect.



</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39250</IssueID>
    <Title>.vscode/settings.json of each folder is ignored in multi-root-workspace</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0 (Insider)
- OS Version: 10.12.6

*Steps to Reproduce:*

1. Add multiple folders to a workspace
2. Add settings inside one of the folders .vscode/settings.json

*Expected result:*
The settings from every `.vscode/settings.json` are applied

*Actual result:*
The settings set in the files `.vscode/settings.json` are ignored.</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39246</IssueID>
    <Title>Rename navigation not working properly</Title>
    <Description>I tried to rename a file and when trying to use navigation keys, the focus stayed on the explorer instead of the text for renaming the file, so when I pressed the End key it went all the way to the end of my project files.

- VSCode Version: 1.19.0-insider
- OS Version: win10

Steps to Reproduce:

1.Press F2 in the explorer or try to rename a file.
2.Press the navigation keys (up, down, left or right arrows, end and home).

![vscode-rename-navigation-problem](https://user-images.githubusercontent.com/20707521/33317140-3aa8e1f4-d42e-11e7-8ed1-1b81498d2cb9.gif)

Reproduces without extensions: Yes</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39237</IssueID>
    <Title>detect and collapse files named with sequential numbering into single item in sidebar</Title>
    <Description>Kindly tag this as a feature-request or close it, if not applicable.
&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
Commit 929bacba01ef658b873545e26034d1a8067445e9
- OS Version: Arch Linux x86_64 

Steps to Reproduce: 

1. Open file in directory containing lots of files of the format filename_%d04.extension
2. Spend time scrolling in search for your code files in the sidebar because the sequence of numbered files is not collapsed into a single item.

Specifically my request is that: VS code detects file patterns of sequentially numbered files and allow collapsing (grouping) all files that match the sequence into a single item in the side-bar (e.g. in the same way as directories)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39226</IssueID>
    <Title>Can't get complete error message which is showed on top of the vscode</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.026Z)
- OS Version: Windows_NT ia32 6.1.7601
---

Hi, when I got error message on the top of vscode, the message is cut off so I can't get the whole message (show in the picture).

 I would like to request the feature to get complete message, such as right click on it and there's `copy full message` menuitem to select, or `expand the message panel` to see the complete message, thank you.

![image](https://user-images.githubusercontent.com/23180780/33301110-dbfa8f6c-d42e-11e7-94c3-bde1e9ad7372.png)
</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39220</IssueID>
    <Title>Ability to perform find/replace only for open documents</Title>
    <Description>VSCode appears to support find/replace for the following:

- Current document
- Selection within current document
- Files in a particular folder(s) (with optional exclude filters)
- Files in entire project (with optional exclude filters)

This is great, but one thing seems missing--the ability to search "all open documents" (as you can with Visual Studio).

Is this possible? If not, could you please consider this a feature request?</Description>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39210</IssueID>
    <Title>Not possible to adjust vertical size of activity bar items. Please provide a way to do it incl. bindable action.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.15063

I find it very strange that it isn't possible to change the heigth of activity bar panes. It's really annoying to have to scroll up and down when I have so many files open that I don't see all the file tabs. 

Please provide a way to adjust the width. It doesn't make sense to have fixed height, there is a lot of unused space especially if after panes are collapsed.

Pic for clarity, arrow indicates where the increase/decrease height functionality should be available. It would be awesome if you also provide action to switch between expanding the height to fill all the unused space and collapsing to the default height so we could bind a hotkey.

Steps to Reproduce:

1.  Open cca 8+ files
2.  Try to increase the heigth of the 'Open editors' pane.


![image](https://user-images.githubusercontent.com/7311676/33290921-867fa0aa-d3c4-11e7-991a-02b0e479d2e0.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39197</IssueID>
    <Title>Cannot go to CSS/SCSS definition</Title>
    <Description>Hi i cannot o to SCSS definition by CTRL+click.

- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.026Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-css-formatter|aes|1.0.0
bracket-pair-colorizer|Coe|0.10.14
githistory|don|0.2.3
live-html-previewer|hdg|0.3.0
minify|Hoo|0.3.0
jkformat|jas|1.0.6
language-haskell|jus|2.4.0
vscode-JS-CSS-HTML-formatter|lon|0.2.3
code-beautifier|mic|1.7.2
marko|pca|0.2.2
nunjucks|ron|0.2.3
guides|spy|0.9.1
html-preview-vscode|tht|0.1.1
bootstrap-3-snippets|wcw|0.1.0
html-css-class-completion|Zig|1.14.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39190</IssueID>
    <Title>Search and Replace keep losing the selection</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: Windows 10
Steps to Reproduce:

1. Select a block of text (you want to replace occurrences of a word only in that block, not in the entire file)
2. Press Ctrl + H (Edit &gt; Replace in files)
3. Insert a word to be replaces, and the replacement in the next input box
4. Click the "In selection" toggle (if not toggled already), eventually click it again

Expected behavior: if you toggle/untoggle the "in selection", the selection should stay. Now it's not the case.

Also if you keep the search and replace dialog open, and try to select other portions of texts to apply the same replacement, it doesn't work.

Other major editors works well for this case, but Visual Studio Code doesn't work.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39186</IssueID>
    <Title>There's no possibility to reorder the folders of a workspace by moving them in the sidebar</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: macOS Sierra - 10.12.6

Steps to Reproduce:

1. open folder
2. add new folder to workspace
3. try to reorder the folders in the sidebar using the mouse (drag and drop)

Reproduces without extensions: Yes</Description>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39181</IssueID>
    <Title>Two instances of vscode are opened, when opening multi root folders from the command line</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: Extensions are disabled
---

Steps to Reproduce:
Run code with "code c:\ c:\windows"

Sometimes it opens just one instance of code, sometimes it opens two instances</Description>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39156</IssueID>
    <Title>Add an option to merge the close, minimize and FS buttons into the Side Bar element on macOS.</Title>
    <Description>I think it would be a good idea if an option/setting was added to merge those buttons, to improve simplicity if users so desired it. Quite a few apps do this (Discord, Spotify, Google Chrome, etc), and I think it would be great to see this added as a setting.</Description>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39151</IssueID>
    <Title>Shift+Click = lose focus of selected code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0
- OS Version: win7x64

All clicks in the GIF, I make with the pressed Shift key:

![shift click](https://user-images.githubusercontent.com/24613274/33240437-9102ed72-d2be-11e7-86e2-2d674c608800.gif)

So, in my opinion, the third click (and sixth one) should select part of code to that place.
Where from? Well, I think it should be from the first click. It will make sense.

Instead of it, the third click with pressed Shift - makes focus of previous selected code to get lost.
Not good.</Description>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39147</IssueID>
    <Title>copy something from vsc and then paste, why with style and background color</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
gotemplate|cas|0.1.1
pgsql|dou|0.0.8
gitlens|eam|6.1.2
Go|luk|0.6.67
cpptools|ms-|0.14.2



---

Steps to Reproduce:
use mac book
1. copy something
2. paste



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39127</IssueID>
    <Title>Build task not finishing</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: 10.13.2 beta 4 (17C79a)

![2017-11-25 14 09 16](https://user-images.githubusercontent.com/15634499/33230015-de4f3adc-d1eb-11e7-8802-305e8cf29e11.png)

Every time I run the build task, the script runs successfully, but it does not stop working and the task remains unsuccessful and remains running.
I think the problem is in the Mac OS beta version. On two of my devices this problem is traced and on both devices a beta version of the OS is installed. And my friends all work correctly on a stable version of the OS.

In the insider build this issue is not solved

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39120</IssueID>
    <Title>Cannot display _ in terminal.</Title>
    <Description>- VSCode Version:1.18.1
- OS Version:Ubuntu 16.10
![2017-11-25 14-03-18](https://user-images.githubusercontent.com/10028968/33227922-6aa900a6-d1e9-11e7-8d6e-7a48760d7812.png)

Steps to Reproduce:

1.print `_` in bash
2.cannot display `_` but it exist.
Reproduces without extensions: Yes</Description>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>25/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39107</IssueID>
    <Title>Does not display row with too large string</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jslint|ajh|1.2.1
git-easy|bib|1.9.1
githistory|don|0.2.3
phpunit|ema|2.1.1
prettier-vscode|esb|0.26.0
php-debug|fel|1.12.1
php-intellisense|fel|2.0.1
php-pack|fel|1.0.1
vue-snippets|hol|0.1.5
beautify|Hoo|1.1.1
crane|Hvy|0.3.8
phpcs|ika|0.7.0
sublime-keybindings|ms-|3.0.3
php-docblocker|nei|1.3.2
laravel5-snippets|one|1.3.4
annotator|ryu|0.10.1
JavaScriptSnippets|xab|1.5.0

(1 theme extensions excluded)


---
I'm editing a CSS file that has a **background-image** as a base64 image but the editor can not display the entire String (either on the horizontal bar or using the **END** or the arrows.

Steps to Reproduce:

1. Download the attached file ([example.txt](https://github.com/Microsoft/vscode/files/1502275/example.txt)).
2. Rename the file **example.txt** to **example.css**
3. Open the file (example.txt) with the editor (visual studio code)


Open the file (example.css) with the editor (visual studio code)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39081</IssueID>
    <Title>Offline Extension Installation fails</Title>
    <Description>
- VSCode Version: 1.18.1
- OS Version: Windows Server 2016 x64

Steps to Reproduce:

1.  code --install-extension C:\Temp\ms-vscode.PowerShell-1.5.1.vsix

Error: connect ETIMEDOUT 13.85.19.92:443
    at Object.exports._errnoException (util.js:1050:11)
    at exports._exceptionWithHostPort (util.js:1073:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)

I can't install the Powershell Extension for vscode offline with a local vsix file. 
- Removed vscode / installed it, again no success with extensions
- Other extensions don't work as well

The Server has no Internet connection.

Similar to this problem:
https://stackoverflow.com/questions/47445070/why-am-i-getting-a-timeout-error-when-i-install-vs-code-extensions-from-vsix-fi</Description>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39080</IssueID>
    <Title>cannot read property openconfigfile of undefined</Title>
    <Description>- VSCode Version: 1.18.1

Steps to Reproduce:

for single file debugging which doesn't need to generate launch.json, seems only `resolveDebugConfiguration` would be called, and if for some case I'd like to abort the launch by returning undefined, it will pop up en error message `cannot read property openconfigfile of undefined`. Any idea why? Thanks.
</Description>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39064</IssueID>
    <Title>request: more customization of build task presentation</Title>
    <Description>I'm using the C++ extension on version 1.18.1 and have successfully set up a default build task. I'd like to further customize it:
* add an option to `presentation.reveal` to only present the output panel if there's an error, as detected by the selected problemMatcher - if my build succeeds I'd rather not pop up the panel.
* add an option to `presentation` to specify the tab in the panel that is shown, if it is revealed - in my case I'd like to show the `Problems` tab rather than the `Terminal` tab (can always switch over to the terminal for more detail if needed, but Problems tab is quicker to skim)

These options aren't currently listed at https://code.visualstudio.com/Docs/editor/tasks but please let me know if there's another way to achieve this. Thanks for listening!</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39063</IssueID>
    <Title>Paths in Debug Console output are not linked</Title>
    <Description>Raised in https://github.com/Dart-Code/Dart-Code/issues/451; filenames in the debug console don't seem to be being linked. I've tried a bunch of different formats/categories to try and make this work, but none seem to:

```ts
this.sendEvent(new OutputEvent(`Danny3 (lib/test.dart:1:1)\n`, "stdout"));
this.sendEvent(new OutputEvent(`Danny3 (lib/test.dart:1:1)\n`, "console"));
this.sendEvent(new OutputEvent(`Danny3 (lib/test.dart:1:1)\n`, "stderr"));
this.sendEvent(new OutputEvent(`Danny3 lib/test.dart:1:1\n`, "stdout"));
this.sendEvent(new OutputEvent(`Danny3 lib/test.dart:1:1\n`, "console"));
this.sendEvent(new OutputEvent(`Danny3 lib/test.dart:1:1\n`, "stderr"));
this.sendEvent(new OutputEvent(`Danny3 ./lib/test.dart:1:1\n`, "stdout"));
this.sendEvent(new OutputEvent(`Danny3 ./lib/test.dart:1:1\n`, "console"));
this.sendEvent(new OutputEvent(`Danny3 ./lib/test.dart:1:1\n`, "stderr"));
```

&lt;img width="479" alt="screen shot 2017-11-23 at 22 11 41" src="https://user-images.githubusercontent.com/1078012/33189539-83653af0-d09b-11e7-9986-de7854e9be84.png"&gt;

The file does exist relative to the workspace root, though from what I've read in related cases, it seems that you no longer do `fs.stat` when deciding to link. I've found many cases suggesting there have been improvements/fixes to this and screenshots showing it working, so I'm not sure what's different about ours.

Are the rules about what formats are detected documented anywhere for me to check? If not, what's the best way to debug?</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39053</IssueID>
    <Title>feature request: maintain editor view state optional</Title>
    <Description>I would like the option of "forgetting the view state" when an editor is closed.

Current behaviour:

1. Open any number of files in the editor, scroll down, select code, etc.
2. Close the editors
3. Re-open the files, they open in the same state. (scrolled, code selected)

I propose a configuration option;

"editor.forgetViewState": ["never","onEditorClose","onExit"]

1. "never" - is the current behavior
2. "onEditorClose" - will forget view state if you close the editor window.
3. "onExit" - even if you have editors open, on next restart they will not reopen
 </Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39028</IssueID>
    <Title>The programe can not run !</Title>
    <Description>when I download vscode in offficial website and run in console but the console says ./code: symbol lookup error: ./code: undefined symbol: g_bytes_unrefce
my glib version is 2.0 os is centos6.5</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39027</IssueID>
    <Title>Multiple .git in project</Title>
    <Description>I have project with multiple .git

```
- project
  - .git
  - folderA
  - folderB
  - subFolderA
    - .git
    - fileA1
    - fileA2
  - subFolderB
    - .git
    - fileB1
```

- how I can switch between this subfolders where .git exist? because now vscode visible ony the .git from main project folder + on left bottom corner I can switch between branch only in main .git (project), no with subfolders</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39022</IssueID>
    <Title>Macros are missing from the Visual Studio Code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Windows 10 PRO 10.0.14393

Steps to Reproduce:

1. There is no Macros in the Visual Studio Code like in the Notepad++

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39018</IssueID>
    <Title>Underscore is not visible in the Terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.18.1
- OS Version: ubuntu 16.04

Steps to Reproduce:

1.type A_B in the terminal
2. you will see A B

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>39000</IssueID>
    <Title>Files deleted and recreated are still flagged as deleted in the explorer bar</Title>
    <Description>Steps to Reproduce:
1. Delete a file in a Git repo.
2. Create the file again in the same location.

Expected result: file is flagged with "M" in the Explorer bar

Actual result: file is flagged with "D" in Explorer bar. The Source Control bar correctly flags the file with "M".

Reproduces without extensions: Yes</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38996</IssueID>
    <Title>files.autoGuessEncoding adds unnecessary modification markers on Git controlled projects</Title>
    <Description>I have a project hosted on GitHub and source controlled with VS Code.
The code files were previously created with some other code editors.
Since VS Code provided Git feature, I migrated to use it to commit and update the project.
After several commission and update, I found that VS Code was unable to detect some files' encoding, which were in GB2312.
Thus I turned on the `files.autoGuessEncoding` setting.
After that, the files were correctly displayed, but many modification marks were added to the editor.

- VSCode Version: 1.18.1
- OS Version: Win10 64bit

Reproduces without extensions: No
![shot](https://user-images.githubusercontent.com/12182730/33156245-cc3b445e-d032-11e7-9c45-9d49092d36b4.PNG)
</Description>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38977</IssueID>
    <Title>Add variable substitution to refer to a specific root folder of a multi-root workspace</Title>
    <Description>Currently, the settings provide the substitution `${workspaceFolder}` for finding the root of the currently active folder. For some projects, you may wish to refer to a different root folder of a multi-root workspace; an example of this: `~/projects/myApp` depends on `~/projects/myNpmPackage`.

With the above scenario, the `myApp.code-workspace` will look as follows:

```json
{
    "folders": [
        {
            "name": "my-npm-package",
            "path": "~/projects/myNpmPackage"
        },
        {
            "name": "app-that-deps-on-package",
            "path": "~/projects/myApp"
        }
    ]
}
```

It would be nice to have the ability to reference another workspace root for things such as source mapping with the `msjsdiag.debugger-for-chrome` extension. A syntax for this could be along the lines of `${workspaceFolder:&lt;folder-name&gt;}`.

Using the aforementioned syntax in `~/projects/myApp/.vscode/launch.json` could look like this:

```json
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug My App in Chrome (Launch)",
            "type": "chrome",
            "request": "launch",
            "preLaunchTask": "build-npm-package",
            "sourceMaps": true,
            "webRoot": "${workspaceFolder}",
            "pathMapping": {
                "/myApp/node_modules/myNpmPackage": "${workspaceFolder:my-npm-package}",
                "/myApp": "${workspaceFolder}/public"
            }
        }
    ]
}
```

This yields the following advantages:

- I no longer have to worry about the relative location of the `myNpmPackage` folder when writing tasks, and can instead simply update `myApp.code-workspace`
- In `tasks.json`, I can now create the `build-npm-package` task to build `myNpmPackage` and copy any changes into the `node_modules` folder of `myApp`, avoiding having to manually copy anything 
- I no longer have to open two copies of source files from `myNpmPackage` while debugging, and am less likely to accidentally edit the `node_modules` version since it won't open when stepping through
- I can use workspace settings that can refer to multiple root folders in `myApp.code-workspace`
- These substitutions would make consolidating `task.json` or `launch.json` files into a single config easier if desired (or if a multi-root workspace supports a workspace-wide `tasks.json` or `launch.json` in the future)</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38969</IssueID>
    <Title>Change debugging tab to be tasks tab</Title>
    <Description>I run a lot of tasks in VSCode. I just can't see why there is such a big difference between running a debug process and a task. And maybe it is just me, but I think pressing &lt;kbd&gt;CMD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;P&lt;/kbd&gt; and then select `Run Task` and then selecting the running task, is just too much.

For optimal experience, I suggest the following:

* A tasks should have a **play** button.
* A background task should have a **play** and **stop** button
* A debug tasks should **play**, **stop**, **resume**, **step into**, **step over**, **step out**, **restart**, **disconnect**.
* A task can depend on an another task.
* Pressing **start** should start the tasks and all its dependencies.
* Pressing **stop** should stop the tasks and all its dependencies.
* Being able to run multiple tasks.

When I debug task begins, the "normal" sidebar for debugging is overlayed over this task list.</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38965</IssueID>
    <Title>Feature Request: Limit search to modified files</Title>
    <Description>When doing a search, it would be useful to have an option to limit the search to files that have been modified since the last commit.

A toggle could be added to the 'files to include' field - similar to the 'use ignore files' and 'use exclude settings' toggles in the 'files to exclude' field.

It may also be helpful to limit the search to files that are currently open. 

![image](https://user-images.githubusercontent.com/20398475/33134225-269203f0-cf6d-11e7-8fc9-b2d66560900b.png)
</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38955</IssueID>
    <Title>error TS5023:Build:Unknown compiler option '-'</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
tslint|eg2|1.0.23
csharp|ms-|1.13.1
csharp2ts|raf|0.0.19

---
When creating a TypeScript project following the guide [here
](https://code.visualstudio.com/Docs/languages/typescript) the Tasks: Run Build Tasks... results in and error TS5023:Build:Unknown compiler option '-'

Steps to Reproduce:
The problem occurs when the source code folder path contains ' - ' character embedded surrounded by spaces in the path string. My default path for a OneDrive for Business path. 
"C:\Users\LarryA\OneDrive - Intact Partners Inc\VSCprojects\tsconfig.json" 

This fails: "C:\Users\LarryA\OneDrive - Intact Partners Inc\VSCprojects\tsconfig.json" 
This passes: "C:\Users\LarryA\OneDrive-IntactPartnersInc\VSCprojects\tsconfig.json"

1. Use the folder configurations above.
2. Follow the guide to create the HelloWorld project ( https://code.visualstudio.com/Docs/languages/typescript )
3. Execute the Task: Run Build Tasks... as directed. The terminal window reports the error.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38926</IssueID>
    <Title>Better merge notification popped up after upgrade to latest insiders</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (55866fc4c69056a20e8464a283ca3d874d1f8dcb, 2017-11-22T05:13:55.378Z)
- OS Version: Windows_NT x64 10.0.17040
---

When vscode re-opened after the latest insiders upgrade, I was presented with this message:
![image](https://user-images.githubusercontent.com/641685/33113949-942124fe-cf28-11e7-8f68-1c646dc1d5d4.png)

Better merge has been gone for a long time, and I verified I don't have any remnants of it in my `.vscode-insiders/extensions` folder

The only change I see in that area was: https://github.com/Microsoft/vscode/commit/2fd817b55752e571e9a434e8658c5f2511d2f70b

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38919</IssueID>
    <Title>Autocomplete bug in PHP</Title>
    <Description>

- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---
Pressing the "&gt;" is very common when writing php and html.

whenever i use this sign for example to close an html tag and hit "enter", an autocomplete window opens and if i ignore it, the string "$_COOKIE" is automatically printed, which foreces me to manually delete it or press the "esc" key to close the autocomplete window.

This is intrusive to my workflow and slows down my work.

You can see it in the attached image.

Please fix this in the next update.

Thank you !

![bug](https://user-images.githubusercontent.com/19216444/33109496-87a92dda-cf4a-11e7-89e4-72e820c70ffa.jpg)

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38915</IssueID>
    <Title>Output window can not show some string, but in messy code </Title>
    <Description>![20171122111943](https://user-images.githubusercontent.com/5728237/33108465-347e1026-cf77-11e7-8bcf-980f8f74ff47.png)

extension: Code Runner
</Description>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38904</IssueID>
    <Title>Allow the same workspace to be open in multiple windows</Title>
    <Description>Being able to open the same workspace in multiple windows is very helpful when working on multiple parts of the codebase at the same time.


- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:09.760Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
php-debug|fel|1.12.1
php-intellisense|fel|1.5.1
auto-close-tag|for|0.5.3
code-runner|for|0.7.2
Angular1|joh|0.2.0
mssql|ms-|1.2.0
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.4.0
code-spell-checker|str|1.4.12
markdown-all-in-one|yzh|0.11.1



---

Steps to Reproduce:

1. Open a workspace in one window
2. Open a new window
3. Try and open the same folder in that window

Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38903</IssueID>
    <Title>Does not apply completion code action when clicked on</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (c8c6b13528c03986b8dad654cb1d3e796e8dbe97, 2017-11-20T06:15:17.286Z)
- OS Version: Linux x64 4.4.0-21-generic
- Extensions: none
---

Steps to Reproduce:

1. Create a file `b.d.ts` containing `export function foo(): void;`.
2. Create a file `a.ts` and type `fo`, then ctrl-space for completions.
3. Arrow down to `foo` and hit enter. The completion is accepted and a code action creates an import.
4. Clear `a.ts` and start again. Type `fo`, ctrl-space for completions, then *click* on `foo`.
5. The completion is accepted but the import is not added.</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38901</IssueID>
    <Title>Ruler disappears after reloading window with zoomLevel &lt; 0</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.18.0
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Set a ruler in user settings
2. Zoom out
3. Reload window

Any change to the ruler length fixes it temporarily.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Related: #9634</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38897</IssueID>
    <Title>(macOS) Can't view 'BS' in vscode</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: macOS 10.13.1

Steps to Reproduce:

Casual typing in default Chinease input method.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

Maybe due to the default Chinese input method, I'm keep tying 'BS' (0x08 in ASCII) in vscode, which is annoying but I can't view.

In vscode:
![jietu20171120-141005](https://user-images.githubusercontent.com/4904877/33064693-8434a3f0-cee1-11e7-919b-1c1cbd4df823.jpg)

In Sublime Text:
![jietu20171120-140935](https://user-images.githubusercontent.com/4904877/33064713-917e89cc-cee1-11e7-8f37-97e303c52648.jpg)</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38896</IssueID>
    <Title>check the update on mac osx 10.13 </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.19.0-insider
- OS Version: mac osx 10.13

Steps to Reproduce:

1.when i click check update,
2.show the error: 'Could not create temporary directory:权限被拒绝'

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Could not create temporary directory: 权限被拒绝
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38892</IssueID>
    <Title>Swapped ESC and CapsLock keys are not detected correctly (swapping partly ignored)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
  - Version 1.18.0
  - Commit dcee2202709a4f223185514b9275aa4229841aa7
  - Date 2017-11-08T12:44:48.751Z
  - Shell 1.7.9
  - Renderer 58.0.3029.110
  - Node 7.9.0
  - Architecture x64
- OS Version: Arch Linux

Steps to Reproduce:

1. I run KDE. In my Keyboard system settings, I have CapsLock and Escape swapped.
1. In VSCode, open a file, type something with CapsLock turned off. You see lowercase letters as expected
1. Press `Ctrl+F` to open the quick find bar that opens at the top right of the editor window.
1. Search for something. It doesn't need to match anything in the current document
1. Press the `CapsLock` key on your keyboard (which should be mapped to Escape) to close the "find bar". *The bar stays open*.
1. Press the `ESC` key on your keyboard (which maps to CapsLock) and the "find bar" closes. However, *now CapsLock is turned on*.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38884</IssueID>
    <Title>"Go to file" opener behaves oddly with workspaces</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.22
vscode-eslint|dba|1.4.3
gitlens|eam|6.1.2
python|ms-|0.8.0



---

Steps to Reproduce:

1. Open a workspace with several directories
1. Observe that the file opener works for a subset of the path:
![image](https://user-images.githubusercontent.com/25331532/33083327-13e3a06c-cead-11e7-9514-8ef46c1f1420.png)
1. Observe that if you include the root directory (that is included in the workspace) in the path, no results are found:
![image](https://user-images.githubusercontent.com/25331532/33083364-30f221ec-cead-11e7-92cc-401f7d5b3317.png)

I would expect to always find results, even in the second case.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38879</IssueID>
    <Title>Diff is not encoding aware</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: ubuntu 16.04

Steps to Reproduce:

1. Create repo with file in CP1251 encoding (windows 1251)
2. Save it and commit to repo.
3. Open in vs code, lines with cyrillic symbols will have blue diff stripe. 

![image](https://user-images.githubusercontent.com/7345761/33078394-9a0c7070-cee3-11e7-9573-0dc5e920a856.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Some cyrillic text:
```
hello world.
привет мир.
```

Probably relates to #21146
See also https://github.com/JohnstonCode/svn-scm/issues/35#issuecomment-346043458</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38877</IssueID>
    <Title>QuickOpen: Allow any order for search terms</Title>
    <Description>It could save a lot of time if the search terms in quickopen was not taken in order. I explain:

My project is like so:
![tree](https://user-images.githubusercontent.com/7150017/33075214-09890cb2-cec9-11e7-893e-e7dadcf9cc36.png)

If I search for `index` everything is fine, I get the expected 2 `index.js` files:
![result_index](https://user-images.githubusercontent.com/7150017/33075281-3919d9fc-cec9-11e7-90fa-f6decfdce61d.png)

If I search for `bar index`, also I get the right `index.js` file:
![result_ok](https://user-images.githubusercontent.com/7150017/33075320-5761c226-cec9-11e7-8e2c-7083aee921e5.png)

But often during my development i'm searching first by file name, and then I remember that there is not only one file named like this in my project, so I want to specify the "module" afterwards like this:

![result_ko](https://user-images.githubusercontent.com/7150017/33075360-7d0643c6-cec9-11e7-9c69-f61c211b65bb.png)

I think it would be a great idea to show the same results for `index bar` as the ones for `bar index` but only if there is no better matches.

Some example to illustrate with the following tree:

```
project/
├── indexable/
│   ├── index.js
│   └── bar.js
└── bar/
     ├── index.js
     └── bar.js
```

Search terms: `index bar`
Results:
`1st/` **index**able/**bar**.js (because the order of terms matches the file path)
`2nd/` **bar**/**index**.js  (as there is two matching terms, but in wrong order)

Search terms: `indexbar`
Results:
`1st/` **index**able/**bar**.js
_bar/index.js_ is not a match cause it does not match any of the terms
</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38873</IssueID>
    <Title>Feature request: Split Search &amp; Explorer side bars, Allow more than one row for 'Open Tabs'</Title>
    <Description>Hi please if you could allow the 'Explorer' side bar be to the right of the editor and the 'Search' side bar be to the left of the editor it would be really nice and cool. I constantly use both of them and it's pretty annoying I can only have 1 of them at the same time.

Also if you could please add more flexibility to the Open Tabs section on top of the editor - to allow more than 1 row for all open files to fit in one screen. Because the horizontal scroll for open tabs is very unfriendly and annoying and it's very easy to miss-click.

Thank you very much,
Your sincere user Stepan</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38866</IssueID>
    <Title>Please redesign toolbar for dark theme</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.026Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 
Extension|Author (truncated)|Version
---
Hi,
I use dark theme like "Monokai" and I have idea to redesign top toolbar.

# Current toolbar:
![image_109](https://user-images.githubusercontent.com/5067331/33070174-61955296-cecc-11e7-8853-dca2e9b9270d.png)

# Idea 1:
This is good because line of (File, Edit, Selection &amp; ...) move to top.
Top color change from blue to dark.
![demo-0](https://user-images.githubusercontent.com/5067331/33070249-a6e410bc-cecc-11e7-8ebe-44c64996a564.jpg)

## Idea 2:
Top color change from blue to dark.
![demo-1](https://user-images.githubusercontent.com/5067331/33070288-c556f546-cecc-11e7-8f32-1efe875179af.jpg)


Thank you</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38864</IssueID>
    <Title>Launching multiple debugger sessions</Title>
    <Description>Actually I have a workspace with multiple folders. For debugging my application, I need to start an API and my Website via grunt tasks. Now I want to start the debug-session with the launch.json and compound config:

launch.json for website:
```js
{
    // Verwendet IntelliSense zum Ermitteln möglicher Attribute.
    // Zeigen Sie auf vorhandene Attribute, um die zugehörigen Beschreibungen anzuzeigen.
    // Weitere Informationen finden Sie unter https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Site",
            "type": "chrome",
            "request": "launch",
            "url": "http://localhost:82/landing",
            "sourceMaps": false,
            "webRoot": "/www",
            "runtimeArgs": [
                "--remote-debugging-port=9222"
            ],
            "preLaunchTask": "grunt: serve"
        }
    ]
}
```

launch.json for api:

```js
{
    // Verwendet IntelliSense zum Ermitteln möglicher Attribute.
    // Zeigen Sie auf vorhandene Attribute, um die zugehörigen Beschreibungen anzuzeigen.
    // Weitere Informationen finden Sie unter https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "Start API and XDebug",
            "type": "php",
            "request": "launch",
            "port": 9000,
            "preLaunchTask": "grunt: serve",
        }
    ]
}
```

For both I need to execute the grunt tasks "serve".
How can I achive a compound launch, whoch executes "preLaunchTasks" in different folders.

My workspace structur looks like this:
![image](https://user-images.githubusercontent.com/956158/33068096-85ba7b86-ceb0-11e7-903f-2a0ffd41e980.png)

</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38861</IssueID>
    <Title>Broken Font: Colored artefacts between letters</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:34:22.110Z)
- OS Version: Linux x64 4.13.0-1-amd64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
githistory|don|0.2.3
vscode-emacs|hir|0.1.1
vscode-clang|mit|0.2.2
cpptools|ms-|0.14.2
debug|web|0.21.2

I am using a machine with 2560x1440 resolution.

![screenartefactsvscode](https://user-images.githubusercontent.com/9788864/33066668-3b93af54-ceac-11e7-89b2-e51d474ac442.png)

---

Steps to Reproduce:

1. open any file with cpp code, e.g. a standard Makefile
2. zoom in and out
3. At zoom 0 the artefacts usually do not accure, at zoom -2 they do. 

Since the screen resolution is quite high, I need to set VS Code to zoom -2. You can see the error well in the picture attached, after "E" in $MAKE and also after "M". This artefacts seem to appear  at random positions.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38856</IssueID>
    <Title>Error when searching extensions by 'beautiful' keyword</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (d294b25f2dd5c96d89bd23f82bd5fd2c0958a4bd, 2017-11-21T06:32:57.368Z)
- OS Version: Linux x64 4.13.12-200.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
bracket-pair-colorizer|Coe|0.10.14
EditorConfig|Edi|0.11.1
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.22
vscode-wakatime|Wak|1.1.21
project-manager|ale|0.23.0
npm-intellisense|chr|1.3.0
gitignore|cod|0.5.0
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
gitlens|eam|6.1.2
vscode-npm-script|eg2|0.3.3
node-module-intellisense|lei|1.4.0
mssql|ms-|1.2.1
azure-account|ms-|0.2.2
vscode-icons|rob|7.18.1

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Open VSCode
2. Go to Extensions explorer
3. Start typing 'beaut' in `Search Extensions in Marketplace` text input
4. Error message `Cannot read property 'filter' of undefined` appears

The issue is not reproducible with other keywords.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38844</IssueID>
    <Title>can the debug panel change it's position?</Title>
    <Description>It always conceal some file tab.</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38842</IssueID>
    <Title>Additional API to access editor `when` state from extensions</Title>
    <Description>I'm working on a vscode extension that allows programming via voice. The design of the vscode api and commands is almost ideal, however it is vital that the voice control software knows the state of the editor.

Different phrases need to trigger different commands based on what part of the editor is in focus, whether or not the file is read only, etc. Essentially a ton of different checks that land up looking identical to the `when` clause in the key configurations. Unfortunately the logic to check which mode it is in needs to be available during sentence parsing since it can dramatically affect the context of the command being taken.

The ideal for me would be a `queryCurrentState()` function which returns a list of enabled states/flags (unsure of what they're called internally): `['editorHasSelection', 'editorTextFocus']`</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38835</IssueID>
    <Title>VSC polluting project root dir</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Visual Studio Code should not make the .vscode dir in directories added to the project, when working in a workspace. The projects I work on often have multiple toolchains (3 to 5+ is quite common). I usually use a "./project_name/Toolchains" folder, common in these scenarios. Which means VSC lives in "./project_name/Toolchains/Visual Studio Code" in my structure, which means I want temporary VSC data there as well. Currently the .vscode dir is polluting my project root directory, which is not favorable. Toolchains should live in their project directory, not in the project root in my opinion.

Steps to Reproduce:

1. I have a workspace in "./project_name/Toolchains/Visual Studio Code/my-project.Test My Environment.code-workspace"
2. I added my project root ("./project_name") as folder to my workspace
3. I save something related to a project (folder/workspace/etc)
4. .vscode dir appears in ./project_name

Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38827</IssueID>
    <Title>version 1.18 onwards requires DNS and online connectivity to install VSIX files</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Windows 10 Enterprise Version 1703

Steps to Reproduce:

1.  Without an internet connection, attempt to install Powershell 1.5.1 vsix file either in Application or by running "code --install-extension "D:\installs\PowerShell-1.5.1.vsix"
2.  The following error occurs when going from command line:
Error: getaddrinfo EAI_AGAIN marketplace.visualstudio.com:443
    at Object.exports._errnoException (util.js:1050:11)
    at errnoException (dns.js:33:15)
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:73:26)

If you enter in a hosts file entry you get an error connecting.  I am using this in an environment with no internet connectivity capabilities.

If I downgrade to version 1.17.2 I am able to install the 1.5.1 Powershell extension fine.  This online check seems to be part of the new version

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38824</IssueID>
    <Title>Tasks keeps running forever</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 17.3.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-runner|for|0.8.4
cpptools|ms-|0.14.2
Ruby|reb|0.15.0



---

Steps to Reproduce:

1. Create a dummy foreground shell task (echo test)
2. Run the task
3. Try to run again

Reproduces without extensions: Yes

When I run the task, vscode thinks it is still running even after it has successfully finished. In order to be able to start it again, I have to manually terminate it. This issue only affects the Mac version, on Linux the behavior is as expected, the task ends and the terminal can be reused by another task.</Description>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38823</IssueID>
    <Title>Ctrl+Q should confirm</Title>
    <Description>Ctrl+Q (one key away from Ctrl+W) quits the application, including multiple open windows, without confirming. This is my nemesis in a number of applications, not just VS Code. I think a confirmation prompt should be added, at least if there are multiple windows open.

&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Ubuntu 14.04

Steps to Reproduce:

1. Press Ctrl+Q
2. Lose a bunch of windows

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38817</IssueID>
    <Title>Extension viewlet breaks</Title>
    <Description>1. Search for `a`
2. Scroll a few pages down

![image](https://user-images.githubusercontent.com/22350/33040407-4516cbae-ce3b-11e7-9378-430915c5a101.png)
</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38816</IssueID>
    <Title>Debug Hover Widget constructed eagerly on startup</Title>
    <Description>**Problem**
The debug hover widget is constructed eagerly on startup, even though it does not need to be shown yet. The constructor alone takes ~30ms on my machine

![screen shot 2017-11-20 at 11 35 19 am](https://user-images.githubusercontent.com/12821956/33037595-e956bd6e-cde6-11e7-859c-8681be917101.png)


</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38815</IssueID>
    <Title>Suggest widget constructed eagerly on startup</Title>
    <Description>**Problem**
The suggest widget is constructed eagerly on startup, even though it does not need to be shown yet. The constructor alone takes ~10ms on my machine

![screen shot 2017-11-20 at 11 30 20 am](https://user-images.githubusercontent.com/12821956/33037428-5f586bbc-cde6-11e7-8cf4-e27d26454569.png)
</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38814</IssueID>
    <Title>Find widget constructed eagerly on startup </Title>
    <Description>**Problem**
The find widget is constructed eagerly on startup, even though it may not be visible. The constructor alone takes ~10ms on my machine</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38803</IssueID>
    <Title>Bogus settings warnings</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (c8c6b13528c03986b8dad654cb1d3e796e8dbe97, 2017-11-20T05:13:59.281Z)
- OS Version: Windows_NT x64 10.0.17035
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
gitlens|eam|6.1.1
vsc-material-theme|Equ|1.1.2
material-icon-theme|PKi|3.0.0
vscode-open-in-github|ziy|1.3.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Open a workspace that you used previously 
2. Go to the problem panel
-&gt; All the commonly Used settings are reported as `Duplicate object key` problems on `vscode://defaultsettings/0/settings.json`

Reproduces without extensions: Yes</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38794</IssueID>
    <Title>File &gt; Save and File &gt; Save Workspace As share the same keyboard shortcut</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
mssql|ms-|1.2.1
csharp|ms-|1.13.1
PowerShell|ms-|1.5.1
team|ms-|1.122.0
azurerm-vscode-tools|msa|0.3.7
debugger-for-chrome|msj|3.5.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38790</IssueID>
    <Title>may i add a new menu after help</Title>
    <Description>may i add a new menu with a tree  after help when i code a extension.

such as this pic

![image](https://user-images.githubusercontent.com/4559753/33024943-744e6b8c-ce47-11e7-9aed-20ef4b6ffed6.png)
</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38758</IssueID>
    <Title>please improve touchpad  performance on windows10</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.16299

In Windows 10，the touchpad has no “precision touch”，and very choppy。</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38754</IssueID>
    <Title>Feature request: allow installing extensions without reloading</Title>
    <Description>
    </Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38748</IssueID>
    <Title>--debug-brk is deprecated</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18
- OS Version: CentOS 7.4.1708

using `nodemon` launch debug show DeprecationWarning
```
`node --inspect --debug-brk` is deprecated. Please use `node --inspect-brk` instead.
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38738</IssueID>
    <Title>Mini-map, when moves, covers some code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0-ins
- OS Version: win7x64

The work space is split in two.
So, when you move the border between them, mini-map can cover 2-3 symbols of code, those which are the last in the most long lines.

![mini-map hides some code](https://user-images.githubusercontent.com/24613274/32999787-a53a5a44-cdac-11e7-84fa-934f2efc6f07.gif)

So it can be very confusing for the developer.</Description>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38736</IssueID>
    <Title>Search does not support multiline regular expressions</Title>
    <Description>It would be useful to search across multiple files with multiline regular expressions.  Right now you can only do it with single line regexps.  Please add a button to toggle multiline.</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38729</IssueID>
    <Title>Freeze and a lot lag since last update !!!</Title>
    <Description>hi since the last update, i have a lot of lag and freeze , when a jump line in vsc !
befor was very fast rendering color bracket, and some texture element, but now its very slow.

When i jump line, its freeze about (4 to 6 second !)

plz how i can come back to last stable version?, do you have a link ?

i desactivate all plugin and its not a plugin..


edit: Fixed, remove all Breakpoints.
You have a mistake in Breakpoints rendering thats freeze !
</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38725</IssueID>
    <Title>feature request: open debug panel in bottom view instead of left view</Title>
    <Description>The debug view on the left is rather inconveniently sized for usage, it would be much more convenient to have an option to move it into the bottom panel (preferably having it visible along with Debug Console if possible).  Same goes for the Source Control panel.  Both are very inconvenient to use in the left view.

(if there's a way to move these already, please let me know)
</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38718</IssueID>
    <Title>Issue with font</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Parrot OS 3.10 (Debian based ) kernel 4.13

Reproduces without extensions: No
There is an issue with vscode fonts. There are unwanted lines on menu as well as code. This seems to happen only in the OS I am using. In Ubuntu it works fine.
Screenshot attached.
![screenshot at 2017-11-19 18-53-59](https://user-images.githubusercontent.com/23965016/32991140-e15e5eae-cd5b-11e7-9ea3-486aded72c55.png)
</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>19/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38717</IssueID>
    <Title>Setting based on file extension support</Title>
    <Description>Currently I want to disable javascript validation only on files that have an specific file extension,

For example I associate the extension **.js.test** to javascript using glob pattern like so
```
   "files.associations": {
        "*.js.test": "javascript"
    }
```
Now I want to disable javascript validation but not in all javascript files just on the ones that end with **.js.test** is there a way to do so?

I've seen other suggestions of implementations for this like
```
   "files.settings": {
        "*.js.test": {
             "javascript.validate.enable": false
         }
    }
```
but as far as I know, this is not possible at the moment. 

Is there a way to archive this without having to create a custom language extension?

</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38716</IssueID>
    <Title>xhr failed when trying to add extention</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.18.1
- OS Version:ubuntu 16.04

Steps to Reproduce:

1.![vscode :XHR failed](https://user-images.githubusercontent.com/26049458/32990726-2a197a6a-ccf4-11e7-9ae4-d4efb3c7dadf.png)
2.![vscode :XHR failed](https://user-images.githubusercontent.com/26049458/32990736-49635602-ccf4-11e7-8601-e81ce914ee06.png)
3.
![1111](https://user-images.githubusercontent.com/26049458/32990877-b86b3c34-ccf6-11e7-967b-8a67090489a0.png)
4.
![11111](https://user-images.githubusercontent.com/26049458/32990879-bec2d34e-ccf6-11e7-9542-05ee2f764285.png)

please help me
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38704</IssueID>
    <Title>Error TS5023 compiling typescript in a folder with a hyphen in the name</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Window 10 Enterprise, 1709, 16299.64
- node.js v9.2.0

Steps to Reproduce:

1. Create a folder with a hyphen in the name with at least one space from both sides. For example "C:\Test - TypeScript"
2. Create a typescript project inside and run a build task.
3.  The project does not compile:
&gt; &gt; Executing task: tsc --watch -p "d:\Test - TypeScript\tsconfig.json" &lt;
&gt; 
&gt; error TS5023: Unknown compiler option '-'.
&gt; The terminal process terminated with exit code: 1
&gt; 
&gt; Terminal will be reused by tasks, press any key to close it.

4. When I execute 
&gt;  tsc --watch -p "d:\Test - TypeScript\tsconfig.json"

from the command prompt, it does not return an error.

5. When the folder name does not have space characters around a hyphen, build task completes without an error inside the VSCode.

&gt; Executing task: tsc --watch -p "d:\Test-TypeScript\tsconfig.json" &lt;
04:00:13 - Compilation complete. Watching for file changes.


 
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38697</IssueID>
    <Title>Underscores are missing inside the terminal</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:44:48.751Z)
- OS Version: Linux x64 4.8.0-53-generic
- Extensions: terminal

Extension|Author (truncated)|Version
---|---|---
LiveServer|rit|3.0.0



---

Steps to Reproduce:

1. After i updated the editor to the latest version underscores ( _ ) inside the terminal are missing 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38693</IssueID>
    <Title>Text cursor disappears after autocomplete mouse selection</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: Extensions are disabled
---

Steps to Reproduce:

1. Type something until the autocomplete popup appears.
2. Select an item in the autocomplete popup using the mouse.

![vscode-autocomplete-cursor-bug](https://user-images.githubusercontent.com/3865454/32983155-a4de2552-cc77-11e7-9390-c83c6f51f3c6.gif)

After the selection is inserted into the document, the text cursor disappears. Pressing random keys doesn't change the document in any visible way. I have to mouse click in the document for the text cursor to reappear.

Using only the keyboard for making autocomplete selections works as expected: the text cursor is never lost.

Reproduces without extensions: Yes
</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38680</IssueID>
    <Title>Font display is weird.</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:34:22.110Z)
- OS Version: Linux x64 4.13.0-kali1-amd64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|ms-|0.8.0
cpptools|ms-|0.14.2
markdown-all-in-one|yzh|0.11.1

---

Steps to Reproduce:
1. just startup code software
2.
![selection_003](https://user-images.githubusercontent.com/29792493/32980056-f643e30a-cc9a-11e7-95cb-65da6df8963b.png)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>19/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38679</IssueID>
    <Title>Laptop's touchpad scroll doesn't smooth</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Win10 1709

Problem:
when you scrolling with laptop's touchpad, it just doesn't smooth,
but it was smoothly in other software like chrome.

Regards.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>19/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38677</IssueID>
    <Title>Icon is indistinguishable in the "open with" list</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: Win10 1703

Icon in current version has too few colors, which make it  indistinguishable against the Monochrome background in the "open with" list.
![openwith](https://user-images.githubusercontent.com/6966728/32978897-1b89c2b6-cc86-11e7-9bd4-d8b9e0ed960a.jpg)
</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>19/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38665</IssueID>
    <Title>vscode.workspace.textDocument is missing documents in "Open Editors" that haven't been activated yet</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1.
- OS Version: Windows

Steps to Reproduce:

1. Start debugging an extension that references vscode.workspace.textDocuments with a workspace that has multiple files open.

Bug: vscode.workspace.textDocuments doesn't include the files listed under "Open Editors" until the file is activated the 1st time. Our extension wants to check if there are any C++ files open, even if they haven't been given focus yet.

According to https://github.com/Microsoft/vscode/issues/10304 it sounds like the docs in Open Editors should belong to textDocuments.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes (uh...well, you need at least one extension, because the bug is with the extension APIs).</Description>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38654</IssueID>
    <Title>Extension: Disable virtual file from reloading on refocus</Title>
    <Description>I have an extension, that opens a "Virtual File" (I think that is what it is called). The file has a input textbox and which when you type filters a table by showing/hiding rows. When you switch tabs, then come back to the virtual file, the input has been cleared and the table reloaded. 

Is there a way to make it so that the tab doesn't get reloaded when it is refocused?

Here is how I am initiating the creation of the virtual file:

```ts
    protected static async openVirtualFile(path: string, title: string, content: string) {
        let uri = Uri.parse('laravel-artisan://artisan/' + path);
        let doc = await workspace.openTextDocument(uri);
        let edit = new WorkspaceEdit();
        let range = new Range(0, 0, doc.lineCount, doc.getText().length);
        edit.set(uri, [new TextEdit(range, content)]);
        workspace.applyEdit(edit);
        commands.executeCommand('vscode.previewHtml', uri, ViewColumn.One, title);
    }
```</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38647</IssueID>
    <Title>Empty tab bar using native tabs (reproducible on high sierra)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: macOS 10.13.1

Steps to Reproduce:

1. Check 'Open folders in tabs instead of new windows' in Finder Preferences (if not set)
2. Open vscode
3. In preferences set `"window.nativeTabs": true` (restart vscode if needed)
4. Ensure the vscode tab bar is showing, click View-&gt; Show Tab Bar
5. Observe empty tab bar with no 'welcome' or `+` symbol on the right side

Image of empty tab bar:
&lt;img width="901" alt="screen shot 2017-11-17 at 10 15 46 am" src="https://user-images.githubusercontent.com/13921582/32962254-a157f5b8-cb80-11e7-8daf-0fcca721ddbd.png"&gt;

6. Click the anywhere on the tab bar, observe a new window is opened
7. Observe only 1 window can be in the foreground at a time

However switching between 2 windows can still be done via the Window menu:
&lt;img width="223" alt="screen shot 2017-11-17 at 10 20 43 am" src="https://user-images.githubusercontent.com/13921582/32962359-0656d3e4-cb81-11e7-97d3-368871125758.png"&gt;

Further to clicking on the empty tab bar, clicking File-&gt;New Window also opens a window with same behaviour (I believe this should open a tab with `window.nativeTabs:true`).

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38643</IssueID>
    <Title>Git status icons are stale after adding new file + commit</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:23:26.125Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
tslint|eg2|1.0.22
vim|vsc|0.10.4

Steps to Reproduce:

1. Open folder in VSCode that is being tracked by git
2. Open VSCode terminal
3. `touch test.txt`
4. `git add test.txt`
5. `git commit`

RESULT: green 'U' icon still displays next to test.txt file in file explorer and the file is highlighted green
EXPECTED: there should be no icon next to test.txt file after committed and no filename highlighting

NOTE: the stale icon disappears after pulling or pushing. The stale icon stays present even after opening file.

Reproduces without extensions: Yes</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38640</IssueID>
    <Title>Internal terminal can not show "under-line( _ )" on screen</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: Fedora 27 and Fedora 26

Steps to Reproduce:

![screenshot from 2017-11-18 00-22-37](https://user-images.githubusercontent.com/19546977/32957431-a53551dc-cbf6-11e7-8972-248e2ce2c676.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38635</IssueID>
    <Title>Can't search keyword SQL in extensions</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0-insider
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. Search extention with keyword "sql"
2. Error "Cannot read property 'filter' of undefined"

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38627</IssueID>
    <Title>Syntax selection shortcut: typing `md` does not auto-suggest markdown</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.1
- OS Version: macOS

Steps to Reproduce:

1. &lt;kbd&gt;command&lt;/bkd&gt; + K + M
2. type `md`
3. markdown syntax is not suggested.

If I do the same thing with `js`,  both **J**ava**S**cript &amp; **JS**ON are suggested</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38624</IssueID>
    <Title>updating can't find new version although update checker does find a new one</Title>
    <Description>- VSCode Version: 1.18.0-1510145176
- OS Version: Xubuntu 16.04 x64

atm. when you launch CSCode it says there's an update, when you update it says it already has the newest version. restarting VSCode, and it's the same.
I think it's not updating correctly.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38621</IssueID>
    <Title>Travis extensions tests failing</Title>
    <Description>Apologies if this isn't a Code issue (or the right repo to raise against), but I don't even know where to start debugging this. I'm running some basic extension tests on Travis and at some point recently they started failing in a strange way. Where I would normally see test output (green ticks, test names) I now see this:

```text
[ null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  [ null, { name: 'Error' } ] ]

No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.

The build has been terminated
```

The full build output is here:

https://travis-ci.org/Dart-Code/Dart-Code/jobs/303521910

It's fine on Windows/Mac, but failing on Linux. I don't think the change that first got the fail ([here](https://github.com/Dart-Code/Dart-Code/commit/96d39b28e61c83497cff8c9dc5af76176534eb49)) is the cause.</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38616</IssueID>
    <Title>Can‘t install extension without internet access anymore</Title>
    <Description>- VSCode Version: 1.18.1
- OS Version: Windows 7

Steps to Reproduce:

1. Have no internet connection
2. Try to install an extension via command line (with `—install-extension`)

When you do this, you get an error like this:

```
code --install-extension vscode-icons.vsix
Error: getaddrinfo EAI_AGAIN marketplace.visualstudio.com:443
    at Object.exports._errnoException (util.js:1050:11)
    at errnoException (dns.js:33:15)
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:73:26)
```

Extension doesn‘t seem to matter. I‘ve also verified that the extension doesn‘t get installed anyways.

Unfortunately, in my situation I do not have any internet connection.

This used to work with version 1.17.2.</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38613</IssueID>
    <Title>Cut and paste</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Windows 7

Steps to Reproduce:

1. Cut some text
2. Paste and nothing gets pasted

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38612</IssueID>
    <Title>Error with font rendering</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:44:48.751Z)
- OS Version: Linux x64 4.10.0-37-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vue-snippets|hol|0.1.5
vscode-icons|rob|7.18.1

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Launch VS code
2. Open some random file

Result:

![screenshot from 2017-11-17 18-45-05](https://user-images.githubusercontent.com/12984316/32945834-8487b166-cbc7-11e7-8a7d-c74ab68f4240.png)

As you can see there are some strange stripes at the end of line 2 at webpack.base.conf. And this is the welcome page:

![screenshot from 2017-11-17 18-48-24](https://user-images.githubusercontent.com/12984316/32945927-eaa8612a-cbc7-11e7-8c9b-ca118d7fb72d.png)
</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38600</IssueID>
    <Title>xhr failed when trying to add extention</Title>
    <Description>- VSCode Version: Code 1.18.1 (929bacba01ef658b873545e26034d1a8067445e9, 2017-11-16T18:32:36.023Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. open .go file &gt; install extention &gt; fail
2.</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38598</IssueID>
    <Title>VS Code not closing after running extension tests on Linux</Title>
    <Description>- VSCode Version: 1.18.0
- OS Version: Ubuntu 14.04

Steps to Reproduce:
1. Ubuntu 14.04 VM (with Java 8)
2. clone `https://github.com/forcedotcom/salesforcedx-vscode`
3. `npm install`
4. `npm run compile`
5. `cd packages/salesforcedx-vscode-core/`
6. `npm run test`

We are running a Travis CI build for testing our extension and recently started noticing failing builds on Linux. After a failing test, the VS Code window executing the test does not close. This makes the test script hung/stuck. Eventually it gets killed by Travis because of lack of output.

I've setup a local Ubuntu 14.04 VM and I'm able to reproducing the issue. The VS Code windows is not closed and test execution gets stuck. When I close the window manually, test execution continues and the following output is logged:
`Tests exited with code: 0`

This seems to happen only on Linux. I'm unable to reproduce on macOS and Windows. The tests finish successful on macOS and Windows. Thus, I'm suspecting something specific to the Linux environment.

For completeness, here is the log output:
```
 npm run test

&gt; salesforcedx-vscode-core@41.6.0 test /home/osboxes/development/salesforcedx-vscode/packages/salesforcedx-vscode-core
&gt; cross-env CODE_TESTS_WORKSPACE='../system-tests/assets/sfdx-simple' node ./node_modules/vscode/bin/test

### VS Code Extension Test Run ###
Current working directory: /home/osboxes/development/salesforcedx-vscode/packages/salesforcedx-vscode-core
Running extension tests: /home/osboxes/development/salesforcedx-vscode/packages/salesforcedx-vscode-core/.vscode-test/VSCode-linux-x64/code ../system-tests/assets/sfdx-simple --extensionDevelopmentPath=/home/osboxes/development/salesforcedx-vscode/packages/salesforcedx-vscode-core --extensionTestsPath=/home/osboxes/development/salesforcedx-vscode/packages/salesforcedx-vscode-core/out/test
bash: cannot set terminal process group (-1): Inappropriate ioctl for device
bash: no job control in this shell

Cannot find en-us, defaulting to en





  Channel

    Default SFDX channel

      ✓ Should have proper name

      ✓ Should pipe stdout on successful command execution (797ms)

      ✓ Should pipe stderr on unsuccessful command execution (1722ms)

      ✓ Should suggest to install SFDX binary



  Command Utilities

    EmptyParametersGatherer

      ✓ Should always return continue with empty object as data

    SfdxCommandlet

      ✓ Should not proceed if checker fails

      ✓ Should not call executor if gatherer is CANCEL

      ✓ Should call executor if gatherer is CONTINUE

    CompositeParametersGatherer

      ✓ Should proceed to next gatherer if previous gatherer in composite gatherer is CONTINUE

      ✓ Should not proceed to next gatherer if previous gatherer in composite gatherer is CANCEL

      ✓ Should call executor if composite gatherer is CONTINUE

      ✓ Should not call executor if composite gatherer is CANCEL

    Glob Directories

      SelectPrioritizedDirPath

        ✓ Should glob and return correct number of directories

        ✓ Should return list of relative paths with paths containing keyword prioritized to the top of list

      SelectStrictDirPath

        ✓ Should glob and return a list of dirs containing only the keyword

    EmptyPostconditionChecker

      ✓ Should return CancelResponse if input passed in is CancelResponse

      ✓ Should return ContinueResponse unchanged if input passed in is ContinueResponse

    LightningFilePathExistsChecker

      Without notification warning

        ✓ Should return CancelResponse if input passed in is CancelResponse

        1) Should return ContinueResponse if path specified does not have existing lightning files

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

      With notification warning

        2) Should return ContinueResponse if lightning files exist in specified path and user selects continue

        3) Should return CancelResponse if lightning files exist in specified path and user selects No/Cancel

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

    FilePathExistsChecker

      Without notification warning

        ✓ Should return CancelResponse if input passed in is CancelResponse

        4) Should return ContinueResponse if path specified does not have existing file with specified name

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

      With notification warning

        5) Should return ContinueResponse if files exist in specified path and user selects continue

        6) Should return CancelResponse if files exist in specified path and user selects No/Cancel

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.

sinon.restore is deprecated and will be removed from the public API in a future version of sinon.



  Force Alias List

    ✓ Should build the alias list command



  Force Apex Test Run

    Command builder

      ✓ Should build command for test suite

      ✓ Should build command for single class

      ✓ Should build command for all tests

    Tests selector

      7) Should have test suite and class



  Force Config List

    ✓ Should build the config list command



  Debugger stop command

    Session query

      ✓ Should build query command

      ✓ Should query &amp; stop

      ✓ Should handle zero query result

      ✓ Should handle unexpected Apex Debugger session ID

      ✓ Should handle JSON parse error

      ✓ Should handle process error

    Session detach

      ✓ Should build update command



  Force Org Create

    Alias Gatherer

      ✓ Should return cancel if alias is undefined

      ✓ Should return Continue with default alias if user input is empty string

      ✓ Should return Continue with inputted alias if user input is not undefined or empty

    Org Create Builder

      ✓ Should build the org create command



  Force Source Status

    ✓ Should build the source command no flag

    ✓ Should build the source command with targetusername flag



  Force Project Create

    SelectProjectName Gatherer

      ✓ Should return cancel if project name is undefined

      ✓ Should return cancel if user input is empty string

      ✓ Should return Continue with inputted project name if project name is not undefined or empty

    SelectProjectFolder Gatherer

      ✓ Should return cancel if project uri is undefined

      ✓ Should return Continue with inputted project name if project name is not undefined or empty

    PathExistsChecker PostCondition

      ✓ Should return cancel if project path is in use and user selects No

      ✓ Should return inputs if project path is in use and user selects No

      ✓ Should return inputs if project path is not in use

    Project Create Builder

      ✓ Should build the project create command



  Force Source Pull

    ✓ Should build the source pull command with no flag

    ✓ Should build the source pull command with overwrite flag



  Force Source Push

    ✓ Should build the source push command with no flag

    ✓ Should build the source push command with overwrite flag



  Force Source Status

    ✓ Should build the source command with local flag

    ✓ Should build the source command with remote flag



  Notifications

    ✓ Should notify successful execution

    ✓ Should notify successful and show channel as requested

    ✓ Should notify cancellation

    ✓ Should notify unsuccessful execution

    ✓ Should notify errorneous execution



  SFDX project predicate

    ✓ Should fail predicate with message when sfdx-project.json is missing

    ✓ Should pass predicate when sfdx-project.json is present



  Status Bar

    ✓ Should set up status bar items properly

    ✓ Should reset state after cancellation

    ✓ Should reset state after process exit (success or failure) (1416ms)

    Status bar text

      ✓ Should append . until a limit

      ✓ Should remove all . after limit



  Task View

    Task View Provider

      ✓ Should add a command to its internal queue (40ms)

      ✓ Should fire an event when a command is added (1522ms)

      ✓ Should remove a command from its internal queue when present

      ✓ Should not remove a command from its internal queue when not present (65ms)

      ✓ Should terminate and remove specific task if provided (52ms)

      ✓ Should terminate LRU task if no specific task provided (56ms)

    Task

      ✓ Should remove itself from Task View once terminated (1512ms)

      ✓ Should remove itself from Task View if erroneous





  72 passing (9s)

  7 failing



Tests exited with code: 0

```</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38585</IssueID>
    <Title>Dubugging mode not work properly(show automatically lots of break point )</Title>
    <Description>recently I updated my visual studio code in which debugging
![breakpoint]
 does not work properly its show automatically breakpoint. which are also not remove by removing. please check this issue its create problem on working in visual studio code</Description>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38557</IssueID>
    <Title>Find widget layout takes 20ms on window resize</Title>
    <Description>**Repo**

1. Resize VS Code window

**Bug**
Notice that the find widget layout takes ~20ms, even if it is hidden.</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38553</IssueID>
    <Title>Adding lines after a line with breakpoint set adds more breakpoints on each following line</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.11.1
beautify|Hoo|1.1.1
html-css-class-completion|Zig|1.14.0
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
jshint|dba|0.10.15
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
jupyter|don|1.1.4
tslint|eg2|1.0.22
vscode-npm-script|eg2|0.3.3
code-runner|for|0.8.3
live-code-runner|lab|2.0.0
node-module-intellisense|lei|1.4.0
MagicPython|mag|1.0.12
markdown-shortcuts|mdi|0.8.1
python|ms-|0.8.0
cpptools|ms-|0.14.2
wordcount|ms-|0.1.0
debugger-for-chrome|msj|3.5.0
vscode-icons|rob|7.18.1
markdown-preview-enhanced|shd|0.3.0
code-spell-checker|str|1.4.12
python|tht|0.2.3
tensorflow-snippets|vah|0.3.3



---

Steps to Reproduce:

1. Open a Javascript file
2. Set a breakpoint on a line
3. Go to the ned of the line with the newly set breakpoint and press enter to start a new line
4. Start typing on the new line

A new breakpoint will be created and will keep being created as you add more (non-empty) lines to the file .

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38548</IssueID>
    <Title>PHP inserts $_COOKIE after any &gt;</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: High Sierra

Steps to Reproduce:

1. Open VS Code
2. Create PHP document
3. Type a closing html bracket character (greater than &gt; ).
4. It suggests (autocomplete) `$_COOKIE` so while typing a new HTML tag in a PHP file, if you press return after the first tag, you get: `&lt;div&gt;$_COOKIE.`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

It should instead of offering `$_COOKIE` for auto complete, most of the time add a closing HTML element. The editor handles JS inside HTML fine in this regard. PHP should work as nicely.</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38536</IssueID>
    <Title>Handle case-sensitivity of file name better</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (3ac890f6ed9b5a7ff9bfd222fe59d1bec9d3ddf7, 2017-11-13T12:40:01.309Z)
- OS Version: Darwin x64 16.7.0

---

Steps to Reproduce:

1. Have a workspace with `test.YAML`.
2. Rename that file to `test.yaml`.

Bugs:

- Two files can be opened in tabs / Open Editors view
- Cmd + P always show both files

![f](https://user-images.githubusercontent.com/4033249/32906816-f8bda18c-cab2-11e7-9639-70a2d8d3fa96.gif)</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38533</IssueID>
    <Title>iOS</Title>
    <Description>I realize that this has been mentioned in the past and may not be the most appropriate channel, but I am hopeful that this post might start a dialogue and raise the request again. As a long time developer (21 years) who uses Windows, MacOS and Linux daily, vscode has become my primary editor on each of those platforms when I'm in a GUI. I'm regularly using or testing on Android and iOS devices and over the past couple years, an ipad pro has become my primary on the go device. I typically vpn/rdp when I need to do mobile development or heavy lifting that are beyond the current limitations of a mobile os / applications. Having said all that, vscode on iOS/Android would be a godsend and a game changer. I would gladly throw money at it. My deepest and most sincere thanks to everyone who has made vscode happen. Thank you!</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38526</IssueID>
    <Title>Alt F -S now saves workspace instead of File. It has been save file since day one.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.18
- OS Version:windows 10

Steps to Reproduce:

1.Edit a file. Go Alt-F s. No longer saves file.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38502</IssueID>
    <Title>Terminal pane focus on click</Title>
    <Description>- VSCode Version:  1.18.0 (1.18.0) dcee2202709a4f223185514b9275aa4229841aa7
- OS Version: 10.13.1 (17B48)

I don't think this is actually a bug, just a small improvement on UX.

If you are working on a VSCode window that has the integrated terminal visible and change focus to another app window, if you try to return to VSCode's integrated terminal by clicking on it, it will set the focus to the editor if it was the last selected pane before VSCode lost focus the first time.

By other words, focus is returned in the VSCode app to the last used pane, instead of the one you actually click, ie, the integrated terminal.

It would be nice if the clicked pane became the selected one when window focus was returned to VSCode by clicking.</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38499</IssueID>
    <Title>Markdown editing experience</Title>
    <Description>Currently the Markdown editing experience works in a way that whenever I open a new .md file it would open it separately even if I already have a .md file opened and preview turned on. 

It would then open a new preview window to the side whenever the preview is requested.

A better experience would be to share preview pane across .md files I'm currently editing - when I switch to editing another file the MD preview would sync and (automatically) show the preview of the file I switched to.

The attached screenshot demonstrates the problem. I'm was editing configuration.md and switched to deployment.md and the preview did not update/sync accordingly.

![image](https://user-images.githubusercontent.com/193816/32887017-d3a0f5ec-cac2-11e7-957b-71224de851c7.png)
</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38497</IssueID>
    <Title>Marker (circle) is not removed when removing breakpoint</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
react-native-react-redux|EQu|1.4.1
auto-close-tag|for|0.5.3
auto-rename-tag|for|0.0.15
vscode-redux-devtools|jin|0.0.11
resharper9-keybindings|ms-|1.1.0
debugger-for-chrome|msj|3.5.0
vscode-icons|rob|7.18.1



---

Steps to Reproduce:

1. When I try to remove an existing breakpoint by clicking on the red circle in my code the red marker is not removed from the code line.
2. However the breakpoint is actually removed in the list of breakpoints. So it seems like this is only a graphics update error and that breakpoints work.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38489</IssueID>
    <Title>Cannot fold code block with different style comments</Title>
    <Description>For I use other editor do some special tasks, the double slash is from the first one in each row when I use ***Comment shortcut***. But this comment sytle is not same with VSCode.

So, if I want fold the code block with these comments, I must comment these comments again and again in VSCode.

Just look at the pictures below:

&lt;img width="218" alt="screen shot 2017-11-16 at 16 49 45" src="https://user-images.githubusercontent.com/11268235/32882171-18631358-ca79-11e7-9eaf-3ae9b00db708.png"&gt;
&lt;img width="227" alt="screen shot 2017-11-16 at 16 49 55" src="https://user-images.githubusercontent.com/11268235/32882172-18a16310-ca79-11e7-8335-dd2f634055c7.png"&gt;
</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38488</IssueID>
    <Title>Create a global extension list</Title>
    <Description>Hey!

This is not an issue actually, more like a proposal.

Example:
I have a home machine where I have VS Code with several plugins that I always use. At work I have another machine with VS Code installed. And I have to install those plugins again.

It would be great to have an (optional) account with login/password which will store a list of extensions somewhere and when I install VSC to a new machine all extensions will be installed automatically. When installing a new extension you could introduce an option like 'Store to extension pull' or 'Try without adding' in case a user wants to play around with it and not to store it in extensions list.</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38477</IssueID>
    <Title>Font rendering issue in all panels</Title>
    <Description>I have noticed this issue with one of the 1.17.x versions earlier last month. I figured this will just go away after updating to the next version automatically. However, the issue still persists. Noto Mono (replacement for Droid Sans Mono on Debian) was the font set in user settings when I first noticed this issue. I changed it to a few other fonts and could reproduce it with them as well. I have also noticed that the issue is less prominent on certain color themes which have italics or bold characters. Also, this is reproducible for all font sizes.

![screenshot from 2017-11-13 23-57-56](https://user-images.githubusercontent.com/1550696/32742996-17e4efd6-c8d1-11e7-81f3-924caa04738f.png)

Font on the screenshot is plain `monospace`. Similar behavior can be noticed with other themes as mentioned. In case, it is not clear what I mean, check the lines 16, 19, 23 or near the import keyword at the top.

The only warning that is showing up in the dev console is shown in the screenshot.



- VSCode Version: 1.18.0
- OS Version: Debian Buster

Steps to Reproduce:

1. Open VS Code
2. See strange characters in editor, terminal, file list

Reproduces without extensions: Yes


Version 1.18.0
Commit dcee2202709a4f223185514b9275aa4229841aa7
Date 2017-11-08T12:44:48.751Z
Shell 1.7.9
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64
</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38462</IssueID>
    <Title>{ "when": "$(basename).ts" } is case sensitive on Windows</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
project-manager|ale|0.23.0
markdown-preview-github-styles|bie|0.1.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
git-extension-pack|don|0.1.3
githistory|don|0.2.3
gitlens|eam|6.1.0
tslint|eg2|1.0.21
prettier-vscode|esb|0.24.0
json2ts|Gre|0.0.6
vscode-git-tags|how|1.1.2
vscode-nuget-package-manager|jmr|1.1.4
ts-extension-pack|loi|0.0.1
csharp|ms-|1.13.1
PowerShell|ms-|1.5.0
typescript-javascript-grammar|ms-|0.0.24
vs-keybindings|ms-|0.1.7
debugger-for-chrome|msj|3.5.0
debugger-for-edge|msj|0.4.1
tsimporter|pmn|1.2.14
typescript-hero|rbb|1.7.0
move-ts|str|1.5.0
vscode-open-in-github|ziy|1.3.0
---

I have the following config: 

```
  "files.exclude": {
    "**/*.js": { "when": "$(basename).ts" },
    "**/*.js.map": true
  }
```

And it seems to be case-sensitive on Windows.  Thus, I have class files like "MyClass.ts" compiled by `tsc` to `myclass.js` which breaks the file exclusion.  This makes me have to resort to using `"**/*.js": true`, which is not ideal, but works for now.</Description>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38455</IssueID>
    <Title>Launch configs: resolve replacement patterns in object keys, in addition to values</Title>
    <Description>From https://github.com/Microsoft/vscode-chrome-debug/issues/226

A chrome-debug config can have

```
            "sourceMapPathOverrides": {
                "webpack:///C:/Depot/Impakt/DNA/DNACore/*": "${webRoot}/*" // SUCCEEDS
                //"webpack:///${workspaceRoot}/*": "${webRoot}/*" // FAILS
                //"webpack:///${webRoot}/*": "${webRoot}/*"  // FAILS
            },   
```

vscode replaces `${workspaceRoot}` in values, and the adapter replaces `${webRoot}` in values, and now after https://github.com/Microsoft/vscode-chrome-debug/pull/543, in keys as well. It would be great if vscode would replace `${workspaceRoot}` in keys.

One issue is that you can have collisions where two keys are the same after applying these replacements. In chrome-debug now, the last one wins where "last" is technically undefined.</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38453</IssueID>
    <Title>Auto Import path is broken</Title>
    <Description>Just installed VSCode on a new Mac a month ago and this auto import issue has been a problem every since. I cannot find a way to fix and it's about to drive me back to WebStorm.

I am using Typescript and Angular, when I enter a component class name in code I get the req underline if that class has not been imported, if I select the text I get the bulb icon to the left and it offers to import the missing class but the path is wrong as well as it's using double quotes when my config says to use single quotes. 

the path I am seeing is "src/app/folder/subfolder/component.name"

So what do I need to do to fix this problem?</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38450</IssueID>
    <Title>Dragging a tab can show visual glitch when tab not fully visible</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
# Description
An image is worth a thousand words:
![](https://i.imgur.com/zZVxR6a.gif)

But an image is not good for discoverability...

Moving a tab that is partially hidden/obscured by the debug widget will cause the tab to draw incorrectly: the portion of the tab visually blocked by the widget will show that part of the widget (it's 100% drawn over it).

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
# Version Info:
- VSCode Version: 1.18.0
- OS Version: macOS 10.12.6

# Steps to Reproduce:

1. Attach the Debugger to a process.
2. Move the Debug Actions Pane such that it partially obscures a tab.
3. Try moving the partially obscured tab to another position.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
# Errata
**Reproduces without extensions:** Didn't get it to work - needed the Chrome Debugger Extension.</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38449</IssueID>
    <Title>Opening file from sftp mounted remote location - linux</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: VS 1.18
- OS Version: Fedora 27 

Steps to Reproduce:
1. Have network drive mounted via SFTP in file manager.
2. In terminal type "code sftp://user@server/location/file" 

I currently have VSCode the default application for source code, but if will not open correctly if the file is located on the remote server.

In the video I show me opening the remote file with xed, and then VS code.
![peek 2017-11-15 13-57](https://user-images.githubusercontent.com/24485362/32857373-3b8256ee-ca0d-11e7-9964-0b2b1097d286.gif)

**Edit** Trying to open file on remote server via Nemo. (without terminal)
![peek 2017-11-15 14-03](https://user-images.githubusercontent.com/24485362/32857581-dd4cdf26-ca0d-11e7-9ca7-c6efd2d546e7.gif)

 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38429</IssueID>
    <Title>Multiple Alt-F S commands in the File Menu.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. Type Alt-F S.  It doesn't save.  It did in the past.

I'm a chronic Alt-F S pusher, to save my work as I go.  With the latest release, there are now two Alt-F S choices.  Maybe have a different hot letter for "Save WorkSpace As".  Maybe Alt-F k?</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38419</IssueID>
    <Title>All instances of VS Code respond to requests to move the panel to the right/bottom etc.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Windows 10.0.15063

Steps to Reproduce:

1. Open two or more instances of VS Code
2. Open the panel in all open instances
3. Click the move to bottom/right button on panel
4. All instances respond by moving their respective panels

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38408</IssueID>
    <Title>Typescript build task fails if path to local tsc contains spaces</Title>
    <Description>- VSCode Version: 1.18.0 (public)
- OS Version: macOS 10.13.1 (High Sierra)
- Reproduces without extensions: Yes

Steps to reproduce:
1. Have a ${workspaceRoot} in something like `/Users/me/dev folder/project/`
2. Install a local version of tsc using `npm i typescript --save-dev`
3. Configure the default typescript build task (using the `tsc: build - tsconfig.json` preset)
4. It will generate the following:
```
{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "typescript",
            "tsconfig": "tsconfig.json",
            "problemMatcher": [
                "$tsc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
```
5. If you run the build task, it will generate the following error:
```
&gt; Executing task: /Users/me/dev folder/project/node_modules/.bin/tsc -p "/Users/me/dev folder/project/tsconfig.json" &lt;

/bin/bash: /Users/me/dev: No such file or directory
The terminal process terminated with exit code: 127

Terminal will be reused by tasks, press any key to close it.
```

If I replicate the task manually, using the following
```
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "type": "shell",
            "command": "'${workspaceRoot}/node_modules/.bin/tsc'",
            "args": [
                "-p",
                "'${workspaceRoot}/tsconfig.json'"
            ],
            "options": {
                "cwd": "${workspaceRoot}"
            },
            "problemMatcher": [
                "$tsc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
}
```
it works fine, since the executable is wrapped in quotes.</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38407</IssueID>
    <Title>New Version setting its own unremovable breakpoints</Title>
    <Description>Steps to reproduce.
Open Code on macbook
Read message that tells me it updated itself. Thanks

Now I have breakpoints added all over the place in my code and Remove all breakpoints does nothing.
When I run Debug I get Error: Set breakpoints request timed out
presumably because there are so many of them.

How do I remove them, click on them, Remove All Breakpoints, does nothing.

![screen shot 2017-11-15 at 12 39 16](https://user-images.githubusercontent.com/910082/32834220-0d6da962-ca02-11e7-8f0b-f418c463344c.png)
</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38405</IssueID>
    <Title>Search not working after updating to new release.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: none
---

Today I have updated my VSCode to 1.18.0 version. After update, Find in Files (Ctrl+Shift+F) option not working. I have restarted visual studio but facing the same. Please check the below screenshot
![image](https://user-images.githubusercontent.com/10492821/32833359-a4107e72-ca24-11e7-9241-a4c1c26d1c3a.png)
</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38402</IssueID>
    <Title>"Spawn UNKNOWN" when Ctrl-Shift-F</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: none
---

Steps to Reproduce:

1.Open any folder with couples of .C and .H
2.Search any word in folder by Ctrl-Shift-F
3."spawn UNKNOWN" shown in the text box and search cannot start</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38401</IssueID>
    <Title>File -&gt; Save As and Add Folder to Workspace has the same shortcut</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-mocha|Com|0.1.1
vscode-eslint|dba|1.4.3
vscode-npm-script|eg2|0.3.3
auto-close-tag|for|0.5.3
code-runner|for|0.8.3
rest-client|hum|0.16.0
search-node-modules|jas|1.2.0
prettify-json|moh|0.0.3
cpptools|ms-|0.14.2
csharp|ms-|1.13.1
sublime-keybindings|ms-|3.0.3
vscode-arduino|vsc|0.2.10
nodejs-extension-pack|wad|0.1.9
JavaScriptSnippets|xab|1.5.0

(1 theme extensions excluded)


---
When I tried to use Alt-F, A to do a File, Save **A**s, nothing happens. Then I found that **A**dd Folder to Workspace has the same shortcut key of "A".


Steps to Reproduce:

1. Press Alt-F, then A. 
2. Nothing happens as both File Save **A**s and **A**dd Folder to Workspace has the same shortcuts.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
![image](https://user-images.githubusercontent.com/24908779/32829809-2718274e-ca2e-11e7-80e4-a94ea57221ad.png)
</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38397</IssueID>
    <Title>Hope can save preference to my Microsoft account.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
json-tools|eri|1.0.2
php-debug|fel|1.11.1
phpcs|ika|0.7.0
Go|luk|0.6.67



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38391</IssueID>
    <Title>Closing HTML tag not highlighting in PHP files.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Mac OS

Steps to Reproduce:

1. Open PHP file  with HTML
2. Put cursor on tag to see closing tag

All tags will be highlighted. Expected result: only closing tag should be highlighted.

&lt;img width="1214" alt="2017-11-15 11 16 14" src="https://user-images.githubusercontent.com/3227120/32825737-17bd44be-c9f7-11e7-94f4-0a8ff0dd0995.png"&gt;


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38379</IssueID>
    <Title>Right-click context menu from icon in macOS dock shows different recently opened files/folders from File-&gt;Open Recent</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.22
githistory|don|0.2.3
python|ms-|0.8.0
azure-account|ms-|0.2.2
cpptools|ms-|0.14.2
debugger-for-chrome|msj|3.5.0
Ruby|reb|0.15.0
java|red|0.14.0
vscode-java-debug|vsc|0.3.0
vscode-java-pack|vsc|0.2.0



---

Steps to Reproduce:

1. Launch VS Code, then choose a folder to open
2. Close the app
3. Right-click on dock icon; more than likely this folder will not be available as a shortcut (nor will it appear if click "Show Recents")

I would expect that the most-recently used files and folders would appear in this context menu as they appear in the File-&gt;Open Recent menu

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: N/A</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38367</IssueID>
    <Title>the global search is unable after updating.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: none
---

Steps to Reproduce:

1.the global search is unable after updating.
![qq](https://user-images.githubusercontent.com/11832012/32816236-9e9e915e-c9f2-11e7-8d9b-0d545de39bbe.png)</Description>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38355</IssueID>
    <Title>Editing files with breakpoints is completely broken</Title>
    <Description>- VSCode Version: 1.18.0
- OS Version: Ubuntu 16.04 x64

Steps to Reproduce:

1. Add multiple breakpoints to a file
2. Edit the file in between the breakpoints.

No extensions are enabled.
When editing the file by inserting new lines between existing breakpoints, more and more breakpoints are added - some valid, some not. Most of the breakpoint decorations cannot be removed by clicking on them - the file must be closed and reopened to clear them.

Set 3 breakpoints:
![screenshot from 2017-11-14 21-45-34](https://user-images.githubusercontent.com/13035517/32806721-7e6cfcda-c985-11e7-9094-9aa01534e9b2.png)

Add and delete some new (empty) lines between the breakpoints and I end up with this:
![screenshot from 2017-11-14 21-46-43](https://user-images.githubusercontent.com/13035517/32806766-9d6756da-c985-11e7-9ddf-1d6f93020f30.png)

The extra breakpoints are stuck - they cannot be deleted by clicking on them.
A little more for your entertainment...
![aaa](https://user-images.githubusercontent.com/13035517/32807089-b5b527de-c986-11e7-8359-a58257742ed5.gif)
</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38345</IssueID>
    <Title>Long file paths chopped off in 'recent open' list</Title>
    <Description>
![longfilepath-cutoff](https://user-images.githubusercontent.com/3742647/32803172-ac0c1692-c950-11e7-84de-f8cc3c607247.png)
&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Windows 10 Ent

Steps to Reproduce:

1. Create a file deep in a folder hierarchy.
2. Open and close the file. It creates an entry for the same in VSCode 'recent open' list
3. In the list, you would see the path is long so we don't see file names. Hard to pick if we don't see the file names. Expectation is, to see filename always &amp; show full blown path on mouse hover or in some other way.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38340</IssueID>
    <Title>Have option to persist split editor</Title>
    <Description>When I work on code, I most often have my editor split into two columns. VSCode is a wonderful IDE but I believe that the split editor functionality could use a little love.

To split the editor to begin with, you must have a file open, then click the "split editor" button. This will give you 2 columns with the same file open in both. Not that big of a deal except that I don't typically want to have the same file open in both columns. When I close the file, it closes the column, so I have to open the file I want in that column first, then close the original file so that I have different files open in each column. That is a lot of steps that I must take to do so.

What I would love is 2 new config options:

- An option to not close a column when the last file is closed within it.
- An option to start with the editor split into a given number of columns.

This would make working with split editors much better in my opinion.

Thank you for the great work and wonderful program. I do greatly enjoy working in VSCode and it has become my editor of choice.</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38335</IssueID>
    <Title>"alt-f, s" keyboard shortcut conflicts (windows)</Title>
    <Description>
**VS Code Version:**
  - Version 1.18.0
  - Commit dcee2202709a4f223185514b9275aa4229841aa7
  - Date 2017-11-08T21:22:49.932Z
  - Shell 1.7.9
  - Renderer 58.0.3029.110
  - Node 7.9.0
  - Architecture x64

**OS:**  win 10

**Steps to Reproduce:**

  1.  open a workspace with VS Code
  2.  choose "alt-f"
  3.  note that s shortcut maps to both "save" and "save workspace as" commands.  See image below

**Reproduces without extensions:** Yes

![untitled](https://user-images.githubusercontent.com/8702326/32795680-5551baac-c921-11e7-8371-4294bdc93e04.png)
</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38330</IssueID>
    <Title>Focus current cursor position in multiline select</Title>
    <Description>VSCode Version: 1.18.0 
OS Version: macOS High Sierra (10.13.1)

- Focusing current cursor position doesn't work when working with multiple lines.

![nov-14-2017 21-39-14](https://user-images.githubusercontent.com/9218560/32788764-51f6c236-c984-11e7-8459-94874eee85e0.gif)</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38326</IssueID>
    <Title>Chinese translation of `extract`</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

`extract` should be translated to `提取`, not `解压缩`.

![xxxx](https://user-images.githubusercontent.com/9464825/32786290-79eb3e2a-c98e-11e7-88b7-64dbc99b530e.PNG)

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18
- OS Version: win10

Steps to Reproduce:

1. debug any extension
2. view some .ts file



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38320</IssueID>
    <Title>I don't know what has changed lately.. but it's extremely slow.</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.17035
- Extensions: none
---

Steps to Reproduce:
Scrolling sometimes takes 3-4 seconds before it moves.. I haven't had this issue in the past.  It happened on  fresh Windows 10 installation..
1.
2.</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38314</IssueID>
    <Title>Code folding is not working properly</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.3.9600
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
unique-lines|bib|1.0.0
npm-intellisense|chr|1.3.0
jsrefactor|cms|1.5.3
jshint|dba|0.10.15
vscode-stylesheet-formatter|dba|0.2.0
githistory|don|0.2.3
jquerysnippets|don|0.0.1
xml|Dot|1.9.2
javac-linter|fau|1.2.6
JSDocTagComplete|Hoo|0.0.2
java-properties|ith|0.0.2
guid|kos|0.0.1
markdown-shortcuts|mdi|0.8.1
HTMLHint|mka|0.4.0
prettify-json|moh|0.0.3
vscode-scss|mrm|0.6.2
csharp|ms-|1.13.1
jscs|ms-|0.1.9
debugger-for-chrome|msj|3.5.0
vscode-sql-beautify|sen|0.0.4
markdown-preview-enhanced|shd|0.3.0
stylelint|shi|0.30.0
addDocComments|ste|0.0.8
sort-lines|Tyr|1.3.0
gitblame|wad|2.2.0
bootstrap-3-snippets|wcw|0.1.0



---

Steps to Reproduce:
1. Have this code:

```
function test1() {

}
    function test2() {
        
    }
        function test3() {
            
        }
```

2. Try and fold each function.
3. Results here:
![untitled](https://user-images.githubusercontent.com/11310468/32776946-f7249e42-c93c-11e7-9494-c96d02d84146.png)

Problems:
1. you cannot collapse functions test1,2,3
2. if you collaps the end of test1, it will contain test2 and test3
3. if you collapse the end of test2, it will contain test3

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38302</IssueID>
    <Title>Weird characters on vscode editor</Title>
    <Description>Since a few days, there are weird characters and small dots visible among the text in visual studio code 1.18 running on debian 9. I have tried to show a few weird characters and dot by using arrows in the attachment. I already have disabled extensions and restarted the vscode, but that didn't change anything.

 
![screenshot from 2017-11-14 08-48-01](https://user-images.githubusercontent.com/16521349/32769140-f7e986ac-c91a-11e7-8683-d766a8f67077.png)
</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38299</IssueID>
    <Title>click save shortcuts many times，it will show many windows to  suggest me fill in the file name，even if I have fill already</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

click save shortcuts many times，it will show many windows to  suggest me fill in the file name，even if I have fill already

</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38289</IssueID>
    <Title> Cannot read property 'label' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;a63faf4f-4572-0379-ace9-6a4d78bae627&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.18.0&lt;br /&gt;-  af39ef560060e7e8ba8d75983c9ec1da3f4d2a20&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'label' of undefined&lt;br /&gt;[/vs/editor/contrib/colorPicker/browser/colorPickerWidget.ts#L59:61 (label)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/editor/contrib/colorPicker/browser/colorPickerWidget.ts#L59:61 (label))&lt;br /&gt;[/vs/base/common/callbackList.ts#L36:22 (apply)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/callbackList.ts#L36:22 (apply))&lt;br /&gt;[/vs/base/common/event.ts#L123:26 (call)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/event.ts#L123:26 (call))&lt;br /&gt;[/vs/editor/contrib/colorPicker/browser/colorPickerModel.ts#L41:32 (fire)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/editor/contrib/colorPicker/browser/colorPickerModel.ts#L41:32 (fire))&lt;br /&gt;[/vs/editor/contrib/hover/browser/modesContentHover.ts#L332:32 (colorPresentations)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/editor/contrib/hover/browser/modesContentHover.ts#L332:32 (colorPresentations))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L852:0 (_notify)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/winjs.base.raw.js#L852:0 (_notify))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1068:0 (enter)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/winjs.base.raw.js#L1068:0 (enter))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1036:0 (_run)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/winjs.base.raw.js#L1036:0 (_run))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/dcee2202709a4f223185514b9275aa4229841aa7/src/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38280</IssueID>
    <Title>Tab Key Moves Focus</Title>
    <Description>Any time i hit tab my file loses focus to the ui
There is a setting called "Tab Key Moves Focus" "ctrl+m", to my understanding this should turn this on and of.
I have deleted any and every file of vscode installed a number of versions.
It is turned on and i cant turn it on no matter if i press ctrl+m or not

- VSCode Version: 1.18.0
- OS Version: Fedora 
 OS: Fedora release 26 (Twenty Six) x86_64
Kernel: 4.13.11-200.fc26.x86_64

Steps to Reproduce:

1. Install vscode
2. open anyfile
3. hit tab

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38278</IssueID>
    <Title>spawn unknow</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-color|ans|0.4.5
vscode-eslint|dba|1.4.3
auto-close-tag|for|0.5.3
beautify|Hoo|1.1.1
python|ms-|0.8.0
debugger-for-chrome|msj|3.5.0
vetur|oct|0.11.3
vuehelper|oys|0.1.0
lodash-snippets|tom|1.0.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38277</IssueID>
    <Title>Add command to open raw settings file.</Title>
    <Description>Opening the settings forces VS Code to use that settings editor view, which has the default settings on one side and the user's file on the other. Often i do not need or want that.

If i just want to find anything in my settings file, the results start in the default settings, which i do not care about. Also, the additional split view takes a lot of space. If my panel setup already has some splits there is near to no space left for my settings file and the default settings cannot be hidden completely.

It would be nice to have the alternative open-file-command, similar to the keyboard shortcuts:

![image](https://user-images.githubusercontent.com/834235/32762169-1017c50e-c8f8-11e7-97b7-d555d3f3d215.png)</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38276</IssueID>
    <Title>希望看到用户同步功能</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

.因为我会在不同的电脑使用vscode，所以我希望可以增加一个用户登录功能，可以把同一个账号中配置和插件同步起来。就不用我每次都去挨个增加插件

Extension|Author (truncated)|Version
---|---|---
vscode-javascript-snippet-pack|aka|0.1.5
vscode-eslint|dba|1.4.3
vscode-jasmine-es5|dee|1.0.1
auto-rename-tag|for|0.0.15
vue-snippets|hol|0.1.5
beautify|Hoo|1.1.1
vscode-postcss-sorting|mrm|3.0.1
debugger-for-chrome|msj|3.5.0
vetur|oct|0.11.3
better-less|rad|0.4.3
vscode-icons|rob|7.17.0
stylelint|shi|0.30.0
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38272</IssueID>
    <Title>Feature Request: Search For Folder (and open in explorer)</Title>
    <Description>There is currently no way to search for a folder.

There are many great ways to search for a specific file or for searching for files within a folder, but no current ways to search for a folder itself and then open that in the explorer panel.

I'm constantly doing the "long scroll" through my node_modules folder whenever I want to dive into some source code and can't imagine I'm the only one. This would be crazy helpful.

Thanks for maintaining and constantly improving this awesome software I use every day!</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38270</IssueID>
    <Title>VSCode does not respect trailing slashes in gitignore entries</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7)
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Write a gitignore with a folder excluded like `__pycache__/`.
2. Observe that the `__pycache__/` folder has not been marked as ignored by VSCode but is ignored by git.
3. Replace `__pycache__/` in your gitignore with `__pycache__`.
4. Observe that the `__pycache__/` folder has now been marked as ignored.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![screen shot 2017-11-13 at 6 09 18 pm](https://user-images.githubusercontent.com/226872/32759339-d4febee6-c89d-11e7-8ca6-4592ff5d03b2.png)
![screen shot 2017-11-13 at 6 09 34 pm](https://user-images.githubusercontent.com/226872/32759340-d51a2cf8-c89d-11e7-8326-6245183245a2.png)

</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38266</IssueID>
    <Title>VSCode does not find text in files managed by "OneDrive - Microsoft"</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
gltf-vscode|ces|2.0.9
vscode-insertdatestring|jsy|2.2.0
python|ms-|0.8.0
cpptools|ms-|0.14.2
PowerShell|ms-|1.5.0



---

Steps to Reproduce:

1. Open a onedrive for work folder. In my case I work at Microsoft so my folder was named "OneDrive - Microsoft", ensure that you have a .txt file with the word "Test" under onedrive 
2. Search for "test"

Expected: my test file is found

Actual: The search returns no results

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38257</IssueID>
    <Title>FR: Prevent code lens from shifting cursor position</Title>
    <Description>I think usability wise, the current state of code lens is very disorienting, and I tend to disable them across the extensions I use.

The main reason I do so is that they're constantly messing with my "visual" cursor position. Every time I switch to a new file that has code lens, or the code lens appear, it's very disorienting for my cursor to suddenly jump down 2-3 lines.

I think that I'd prefer if the codelens instead were displayed in a manner that prevented the cursor position from shifting. So, for example, instead of 
```
------------------
foo
|bar
fun
------------------
```
turning into 
```
------------------
foo
CODELENS
|bar
------------------
```
it would turn into
```
------------------
CODELENS
|bar
fun
------------------
```</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38255</IssueID>
    <Title>Add space on the bottom of Explorer</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: latest
- OS Version: latest

Steps to Reproduce:

1. When you have a large list of folders in Explorer that requires scrolling and you're trying to create a new folder in ROOT directory and have any folder selected, it's impossible to create a folder from within an application.  When clicking Add new folder from explorer toolbar that appears on mouseover explorer header it creates a folder in a selected folder and it's impossible to deselect a folder.  Make same menu appear on mouseover of subdirectories of a parent or allow margin space on the bottom of a list where click is possible to deselect a folder or right click to deselect a folder.

2. It appears that you can click Collapse All or Refresh to deselect a folder but it's too confusing and not intuitive. 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38252</IssueID>
    <Title>Breakpoints are not being respected</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3

I add a breakpoint on any line and after debugging for a while I can't remove such breakpoints, they are "ghosts" they show up but they are not really there. If I restart VS code the breakpoint goes away, I add it again run without changing any code and sometimes the breakpoint is not hit. one time its hit the next one it is not.

I don't really know how to reproduce but it is happening to me very frequently.
---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38249</IssueID>
    <Title>syntax highligting for large javascript file</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18 , node 7.9
- OS Version: Win 10

Steps to Reproduce:
 
I have a very large javascript file (this allows me to import Json, since direct import is not supported in es6. There are 328K lines in the file. There is nothing wrong with syntax. but the text is all white, not colored, and the right-click context menu has no option for format. The JS icon does appear in the Exlplorer. The file name is Run-1-0.js

When I first entered the data, syntax highlighting worked, I restarted VSCODE and it was lost.

The data in the file looks like the following (15K repetitions are not included here:

```
export {data, metaData}

const metaData = {
    color: {
        rgba: [255, 255, 0, 255]
      },
    title: "Scene 2, Run 0"
    }
const data = [
    {
       "time": 1.2,
       "type": "3:1:222:1:-51:1:1",
       "name": "RTO",
       "lat": 21.5792240438319,
       "lon": -158.249617987526,
       "height": 3.59563912342738,
       "heading": 11.0059607376812,
       "pitch": 0,
       "roll": 0,
       "vx": 0,
       "vy": 0,
       "vz": 0,
       "forceType": "Friendly",
       "appearance": 33685504,
       "gccX": 0,
       "gccY": 0,
       "gccZ": 0,
       "psi": 0,
       "theta": 0,
       "phi": 0,
       "gccVX": 0,
       "gccVY": 0,
       "gccVZ": 0
     },
     {
       "time": 1.3,
       "type": "3:1:222:1:-51:1:1",
       "name": "RTO",
       "lat": 21.5792248335101,
       "lon": -158.249617823324,
       "height": 3.58777118543317,
       "heading": 10.9791128140066,
       "pitch": 0,
       "roll": 0,
       "vx": 0,
       "vy": 0,
       "vz": 0,
       "forceType": "Friendly",
       "appearance": 33685504,
       "gccX": 0,
       "gccY": 0,
       "gccZ": 0,
       "psi": 0,
       "theta": 0,
       "phi": 0,
       "gccVX": 0,
       "gccVY": 0,
       "gccVZ": 0
     },
```

Here is a screen shot:

![image](https://user-images.githubusercontent.com/2865368/32746128-b64dfa40-c882-11e7-9e1c-fd528b789f4c.png)


Reproduces without extensions: Yes</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38239</IssueID>
    <Title>No API for closing inactive TextEditors</Title>
    <Description>Looking at the docs for TextEditor (https://code.visualstudio.com/docs/extensionAPI/vscode-api#TextEditor) the Hide method has been deprecated. Per the documentation, its replacement is `workbench.action.closeActiveEditor`, which only closes the currently visible TextEditor tab.

There is (apparently) no supported way to close inactive TextEditors. Would it be possible to add such an API back?

(User scenario:
Omnisharp-Roslyn is adding support for CodeActions that rename files. When a file is renamed on disk, that's open in VS Code, Code keeps open the tab for the old file name but adds "Deleted" to the tab title. Omnisharp-Roslyn would like to close editor for renamed files. With the current APIs, there's no good way for us to close files that get renamed unless they are the active editor)</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38233</IssueID>
    <Title>Breakpoints' icon don't disappear</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-firefox-debug|hbe|0.17.0
vs-deploy|mkl|10.0.0
debugger-for-chrome|msj|3.5.0
debugger-for-edge|msj|0.4.1

Steps to Reproduce:
There are 2 issues with breakpoints' icon:
1_ when you add a breakpoint the red circle appear but you cannot remove it anymore
2_ when a breakpoint is already active, go to the end of its line and start a new line. Another red circle appear in this very line but it isn't active. 
They seem a gui issues.
</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38224</IssueID>
    <Title>allow selection expansion at multi cursors</Title>
    <Description>when there are multicursors selection only expands on the first one:

![multi-cursor-selection-expansion](https://user-images.githubusercontent.com/937933/32728880-07f951ec-c850-11e7-9ac9-45a3b9047333.gif)
</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38223</IssueID>
    <Title>[Feature] Collaps js/map/css files in ts/scss files</Title>
    <Description>Hi guys,

it would be awesome if we can get a Feature like Visual Studio/Webstorm has. 
js/map and css Files should be inside the ts and scss files. 

Is there something planned or a plugin for that?

![image](https://user-images.githubusercontent.com/19570043/32727102-946adf30-c87b-11e7-943d-a864d457f5b8.png)

should become this:
![image](https://user-images.githubusercontent.com/19570043/32727232-1e04116c-c87c-11e7-8b94-17c2a3a6f239.png)


Thank you,
Daniel</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38218</IssueID>
    <Title>Debug: sometimes breakpoints don't respond</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (0fbdfff167653b233231259ceb3109f0931887ef, 2017-11-09T06:19:28.857Z)
- OS Version: Linux x64 4.10.0-38-generic (Ubuntu 16)
- Node Version: Node 9.1.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-mocha|Com|0.1.1
Angular-BeastCode|Mik|5.0.15
yaml|ada|0.0.9
better-toml|bun|0.3.1
regex|chr|0.1.0
jsrefactor|cms|1.5.3
vscode-eslint|dba|1.4.3
gitlens|eam|6.0.0
node-version|fiv|0.0.1
flow-for-vscode|flo|0.7.2
vscode-flow-ide|gca|1.2.0
vscode-auto-open-markdown-preview|hnw|0.0.4
javascript-unit-test-snippet|iZD|1.0.0
Go|luk|0.6.67
vs-code-quick-require|mil|0.2.0
python|ms-|0.8.0
chai-snippets|nwh|0.1.0
vscode-versionlens|pfl|0.19.1
require-complete|sen|0.1.0
vscode-sql-beautify|sen|0.0.4
es6-mocha-snippets|spo|0.0.5

---

Steps to Reproduce:
Very hard to reproduce.. 
1. During debug add multiple breakpoints
2. Some of the red dots in the editor will no longer be synchronized with the actual breakpoint tracking in the side panel

![ezgif-3-8a5f20cd6f](https://user-images.githubusercontent.com/19211868/32724024-530c540e-c878-11e7-841c-693f1d81ea6f.gif)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces with or without extensions: No</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38205</IssueID>
    <Title>Highlight bug if search on VS Code settings</Title>
    <Description>- VSCode Version: 1.18.0
- OS Version: macOS High Sierra 10.13.1

Steps to Reproduce:
1. Open settings
2. Search some parameters on User settings
3. Delete line with result is highlight
4. Highlight stay on this line but not on true result

Reproduces without extensions: Yes</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38204</IssueID>
    <Title>Auto Import for JavaScript and TypeScript</Title>
    <Description>- VSCode Version: 1.19.0-insider (1.19.0-insider)
- OS Version: macOS Sierra 10.12.6 (16G1036)

I use TSLint. I added ordered imports in my rules. Maybe imports auto alphabetized.</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38202</IssueID>
    <Title>"&gt;" character triggers intellisense</Title>
    <Description>Typing "&gt;" character always triggers intellisense function, thus i can not close a HTML tag and hitting ENTER for a new line without inserting the first suggestion!

[https://imgur.com/hSOg5uq](https://imgur.com/hSOg5uq)

So when i type "&lt;div&gt;" for example and hitting ENTER i get: &lt;div&gt;$_COOKIE</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38182</IssueID>
    <Title>copy code paste in evernote ,  doesn't keep indent.</Title>
    <Description>- VSCode Version: latest
- OS Version: win7

pycharm work fine with evernote , but vscode lost indent.</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38172</IssueID>
    <Title>Bug about seting breakpoints</Title>
    <Description>When I debug python using Python extension, if I add a line before a breakpoint, the breakpoint cannot be toggled off. I guess this bug is from vscode itself rather than python extension.

- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-markdownlint|Dav|0.11.0
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
tslint|eg2|1.0.21
php-debug|fel|1.11.1
php-intellisense|fel|1.5.4
php-pack|fel|1.0.1
mdmath|goe|2.0.7
vscode-firefox-debug|hbe|0.17.0
beautify|Hoo|1.1.1
latex-workshop|Jam|3.6.1
Go|luk|0.6.67
hg|mrc|1.2.3
python|ms-|0.8.0
cpptools|ms-|0.14.2
csharp|ms-|1.13.0
PowerShell|ms-|1.5.0
debugger-for-chrome|msj|3.5.0
Ruby|reb|0.15.0
vscode-icons|rob|7.17.0
RustyCode|sav|0.19.1
cmake|twx|0.0.17
cmake-tools|vec|0.10.3



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38159</IssueID>
    <Title>Garbled text on interface and code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
1.18.0
Commit dcee2202709a4f223185514b9275aa4229841aa7 Arch 64 bits
- OS Version:
Kali Linux Rolling. Fully updated.

Steps to Reproduce:

1.Open visual studio code
2. Look at text (either on the interface or code)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![kazam_screenshot_00000](https://user-images.githubusercontent.com/30382027/32702185-8d0c5ada-c7a8-11e7-8d4f-533ff42d2296.png)
![kazam_screenshot_00001](https://user-images.githubusercontent.com/30382027/32702186-8d225e7a-c7a8-11e7-912b-c865f4019761.png)
![kazam_screenshot_00002](https://user-images.githubusercontent.com/30382027/32702187-8d373d22-c7a8-11e7-9ea3-c82c6436d57d.png)

</Description>
    <CreatedDate>12/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38156</IssueID>
    <Title>npm scripts doesn't terminate when you run them as task</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
gitlens|eam|6.0.0
tslint|eg2|1.0.21
Angular2Tests|Mar|0.7.3
mssql|ms-|1.2.1
debugger-for-chrome|msj|3.5.0
wallaby-vscode|Wal|1.0.65



---

Steps to Reproduce:

1. Create an empty package.json with this content
```
{
  "name": "test-bug",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "echo 'done'"
  },
  "author": "",
  "license": "ISC"
}
```
2. Press CTRL+SHIFT+B and select npm:build task
3. Task starts but it doesn't terminate. You have to manually terminate task clicking bin button and when you click on bin button this error appears
![capture](https://user-images.githubusercontent.com/6420148/32701595-f8c9c6a6-c7d8-11e7-9c10-91cb87ad8de7.PNG)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38150</IssueID>
    <Title>Debug breakpoints cannot be remove</Title>
    <Description>- VSCode Version: 1.18.0
- OS Version: windows 7, 64-bit

After debugging my extension, the breakpoints just cannot be remove, new breakpoints can be add and remove, shows bellow:
![issue](https://user-images.githubusercontent.com/19996314/32698536-7fed46fe-c7e2-11e7-9be2-cc7c926526af.gif)
</Description>
    <CreatedDate>12/11/2017</CreatedDate>
    <ClosedDate>12/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38146</IssueID>
    <Title>Central storage of settings</Title>
    <Description>This is not an issue but a request.

What I would like to see is a central storage for all user settings.  As a developer I work on multiple workstations.  With that VSCode is my go to app.

What I would imagine is a login system to my Microsoft account (settings stored in OneDrive) and whenever I would log into my account on another system my settings would come with me.

These settings would include how I run my spacing's, all the way up to how I like my UI laid out.

I could understand that some settings would not be transferred such as extensions, but having a list of "liked" extensions would also be nice so if I need to install them then I can.

Having these settings stored in something like one drive would also allow for me to directly edit them if needed or even copy my settings and email them to a friend.

Thank you for your time and the product is great.  Use it every day.
</Description>
    <CreatedDate>12/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38140</IssueID>
    <Title>Welcome page Installed extensions is not higlighted correctly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: lubuntu 17.10
hi. I just installed vscode 1.18 on my fresh lubuntu 17.10 desktop. I notice that after I click sublime or others on the welcome page to import keyboard shortcuts. It is still highlighted blue. which should highlighted as gray on previous version. Is this expected now on the current version? If so I think it sucks because it can't determine the imported tools or language on welcome page (specially me I didn't hide welcome page and always check that thing on the right side).

It needs to be fixed or is there a trick to do what I expected?

Steps to Reproduce:

1. install new vscode
2. click sublime on `install keyboard shortcuts`
3. click php, javascript, typescript on `Tools and languages`

![vscode118](https://user-images.githubusercontent.com/6380139/32695411-e3ebf742-c795-11e7-8da3-9ee6b1eb9467.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38119</IssueID>
    <Title>[ Feature Request ] Multi-screen same workspace Drag and Drop Tabs outside the vscode window</Title>
    <Description>Hi Vscode Team!

In my opinion, the next step for VScode is to allow the use of multiple screens within the same workspace. Just as IntelliJ does.

The ability to drag an editor tab outside the VScode window, and then drop it to spawn a new editor pane, free to resize and move independently, would be a major improvement in term of ergonomy and confort.

We already have the possibility to open our working folder twice, but this feature would allow to keep the same state. The breakpoints could be seen on the two windows etc..

Do you think this is doable ?
Does electron allow the spawn of children views ?

Do you think VScode will one day or another implement this feature ?

Thanks for your response :)</Description>
    <CreatedDate>11/11/2017</CreatedDate>
    <ClosedDate>12/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38115</IssueID>
    <Title>Breakpoints cannot be removed</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
githistory|don|0.2.3
EditorConfig|Edi|0.11.1
LogFileHighlighter|emi|1.2.0
dotenv|mik|1.0.0
vscode-icons|rob|7.17.0

I can only remove one breakpoint before all others become unresponsive. I can close the file, and reopen it, then remove another breakpoint, but once again the others become unresponsive before I have to close the file and repeat.

Steps to Reproduce:

1. Place several beakpoints
2. remove more than one breakpoint

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38107</IssueID>
    <Title>Can's cancel the breakpoint</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-firefox-debug|hbe|0.17.0
ejs-language-support|Qas|0.0.1
java|red|0.14.0



---

Steps to Reproduce:

1.sometimes i can cancel the breakpoint when i click the breakpoint again,but by restarting the VS Code,it can be fixed 
2.but sometimes i quickly click the breakpoint when VS code just restarts,it can't also be canceled

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>11/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38103</IssueID>
    <Title>"window.title": "${activeEditorLong}" not work on windows7(64bit)</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
maple|yjt|1.1.6

(3 theme extensions excluded)


---

Steps to Reproduce:

1. "window.title": "${activeEditorLong}" at user settings (settings.json)
2. Restart VSCODE and open  several files
3. The contents of title bar  stands still when I select tab of other file.
* On winodws10 It  works well as i expected

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38099</IssueID>
    <Title>Removing breakpoint removes two breakpoints</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (0fbdfff167653b233231259ceb3109f0931887ef, 2017-11-09T06:19:28.857Z)
- OS Version: Linux x64 4.4.0-83-generic
- Extensions: none
---

Steps to Reproduce:

1. Create a file `a.js` containing:
```js
0;
1;
2;
```
2. Put a breakpoint on each line.
3. Delete the breakpoint next to `0;`.
    Two breakpoints are removed!
4. Try to delete the remaining breakpoint next to `2;`.
    Nothing happens...</Description>
    <CreatedDate>11/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38095</IssueID>
    <Title>Vertical Panel settings appear global and not unique to a workspace or even a window. [osx]</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: osx 10.12.6

Steps to Reproduce:

1. Open two separate windows.
2. Move terminal panel to the right in one of the windows.
3. Notice that the terminal panel in the second window follows
4. Move it back to the bottom.
5. Notice that the terminal in the second window follows as well.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38089</IssueID>
    <Title>Scroll position is not being preserved when switching between tabs with OmniSharp Intellisense working</Title>
    <Description>VS code version 1.18

When switching between tabs the scroll position of each tab is changing. Cursor position stays correct.

Type of files: c# . "OmniSharp Intellisense"  is enabled. 

How to reproduce:
open several c# files with at least 3 full page scrolls each, have  "OmniSharp Intellisense" extension enabled(you should see reference injections appear)  and switch between files using ether tabs on top or picking files from "open editors". You will see scroll position will change on each switch.  

My guess:
Some funky thing going on during Omnisharp Intellisense reference injection. See screenshot
![screen shot 2017-11-11 at 3 07 37 am](https://user-images.githubusercontent.com/5710850/32676584-bd2cdb7a-c68d-11e7-8ca3-5d2857b6b9d1.png)
</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38085</IssueID>
    <Title>Touchpad scroll behaves as arrow keys</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Win 10 Enterprise 1709 (16299.19)
- Extensions:
bajdzis.vscode-twig-pack@1.0.0
JuanBlanco.solidity@0.0.31
ms-python.python@0.8.0
PKief.material-icon-theme@2.2.4

Steps to Reproduce:

1. Scroll with two-finger scrolling on the touchpad

Effect: you can see the selected line moving. If scrolling up, the window scrolls when the line reaches the top. It does the same for scrolling down - the active/selected line moves down, reaches the bottom edge end *then* the window scrolls.

Touchpad: ELAN Smart-Pad, Driver Version: 11.4.92.1_X64_WHQL

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38082</IssueID>
    <Title>Breakpoint indicators out of sync with actual breakpoints</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (0fbdfff167653b233231259ceb3109f0931887ef, 2017-11-09T08:13:46.054Z)
- OS Version: Windows_NT x64 10.0.17035
---

This isn't 100% reproducible but the breakpoint indicators seem to very often get out of sync with the actual breakpoints. You can see this below -- where I have no breakpoints, but indicators all over. I am also seeing issues where toggling a breakpoint by clicking in the gutter doesn't work all the time either, sometimes it adds the indicator without adding the actual breakpoint, others it adds the breakpoint with no indicator.

![image](https://user-images.githubusercontent.com/641685/32669703-74485138-c60f-11e7-9886-437c6bc2bc45.png)

Also to get the problem to go away, I usually have to completely restart vscode.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38079</IssueID>
    <Title>New blue icon not visible pinned to taskbar with default win7 background</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
VS-code-vagrantfile|mar|0.0.7
azure-account|ms-|0.2.0
vscode-docker|Pet|0.0.21
plsql-language|xyz|1.1.1

Steps to Reproduce:

1. Install the October release of VS Code on Windows 7
2. Pin VS Code to the taskbar
3. Set the default blue + logo desktop background
4. Enable Win 7 visual styles (i.e. transparent taskbar)

Expected behaviour:

Able to see the icon

Actual behaviour:

Icon is nearly the same colour as the taskbar so is not visible. See attached screenshot.
![vs-code-icon-not-visible](https://user-images.githubusercontent.com/22169186/32669292-ee0e7fba-c637-11e7-8991-50b9dd21b42b.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38073</IssueID>
    <Title>TypeScript Function Declarations Syntax Highlighting Problem With Multiline Params</Title>
    <Description>VSCode Version: 1.18.0
OS Version: Windows 10

Wrong syntax highlighting when parameters start on the next line.

![image](https://user-images.githubusercontent.com/4381789/32668236-fbdb62de-c60a-11e7-9963-c616deececcd.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38065</IssueID>
    <Title>Optional Quick Menu position</Title>
    <Description>It would be nice to have an option which allows to change QuckMenu position: top (current), middle and bottom. 

- VSCode Version: 1.18.0
- OS Version: Ubuntu 16.04 x64
</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38052</IssueID>
    <Title>TSC hangs on while building</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
EditorConfig|Edi|0.11.1
spfx-debug|eli|0.0.3
spfx-essentials|eli|0.0.2
auto-close-tag|for|0.5.3
beautify|Hoo|1.1.1
json-to-ts|Mar|1.5.3
PowerShell|ms-|1.5.0
debugger-for-chrome|msj|3.5.0
view-in-browser|qin|0.0.5
vscode-icons|rob|7.17.0
autoimport|ste|1.5.3
JavaScriptSnippets|xab|1.5.0
html-css-class-completion|Zig|1.14.0



---

Steps to Reproduce:

1. ctrl + shift + b
2. building icon spinning always, can not finish building.  but creates the js files.
[TypeScript.zip](https://github.com/Microsoft/vscode/files/1461102/TypeScript.zip)

For video record: https://1drv.ms/u/s!Aj-2PjPharvQg-56fDmSDytfMggQGw

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes - no luck</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38048</IssueID>
    <Title>now cpu 100%</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-eslint|dba|1.4.3
vscode-html-css|ecm|0.1.8
vue-snippets|hol|0.1.5
beautify|Hoo|1.1.1
typings-autoinstaller|jvi|1.2.0
debugger-for-chrome|msj|3.5.0
vetur|oct|0.11.0
view-in-browser|qin|0.0.5
easysass|spo|0.0.6



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38040</IssueID>
    <Title>Incorrect font</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)
- OS Version: Windows_NT x64 10.0.17025
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
rainbow-brackets|2gu|0.0.6
pascal|ale|0.10.0
code-gnu-global|aus|0.2.2
vscode-eslint|dba|1.4.3
code-runner|for|0.8.3
vscode-clang|mit|0.2.2
cpptools|ms-|0.14.2
material-icon-theme|PKi|2.2.4

(1 theme extensions excluded)


---

Steps to Reproduce:

1.Open a document
2.Right click on a tab
The language of the software on my computer is Simplified Chinese.
The words in ”Close“ ”Show in file explorer" options are in the system default font, but the Chinese words in the option"Close all(全部关闭)","Close the unchanged(关闭未更改)“ and "Keep it open(保持打开状态)" are showed in Times New Roman.
The problem didn't appear before I updated Windows to 17025 and VS Code to 1.18.0.
![vAlhe.png](https://t1.picb.cc/uploads/2017/11/10/vAlhe.png)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38037</IssueID>
    <Title>Windows title bar icon disappears when the title bar color is blue</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Windows title bar icon disappears when the title bar color is blue

---

Steps to Reproduce:

1. Change the windows Setting &gt; Personal &gt; Color to Blue. (First color tile in the third row)
&lt;img width="532" alt="image" src="https://user-images.githubusercontent.com/668404/32646731-ed53c6f2-c628-11e7-9bde-59e7cd782270.png"&gt;

2. Open vscode, and the title bar icon will disappear.
&lt;img width="200" alt="image" src="https://user-images.githubusercontent.com/668404/32646743-fac0860e-c628-11e7-98b6-30c2220dd3c1.png"&gt;


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38032</IssueID>
    <Title>ts 调试时，有时会莫名其妙的增加了很多的断点，并且这些断点还不能取消，必须先取消所有断点，再重新打开改文档才能使断点消失</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
vscode-express|Com|0.0.5
EditorConfig|Edi|0.11.1
beautify|Hoo|1.1.1
csharpfixformat|Leo|0.0.39
vscode-html-scss|P-d|0.0.42
ejs-language-support|Qas|0.0.1
code-settings-sync|Sha|2.8.5
ejs-snippets|Tao|0.1.0
Angular2|UVB|0.4.1
html-css-class-completion|Zig|1.14.0
vscode-file-peek|abi|1.0.1
html-snippets|abu|0.1.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.4.3
Vue2|duc|0.1.3
tslint|eg2|1.0.16
vscode-nupkg|eri|0.0.8
scaffold|fir|1.0.0
auto-close-tag|for|0.5.3
auto-rename-tag|for|0.0.15
angular-bootstrap|her|4.0.6
csharpextensions|jch|1.3.0
nuget-reverse-package-search|jes|0.1.68
vscode-nuget-package-manager|jmr|1.1.4
docthis|joe|0.6.0
Angular2|joh|2.10.0
vscode-csharp-snippets|jor|0.2.0
docomment|k--|0.0.17
Go|luk|0.6.67
HTMLHint|mka|0.4.0
csharp|ms-|1.13.0
mono-debug|ms-|0.15.8
node-debug2|ms-|1.18.3
vetur|oct|0.11.0
ionic2-snippets|oud|1.0.0
rxjs-snippets|pko|0.0.2
vscode-icons|rob|7.17.0
aspnet-helper|sch|0.6.4
vue-vscode-snippets|sdr|1.1.0
autoimport|ste|1.5.3
bootstrap-3-snippets|wcw|0.1.0
swig|zhu|0.0.5

(3 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38030</IssueID>
    <Title>Minimap(enhanced scrollbar) became a black</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:44:48.751Z)(from ppa: ```deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main```)


- OS Version: Ubuntu 16.04.03 x64 (Linux x64 4.4.0-98-generic)
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.21
django-html|bib|1.2.0
django-snippets|bib|1.1.0
vscode-auto-open-markdown-preview|hnw|0.0.4
Go|luk|0.6.67
VS-code-vagrantfile|mar|0.0.7
hg|mrc|1.2.3
python|ms-|0.8.0
cpptools|ms-|0.14.2
team|ms-|1.122.0
vetur|oct|0.11.0
vscode-code-outline|pat|0.0.12
Ruby|reb|0.15.0
java|red|0.14.0
bash-debug|rog|0.1.0
bash-beautify|sha|0.1.1
vim|vsc|0.10.2
jinja|who|0.0.8
markdown-all-in-one|yzh|0.11.1



---

Steps to Reproduce:

1. open vscode

2. suspend your laptop

3. boom! minimap becomes blank like this

4. resizing the window will make it normal again

![2017-11-10 14-18-04](https://user-images.githubusercontent.com/7763702/32645418-1af6441a-c622-11e7-95e7-0f1e697ae17e.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38027</IssueID>
    <Title>Can extensions override default configurations other than editor configurations?</Title>
    <Description>There is contribution point `configurationDefaults` to override default configurations, but configurations which can be overridden are limited to those about editor configurations. Is there a way for extensions to override default configurations other than editor configurations?

### Background

I used extension [vscode-standardjs](https://github.com/chenxsan/vscode-standardjs), which lints and formats JavaScript codes according to [JavaScript Standard Style](https://github.com/standard/standard), and made built-in JavaScript formatter run on typing (set `editor.formatOnType` to `true`). And I came across a problem about on-type formatting because some default formatting configurations are not appropriate for JavaScript Standard Style (chenxsan/vscode-standardjs#47).

This problem can be avoided by manually overriding default formatter configurations in `settings.json`, but it would be helpful if vscode-standardjs can override default configurations like this:

```
    "configurationDefaults": {
      "[javascript]": {
        "javascript.format.insertSpaceAfterConstructor": true,
        "javascript.format.insertSpaceBeforeFunctionParenthesis": true
      }
    }
```
</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38025</IssueID>
    <Title>Cant re-run grunt tasks since v1.18</Title>
    <Description>I just upgraded to v1.18 and can no longer re-run a grunt task. This problem did not exist prior to this version. 

The issue only exists if you try to run the same grunt task again, i.e I can run 'task1' once and if I try to run again I cannot but I can run 'task2' but then can't run 'task2' again.

- VSCode Version: 1.18
- OS Version: Windows 10 Pro

Steps to Reproduce:

1. Run a grunt task, in this case I'm running one of my grunt tasks called 'cleanAll' which cleans up some folders. This problem exists for any of my grunt tasks though.

![image](https://user-images.githubusercontent.com/11023398/32644416-4f9e3e38-c646-11e7-8af1-8fdba79ec61e.png)

![image](https://user-images.githubusercontent.com/11023398/32644441-7df30d86-c646-11e7-80b9-cdcc96e4c631.png)

![image](https://user-images.githubusercontent.com/11023398/32644493-b8f1a35c-c646-11e7-86d7-b9d0d1e80a75.png)

2. The task runs correctly in the terminal as below

![image](https://user-images.githubusercontent.com/11023398/32644517-da79e1e2-c646-11e7-9a55-3beb98637aa3.png)

3. If I then try to rerun the same grunt task using the above steps 1-2 I get the below message

![image](https://user-images.githubusercontent.com/11023398/32644548-0876f5da-c647-11e7-906b-eff0d1cd4edd.png)

4. If I then click 'Kill Terminal' I get the below assertion failure

![image](https://user-images.githubusercontent.com/11023398/32644570-32c5a89a-c647-11e7-8d49-a4f65e136da3.png)

</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38024</IssueID>
    <Title>Request for filter search preview</Title>
    <Description>*Feature Request*

It would be nice to have preview when doing file filter search (CMD+P), so that I can see what file I'm trying to look for. Specially nice when having multiple files with the same name under different folders.</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38009</IssueID>
    <Title>Terminal sidebar close button not visible</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
django-snippets|bib|1.1.0
vscode-styled-jsx|bla|0.1.1
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.4.3
gitlens|eam|6.0.0
tslint|eg2|1.0.16
vscode-npm-script|eg2|0.3.3
vsc-material-theme|Equ|1.1.1
prettier-vscode|esb|0.24.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.4
beautify|Hoo|1.1.1
intellij-idea-keybindings|k--|0.2.16
vscode-github|Kni|0.23.0
MagicPython|mag|1.0.12
Kotlin|mat|1.3.0
HTMLHint|mka|0.4.0
vscode-apache|mrm|1.1.1
vscode-attrs-sorter|mrm|2.1.0
vscode-jade-snippets|mrm|1.0.1
vscode-pugbeautify|mrm|1.0.2
vscode-puglint|mrm|2.3.0
vscode-scss|mrm|0.6.2
vscode-stylefmt|mrm|2.5.0
python|ms-|0.8.0
cpptools|ms-|0.14.2
csharp|ms-|1.13.0
PowerShell|ms-|1.5.0
typescript-javascript-grammar|ms-|0.0.24
material-icon-theme|PKi|2.2.4
vscode-template-literal-editor|pli|0.8.4
java|red|0.14.0
vscode-icons|rob|7.17.0
prettier-eslint-vscode|Rob|0.7.1
code-settings-sync|Sha|2.8.5
shader|sle|1.1.2
twig|wha|1.0.2
jinja|who|0.0.8
ReactSnippets|xab|1.4.0



---

Steps to Reproduce:

1. Put the terminal panel to the sidebar.
2. Make that window smaller.
3. Close button is not visible, and not reachable in any way.
![image](https://user-images.githubusercontent.com/17981138/32637934-40bdf3aa-c582-11e7-99fa-3eddda4d0695.png)
As you see here, the 'X' button should be in the upper right.

Reproduces without extensions: **Yes**</Description>
    <CreatedDate>10/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>38003</IssueID>
    <Title>break points conflict with new added feature for in editor source control</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.21
vscode-database|baj|1.2.0
githistory|don|0.2.3
tslint|eg2|1.0.14
vscode-mongodb|ms-|0.0.1
azure-account|ms-|0.1.3
csharp|ms-|1.13.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37995</IssueID>
    <Title>Copy and Paste no Longer Work in Latest Version in macOS</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 16.7.0
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Open a file
2. Select/Highlight text
3. Attempt to copy the text
   * ⌘-c
   * Right click -&gt; copy
4. Attempt to paste into another doc

1. Copy Text from another file
2. Open a file in vscode
3. Attempt to paste the code (⌘-v)
   Nothing is pasted into the document

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37994</IssueID>
    <Title>1.18.0  All "Task" functionality broken</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: Extensions are disabled
---

Steps to Reproduce:

Clicking any of the following menu items from the "Tasks" menu:
Run Task
Run Build Task
Configure Tasks
Configure Default Build Task
...results in nothing but an output message, "Error: spawn UNKNOWN"

I originally posted this under Issue #37986, but the scope of the problem seems to be much bigger than I thought at the time.

Reproduces without extensions: **Yes**

Edit: just want to add that the symptoms persist after a fresh install.</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37969</IssueID>
    <Title>Microsoft Visual C++ Runtime Library Assertion failed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Windows 10 Pro

Steps to Reproduce:

1. Launch the embedded terminal inside vscode
2. Run some prolonged task (e.g. web servers with express)
3. Terminate the task

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![Imgur](https://i.imgur.com/G48wqOV.png)</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37964</IssueID>
    <Title>BUG: On the run task to transpile typescript, never ends task and still pop ups one error</Title>
    <Description>- VSCode Version: 1.18.0
- OS Version: Windows 10 Updated

This bug begined after update VSCode today.

Steps to Reproduce:

1. See the image:
![bug_vscode_20171109](https://user-images.githubusercontent.com/5774595/32617059-21fad2d4-c55b-11e7-98ee-3c87fa623287.gif)


</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37962</IssueID>
    <Title>Can't open more than one instance when VSCode is run as administrator</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.19.0-insider
- OS Version: Windows 10 Pro

Steps to Reproduce:

1. Run VSCode as administrator (either by right-clicking the icon or setting it as the default in Properties -&gt; Advanced)
2. Try to start another instance, either by choosing "New Window" or "Visual Studio Code - Insiders"

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

It may be worth pointing out that I'm using cmder as my integrated terminal. I have not tried disabling it to see if it fixes the issue but will try that and report back.</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37959</IssueID>
    <Title>Integrated terminal rendering underscore as spaces.</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:44:48.751Z)
- OS Version: Linux x64 4.4.0-98-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
python|don|0.7.0



---

Steps to Reproduce:

1. Open integrated terminal.
2. Type something having underscore like `git checkout Issue_7045`, it will render like this:
![image](https://user-images.githubusercontent.com/16687990/32614534-7bd1d4fa-c593-11e7-8440-6df0f8f3e096.png)
Although command will execute properly.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37955</IssueID>
    <Title>Interface overview is not following the side bar location</Title>
    <Description>The interface overview is not following the side bar location. It´s assuming the side bar is on left side

![Interface overview](https://i.imgur.com/DZOWPbH.png)

- VSCode Version: 1.19.0-insider
- OS Version: Windows 10

Steps to Reproduce:

1. Open VSCode
2. Move the side bar to rigth
3. Open the interface overview

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37950</IssueID>
    <Title>Provide a mechanism to track explorer sidebar extensions and to disable them</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:32:39.870Z)
- OS Version: Darwin x64 16.7.0

Reproduces without extensions: No

Some of the extensions provide additional panels in the explorer. This is how my new VSCode window looks now:
![image](https://user-images.githubusercontent.com/693/32611573-f1e03ae6-c55d-11e7-8d84-a3d2dba38479.png)

The problem I'm having is that I have a docker extension installed only for syntax highlighting, but it forces its panel everywhere, and I have to turn it manually in each window. I'd like to see something like "Disable Always".

The other problem is that it's not possible to go from a panel to whatever extension provides it. Notice how I have two outlines: one is "Code Outline" coming from a good functional extension, the other is "Code outline" and i couldn't yet figure where did I get that one. Something like "Show Extension" in the context menu would help a lot to track those.</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37937</IssueID>
    <Title>Create shortcut key to switch between terminals in vs code.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0
- OS Version: Windows 7 SP1

Steps to Reproduce:

1. Ctrl+` to open terminal.
2. Ctrl+Shift+` to create new terminal.
3. Shortcut key required to switch between terminals.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37914</IssueID>
    <Title>Red dot from debug works weird in 1.18.0</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.18.0
- OS Version: Windows 10 16299.19 and Mac OS 10.13.1
Reproduces without extensions: To show the issue,  I have to launch my program.

Steps to Reproduce:
1. add breakpoints before debugging
2. The issues mostly happens when deleting breakpoints when the program stops at any breakpoints. Deleting breakpoints when the program is not running sometimes trigger this issues.

It also deletes one of the other breakpoints( mostly next line). Usually for my Windows. 
The breakpoints are deleted and program no longer stops there. But the dots are still shown. Usually for my Mac, sometimes for my Windows.

When I restart VSCode, the dots are not showing any more.

The points are still shown with no breakpoint on the left side
The issues happens on both C++ and Java, so it shouldn't be the problem of extensions.
![image](https://user-images.githubusercontent.com/28442838/32599427-797a4d48-c577-11e7-8462-b1c713e97fd1.png)
![image](https://user-images.githubusercontent.com/28442838/32600049-448c438c-c579-11e7-89a1-37251ae489bb.png)
</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37903</IssueID>
    <Title>Native Tab still does not work on MacOs High Sierra</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0 
- OS Version: MacOS High Sierra 

Dear Vs Code Team, 

This issue has been opened since version 1.17.0 on High Sierra as well as have discussed so much at the community, to solve Native Tab issue by myself, I have prepared my own electron build (on MacOs High Sierra), follow this instructions https://electron.atom.io/docs/development/build-instructions-osx/ and works great with Native Tabs again but with some issues, for example "cannot check updates" etc You have improved electron for code, How can I find your own electron implementations, Can you share with me and with community? 

Thanks, 
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37888</IssueID>
    <Title>Underscore is 'Space' in terminal</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T12:44:48.751Z)
- OS Version: Linux x64 4.13.0-16-lowlatency
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
php-debug|fel|1.11.1
php-intellisense|fel|1.5.4
php-pack|fel|1.0.1
sublime-keybindings|ms-|3.0.3



---

Steps to Reproduce:

1. Open terminal
2. Key in an underscore character

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37883</IssueID>
    <Title>Open Markdown links inside the preview pane itself as Markdown preview</Title>
    <Description>Open Markdown links inside the preview pane itself as Markdown preview, Now it is opening in a new tab and it's opening in Edit mode. Please fix this and this would be surely great for documentation purposes.</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37878</IssueID>
    <Title>VSCode startup freezes - 1.18</Title>
    <Description>Has been happening since the last few versions. Running on 1.18 now. Startup profiles as below

[dba8_main.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1456385/dba8_main.cpuprofile.txt)
[dba8_renderer.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1456386/dba8_renderer.cpuprofile.txt)

- VSCode Version: &lt;code&gt;Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)&lt;/code&gt;
- OS Version: &lt;code&gt;Windows_NT x64 6.1.7601&lt;/code&gt;
- CPUs: &lt;code&gt;Intel(R) Core(TM) i5-5300U CPU @ 2.30GHz (4 x 2294)&lt;/code&gt;
- Memory (System): &lt;code&gt;7.89GB (1.86GB free)&lt;/code&gt;
- Memory (Process): &lt;code&gt;170.27MB working set (195.93MB peak, 142.36MB private, 43.43MB shared)&lt;/code&gt;
- Load (avg): &lt;code&gt;0, 0, 0&lt;/code&gt;
- VM: &lt;code&gt;0%&lt;/code&gt;
- Initial Startup: &lt;code&gt;yes&lt;/code&gt;
- Screen Reader: &lt;code&gt;no&lt;/code&gt;
- Empty Workspace: &lt;code&gt;no&lt;/code&gt;
- Timings:

|Component|Task|Time (ms)|
|---|---|---|
|main|start =&gt; app.isReady|44|
|main|app.isReady =&gt; window.loadUrl()|308|
|renderer|window.loadUrl() =&gt; begin to require(workbench.main.js)|35058|
|renderer|require(workbench.main.js)|912|
|renderer|create extension host =&gt; extensions onReady()|52834|
|renderer|restore viewlet|91|
|renderer|restore editor view state|53416|
|renderer|overall workbench load|77731|
|main + renderer|start =&gt; extensions ready|113137|
|main + renderer|start =&gt; workbench ready|114108|

---

:warning: Make sure to **attach** these files from your *home*-directory: :warning:
-`dba8_main.cpuprofile.txt`
-`dba8_renderer.cpuprofile.txt`</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37872</IssueID>
    <Title>spawn UNKNOWN when Find in files</Title>
    <Description>- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:19:36.079Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
include-autocomplete|ajs|0.0.4
Bookmarks|ale|0.17.0
code-gnu-global|aus|0.2.2
macros|ged|1.2.1
gc-excelviewer|Gra|1.1.15
CppSnippets|har|0.0.13
output-colorizer|IBM|0.1.2
auto-comment-blocks|kev|1.0.1
cpptools|ms-|0.14.0
material-icon-theme|PKi|2.2.4
reloaded-cpp|rel|0.1.6
partial-diff|ryu|0.4.1
surrounding|sif|1.4.0
vscode-fileutils|sle|2.7.1

(1 theme extensions excluded)
![untitled](https://user-images.githubusercontent.com/19317679/32588785-991a83ea-c543-11e7-89d5-327acf92da25.png)


---

Steps to Reproduce:

1. Press CTRL+SHIFT+F to open File in Files pane
2. Enter any search string and press Enter



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37865</IssueID>
    <Title>扩展程序一直报这个错</Title>
    <Description>![image](https://user-images.githubusercontent.com/30867702/32586973-dca0642a-c540-11e7-8ce2-4b62fbf3560f.png)
求解决！！！！！急急急</Description>
    <CreatedDate>09/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37847</IssueID>
    <Title>Resizing terminal creates additional lines</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (af39ef560060e7e8ba8d75983c9ec1da3f4d2a20, 2017-11-07T16:42:33.037Z)
- VSCode Version: Code 1.17.2
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jshint|dba|0.10.15
githistory|don|0.2.3
python|don|0.7.0
vscode-great-icons|emm|2.1.20
csharp|ms-|1.13.0
material-icon-theme|PKi|2.2.4
gitblame|wad|2.2.0



---

Steps to Reproduce:

1. Show integrated terminal
2. Click Move to Right to make it vertical
3. Now shrink the terminal by dragging the border of the terminal to the right
![capture](https://user-images.githubusercontent.com/22357476/32574075-eee02b28-c484-11e7-990e-4345f7fe5444.PNG)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37843</IssueID>
    <Title>Add when context: editorGroupIndex</Title>
    <Description>It would be great if it where possible to use the editor group index/id in keybinding when clauses.

This would provide location context aware key commands for editorGroup/pane navigation.

Example
```
 { "key": "ctrl+h",             "command": "workbench.action.focusPreviousGroup" 
                                              "when": "editorGroupIndex != 0" },
 { "key": "ctrl+h",             "command": "workbench.files.action.focusFilesExplorer",
                                              "when": "editorGroupIndex == 0" },
```
In this case an editorGroupCount would probably also be necessary for determining if you are in the last editorGroup.

An alternative would be firstEditorGroup/lastEditorGroup, since I think most navigation rules would happen at the edges, and not in the middle of several open editor groups.

Is it possible to add where clauses in an extension, or would this functionality only be accessible after a vs code application change?

I would also be interested in submitting a PR for this, but not sure where to start in the code base.
</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37825</IssueID>
    <Title>The program have a high CPU utilization rate and memory!!!</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.close vsc
2.reopen vsc 

when i delete all plugins,it got right,but before long it reappear again.And it works lag .
![1ekb6a6c5rd wg _n21 gjq](https://user-images.githubusercontent.com/16516811/32556823-68462994-c4db-11e7-8819-3f0d63381c8b.png)

there are my plugins:
![image](https://user-images.githubusercontent.com/16516811/32557163-5492fea8-c4dc-11e7-82b9-c2da3e738fa5.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37818</IssueID>
    <Title>Search Viewlet is consuming a lot of CPU (even when it's hidden)</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (af39ef560060e7e8ba8d75983c9ec1da3f4d2a20, 2017-11-07T16:42:33.037Z)
- OS Version: Windows_NT x64 10.0.16299

---

Steps to Reproduce:

1. Execute a search in the search viewlet.
2. I have ~42 results in 12 files.
3. **Open the SCM viewlet**
4. Open one of the files where there is a search result
5. Edit the file such that you add a new search result or that you remove a search result by editing

**Important** because this was so bad that I had to stop what I was doing and check what the hell is causing VS Code to stutter.

&gt; Observe typing/working is perturbed by the search viewlet (which is not visible!). This is all on a quite fast machine

 * first one is 133ms blocked
 * second one is 142ms blocked
 * third one is 320ms blocked

![image](https://user-images.githubusercontent.com/5047891/32553012-f6a07000-c495-11e7-8f78-468f2441d74f.png)


In any case, removing one more result or adding one more result shouldn't take over 10ms.
![image](https://user-images.githubusercontent.com/5047891/32552891-a6c5d444-c495-11e7-88f6-229e3b6c3ade.png)



[CPU-20171108T150231.zip](https://github.com/Microsoft/vscode/files/1454124/CPU-20171108T150231.zip)
</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>12/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37805</IssueID>
    <Title>Font ligatures are not visible anymore in Integrated Terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Winodws 10

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

The user settings has following settings in it

![image](https://user-images.githubusercontent.com/9594837/32536933-84ee1278-c486-11e7-9526-79a397afd34b.png)

Yet, the ligatures do not appear as expected in the terminal window.</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37801</IssueID>
    <Title>Implement horizontal scroll bar in left file explorer</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37796</IssueID>
    <Title>Allow sharing of task environments</Title>
    <Description>Various tasks need environment variable set up to work properly. Currently a task can use the "tasks/options/env" property to define additional variables per task.

However, you may have many different tasks, and all of them need the same environment. It is cumbersome to duplicate this in every single task. It would be nice if there was a syntax to inherit this somehow.

For a simple example of where this would be useful, consider the case of defining tasks for running CMake in various configurations (debug, release, x86, x64) against an MSVC toolchain.  In order for this to work, each of these will need to set up a vcvars-like environment of include paths, lib paths, etc.  The path to the headers is always going to be the same, and the path to the lbiraries will always be the same for x86 (across debug &amp; release), and will always be the same for x64 (across debug &amp; release).

So we should be able to define a single include environment, and 2 lib environments, and then when we define the tasks for each of the cmake configurations, simply import the two previously defined environments.

The alternative is to copy a huge mess of variables into every single task, which is pretty cumbersome.</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37791</IssueID>
    <Title>Clicking on filenames in terminal does not work when line is wrapped</Title>
    <Description>I wondered for a while why sometimes ctrl+clicking on a filename in the console doesn't open the file. I just noticed it is failing when text is wrapped. This is for a build task which has an exception I want to investigate.

For example I see the error:
    at SomeDataAccessMongo.module.exports.SomeDataAccessMongo.processCriteria (c:\work\project1\project1\something\db\some-dao-mon
go.js:43:27)

Notice the line break put in between some-dao-mon and go.js

Yes I don't have a very wide screen and this error line is crazy long.. but if I press ctrl+b to close the side panel it the console text is not re-wrapped. So I cant click on it and I cant see any way to configure the console to have scrollbars, etc unless I restart the build task with the side panel closed. After which I can see the full error text on one line and can click it fine.


- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.3
gitlens|eam|5.7.1
tslint|eg2|1.0.14
vscode-mocha-sidebar|mat|0.10.16
HTMLHint|mka|0.4.0
spellchecker|swy|1.2.13



---

Steps to Reproduce:

1. 
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37787</IssueID>
    <Title>Editor not showing up </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
![Screenshot](https://i.imgur.com/kVpoEpa.png)
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:

Version 1.19.0-insider
Commit 432b53bc3a263fda8db6ecca83d1ce89ede04bf2
Date 2017-11-06T06:22:36.757Z
Shell 1.7.9
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64
- OS Version:
Kernel: 4.4.0-53-generic x86_64 (64 bit gcc: 5.4.0)
Desktop: Cinnamon 3.2.7 (Gtk 2.24.30) dm: mdm Distro: Linux Mint 18.1 Serena

Steps to Reproduce:

1. Update to latest VS code Insiders edition as of this post
2. Open the application.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes 

It does this with any file I try to open unless the file is already empty. </Description>
    <CreatedDate>07/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37775</IssueID>
    <Title>Keyboard is not working within the visual studio code</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.11.0
beautify|Hoo|1.1.1
latex-workshop|Jam|3.6.1
code-gnu-global|aus|0.2.2
jshint|dba|0.10.15
vscode-eslint|dba|1.4.3
python|don|0.7.0
csharpextensions|jch|1.3.0
MagicPython|mag|1.0.12
vscode-clang|mit|0.2.2
mssql|ms-|1.2.0
cpptools|ms-|0.14.0
csharp|ms-|1.12.1
java|red|0.13.0
python|tht|0.2.3
pdf|tom|0.2.0
vscode-java-debug|vsc|0.2.0
vscode-java-pack|vsc|0.2.0



---

Steps to Reproduce:

1. Whenever I started the visual studio It's stoped taking any keyboard input
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>07/11/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37774</IssueID>
    <Title>Error Invalid string length attempting to close VSCode after editing large file</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
angular2-snippets|dan|1.0.16
githistory|don|0.2.3
python|don|0.7.0
vscode-generate-getter-setter|DSK|0.4.2
tslint|eg2|1.0.14
vs-code-xml-format|fab|0.1.5
beautify|Hoo|1.1.1
docthis|joe|0.6.0
prettify-json|moh|0.0.3
mssql|ms-|1.2.0
azure-account|ms-|0.1.3
azurecli|ms-|0.3.0
csharp|ms-|1.12.1
azurerm-vscode-tools|msa|0.3.7
debugger-for-chrome|msj|3.5.0
vscode-icons|rob|7.17.0
vscode-sql-beautify|sen|0.0.4



---

Steps to Reproduce:

1. Have auto save enabled.
1. Open a large file.  In my case CSV file is 307MB
2. Scroll to bottom of file, and make a single character change
3. Close the file.
4. Close VSCode and should now see the error and VSCode does not close.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>07/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37772</IssueID>
    <Title>Using jsconfig.json and custom .d.ts file with non js extensions</Title>
    <Description>Hello!

I have a JSConfig.json file in my working directory containing the following:
```json
{
    "compilerOptions": {
        "checkJs": true,
        "lib": ["es6"]
    }
}
```

I also have a custom 'globals.d.ts' file which contains the data I want for the autocomplete options. This works perfectly for .js file extensions, but it seems to ignore it for custom file extensions I associated with the javascript language. The extensions added to the settings like this:
"files.associations": {
        "*.sample": "javascript"
    },

Should also use these files. 

At the moment, the custom file extensions I have just use the standard es6 library for Autocomplete, rather than the file in my working directory (which .js files use).

</Description>
    <CreatedDate>07/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37764</IssueID>
    <Title>Terminal doesnt run.Code 259</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.17025
![image](https://user-images.githubusercontent.com/4122955/32485989-4142c34e-c3e0-11e7-8e2f-b154eaa9963d.png)

- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
vscode-express|Com|0.0.5
vscode-ipaddress|Com|1.0.0
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.4.2
Angular2|joh|2.10.0
code-beautifier|mic|1.7.2
vscode-todo-parser|min|1.9.1
azure-account|ms-|0.1.3
short-js-doc|mya|0.1.10
vetur|oct|0.11.0
vscode-docker|Pet|0.0.20
material-icon-theme|PKi|2.2.4
datetime|rid|1.0.5
vscode-icons|rob|7.17.0
code-settings-sync|Sha|2.8.5
svg-snippets|sid|1.0.1
terminal-tabs|Tyr|0.1.1

(1 theme extensions excluded)


---

Steps to Reproduce:

1. `Ctrl+~` to show terminal 
2. PS auto exit with code **259** , CMD auto exit with code **1**
![image](https://user-images.githubusercontent.com/4122955/32485956-2a487346-c3e0-11e7-9ef1-b13b97328d91.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
Reproduces after re-install:Yes</Description>
    <CreatedDate>07/11/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37732</IssueID>
    <Title>Unable to view files in newest insiders build</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (432b53bc3a263fda8db6ecca83d1ce89ede04bf2, 2017-11-06T06:22:36.757Z)
- OS Version: Linux x64 4.10.0-38-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.2
python|don|0.7.0
gitlens|eam|5.7.1
cpptools|ms-|0.14.0
vetur|oct|0.11.0
vim|vsc|0.10.2



---

Steps to Reproduce:

1. Open any file
2. The text view is blank.

Reproduces without extensions: Yes

It also is a problem in both normal and multi-root workspaces.


The following shows up in the dev tools console:

```
shell.ts:459 charCode is not defined: ReferenceError: charCode is not defined
    at o (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:530695)
    at Object.s [as renderViewLine] (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:531359)
    at e.renderLine (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:1491408)
    at e._finishRendering (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:400302)
    at e.render (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:398052)
    at e.renderLines (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:397467)
    at t.renderText (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:1538123)
    at t._actualRender (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:1641210)
    at file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:1640476
    at z (file:///usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:9:1633012)
```
</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37726</IssueID>
    <Title>Latest insider install/update broken?</Title>
    <Description>Does not allow display/edit/paste of any type file (.md, .txt, .ts, ....)
However, Welcome does display and links work and FileExplorer works as well
Also tried various Change Themes, which do change the theme only

Suspect editors are not loading

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
Version 1.19.0-insider
Commit 432b53bc3a263fda8db6ecca83d1ce89ede04bf2
Date 2017-11-06T06:22:36.757Z
Shell 1.7.9
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64

Steps to Reproduce:

1.Install latest daily update
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37725</IssueID>
    <Title>Missing text in files and unable to type text in new files</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (432b53bc3a263fda8db6ecca83d1ce89ede04bf2, 2017-11-06T06:22:36.757Z)
- OS Version: Linux x64 4.13.0-16-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.11.0
clojure|avl|0.9.1
scala-lsp|dra|0.2.2
code-runner|for|0.8.3



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37710</IssueID>
    <Title>Editor does not open when opening files</Title>
    <Description>- VSCode Version: Code - Insiders 1.19.0-insider (432b53bc3a263fda8db6ecca83d1ce89ede04bf2, 2017-11-06T06:22:36.757Z)
- OS Version: Linux x64 4.10.0-38-generic
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Updated code-insiders
2. Open code-insiders
3. Folder opens with previously opened files, but no editor.
4. Tabs are visible, no editor.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37706</IssueID>
    <Title>Preserve 'Keyboard Shortcuts' search string when switching between tabs</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18 Insiders
- OS Version: Mac OS

Steps to Reproduce:

1. Open 'Keyboard Shortcuts' view and another file in another tab.
2. Type 'Trigger Suggest' in shortcuts tab.
3. Navigate to another tab and go back to shortcuts.
-&gt; Search string is not preserved.

Would be nice if we can save query state in keyboard shortcuts tab. 
**Use case scenario:** testing newly assigned keybinding in the file and returning back to shortcuts to change it.

P. S. I think it used to work before.
</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37703</IssueID>
    <Title>Blank editor afetr update to 1.19.0-insider in Ubuntu 16.04</Title>
    <Description>I am getting blank editor after updating this evening. 
- VSCode Version: 1.19.0-insider
--
- OS Version: Ubuntu 16.04 amd-64 bit</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37695</IssueID>
    <Title>Keyboard Input not working in VSCODE</Title>
    <Description>VSCode is my favorite text editor. Nowadays I realized that keyboard input is not working on editor for several times.
Now I am stuck again.
In terminal window of VSCode, keyboard works.
But on edit screen, when I try to type sth, never works.
</Description>
    <CreatedDate>06/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37689</IssueID>
    <Title>Opening a new folder closes exists terminal with process in it</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
angular-material|1to|0.13.0
ng-template|Ang|0.1.7
path-intellisense|chr|1.4.2
EditorConfig|Edi|0.11.1
tslint|eg2|1.0.14
prettier-vscode|esb|0.24.0
auto-rename-tag|for|0.0.15
angular-essentials|joh|0.3.2
Angular2|joh|2.10.0
Angular-BeastCode|Mik|5.0.12
debugger-for-chrome|msj|3.5.0
angular2-inline|nat|0.0.17

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Open VS code
2. Open terminal
3. Start some install process, like npm install -g @angular/cli
4. while it in progress in Vs code open new folder

Result: the whole vs code window is reinitialized with terminal where installation was.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Does not matter.</Description>
    <CreatedDate>05/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37688</IssueID>
    <Title>Terminal does disappear when you cancel opening new project on file saving</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 (1.17.2)
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Create/ Open project in Visual studio Code 
2. Create new File without saving it (Untitled-1)
3. Within open project, try to open another project ( File&gt;Open...), choose corresponding folder
4. On "Do you want to save the changes you made ?" popup, cancel opening project (Cancel)

Your terminal box is now gone (despite running/not running anything in it before) - you have to add new terminal manually
As far as I know, it does reproduce on windows

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37680</IssueID>
    <Title>vs code does not work without internet</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-javascript-snippet-pack|aka|0.1.5
Bookmarks|ale|0.17.0
clipboard-history|Anj|1.0.7
vscode-color|ans|0.4.5
htmltagwrap|bra|0.0.5
vscode-eslint|dba|1.4.2
jquerysnippets|don|0.0.1
python|don|0.7.0
vscode-html-css|ecm|0.1.8
EditorConfig|Edi|0.11.1
vscode-great-icons|emm|2.1.19
vsc-material-theme|Equ|1.1.1
php-debug|fel|1.11.1
php-intellisense|fel|1.5.4
php-pack|fel|1.0.1
file-icons|fil|1.0.5
code-runner|for|0.8.3
vscode-firefox-debug|hbe|0.17.0
path-autocomplete|ion|1.6.2
autofilename|Jer|0.1.3
vscode-gutter-preview|kis|0.11.4
vscode-simple-icons|Lau|1.6.2
MagicPython|mag|1.0.12
vscode-jade-snippets|mrm|1.0.1
vscode-pugbeautify|mrm|1.0.2
vscode-scss|mrm|0.6.2
debugger-for-chrome|msj|3.5.0
material-icon-theme|PKi|2.2.4
vscode-css-peek|pra|1.3.1
seti-icons|qin|0.1.3
view-in-browser|qin|0.0.5
vscode-icons|rob|7.17.0
sass-indented|rob|1.4.5
bootstrap4-vscode|the|3.0.0
bootstrap-3-snippets|wcw|0.1.0
JavaScriptSnippets|xab|1.5.0

(15 theme extensions excluded)


---

Steps to Reproduce:

1. I do not have internet
2. I run the shortcut but it does not start, it does not show me more details it just does not start when I do not have internet, the internet returns now if it starts vs code


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>05/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37662</IssueID>
    <Title>Scrolling issues</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: the listing length exceeds browsers' URL characters limit
---

So I'm using a **surface laptop**, upgraded it of course to the pro while I could for free.
I'm having issues with scrolling up and down on VSCode. It's not smooth at all.
This is mainly with the _track pad_.
I scroll up and it takes a few seconds for VSCode to register that I want to scroll up and it just jumps.

I have opened up other apps (slack, edge, chrome, office word, VS) and the scrolling behaves just fine and it's very responsive. Not sure why VSCode has a hard time since it's just an advanced text editor.

What is super interesting is that, when I use the touch SCREEN (not the track pad) scrolling is fine.

Steps to Reproduce:

1. Two fingers on track pad
2. move them up and/or down

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/11/2017</CreatedDate>
    <ClosedDate>05/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37641</IssueID>
    <Title>$eslint-stylish problem matcher fails on large errors messages.</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: Extensions are disabled
---

Steps to Reproduce:
1. Setup task in tasks.json with $eslint-stylish problem matcher
2. Files to check with eslint should generate errors large enough (larger than terminal width). For example use big font size, long errors names and long errors descriptions.
![terminal](https://user-images.githubusercontent.com/16012334/32404828-a7d4e354-c169-11e7-8139-1eef2cfef586.PNG)
3. Problem matcher recognise wrapped part of error message as a file name.
![warning](https://user-images.githubusercontent.com/16012334/32404851-43d98e76-c16a-11e7-8e9c-74bfb4bd1dbf.PNG)
4. Click on such warning leads to error
![error](https://user-images.githubusercontent.com/16012334/32404861-72864840-c16a-11e7-8ad1-ae6dd95db10a.PNG)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>04/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37639</IssueID>
    <Title>how to choose node version for debug</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.17.2
- OS Version:

Steps to Reproduce:

1. I have set my default node version to be 7.8.0:
```
linyuhuadeMacBook-Air:koa2-note linyuhua$ nvm alias default 7.8.0
default -&gt; 7.8.0 (-&gt; v7.8.0)
linyuhuadeMacBook-Air:koa2-note linyuhua$ which node
/Users/linyuhua/.nvm/versions/node/v7.8.0/bin/node
```

2.howerver, when I start to debug it shows:
```
Debugging with legacy protocol because Node.js v6.10.0 was detected.
/Users/linyuhua/.nvm/versions/node/v6.10.0/bin/node --debug-brk=48477 --nolazy demo/route/index.js 
Debugger listening on [::]:48477
/Users/linyuhua/dailycode/koa2-note/demo/route/index.js:4
app.use(async (ctx, next) =&gt; {
              ^
SyntaxError: Unexpected token (
    at Object.exports.runInThisContext (vm.js:76:16)
```
the node version used for debug is stiil 6.10.0

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>04/11/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37638</IssueID>
    <Title>High CPU use</Title>
    <Description>I've been using Code happily for a few weeks and it's suddenly started chewing up 99% CPU.  The same thing happens for stable builds and the Insider builds, and after deleting my %appdata%/code and ~/.vscode directories.

I've attached startup profiles and a minidump - let me know if I can do anything else.

[8586_main.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1443048/8586_main.cpuprofile.txt)
[8586_renderer.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1443049/8586_renderer.cpuprofile.txt)

[Code.dmp.zip](https://github.com/Microsoft/vscode/files/1443050/Code.dmp.zip)

- VSCode Version: &lt;code&gt;Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)&lt;/code&gt;
- OS Version: &lt;code&gt;Windows_NT x64 6.1.7601&lt;/code&gt;
- CPUs: &lt;code&gt;Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (1 x 2592)&lt;/code&gt;
- Memory (System): &lt;code&gt;4.00GB (2.79GB free)&lt;/code&gt;
- Memory (Process): &lt;code&gt;201.53MB working set (202.53MB peak, 179.17MB private, 49.46MB shared)&lt;/code&gt;
- Load (avg): &lt;code&gt;0, 0, 0&lt;/code&gt;
- VM: &lt;code&gt;100%&lt;/code&gt;
- Initial Startup: &lt;code&gt;yes&lt;/code&gt;
- Screen Reader: &lt;code&gt;no&lt;/code&gt;
- Empty Workspace: &lt;code&gt;yes&lt;/code&gt;
- Timings:

|Component|Task|Time (ms)|
|---|---|---|
|main|start =&gt; app.isReady|312|
|main|app.isReady =&gt; window.loadUrl()|68099|
|renderer|window.loadUrl() =&gt; begin to require(workbench.main.js)|35812|
|renderer|require(workbench.main.js)|8862|
|renderer|create extension host =&gt; extensions onReady()|7657|
|renderer|restore viewlet|0|
|renderer|restore editor view state|409|
|renderer|overall workbench load|1637|
|main + renderer|start =&gt; extensions ready|121762|
|main + renderer|start =&gt; workbench ready|114862|

---

:warning: Make sure to **attach** these files from your *home*-directory: :warning:
-`8586_main.cpuprofile.txt`
-`8586_renderer.cpuprofile.txt`</Description>
    <CreatedDate>04/11/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37631</IssueID>
    <Title>Font "ripping"/aliasing on ubuntu 16.04 with 1.17.2</Title>
    <Description>After updating from 1.17.1 to 1.17.2, I'm seeing some very bad aliasing/artifacts in the code window (all fonts affected):
![image](https://user-images.githubusercontent.com/1351158/32399965-f26e2c7a-c0b7-11e7-93a5-6bbe05433e2a.png)
(notice especially on the settings pane, e.g. font for setting "ruby.rctComplete.commandPath" has strange artifacts between the characters)

Note - this problem was not present until just now, when I opened the code editor after it auto-updated to 1.17.2. That said, it's possible something on my machine is causing issues, so I'll continue to debug as I have time and report back. Any ideas of what to test/check are welcome. Finally, apologies if this is a dupe, but I couldn't find any reports similar to this.
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Ubuntu 16.04.3 LTS

Reproduces without extensions: Yes</Description>
    <CreatedDate>04/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37630</IssueID>
    <Title>Git changes not working correctly</Title>
    <Description>I've noticed lately that when I click on a changed file in the source control tab I don't always see the changes to that file on the working tree.  Screenshot below shows that I have one file selected but the changes aren't being displayed.
![image](https://user-images.githubusercontent.com/16123225/32395936-7bb9d97e-c0a0-11e7-82a5-b7b436d25976.png)

- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
gitlens|eam|5.6.5
vscode-scss|mrm|0.6.2
sort-lines|Tyr|1.3.0




---

Steps to Reproduce:

not sure if this is reproable but i've seen it happen multiple times

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37623</IssueID>
    <Title>Corrupted font in vscode</Title>
    <Description>My global vscode font was corrupted, after i upgrade my Linux Distro(VScode don't included) and installed these plugins for vscode:
* LaTeX Workshop
* German - Code spell checker

I already tried to uninstall the named plugins, but the corruption still remains.
The Verbose output from vscode neither give a clue.

VSCode: 1.17.2
Linux: Parrot OS 

- VSCode Version: Code 1.17.2  b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z  - OS Version: Linux x64 4.13.0-parrot4-amd64 - Extensions: Extension|Author  truncated |Version -|-|- latex-workshop|Jam|3.6.0 code-runner|for|0.8.2 cpptools|ms-|0.14.0 platformio-ide|pla|0.7.3 markdown-preview-enhanced|shd|0.2.9 code-spell-checker|str|1.4.12 code-spell-checker-german|str|0.1.2 debug|web|0.21.2 - Steps to Reproduce: 1. 2. !- Launch with  code -disable-extensions  to check. -&gt; Reproduces without extensions: Yes/No



![vscode_font](https://user-images.githubusercontent.com/13970572/32385189-9acd6d36-c0bd-11e7-9f24-3aa445599c05.png)
</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37614</IssueID>
    <Title>Tab/keys navigation in Search panel</Title>
    <Description>When searching for a file using keyboard controls, you can use Shift+Ctrl+F to switch to the `Search` panel.

- Entering a search text, then pressing `Tab` should navigate to the next text input, which is "include files" . Instead it will first tabstop on various buttons, so you have to Tab 5 times or use mouse to click the include files input.

- It would be nice if pressing `Esc` while focused on any of the inputs would return to the Explorer panel. The rationale behind that is that in many IDEs "Search in files" is a popup window which can be closed with Esc to return back to normal edition.

</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37605</IssueID>
    <Title>Terminal not rendering properly (intermittent)</Title>
    <Description>
- VSCode Version: 1.17
- OS Version: macOS Sierra

![image](https://user-images.githubusercontent.com/5750045/32377078-f5e97908-c07c-11e7-8c34-60ffdad48fb0.png)
</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37592</IssueID>
    <Title>File explorer not working at all</Title>
    <Description>It happens only with a specific project. File explorer is simply not visible. 

Already tried uninstalling vscode and installing it back again. Also tested without any extension.

Root directory contains the next files:
```
-rw-r--r--   1 users     147 May 15 08:52 .babelrc
-rw-r--r--   1 users       8 May 11 07:59 .closure-config
-rw-r--r--   1 users     661 May 11 07:59 .eslintrc.js
drwxr-xr-x   8 users    4096 Nov  3 09:46 .git
-rw-r--r--   1 users       0 May 11 07:59 .gitattributes
-rwxr-xr-x   1 users    1634 Nov  2 13:17 .gitignore
drwxr-xr-x   8 users    4096 Nov  3 07:47 .idea
-rw-r--r--   1 users    3691 Nov  2 14:22 .php_cs.cache
-rw-r--r--   1 users    2234 May 15 08:52 Gulpfile.js
-rw-r--r--   1 users      71 May 11 07:59 README.md
drwxr-xr-x   6 users    4096 May 11 07:59 ansible
drwxr-xr-x   8 users    4096 Oct 23 14:14 app
drwxr-xr-x   2 users    4096 Nov  2 13:27 bin
-rw-r--r--   1 users    5079 Aug  9 15:00 command.txt
-rw-r--r--   1 users    4564 Nov  2 13:26 composer.json
-rw-r--r--   1 users  200076 Nov  2 13:27 composer.lock
-rw-r--r--   1 users 1840920 May  3  2017 composer.phar
drwxr-xr-x 664 users   28672 Sep 19 08:23 node_modules
-rw-r--r--   1 users    2619 Jul 21 08:42 package-lock.json
-rw-r--r--   1 users    1251 Sep 19 08:23 package.json
-rw-r--r--   1 users     995 May  3  2017 phpunit.xml.dist
-rw-r--r--   1 users     161 May 11 07:59 postcss.json
drwxr-xr-x   3 users    4096 May  3  2017 src
drwxr-xr-x   3 users    4096 May  3  2017 tests
drwxr-xr-x   3 users    4096 Nov  2 13:27 var
drwxr-xr-x  45 users    4096 Nov  2 13:27 vendor
-rw-r--r--   1 users    3790 May 15 08:52 watchers.xml
drwxr-xr-x   9 users    4096 Nov  2 13:27 web
-rw-r--r--   1 users  176205 Sep 19 10:21 yarn.lock
```

- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z)
- OS Version: Linux x64 4.13.10-1-ARCH
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
quokka-vscode|Wal|1.0.74
html-css-class-completion|Zig|1.12.0
html-snippets|abu|0.1.0
vscode-color|ans|0.4.5
vscode-eslint|dba|1.4.2
vscode-npm-script|eg2|0.3.2
php-intellisense|fel|1.5.4
phpcs|ika|0.7.0
bootstrap-3-snippets|wcw|0.1.0



---

Steps to Reproduce:

1. Open Code
2. Open project folder

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37586</IssueID>
    <Title>Window always on top when opened from a remote server</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
VS Code Window stays on top when opened from a remote server via ssh -X command.

Tested with other graphical programs and they worked fine. Didn't stay fixed "on top" over all other local windows.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5)
- OS Version: CentOS 7 (both remote and local pc)

Steps to Reproduce:

1. Connect to a remote server via: ssh -X uname@server
2. Open a file with vscode
3. Click on the editing field or file list or anywhere inside the window - get window into "focus". Otherwise works fine.
4. Try to swap windows with Alt + Tab
5. VS Code from the remote server stays on top - all other windows are always below until you minimize VS Code from remote. Then it fixes until you focus the remote VS Code window again.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37581</IssueID>
    <Title>Go to the last line via "Go to Line"</Title>
    <Description>It would be nice to go to the last line &amp; end of the line with negative values:
```
:-1          | go to the last line
:-1,-1       | go to the end of the last line
:,-1         | go to the end of the current line
 ```</Description>
    <CreatedDate>03/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37563</IssueID>
    <Title>UI Glitches out occasionally</Title>
    <Description>UI randomly starts glitching out flashing batches of darkness. screenshot below. No idea how to reproduce, but it has happened a few times now. Let me know if there's any more details I can collect when it happens!

![screen shot 2017-11-02 at 4 11 16 pm](https://user-images.githubusercontent.com/490968/32354803-afe12012-bfe8-11e7-8d99-f28236caee35.png)


- VSCode Version: 1.17.2 (1.17.2)
- OS Version: macOS 10.13.1 (Beta)

Steps to Reproduce:

1. Not sure 😞 </Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37558</IssueID>
    <Title>Allow drop between folders in explorer</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.20
sort-lines|Tyr|1.3.0
githistory|don|0.2.3
markdown-table-formatter|jos|0.2.3
Go|luk|0.6.66
prettify-json|moh|0.0.3
azure-account|ms-|0.1.3
rewrap|stk|1.5.3
gitblame|wad|2.2.0
vscode-proto3|zxh|0.1.2

---

Steps to Reproduce:

1. Select an existing directory.
2. Click the "New Folder" button at the top of the Side Bar pane.
3. Enter a name and press Enter.
4. Try to drag the new directory to the Side Bar root directory.
5. Fail to do so.

Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37557</IssueID>
    <Title>command 'emmet.expandAbbreviation' not found</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Manjaro kde 17.0.6 fresh install

Steps to Reproduce:

1. Start code
2. Try use emmet.
![screenshot_20171103_011447](https://user-images.githubusercontent.com/11390039/32352961-76ff9a7a-c034-11e7-8f40-f87be2639f4c.png)


![screenshot_20171103_011605](https://user-images.githubusercontent.com/11390039/32352992-9d174172-c034-11e7-95bd-4f07f57dff6a.png)


![screenshot_20171103_011642](https://user-images.githubusercontent.com/11390039/32353013-b347f5a4-c034-11e7-9f55-50a815428c68.png)


If i do some spaces in document, emmet start working.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37548</IssueID>
    <Title>Feature Request - Intellisense - Sort by use frequency</Title>
    <Description>Intellisense should keep track of how often particular items are selected by the user and have an option to modify the sort order of suggestions based on this.

For example when I type `console.`  I get the full list of console member functions sorted alphabetically even though 99% of the time I end up choosing `log`. After some period of use the `log` member function should appear at the top, perhaps in a "frequently used" area.</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37546</IssueID>
    <Title>Update does not work on macOS when running as a regular user (not administrator)</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
golang-tdd|joa|0.0.9
Go|luk|0.6.66
terraform|mau|0.0.19
gitblame|wad|2.2.0
HCL|who|0.0.5
---

Steps to Reproduce:

1. Install VSCode in the `/Applications` folder
2. When the new version is available, click the Update Now
3. VSCode restarts without updating because writing to the `/Applications` folder requires administrator password (which is not requested).

Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37543</IssueID>
    <Title>Not possible to set filename for Typescript Compiler Options</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Windows 10

Steps to Reproduce:
1. Create tsconfig.json
2. Ensure "experimentalDecorators": true
3. Implement Decorators
4. Change tsconfig.json filename
5. VS Code throws error where typescript decorators are used.

As a Developer,
When I use a different .json file for typescript compiler options,
I want to set the path and name of the configuration file,
so that the VS Code is able find the typescript compiler options</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37540</IssueID>
    <Title>Terminal Maximize/Restore button too big and doesn't restore</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (15449873f130d7f3e5604a1cac94f32a1f15f604, 2017-11-02T06:11:55.278Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
autofilename|Jer|0.1.3
regex|chr|0.1.0
ssh|chr|0.0.2
vscode-eslint|dba|1.4.2
ghlink|dt|0.0.6
tslint|eg2|1.0.14
azure-account|ms-|0.1.3
azurecli|ms-|0.3.0
github-issues-prs|ms-|0.6.0
debugger-for-chrome|msj|3.4.0
vetur|oct|0.10.1
vscode-versionlens|pfl|0.19.1
vscode-open-in-github|sys|1.6.0



---

Steps to Reproduce:

1. Move Terminal to the right
2. Maximize/Restore is too big
3. Restore doesn't work

![image](https://user-images.githubusercontent.com/9205389/32338609-89168d40-bfb2-11e7-8a5c-d40419d787be.png)

/cc @Tyriar </Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37537</IssueID>
    <Title>Show broken symlinks in file explorer</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 16.7.0
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

```
mkdir -p empty-dir
cd empty-dir
code .
ln -s foo bar
# see bar not showing up in file explorer
touch foo
# see both foo and bar show up in the file explorer
rm foo
# see both files disappear again
```

I would expect to see the file in the explorer, and when selected to be notified that the linked file does not exist.

Reproduces without extensions: Yes
</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37535</IssueID>
    <Title>Git for Windows is never closed</Title>
    <Description>Starting VS Code starts a background instance of "Git for Windows" which is never closed and eats up more and more RAM the longer it runs. Repeating this starts more and more instances, each eating more RAM over time.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 (x64)
- OS Version: Windows 10 Pro version 1511, Build 10586.1176

Steps to Reproduce:

1. Open VS Code
2. Close VS Code
3. Look at running background tasks
4. See an increasing number of "Git for Windows" instances with an increasing amount of used up RAM

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37529</IssueID>
    <Title>Touch controls</Title>
    <Description>Touch works in lots of places, but does not work in quite a few -- like tabs.


- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
Bookmarks|ale|0.17.0
ng-template|Ang|0.1.7
vscode-color|ans|0.4.5
npm-intellisense|chr|1.3.0
ionic3-vs-ionView-snippets|dan|1.0.1
vscode-eslint|dba|1.4.0
tslint|eg2|1.0.14
vscode-npm-script|eg2|0.3.2
auto-close-tag|for|0.5.2
auto-rename-tag|for|0.0.14
ionic-preview|ion|0.0.15
cordova-dev-essentials|jew|0.0.1
ionic2-vscode|jgw|1.0.0
Angular2|joh|2.10.0
ionic-extension-pack|loi|0.0.1
rxjs-snippets|pko|0.0.2
vscode-icons|rob|7.17.0
autoimport|ste|1.2.2
ionic2|Tha|3.0.1
Angular2|UVB|0.4.1
cordova-tools|vsm|1.3.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37528</IssueID>
    <Title>[typescript] Syntax highlighting fails after ++ &lt; characters</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Windows 7 Enterprise SP1

Steps to Reproduce:

![bad-parsing](https://user-images.githubusercontent.com/3863014/32331368-9586dd6e-bfda-11e7-8a3d-197c407cf540.gif)

Type the following code in a blank TypeScript file:
```javascript
let a = 0;
a++ &lt; 0;
let b = 0;
```
All syntax highlighting for lines following the `++ &lt;` characters is corrupted (for example, in the GIF above, the `let` keyword has the wrong colour). The following expressions are fine:
```javascript
(a++) &lt; 0
a++ &lt;= 0
a++ &gt; 0
++a &lt; 0
```
The issue does not occur when JavasScript syntax highlighting is used.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37511</IssueID>
    <Title>vscode shows error message for files not part of project</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: windows 10

created simple test project: [link](https://github.com/CzBuCHi/vscode-wrong-error)

**how to reproduce**

open test project in editor
start debugger session (F5) - all goo so far
open random typescript file in same editor with is not in `/src/**` folder and has syntax error in it.
vscode will correctly show problems in opened file
start debugger session - this popup message appears:
`Build errors have been detected during preLaunchTask 'npm: watch'. [Debug Anyway] [Show problems] [Cancel]`
but there is not errors in terminal panel `Task - watch` (because errors are in file not relevant to tsc) so i think, that error message should not be shown ...</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37503</IssueID>
    <Title>Editor in Peek view is getting focus while navigating the references tree on the right</Title>
    <Description>See the following video, I am navigating the tree on the right using arrow and all of the sudden, focus goes to the editor and cursor moves.


![kapture 2017-11-02 at 11 29 52](https://user-images.githubusercontent.com/10746682/32321367-2e9eb590-bfc1-11e7-9508-c39d6a662ef4.gif)
</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37500</IssueID>
    <Title>View on right: Move to buttom not working</Title>
    <Description>Version 1.18.0-insider (1.18.0-insider)
15449873f130d7f3e5604a1cac94f32a1f15f604
2017-11-02T06:07:42.390Z

- open a multi root workspace
- in the workspace file set the `workbench.panel.location` setting to `right`
```json
{
	"folders": [
		{
			"path": "Folder1"
		}
	],
	"settings": {
		"workbench.panel.location": "right"
	}

}
```
- In the view, click on the 'Move to button' action. Nothing happens
Note that the setting is written to the user settings where it doesn't have an effect.</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37495</IssueID>
    <Title>Font Rendering in LUbuntu OS</Title>
    <Description>I'm using monaco font, OS: LUbuntu.

after upgrade to new vscode, font not good enough rendering.


![vscode_rendering_font](https://user-images.githubusercontent.com/13173400/32319959-c55a9c60-bfee-11e7-8c9d-b3def789cc42.png)
</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37472</IssueID>
    <Title>shift+alt+f is bound to both editor.action.formatDocument and editor.action.dirtydiff.next</Title>
    <Description>- VSCode Version: 1.18 Insiders
- OS Version: Windows 10

Seems very problematic to try and use the shift+alt+f keybinding to go to the next editor inline diff. Usually just formats the document. Tried on both json and markdown files.
</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37464</IssueID>
    <Title>Feature request: As a user, I should be able to configure extensions contributed settings in language based settings</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
b813d12980308015bcd2b3a2f6efa5c810c33ba5

- OS Version: Ubuntu 16.04

Now it's impossible to set plugin settings (i.e. emmet settings) based on current filetype

I wanna disable emmet and beautifiers, prettifiers when i'm in `["makefile"]` buffer, but for now only editor settings are available to customize.

May be i missed something or the same question already asked but i didn't found</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37460</IssueID>
    <Title>run task:   too slow to display task list</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17
- OS Version:  windows 10

Steps to Reproduce:
1.activate "Run Task" menu
2. too long delay to display the task list
3. maybe we could display the recently used tasks imediately and load the rest
4. task is changed according to some json change or ...? maybe we could refresh the task list at different moments rather than activating.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37453</IssueID>
    <Title>File paths in build output and terminal only autodetect when terminal has scrolled.</Title>
    <Description>- VSCode Version: Version 1.18.0-insider (1.18.0-insider)
- OS Version: macOS 10.13.2 beta

Steps to Reproduce:

1. open a project window.
2. open the integrated terminal.
3. `mkdir some_dir` (or use an existing dir with a source file in it).
4. `touch some_dir/some_file.txt` (or use existing).
5. Mouse over the file path (either the typed command or the output). It will not highlight.
6. Now press enter until the terminal scrolls, and then scroll back and try again.
7. Once the terminal has scrolled, then the paths will be recognized, showing an underline and tooltip "cmd+click to follow link" on mouseover. 

Path recognition in the terminal is a fabulous feature (it makes VSCode an IDE for any script that prints `path:line:col` messages), and it is a shame that it is broken for this common case!

Reproduces without extensions: Yes</Description>
    <CreatedDate>02/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37443</IssueID>
    <Title>In the 'Extensions' View, only the two first entries of the 'INSTALLED' category are visible by default, and the separator's position is not remembered</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 x64
- OS Version: win10 x64

Steps to Reproduce:

1. When clicking to expand the 'Extensions' View (Ctrl+Shift+X)
then, no matter how many extensions you have, it only show the first 2 of them. *(and immediately below them, are the "RECOMMENDED" category entries)* 
In my case I have 5, as seen in the counter:
![2017-11-01_220526](https://user-images.githubusercontent.com/723651/32295809-05333e42-bf53-11e7-82bf-785e87cc234a.jpg)

2. Even if you drag the the "RECOMMENDED" category separator lower, in order to make all extension entries visible,
then, if you close the View and re-open it, it will have 2 extension entries visible only, again.

My suggestion:

- either either make sure that in the 'INSTALLED' category entries appear as many as possible, i.e. have the separator's position maybe to the 3/4 of the display's height by default
- or just store the position of the separator, when the user moves it.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37442</IssueID>
    <Title>Any way to get --user-data-dir and --extensions-dir from API</Title>
    <Description>Is there any way to get the current user directory and extensions directory from API.
`--user-data-dir and --extensions-dir`.</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37429</IssueID>
    <Title>Panels: Activitybar is hectic when resizing sidebar in this case</Title>
    <Description>Testing: #36906

Note: this might be related to https://github.com/Microsoft/vscode/issues/37427 because the initial steps are the same.

Steps to Reproduce:

1. see video for setup
2. once I resize the sidebar to the right I can see how the sidebar moves in and out of the activity bar stealing its space, but always recovering (video is not showing this super nicely, maybe you try to reproduce).

![panel-red2](https://user-images.githubusercontent.com/900690/32288070-15a92f90-bf33-11e7-8488-94ebebae55fe.gif)

</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37428</IssueID>
    <Title>Can't open vscode, just message box</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:48.528Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
logcat|abh|0.0.7
Bookmarks|ale|0.17.0
project-manager|ale|0.22.0
vscode-color|ans|0.4.5
vscode-icontheme-nomo-dark|be5|1.3.4
vscode-intelephense-client|bme|0.7.2
phpserver|bra|2.2.0
python|don|0.7.0
EditorConfig|Edi|0.11.1
tslint|eg2|1.0.14
vscode-npm-script|eg2|0.3.2
php-debug|fel|1.11.1
vue-snippets|hol|0.1.5
beautify|Hoo|1.1.1
webpack|jer|2.0.2
luaide|kan|0.5.1
Lua|key|0.0.9
cpptools|ms-|0.14.0
vetur|oct|0.10.1
vscode-lua|tri|0.9.0



---

Steps to Reproduce:

1.when i carelessly set "terminal.integrated.fontSize" as "1", the vscode can't open. I must modify setting.json personally to fix it.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37424</IssueID>
    <Title>Find Files include path appears to be case sensitive on Windows</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: ***1.17.2***
- OS Version: ***Windows 10 Pro 10.0.15063***

Steps to Reproduce:

1. ***Put path with diff case than existing folder in the Find &gt; files to include field***
2. ***Press enter***

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No ***Yes***

***This cause some confusion. I would expect the case sensitivity of the Find tool to match the underlying OS. I checked for dupes, but couldn't find any prior to opening this. This seems to occur on the exclude path as well.***</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>26/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37420</IssueID>
    <Title>I can't see underscore(_) in terminal</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (e6a76e4bd3f52ab07452bb181e861f5a9bfb6596, 2017-10-27T05:23:12.753Z)
- OS Version: Linux x64 4.10.0-37-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.1
gitlens|eam|5.7.1
flow-for-vscode|flo|0.7.2



---

Steps to Reproduce:

1. Open integrated terminal
2. Type _ 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37406</IssueID>
    <Title>First startup time is incredibly slow</Title>
    <Description>- VSCode Version: &lt;code&gt;Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)&lt;/code&gt;
- OS Version: &lt;code&gt;Windows_NT x64 10.0.15063&lt;/code&gt;
- CPUs: &lt;code&gt;Intel(R) Pentium(R) CPU G4560 @ 3.50GHz (4 x 3504)&lt;/code&gt;
- Memory (System): &lt;code&gt;6.96GB (5.01GB free)&lt;/code&gt;
- Memory (Process): &lt;code&gt;205.21MB working set (208.28MB peak, 191.43MB private, 41.82MB shared)&lt;/code&gt;
- Load (avg): &lt;code&gt;0, 0, 0&lt;/code&gt;
- VM: &lt;code&gt;0%&lt;/code&gt;
- Initial Startup: &lt;code&gt;yes&lt;/code&gt;
- Screen Reader: &lt;code&gt;no&lt;/code&gt;
- Empty Workspace: &lt;code&gt;yes&lt;/code&gt;
- Timings:

|Component|Task|Time (ms)|
|---|---|---|
|main|start =&gt; app.isReady|3907|
|main|app.isReady =&gt; window.loadUrl()|1203|
|renderer|window.loadUrl() =&gt; begin to require(workbench.main.js)|5239|
|renderer|require(workbench.main.js)|6330|
|renderer|create extension host =&gt; extensions onReady()|1950|
|renderer|restore viewlet|0|
|renderer|restore editor view state|1497|
|renderer|overall workbench load|2428|
|main + renderer|start =&gt; extensions ready|19427|
|main + renderer|start =&gt; workbench ready|19221|

---

[b1e5_main.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1434144/b1e5_main.cpuprofile.txt)
[b1e5_renderer.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1434145/b1e5_renderer.cpuprofile.txt)

---
# Second startup 
It is only slow when opening for the first time after the system starts. If I close VS code and reopen it again then the startup time is better than before. Here is performance profile for SECOND startup:
![second startup](https://i.gyazo.com/c4a5ea0e016309e819d22efe94608d7b.png)
CPU profile files for second startup:
[a9f7_main.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1434172/a9f7_main.cpuprofile.txt)
[a9f7_renderer.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1434173/a9f7_renderer.cpuprofile.txt)
</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37405</IssueID>
    <Title>Dropdown rendering issue on first use</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.0
python|don|0.7.0
pgsql|dou|0.0.8
EditorConfig|Edi|0.11.1
vsc-material-theme|Equ|1.0.5
JSDocTagComplete|Hoo|0.0.2
vscode-esformatter|how|1.5.2
output-colorizer|IBM|0.1.2
vscode-puglint|mrm|2.3.0
debugger-for-chrome|msj|3.4.0
code-spell-checker|str|1.4.12

(3 theme extensions excluded)


---

Steps to Reproduce:

1. Open the Output panel.
2. Open the dropdown.

![image](https://user-images.githubusercontent.com/1658949/32275579-112cd088-bf0c-11e7-821c-6be2da6451cc.png)
</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37398</IssueID>
    <Title>Got stuck after recent updates + all screen goes white</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: 10.13.

Steps to Reproduce:

1. Sometime when working on project , switch between file with ctrl+tab

![screen shot 2017-11-01 at 4 38 27 pm](https://user-images.githubusercontent.com/739586/32272275-6fc746ac-bf23-11e7-9b5b-6b6bec3c61c5.png)

</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37391</IssueID>
    <Title>Can't open new window from taskbar when running as administrator</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:48.528Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
tslint|eg2|1.0.14
beautify|Hoo|1.1.1
indenticator|Sir|0.4.2
language-stylus|sys|1.7.3


Steps to Reproduce:

1. open Visual studio Code as administrator
2. right click on icon from taskbar and select "New Window" from Tasks
3. no new instance was opened :(

The interesting part is if I try to open a new instance by using the way File -&gt; New Window that works :)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: not tested</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37381</IssueID>
    <Title>When panel does not have enough width, toggle vertical layout hides it</Title>
    <Description>Testing #36906 with 8dfa696a1eb6ff67eb68925ddaa9e83d3c56b791

After that toggle, first Cmd+J strangely only makes the editor wider but not show the panel. Second Cmd+J shows the panel.

![panel](https://user-images.githubusercontent.com/4033249/32262183-7a355748-be90-11e7-983f-016396356f4e.gif)
</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37380</IssueID>
    <Title>Panel can get into a broken state to only show Ellipsis </Title>
    <Description>Testing #36906 with 8dfa696a1eb6ff67eb68925ddaa9e83d3c56b791

Similar to the one I made for activity bar:

In vertical panel state

1. Right click terminal -&gt; Hide
2. Ctrl + ` to open terminal
3. Quick VS Code and Relaunch

Panel get stuck in this state of ellipsis, and clicking on ellipsis doesn't do anything.

![image](https://user-images.githubusercontent.com/4033249/32261950-fba1e23a-be8e-11e7-90b8-7071120b1607.png)

</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37377</IssueID>
    <Title>Panel can be almost completely squashed by resizing window, despite room available in viewlet</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (8dfa696a1eb6ff67eb68925ddaa9e83d3c56b791, 2017-10-31T16:36:35.429Z)
- OS Version: Linux x64 4.10.0-26-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.11.1
lorem-ipsum|Tyr|1.0.0
shell-launcher|Tyr|0.1.4
vscode-terminal-here|Tyr|0.0.5
vscode-svgviewer|css|1.4.3
tslint|eg2|1.0.14
git-project-manager|fel|1.4.0
md-navigate|jri|0.0.1
vscode-rust|kal|0.4.2
vscode-scss|mrm|0.6.2
cpptools|ms-|0.14.0
seti-icons|qin|0.1.3

(3 theme extensions excluded)


---

#36906 

Repro:

1. Size the viewlet large
2. Reduce the window width significantly, but not inside the viewlet:

![image](https://user-images.githubusercontent.com/2193314/32259310-c6019452-be7c-11e7-9325-9e95e5efb5aa.png)

Resizing down again will give what I expect:

![image](https://user-images.githubusercontent.com/2193314/32259334-fbaf2a10-be7c-11e7-89bf-7836e9ada585.png)
</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37374</IssueID>
    <Title>打开大文件崩溃</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
include-autocomplete|ajs|0.0.4
path-autocomplete|ion|1.6.2
cpptools|ms-|0.14.0
java|red|0.12.0
cmake|twx|0.0.17
cmake-tools|vec|0.10.2



---

Steps to Reproduce:

打开大文件崩溃 大约9.5GB


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>01/11/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37304</IssueID>
    <Title>Color picker is being closed prematurely</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (81cca6cc606eeca3443998025bff3893fcfe3ad5, 2017-10-31T05:47:36.947Z)
- OS Version: Darwin x64 16.7.0

---

Steps to reproduce:
1. Open a file that supports the color picker such as User settings
2. Resize the editor so that when the color picker opens it runs over the boundaries of the editor
3. Open the color picker and move the cursor within the color picker toward the right
-&gt; When the cursor leaves the editor area but not yet the color picker, the color picker is closed.

![oshh3lag0u](https://user-images.githubusercontent.com/4674940/32229995-64328fc6-be52-11e7-9fd7-75bb39e461de.gif)


Reproduces without extensions: Yes</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37301</IssueID>
    <Title>`addWorkspaceFolder` / `removeWorkspaceFolder` are not effective API</Title>
    <Description>Testing #37133

fyi @jrieken . 

---

* observe that a WorkspaceFolder has three fields: `uri`, `name` and `index`.
* observe the reading API: `export let workspaceFolders: WorkspaceFolder[] | undefined;`

---

IMHO, the editing API seems out of place:
* `removeWorkspaceFolder` takes as argument a single `WorkspaceFolder`; why a single one ?
* `addWorkspaceFolder` also takes in a single `WorkspaceFolder`; why ? It also ignores the `index` property; how to add something at the beginning of the array ?

e.g. of difficulty:
* how to implement replace folder at `i` with another folder. i.e. `workspaceFolders[i] = newWorkspaceFolder`:
    * remove N folders where folder.index &gt;= i, i.e. call `removeWorkspaceFolder` N times
    * add N folders back again i.e. call `addWorkspaceFolder` N times 

IMHO a much simpler API would be a `setWorkspaceFolders(newWorkspaceFolders: WorkspaceFolder[])`</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37294</IssueID>
    <Title>Terminal does not warp lines dynamically</Title>
    <Description>Refs: #37149
OS: Ubuntu

I found this while following the test plan item, though you are probably aware of this limitation.
1. Open terminal, do a `ls`
2. Resize the window by decreasing size -&gt; temrinal does not wrap lines on resize
3. If I do a `ls` once the window is smaller all lines get nicely wrapped

I would expect that terminal nicely wraps lines once I reduce the size of the window.
Sorry if duplicate

FYI @dbaeumer </Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37289</IssueID>
    <Title>useIgnoreFilesByDefault not honored in a multi root folder setup</Title>
    <Description>Testing #37179

1) enabled search.useIgnoreFilesByDefault as user setting
2) open a multi root folder workspace, one of the root folders excludes a folder ("server")
3) open quick open, the file server.js is still proposed

Setup
![image](https://user-images.githubusercontent.com/172399/32227070-803f9a22-be4a-11e7-8243-df5e55e867b6.png)

server.js is proposed
![image](https://user-images.githubusercontent.com/172399/32227091-92be9586-be4a-11e7-8756-606d2cd87b69.png)

Enabling search.useIgnoreFilesByDefault as workspace setting has the same issue.

</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37244</IssueID>
    <Title>Panel seems to overlap to the sidebar when sidebar is right</Title>
    <Description>Testing: https://github.com/Microsoft/vscode/issues/36906

Steps to Reproduce:

1. put the sidebar to the right
2. put the panel vertically

It looks like some pixels of the panel overlap into the sidebar (see the scrollbar):

![image](https://user-images.githubusercontent.com/900690/32220826-780a93e6-be33-11e7-9ae8-63ad82ee4026.png)</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37241</IssueID>
    <Title>TS autoimport should provide qualification to make imported entries unique</Title>
    <Description>Testing: #37177 

- JS project
- file provide1.js
```js
export function foo() {
}

export function foo1() {
}
```
- file provide2.js
```js
export function foo() {
}

export function foo2() {
}
```
- file consume.js
```js
function bar() {
}
```

- inside body bar type foo1, select the symbol. Notice import generated correctly
- inside body bar type foo2, select the symbol. Notice import generated correctly
- inside body bar type foo

Observe:
- there is only one foo
- IMO there should be two, each qualified with the file exporting it
- select foo
- an import is added. I couldn't come up with a rule which on is taken. 

</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37213</IssueID>
    <Title>search.useIgnoreFilesByDefault should explain in description that this is used for quick open</Title>
    <Description>Refs: #37179

Currently useIgnoreFilesByDefault never mentions that this is actually used for quick open. From the description the user would get a feeling that this is only used for search viewlet.
I propose to update the description and clarify that this setting is for quick pick.

Also why the phrase "new workspace"?
</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37210</IssueID>
    <Title>useIgnoreFilesByDefault is a bad setting name</Title>
    <Description>Refs #37179

`"search.useIgnoreFilesByDefault": true` sounds ugly, why should the word default be part of this setting name. I propose the following name:
`"search.respectIgnoreFiles"`</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37201</IssueID>
    <Title>Disable tab end line</Title>
    <Description>Hellow everyone, 

I try search but not result. **Please help me how to disable pointer tab end line code:**

DEMO

![image](https://user-images.githubusercontent.com/7042462/32206295-d701de48-be26-11e7-99a9-80d11852eb87.png)

![image](https://user-images.githubusercontent.com/7042462/32206269-bb492940-be26-11e7-8cbf-2ae39452b021.png)

![image](https://user-images.githubusercontent.com/7042462/32206351-15bc0da2-be27-11e7-96cb-1f49cf9bc847.png)



Thanks !</Description>
    <CreatedDate>31/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37188</IssueID>
    <Title>Code isn't launching without an internet connection</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Windows 10

Steps to Reproduce:

1. Offline mode (no internet at all), Code will not launch.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Launching code in --verbose mode I see this:

C:\Program Files (x86)\code&gt;Code.exe --verbose

C:\Program Files (x86)\code&gt;
net.js:10
const cares = process.binding('cares_wrap');
                      ^

Error: EFILE
    at net.js:10:23
    at net.js:1645:3
    at NativeModule.compile (bootstrap_node.js:535:7)
    at NativeModule.require (bootstrap_node.js:475:18)
    at internal/child_process.js:6:13
    at internal/child_process.js:903:3
    at NativeModule.compile (bootstrap_node.js:535:7)
    at NativeModule.require (bootstrap_node.js:475:18)
    at child_process.js:12:23
    at child_process.js:542:3
</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37171</IssueID>
    <Title>[BUG] scroll by ↑ or ↓ in settings - delete lines and items</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 6.3.9600
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
cpptools|ms-|0.14.0



---

Steps to Reproduce:

https://youtu.be/xCSw2wDm_2k

Reproduces without extensions: **Yes**</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>01/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37170</IssueID>
    <Title>Strange things with Visual Code window Title happen when The window is moved, resized or another app is call on the front</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:48.528Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-javascript-snippet-pack|aka|0.1.5
project-manager|ale|0.22.0
ng-template|Ang|0.1.7
vscode-custom-css|be5|2.5.0
path-intellisense|chr|1.4.2
open-html-in-browser|cod|0.1.21
ionic3-vs-ionView-snippets|dan|1.0.1
vscode-instant-markdown|dba|1.3.0
vscode-great-icons|emm|2.1.19
auto-close-tag|for|0.5.2
auto-rename-tag|for|0.0.14
beautify|Hoo|1.1.1
composer|ika|0.5.0
yii2-snippets|ima|0.0.9
ionic2-vscode|jgw|1.0.0
Angular2|joh|2.10.0
typings-autoinstaller|jvi|1.2.0
ionic-extension-pack|loi|0.0.1
markdown-shortcuts|mdi|0.8.1
gitignore|mic|1.0.1
debugger-for-chrome|msj|3.4.0
live-server-preview|neg|0.0.4
rxjs-snippets|pko|0.0.2
vscode-icons|rob|7.17.0
autoimport|ste|1.2.2
ionic2|Tha|3.0.1
Angular2|UVB|0.4.1
cordova-tools|vsm|1.2.13
markdown-authoring|yan|0.1.5

(2 theme extensions excluded)


---

Steps to Reproduce:

1.Open Visual Code: the title is Visual Studio Code: Ok
2.Resize the window: the title indicate the folder and file of the editor selected
3.Close the folder the title doesn't change
4.Resize the window the title show Welcome visual Code
5.Open another folder from the welcome the title stay whith the welcome title
6.Resize the window we get the title as in point 2.

I discover that using the screen capture or going to my web browser and coming back. So it's related to the window event

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![image](https://user-images.githubusercontent.com/624802/32188442-20aa9b22-bda8-11e7-8fcb-5965a249f1bd.png)
![image](https://user-images.githubusercontent.com/624802/32188457-2f74ff8a-bda8-11e7-93f3-099ec1ef8d7e.png)
</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37069</IssueID>
    <Title>Terminal: git log -&gt; Ctrl-C -&gt; can't see entered commands (but they are executed)</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Set `"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"` in settings
2. Open terminal inside a git repo
3. Enter `git log`
4. Press Ctrl-C to quit

After these steps it quits to the shell but I can't see what I'm typing anymore, though the commands that I'm typing are executed and I can see their output.

Reproduces without extensions: Yes</Description>
    <CreatedDate>28/10/2017</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37061</IssueID>
    <Title>Support configurable style for copying formatted code</Title>
    <Description>I'd like to control the style used when copying formatted code.

For example, I use a dark theme in both VSCode and VS2017, but when pasting formatted code I much prefer how VS2017 does it without the background. It would be great if that was configurable in VSCode.

![vscode_vs_vs2017_copyformattedcode](https://user-images.githubusercontent.com/2888449/32126146-101ffa3a-bb24-11e7-8191-89e92e16edc6.png)
</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37038</IssueID>
    <Title>move that info banner when an action is done to some where else</Title>
    <Description>- VSCode Version: 1.17.1
- OS Version: windows 10 

i think it is better to move that info banner when some action is done to some other place link bottom of page .
i mean this : 
![image](https://user-images.githubusercontent.com/12527824/32103452-4db62c4e-bb2d-11e7-9c12-a62172da66cd.png)
reasons : 
1. it comes in front of tabs and it hides them everytime i should press that close button first
2. it's better to act like notifications in main visual studio</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36969</IssueID>
    <Title> Broken smooth scroll. Дрыгается скролл при одновлеменно открытой консоли в хроме.</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (509630ffe3fabf2e1f49b416bb83f5ff0877b042, 2017-10-25T05:23:13.412Z)
- OS Version: Linux x64 4.4.0-97-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
prettier-vscode|esb|0.24.0
---

Сложно сказать, как это воспроизвести. 
В процессе работы переключаясь из консоли хрома в редактор, перестает работать адекватно мягкий скролл. 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>05/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36955</IssueID>
    <Title>Window title updates with opened file name only after window resize</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: any recent stable/insiders
- OS Version: Windows 7 64bit

Steps to Reproduce:

1. Open any file
2. The window title will remain unchanged until you resize or min-max the window

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36943</IssueID>
    <Title>Feature Request: Flat View for Project Folder panel</Title>
    <Description>Currently, VSCode displays the project folder panel in a hierarchical way, like this:

1. Root
    1. app
        1. components
        2. controllers
    2. test
        1. unittest
        2. integrationtest

Coming from other IDEs (and being a person who is fond of fine-grained package structures), I would much rather have a "flattened" view instead of a nested tree:

- Root
    - files
- root.app
    - files
- root.app.components
    - files
- root.app.components.controllers
    - files
- root.test.unittest
    - files
- root.test.integrationtest
    - files

Additionally, if "root.app" doesn't contain files itself (only contains sub-folders), then hiding the entry alltogether would be nice too.

Sorry if this already exists in VSCode, but if it does, then I didn't find it.</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36932</IssueID>
    <Title>Is it Possible to add live collaborative editing?</Title>
    <Description>Something like this would be very cool.

Say, I want to get other people to work with me on a project, live... no github etc. 
Think Google docs, where multiple people can start typing on the same page.

I'm a host, and I share my url through slack. 

My friend gets the url, clicks it and it opens up vscode on his side.

And now his Vscode is directly connected to my workfolder.

- He can bring files his files into my workspace by drag and drop into sidebar, which actually copies file into my computer.
- He can run terminal commands in his vscode terminal, and  they run on my computer. 
- He can run browser within vscode and go to localhost, which works because VScode is sort of like virtual desktop connected to him via P2P, and i can see him as scroll and click things as if it was me.
- If we both are editing same file, then his cursor is visible in my file and it live updates the file as does mine on his side.
- if person is editing a different file, then on sidebar file gets highlighted by color of person editing it
- voice chat


If this can be done, It'd be possible to Pair Program like never before. Not even for remote purposes. Just sitting across the table working on one codebase.

It'd be revolutionary and awesome. 

Please add this feature.




</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36928</IssueID>
    <Title>decreaseIndentPattern and autocomplete cause autocomplete to replace word incorrectly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 b813d12980308015bcd2b3a2f6efa5c810c33ba5 2017-10-16T13:43:44.213Z
- OS Version: macOS Sierra 10.12.6

There seems to be a race condition with decreaseIndentPattern and autocomplete where the autocomplete window doesn't close when typing the next character.

### Example script used with steps
```golang
package main

import "fmt"

func do(i interface{}) {
	switch v := i.(type) {
	case int:
		fmt.Printf("Twice %v is %v\n", v, v*2)
	case string:
		fmt.Printf("%q is %v bytes long\n", v, len(v))
	default:
		fmt.Printf("I don't know about type %T!\n", v)
	}
}

func main() {
	do(21)
	do("hello")
	do(true)
}
```

Steps to Reproduce:

1. Go to Ln 6, Col 27 located at the end of line 6 `switch v := i.(type) {`
2. hit enter
    - Cursor should go to Ln 7, Col 9
3. type `case float64:`
    - make sure to type everything out without using autocomplete
    - as `:` is typed, `decreaseIndentPattern` should kick in and move the line left 1 tab
    - the cursor now moves, but vscode still displays the autocomplete for `float64'
4. hit enter
    - vscode replaces `loat64:` with `float64` and the line looks like `case ffloat64`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36821</IssueID>
    <Title>Very slow debugger launching, with errors</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: Extensions are disabled
---

Steps to Reproduce:

1. Freshly installed node.js 8.7
2. VS code launched without extensions (--disable-extensions)
3. Opened a single line (console.log("test");) javascript file, placed a breakpoint on that line
4. Menu Debug-&gt;Start debugging

Result:
In most cases after ~1 minute thinking VSCode throws error "Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:13979)."
In some other rare cases after ~1 minute the debugger is launched and stops on the breakpoint.

launch.json
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program",
            "protocol": "inspector",
            "program": "${workspaceFolder}\\index.js"
        }
    ]
}

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36747</IssueID>
    <Title>Add folders with right click `Open with Code`</Title>
    <Description>Currently Code either opens a new window or replaces the existing one (`"window.openFoldersInNewWindow": "off"`) when opening a folder with the `Open with Code` right click option on Win. Instead, I would like for Code to simply add a folder in my already existing window.

A new option maybe? `"window.openFoldersInNewWindow": "add"`</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36684</IssueID>
    <Title>Make top horizontal scrollbar larger</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
debugger-for-chrome|msj|3.4.0
Angular2|UVB|0.4.1



---

Steps to Reproduce:

1. Roll mouse pointer over the top horizontal scrollbar under the tabs
2. (a) Scrollbar is too narrow to be useful
    (b) It's really annoying when tabs on the left scroll out of view ... the most important file usually goes there.  So you want to get back to it, you can't see it and then have to deal with the annoying scroll bar.  
Liked the old VS way of handling this better.  

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/10/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36629</IssueID>
    <Title>Editor text is not sub-pixel anti-aliased on Arch Linux</Title>
    <Description>OS: Arch Linux
Visual Studio Code version: 1.7.2

![vscode](https://user-images.githubusercontent.com/2160692/31816914-c2e43280-b557-11e7-98d9-07e4325a5ced.png)

However the text in the “About” dialog is sub-pixel anti-aliased.

Not sure if other Linux systems have the same problem.</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36428</IssueID>
    <Title>Autocomplete dropdown width limit makes differentiating long member names impossible</Title>
    <Description>Even in the latest VSCode, the autocomplete dropdown is too narrow to display full member names.  I know this case is pretty specific and looks a little weird, but it is a legitimate case (wrapping and naming rest operations by route template rather than some identifierization of the name):

![image](https://user-images.githubusercontent.com/17498172/31674982-5e9fd86a-b331-11e7-941e-a3fe1258af48.png)

Can it auto-grow or show tooltips or some other thing in the dropdown for long member names?

Thanks!</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36412</IssueID>
    <Title>Show default value inside (at the bottom) description when completing settings.json</Title>
    <Description>![image](https://user-images.githubusercontent.com/1499188/31662272-1dbfcdac-b357-11e7-89ed-8dcc12523cd9.png)
</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36311</IssueID>
    <Title>Default Settings tab: scroll and opened section lost after activating another tab</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---
The Default Settings scroll (and opened section) lost after activating another tab.
Thanks in advance and regards,
Steps to Reproduce:
1. Open some files
2. Open the Default Settings (Ctrl+Comma), scroll down and open a section.
3. Activate another tab.
4. Activate the Default Settings tab and you can notice that the scroll is lost (you are at the top) and the opened section is closed (the first one is opened).</Description>
    <CreatedDate>15/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36308</IssueID>
    <Title>Automatic jump to first error</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Windows 10

Steps to Reproduce:

1. Have a tasks.json with reveal set to silent or never.
2. Ctrl+Shift+B on file that has an error (matched by error matcher).
3. My program doesn't launch as expected, I sit there wondering for a few seconds why, until I see there is 1 error in the status bar.
4. I have to press F8 to go to where the error is.

I'd like a setting (in tasks.json or elsewhere) that automates steps 3 &amp; 4, such that if a task matches an error, I am instantly brought to it, saving me seconds each time it happens.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: N/A</Description>
    <CreatedDate>15/10/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36196</IssueID>
    <Title>Support `args` in contributed keybindings</Title>
    <Description>If you insert the following Codeblock to keybindings.json everything works fine:
```
            {
                "key": "ctrl+oem_2",
                "command": "editor.action.insertSnippet",
                "args": { "name": "scriptbrackets" }
            }
```
But if you try to insert this block to "keybindings-section" in a package.json of an extension it always calls the snippet selector dropdown (at the top of the window) and is NOT calling the snippet refered by the snippet name.

```
  "contributes": {
        "languages": [{
            "id": "f-script",
            "aliases": ["F-Script", "f-script"],
            "extensions": [".ff",".fs",".fss",".fx",".lb",".lbd",".lbf",".lbe",".lbi",".lbx",".config"],
            "configuration": "./language-configuration.json"
        }],
        "keybindings" : [
            {
                "key": "ctrl+oem_2",
                "command": "editor.action.insertSnippet",
                "args": { "name": "scriptbrackets" }
            }
        ]
	}

```

- VSCode Version: 1.17.0
- OS Version: WIN 10 PRO

Steps to Reproduce:
1. define a snippet
2. create a keybinding in keybinding.json
3. execute the keybinding in a file
4. try to move the keybinding to package.json.

Hope you can enable this feature also on language-extensions.

Raydir

</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36171</IssueID>
    <Title>Allow panes to dock on left or right side of window</Title>
    <Description>There's an awful lot of wasted real estate on the right hand side. It would be awesome to be able to drag panes to the right side of the editor window, a la Nuclide.

![image](https://user-images.githubusercontent.com/12532733/31520977-6afc0baa-af6d-11e7-9b75-a723da62177a.png)
</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36047</IssueID>
    <Title>Hope you will enhance the copy function of multiple vscode windows.</Title>
    <Description>请求功能：

在多个VSCode窗体之间用右键菜单复制目录和文件是不支持的，但是感觉有必要，希望能够支持该功能。

Copying files or forlder between separated instances is not supported by vscode now, hope you will implement it. Thank you!

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.0
- OS Version: Win10 专业版
</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36034</IssueID>
    <Title>Feature request: Adding horizontal scrollbar to explorer panel</Title>
    <Description>Specially for large trees, it needs to be there.</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35867</IssueID>
    <Title>Make Ctrl+P, Shift+Enter open new preview tab and keep current one (if exists in current editor group) premament as for editing</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35815</IssueID>
    <Title>User settings view changes on tab change</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: Windows 10 Version 1703

Steps to Reproduce:

1. Open 'User Settings', close the 'commonly used' section and open another settings group.
2. Change tab away from, then back to, 'User Settings'

Expected behaviour: There is no change to the settings view.
Actual behaviour: The settings tab resets to the initial view (the 'commonly used' section is open and all others are shut).

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35786</IssueID>
    <Title>cannot use touch to slide the tab bar (like with two fingure gesture on mouse touch pad) or move individual tabs with touch</Title>
    <Description>Working on Surface Pro (5)

- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
vscode-eslint|dba|1.3.2
python|don|0.7.0
Go|luk|0.6.65
MagicPython|mag|1.0.12
vscode-clang|mit|0.2.2
cpptools|ms-|0.13.0
python|tht|0.2.3



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>04/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35637</IssueID>
    <Title>Preference to disable Recently Opened Files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: OSX

I personally have no need for recent files to be promoted to the top of the Goto File results: 

![6xjw-kiw](https://user-images.githubusercontent.com/1199742/31247619-03a204a2-a9c6-11e7-98f2-2bf8385ad616.png)

These results actually slow me down, since I a used to Sublime Text fuzzy match behavior. If the "Recently Opened" results were not there, I would be able to jump to files in a predictable way.

Any preference option I'm missing?</Description>
    <CreatedDate>05/10/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35632</IssueID>
    <Title>File Explorer hijacks keyboard focus somehow</Title>
    <Description>This has been an issue for me for months now on the insider edition as well as the stable version. I can't narrow down when or why it happens. (I decided to make an issue and see if others have noticed this or can narrow down how to reproduce it. If that's against guidelines this can be removed)

I'll be focused on an actual file and typing in new code will work, but the enter key, arrow keys, and delete will do actions within the file explorer instead of my code. I try hitting escape, spam clicking in the open file to try forcing a focus state change but that doesn't work. The only fix I could find is to open other files then go back to what I was working on. 

- VSCode Version: Code - Insiders 1.17.0-insider (81fc22ec957de26d2bf6aada3f16f04e0164741c, 2017-10-03T22:47:28.178Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
erb|Cra|0.0.1
vsc-material-theme|Equ|1.0.4
beautify|Hoo|1.1.1
Angular-BeastCode|Mik|5.0.4
material-icon-theme|PKi|2.2.2
html-css-class-completion|Zig|1.10.0
markdown-preview-github-styles|bie|0.0.4
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.3.2
tslint|eg2|1.0.9
vscode-great-icons|emm|2.1.16
Angular1|joh|0.2.0
Angular2|joh|2.7.0
haml|kar|0.9.0
vscode-scss|mrm|0.6.2
atom-keybindings|ms-|3.0.2
Ruby|reb|0.15.0
sass-indented|rob|1.4.2
stylelint|shi|0.29.1
slim|sia|0.1.2
guides|spy|0.8.4
gitblame|wad|2.2.0
vscode-todo-highlight|way|0.5.11
JavaScriptSnippets|xab|1.5.0

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Sadly I can't figure it out why it happens</Description>
    <CreatedDate>05/10/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35612</IssueID>
    <Title>Tooltips not showing up when using Jest</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:09.760Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.2
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.3.1
vetur|oct|0.9.10

---

Steps to Reproduce:

1. Clone repository: https://github.com/matbarker/vscode-jest
2. Run the "Jest Tests" configuration, place a breakpoint on line 8 (console.log) of the test file, hover over 'boo' - nothing pops up. I expect to see the normal tooltip which inspects the contents of the variable. This works if I use the "mocha" framework instead of Jest.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/10/2017</CreatedDate>
    <ClosedDate>26/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35545</IssueID>
    <Title>Issue regarding touchpad</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
cpptools|ms-|0.13.0



---

Steps to Reproduce:

1.minimize vscode window.
2.click taskbar to reload vscode.
3.use touchpad to scroll edit area, it will get stuck.
ps: If click restore, scrolling get smooth again.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>03/10/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35291</IssueID>
    <Title>Feature Request - Pinned Tabs like visual studio</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
It would be nice to have pinned tabs so you don't loose the tabs you are working on from sight.
Also, have the option to have the pinned tabs in a separate row.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35283</IssueID>
    <Title>Cannot local right path files under 'symbol link' that created by 'mklink /j'</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
python|don|0.7.0
vscode-clang|mit|0.2.2
cpptools|ms-|0.13.0
csharp|ms-|1.12.1
vscode-icons|rob|7.14.0



---

Steps to Reproduce:
If we have a code project folder d:\TestProject
1. mklink /j e:\TestProject d:\TestProject, so we can have a symbol link folder in e:\TestProject
2. open e:\TestProject with VSCode
3. open any file under the project in VSCode, we can see the path is d:\TestProject\..., not e:\TestProject\...

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35282</IssueID>
    <Title>Horizontal scrolling in explorer file list</Title>
    <Description>With long file names or files in many levels deep, it is not easy to see the files unless I resize the pane.</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35203</IssueID>
    <Title>when open devtools layers, vscode crashed</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
project-manager|ale|0.21.1
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
python|don|0.7.0
EditorConfig|Edi|0.10.1
auto-close-tag|for|0.5.0
code-runner|for|0.7.1
vetur|oct|0.9.10
language-stylus|sys|1.7.3
vscode-todo-highlight|way|0.5.11



---

Steps to Reproduce:

1. toggle developer tools
2. more tools -&gt; layers

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![image](https://user-images.githubusercontent.com/8213229/30899661-5ed11d38-a393-11e7-84b5-778249f2750b.png)
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>12/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35016</IssueID>
    <Title>Cannot drag &amp; drop between tree views of different windows</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.12.13-300.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.10.1
vscode-docker|Pet|0.0.18
python|don|0.7.0
restructuredtext|lex|37.0.0
hg|mrc|1.1.7
language-gettext|mro|0.0.2
qub-xml-vscode|qub|1.2.8
sass-indented|rob|1.4.2



---

Steps to Reproduce:

1. Drag one file/folder from the tree view of window 1 into the tree view of window 2.
2. File/folder is not copied.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34914</IssueID>
    <Title>Broken fuzzy search algorithm in picker</Title>
    <Description>The fuzzy search algorithm can be improved to solve all problems listed in #27317, but IMHO it's completely broken and it should be rewritten from scratch. Let me show you some of the errors I've found:

### Doesn't work with leading spaces

This is the expected behavior:

![ok_todop](https://user-images.githubusercontent.com/1812093/30786853-bf457bbe-a17c-11e7-8ec2-aa033d618db4.gif)

This is what happens if the strings have some leading spaces (useful for extensions like [Projects+](https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-projects-plus) for showing a tree-like structure):

![broken_todop](https://user-images.githubusercontent.com/1812093/30786852-bf3df376-a17c-11e7-873e-8ecfc9c97465.gif)

### Not really "fuzzy"

As I understand it, the term "fuzzy" in "fuzzy search" basically means that the characters provided in the search query can have 0 or more other arbitrary characters between them in the matching string. The current algorithm looks like regular search instead:

![broken_fuzzy](https://user-images.githubusercontent.com/1812093/30786850-bf2daa20-a17c-11e7-8b45-0ce237e75cbe.gif)

### Overly strict about string position

For some reasons there are strings that match against some queries, but don't mach against less specific versions of those queries. I mean, a more specific query should provide the same or less results, not more, right?

![broken_start](https://user-images.githubusercontent.com/1812093/30786851-bf370bba-a17c-11e7-9b5d-3154847c59b4.gif)</Description>
    <CreatedDate>24/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34875</IssueID>
    <Title>The editor leaves empty space above the first line when the search panel is displayed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16,1
- OS Version: Windows

Steps to Reproduce: uknown

After I use VSCode for a while sometimes I notice that the editor leaves some empty space above the first line. It happens in all open editors and those I open next.

![image](https://user-images.githubusercontent.com/296970/30771886-e26012b8-a059-11e7-8b26-acc69bc8c3b6.png)

After I restart VSCode everything is back to normal

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>23/09/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34873</IssueID>
    <Title>search keybinding text resets</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Ubuntu 16.04

Steps to Reproduce:
1. search a keybinding in keyboard shortcut tab, like typing `delete` in text area.
2.go to another tab like task.json
3. go back to keyboard shortcuts tab, text area is empty. the `delete` keyword is not there.

vscode suppose to store the `delete` keyword and also the search result

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>23/09/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34865</IssueID>
    <Title>Lag when scrolling with precision touchpad</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-eslint|dba|1.3.2
python|don|0.7.0
vscode-html-css|ecm|0.1.8
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
php-pack|fel|1.0.1
cpptools|ms-|0.12.4
csharp|ms-|1.12.1
JavaScriptSnippets|xab|1.4.1
html-css-class-completion|Zig|1.10.0


Visual Studio lags every time I open it. Going into full-screen mode then going back fixes it but this is really annoying.
---

Steps to Reproduce:

1. Open a file with visual studio
2. Lag happens
3. Go into full-screen mode
4. Go back to windowed mode
5. Lag is gone

(Lag doesn't happen while in full-screen mode either)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

---
**Edit**: Added the workaround:

# Workaround: Restore/Maximize or resize the VS Code window
![image](https://user-images.githubusercontent.com/5047891/32723502-fdc9ea42-c86d-11e7-86d3-e5c86ae789ae.png)

![image](https://user-images.githubusercontent.com/5047891/32723559-33e1924c-c86e-11e7-8087-1c36a2aef331.png)
</Description>
    <CreatedDate>23/09/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34841</IssueID>
    <Title>Vscode hangs when expanding folder with 200K files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Ubuntu 16.04

There are also around 200K error messages in the developer console, says something like
```ts
ipc.cp.ts:164 [IPC Library: Watcher] Error: watch /mnt/SSD/datasets/202585.jpg ENOSPC
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34799</IssueID>
    <Title>need double sidebar</Title>
    <Description>- VSCode Version:1.16.0
- OS Version:CentOS 7
I  use a wide Display, could I have another sidebar on the right side, then I can put some extensions ex : code outline on it. 
Reproduces without extensions: Yes
     Thanks all your great job！</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34772</IssueID>
    <Title>Add square layout</Title>
    <Description>Extracted from #34530

From @Ashikpaul 

---

It would be great if there is an option to view four panels like the below image.  

![screenshot 2](https://user-images.githubusercontent.com/17526871/30517950-dc49c670-9b8c-11e7-899a-af0f7673d42b.png)

</Description>
    <CreatedDate>21/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34703</IssueID>
    <Title>It would be great if we have badge with number on the PROBLEMS tab</Title>
    <Description>Sometimes I work with "OUTPUT" tab selected and don't realize there are problems exists.
&lt;img width="459" alt="screen shot 2017-09-20 at 9 41 34 pm" src="https://user-images.githubusercontent.com/166053/30650391-f5d4d158-9e4c-11e7-8aef-dba57520bde6.png"&gt;

I have to switch tab all the time to know if problem exists
&lt;img width="398" alt="screen shot 2017-09-20 at 9 41 25 pm" src="https://user-images.githubusercontent.com/166053/30650493-387f8b2e-9e4d-11e7-8e16-9e73b55ab901.png"&gt;

Provide badge number would be nice

- VSCode Version: 1.6.1
- OS Version: macOS Sierra 10.12.6

</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34679</IssueID>
    <Title>Pasting text into Replace-in-File Search field removes editor selection</Title>
    <Description>This prevents you from proceeding with doing a search/replace in the selection.

---

- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:24:39.530Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.18
php-formatter|Sop|0.2.4
sort-lines|Tyr|1.3.0
githistory|don|0.2.3
javadebugger|don|0.1.3
python|don|0.7.0
phpunit|ema|2.1.1
git-project-manager|fel|1.4.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
code-runner|for|0.7.1
vscode-javac|geo|0.0.46
phpcs|ika|0.7.0
Go|luk|0.6.65
prettify-json|moh|0.0.3
mssql|ms-|1.1.0
cpptools|ms-|0.12.4
Ruby|reb|0.15.0
rewrap|stk|1.5.0
gitblame|wad|2.2.0
vscode-proto3|zxh|0.1.2

---

Steps to Reproduce:

1. Select text.
2. Edit &gt; Replace.
3. Shift-Tab to focus the Search field.
4. Select All text in the Search field.
5. Paste a substring that exists in the selected text.
6. Your text selection is gone.

Reproduces without extensions: Yes</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34534</IssueID>
    <Title>Add setting to delete without sending to trash</Title>
    <Description>I'm on linux and want to have a file be immediately removed when I delete it from vscode. I don't want it moved to the trash directory but rather to be removed as if `rm` were being used. Please make it configurable as an option. None of the other apps I use move things to trash, so it creates an extra set of files for me to manage later. I manage my own recurring backups so I'm not worried about accidentally deleting something.</Description>
    <CreatedDate>17/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34495</IssueID>
    <Title>Using Search adds an extra space at the top of the editor</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Windows 7 x64

Steps to Reproduce:

1. Open any file and stay at the top
2. Press 'CTRL + F' (search)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![vscode_search_extra_space](https://user-images.githubusercontent.com/6153607/30499748-5eeb6fba-9a21-11e7-8c09-cac6d2a8f147.gif)

With `code --disable-extensions`
![vscode_search_extra_space_2](https://user-images.githubusercontent.com/6153607/30499779-7929ea14-9a21-11e7-9182-61a6cac59f57.gif)</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34474</IssueID>
    <Title>Auto-bullet</Title>
    <Description>Feature request: when I am writing a bulleted list (e.g. in Markdown or plain text) and hit enter I would like the editor to continue the line prefix.

Example:

* bullet 1
* bullet 2
[hit enter]
* [new line has bullet/spaces mimicking lines above]

Another key feature is if you hit enter on an otherwise unused bullet it will get out of list mode. I think you could do this as an extension, as well, but I haven't found one that does this.

</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34397</IssueID>
    <Title>Transform tips to links or buttons?</Title>
    <Description>When no editor is open there's an area in the middle of the screen with some commands and hotkeys:

![no-editor](https://user-images.githubusercontent.com/9638156/30444998-6260f6cc-998d-11e7-89c8-4166c3532363.png)


I expected them to trigger actions on click but that didn't happen. Was it done to promote hotkeys (intentionally) or not?

It just so happens "Welcome page" has both (links and buttons) that invoke commands written on them.</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34351</IssueID>
    <Title>Add feature to disable top bar</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:12:42.401Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.16
vscode-eslint|dba|1.3.1
php-intellisense|fel|1.5.1
phpcs|ika|0.7.0
php-docblocker|nei|1.2.0
vetur|oct|0.9.7
vscode-icons|rob|7.12.0
gitblame|wad|2.2.0

(1 theme extensions excluded)


---

Disabling tabs gives me nothing, since it still has one huge "Tab" at the top. Disabling tabs with `"workbench.editor.showTabs": false` only disables the tabs feature, it doesn't actually hide the top bar that's taking all the space. Even zen mode has the tabs.

![skaermbillede 2017-09-14 kl 09 17 48](https://user-images.githubusercontent.com/1733744/30416744-a4396800-992d-11e7-9d50-bc92dcabaa5c.png)

Steps to Reproduce:

1. Disable tabs `"workbench.editor.showTabs": false` and watch the top bar appear

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34300</IssueID>
    <Title>Navigating away and back to diff editor resets the scrollbar position</Title>
    <Description>- VSCode Version: 1.16
- OS Version: KDE Arch Kernel v4.12

Steps to Reproduce:
1. Open up a working tree view of a file you have made changes to in a git repository
2. Scroll to a place you'd like to reference continually in working tree file
3. Switch tabs to another open file
4. Switch back to the working tree tab from before, note that you are teleported to the first diff present in the file and away from the location you wish to reference

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34293</IssueID>
    <Title>[feature request] file or dir explorer filter by prefix</Title>
    <Description>when open a folder contains too  many sub dir or file,i want quick locate  it by name prefix.

on  IntelliJ IDEA ,i just type the name prefix it can quick locate it. 
can you provider the feature for vscode
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34238</IssueID>
    <Title>Hightlight symlink files in the explorer pane</Title>
    <Description>In the explorer, I think it would be useful if the symlink files have a different icon (or a different representation than the regular files). Many times I have to resort to the console to confirm which are symlinks.</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34237</IssueID>
    <Title>Live preview the selected quick open file in an unpinned editor</Title>
    <Description>This is an idea for a feature.

# Use case

I am a developer in a codebase that has files with the same or similar names. When I go to quick open one of these files I often have to guess which file is the right one because the full path isn't enough context for me to quickly remember which is the right one. I end up opening multiple files until I guess correctly and find the one that I really want.

FWIW, there are almost 70 non-unique file names in vscode. Many of these are pairs of interface and implementation. This happens in private code bases as well.
```
find src/ -name *.ts | grep '\([^/]\+\)$' -o | sort | uniq -c | sort -r | head -n 20
```

# Proposal

1. User types a query into quick open (e.g. "actions.ts").
2. After a delay of no more input, the selected option (i.e. the file that would open if you hit enter) opens in an unpinned editor.
3. Cursoring up/down in the quick open list updates the unpinned editor with the selected file.
4. Hitting enter closed quick open and pins the editor.

Imagine a new unpinned editor behind quick open is live updating as I am cursoring up/down here:
![screen recording 2017-09-12 at 08 26 am](https://user-images.githubusercontent.com/754768/30334303-0a6f5954-9794-11e7-9021-cabf1cf11623.gif)

It isn't ideal that the quick open would obscure part of the file, but it would be better than nothing. 

Thoughts?
</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34152</IssueID>
    <Title>Add ability to popout tabs into new windows</Title>
    <Description>
    </Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33859</IssueID>
    <Title>Windows Start-up</Title>
    <Description>
[4496_renderer.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1278792/4496_renderer.cpuprofile.txt)
[4496_main.cpuprofile.txt](https://github.com/Microsoft/vscode/files/1278793/4496_main.cpuprofile.txt)

- VSCode Version: &lt;code&gt;Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)&lt;/code&gt;
- OS Version: &lt;code&gt;Windows_NT ia32 10.0.15063&lt;/code&gt;
- CPUs: &lt;code&gt;Intel(R) Core(TM) i7-6650U CPU @ 2.20GHz (4 x 2208)&lt;/code&gt;
- Memory (System): &lt;code&gt;15.93GB (7.17GB free)&lt;/code&gt;
- Memory (Process): &lt;code&gt;172.36MB working set (172.36MB peak, 141.15MB private, 42.44MB shared)&lt;/code&gt;
- Load (avg): &lt;code&gt;0, 0, 0&lt;/code&gt;
- VM: &lt;code&gt;0%&lt;/code&gt;
- Initial Startup: &lt;code&gt;yes&lt;/code&gt;
- Screen Reader: &lt;code&gt;no&lt;/code&gt;
- Empty Workspace: &lt;code&gt;no&lt;/code&gt;
- Timings:

|Component|Task|Time (ms)|
|---|---|---|
|main|start =&gt; app.isReady|53|
|main|app.isReady =&gt; window.loadUrl()|325|
|renderer|window.loadUrl() =&gt; begin to require(workbench.main.js)|611|
|renderer|require(workbench.main.js)|1416|
|renderer|create extension host =&gt; extensions onReady()|2051|
|renderer|restore viewlet|1235|
|renderer|restore editor view state|2876|
|renderer|overall workbench load|3210|
|main + renderer|start =&gt; extensions ready|4708|
|main + renderer|start =&gt; workbench ready|5784|

---

:warning: Make sure to **attach** these files from your *home*-directory: :warning:
-`4496_main.cpuprofile.txt`
-`4496_renderer.cpuprofile.txt`</Description>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33735</IssueID>
    <Title>Exclude VM scripts via skipFiles</Title>
    <Description>Hi,

I'd like to make a feature request to exclude 'VM Scripts' that are dynamically created with `eval()` from the VS Code debugger as suggested by @roblourens [here](https://stackoverflow.com/questions/46013729/vscode-debugger-exclude-node-vm-files?noredirect=1#comment78993320_46013729).

To make progress immediately, if a knowledgeable contributor can identify the code in the source, us open source users can start the grunt work of implementation.

[Some reading](https://stackoverflow.com/questions/17367560/chrome-development-tool-vm-file-from-javascript), [relevant discussion](https://stackoverflow.com/questions/29897750/is-it-possible-to-blackbox-all-vm-scripts-in-chrome-debugger).

Thank you.</Description>
    <CreatedDate>03/09/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33688</IssueID>
    <Title>User account to save editor preferences</Title>
    <Description>It would be nice to load and save editor preferences from an online account so config files stay on the cloud?. Kind of what chrome does... huge benefits when working on multiple devices on a daily basis.

Not sure if asking for a microsoft account is a good idea though.</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33572</IssueID>
    <Title>Need a feature so that VScode will not quit on click on `cmd+Q` accidentally like we have in chrome.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:Version 1.15.1 (1.15.1)
- OS Version: MAC Sierra 10.12.6 (16G29)

Need a feature so that VScode will not quit on click on `cmd+Q` accidentally like we have in chrome.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
</Description>
    <CreatedDate>31/08/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33532</IssueID>
    <Title>split screen horizontally and vertically simultaneously</Title>
    <Description>
![panes](https://user-images.githubusercontent.com/22595227/29883086-816719de-8d85-11e7-80fe-03fc70727038.png)
like atom
</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33509</IssueID>
    <Title>Allow to fix tabs (like pinning in Chrome)</Title>
    <Description>A interesting thing I see in browsers, specially Google Chrome, is the feature to fix tabs. It would be possible to implement it in Visual Studio Code? Sometimes I close by mistake the open tabs of editor. Thanks!</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33263</IssueID>
    <Title>Close to tray</Title>
    <Description>Hi, 

Visual Studio Code can take some time to open (especially visible on laptops or slow HDD).
I'm not aware if this feature already exists (integrated or provided by some extension), but it would nice if it started at boot, minimized to tray and close button would also minimize it to tray.</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33198</IssueID>
    <Title>switching between editor tabs scrolls down past cursor repeatedly</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.12.1
mono-debug|ms-|0.15.7
unity-debug|Uni|1.2.1



---

Steps to Reproduce:

1. open a file with Ctrl+P.  put cursor on line 100, and center line 100 on screen.  note the top line number.
2. open another file with Ctrl+P.  put cursor on line 100, and center line 100 on screen.  note the top line number.
3. click on the tab for the first file.  cursor will not be visible as line 100 will be scrolled off the top of the screen, top line will be anywhere from 20 to 120 lines greater than it was before.
4. click on the tab for second file.  cursor will cursor will not be visible as line 100 will be scrolled off the top of the screen, anywhere from 20 to 120 lines greater than it was before.
5. click on the tab for the first file again.  note that each time you click back to a tab, it has scrolled even farther from the cursor and what was last visible, leaving you to search for whatever the heck you were just reading when you went to reference another file.  

this is really annoying.


 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>27/08/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33168</IssueID>
    <Title>When toggling Full Screen off, the menu bar thinks Alt is being pressed</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
spellright|ban|1.1.24
python|don|0.7.0
wordcounter|kir|1.2.0
cpptools|ms-|0.12.3
csharp|ms-|1.12.1
PowerShell|ms-|1.4.1
blank-line-organizer|rin|0.1.2
sort-lines|Tyr|1.3.0
change-case|wma|1.0.0



---

When toggling out of Full Screen (i.e. returning to a normal window), or when coming out of Zen Mode, the menu bar is a bit confused. The letters are underlined, as if the Alt key is being held down. See the attached screenshot.
![vscode_menubar](https://user-images.githubusercontent.com/3789849/29731051-cb92167a-89da-11e7-8acc-b6cefae9f38b.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33018</IssueID>
    <Title>Feature request: allow skipFiles: "&lt;eval&gt;/*" pattern</Title>
    <Description>- VSCode Version: 1.15.1
- OS Version: macOS Sierra

Steps to Reproduce:

1. Set `"skipFiles": ["node_modules/**", "&lt;node_internals&gt;/*", "&lt;eval&gt;/*"]` in `launch.json`
2. Use debugger to debug TypeScript or JavaScript
3. Eval scripts still stop the debugger

It would be nice if `&lt;eval&gt;/*` could be supported as a skip pattern just like `&lt;node_internals&gt;/*`. Apologies if I'm posting this in the wrong place!</Description>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33014</IssueID>
    <Title>Must click inside minimap active area to have "hot scrolling"</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063

If you click and hold the mouse button outside of the active minimap area, the area doesn't follow when you keep moving the mouse after.

![vs_code_minimap_scroll](https://user-images.githubusercontent.com/1578924/29607374-4d71ee7c-87f1-11e7-955a-f202f0d93076.gif)

Reproduces without extensions: Yes</Description>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32907</IssueID>
    <Title>Feature: search up the directory hierarchy for .vscode settings</Title>
    <Description>- VSCode Version: 1.15.1
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Create a workspace with a .vscode settings directory
2. Open a subdirectory in the workspace with VS Code
3. VS Code doesn't apply the parent directory's settings

Reproduces without extensions: Yes

The purpose of this feature is to let people open a project directory within a larger workspace (which contains multiple projects) and still retain the team's workspace-level VS Code settings. Put more abstractly: when I open a subdirectory in a workspace, I want VS Code to recognize I am in that workspace.</Description>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32834</IssueID>
    <Title>Mac OS Sierra - Space/Desktop problem pumping/bomb OS load - Improve organization and productivity.</Title>
    <Description>similar issue https://bugs.chromium.org/p/chromium/issues/detail?id=74812
iterm2 possible solution https://github.com/gnachman/iTerm2/blob/master/sources/iTermWindowImpl.m
This iterm solution is a tip from that chromium issue above
PS. I use Iterm and have nothing to complain about it.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: latest
- OS Version: Mac OS 10.12.6

Steps to Reproduce:

1. Open 3 projects. Separate it into 3 different spaces. Finalize the VS or restart the Mac. Using "window.restoreWindows": "all"
2. Reopen VS - all open right as before, but at the same space 0 (The current one).

The ideal would be re-open all three projects in the spaces as I determined. Thus improving productivity. And avoiding the stress of having to rearrange everything whenever you need to restart the MAC or even when there is a crash.

Best regards

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: doesn't matter for this.</Description>
    <CreatedDate>19/08/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32782</IssueID>
    <Title>Git can't handle non-ascii characters</Title>
    <Description>- VSCode Version: 1.15.1
- OS Version: MacOS Sierra

Steps to Reproduce:

It happens in some repositories, not in all of them. However the steps are simple:

1. Open a folder as a project
2. Use the embedded git to add ou restore changes (any action):
![image](https://user-images.githubusercontent.com/3200560/29462077-72225086-8404-11e7-9a56-f262de1fc3c9.png)

3. Message should appear

Message:
![image](https://user-images.githubusercontent.com/3200560/29462045-5766fcb0-8404-11e7-9c15-0b2a68bfd550.png)

![image](https://user-images.githubusercontent.com/3200560/29462058-63be7c68-8404-11e7-85d8-95bcaf35a70a.png)


Reproduces without extensions: Yes</Description>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32711</IssueID>
    <Title>Opening VS Code by double-clicking file in File Explorer forgets previously opened files</Title>
    <Description>If you have a mixture of saved and non-saved files open in VS Code...

- Quitting and restarting VS Code restores all the files that were previously open. Saved and non-saved. As expected.

- However, if you quit VS Code and then double-click on a text file in File Explorer, when VS Code starts it only opens the non-saved files (i.e. the "hot-saved" files) that were open previously, in addition the the new file that you double-clicked on to launch VS Code. All of the saved files that were previously open are forgotten about, and they are not restored.

I usually have a variety of text files open in VS Code and I would like the session to be restored whenever I restart VS Code, whether that is by explicitly launching VS Code from its shortcut, or by launching VS Code by double-clicking a file that it is registered for. The former works as I expect, but unfortunately the latter does not.</Description>
    <CreatedDate>17/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32397</IssueID>
    <Title>Scroll position should not change when returning to file</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (0b6da14128b4e61e331193f18786e8db2792a643, 2017-08-11T19:30:08.812Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: none
---

**Description**
The scroll position moves down as references are retrieved. For large files, the position can be many lines away.

**Steps to Reproduce:**
1. Set `typescript.referencesCodeLens.enabled` to `true`.
2. Open any TS file (easiest to see when the file contains an enum).
3. View a different file.
4. Return to the original file.

![scroll-codelens](https://user-images.githubusercontent.com/1007463/29244961-ce0934fe-7f7d-11e7-9722-fcf382066fa5.gif)
</Description>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32300</IssueID>
    <Title>Make quick open optionally open file in real tab instead of preview</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0
- OS Version: Win 10

Sometimes it would be nice to be able to open a file in a real tab while having preview enabled. So quick open would still open in preview on enter, but on e.g. shift+enter or ctrl+enter it would open in a real tab.

How it could work:

1. ctrl+p, type filename
2. shift+enter to open in real tab, not preview (just enter would still open in preview)

</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32275</IssueID>
    <Title>The incorrect IME position when the first character is entered</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
material-icon-theme|PKi|2.1.0
vscode-docker|Pet|0.0.16
code-settings-sync|Sha|2.8.2
go|Twe|0.0.1
html-css-class-completion|Zig|1.8.0
vscode-color|ans|0.4.5
vscode-eslint|dba|1.2.11
python|don|0.7.0
vscode-babel-coloring|dza|0.0.4
gitlens|eam|4.3.3
vscode-html-css|ecm|0.1.7
tslint|eg2|0.17.0
nim|kos|0.5.26
Go|luk|0.6.63
markdown-shortcuts|mdi|0.8.1
prettify-json|moh|0.0.3
debugger-for-chrome|msj|3.1.7
color-highlight|nau|2.3.0
vetur|oct|0.9.3
proto|pet|0.0.2
Ruby|reb|0.13.0
PostCSS|ric|1.0.1
stylelint|shi|0.28.0
babelrc|wad|1.0.0
vscode-import-cost|wix|2.0.0
vscode-proto3|zxh|0.1.2

(5 theme extensions excluded)


---

Steps to Reproduce:

1. Switch to Chinese IME (e.g. Sougou / Baidu)
2. See the screenshot:

![ime-issue](https://user-images.githubusercontent.com/1524576/29199567-a3d12dc4-7e13-11e7-8010-83864223b644.gif)

I reproduced this problem in the [monaco editor](https://microsoft.github.io/monaco-editor/), I think it should be the text input implementation issue using textarea, did not find this problem in [ace editor](https://ace.c9.io/).

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>30/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32249</IssueID>
    <Title>Feature Request: Open next file with problems</Title>
    <Description>The problems panel is incredibly helpful, especially when used with linters on large projects during refactors. However, it would be really helpful if there was a command that would allow you to open the next unopened file that has problems. This would allow users to quickly track down and remove errors during large code shifts.</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32217</IssueID>
    <Title>Allow to change the font of the workbench</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Debian 9

Recently rebuilt my dev machine and installed VS Code. Did not have droid sans mono at first, so the text in the editor looked bad, finally fixed it to look like it should again. 

The issue now is that all other elements are not using "Droid Sans Mono" or any other monospaced font.

![First](https://i.imgur.com/KMRSlZJ.png)
Check the tab text at top and bottom.

![Second](https://i.imgur.com/uNy0PiE.png)
Same here.

Reproduces without extensions: Yes</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32173</IssueID>
    <Title>Allow to undo deleted files from explorer</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:22:50.650Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-generate-getter-setter|DSK|0.4.2
vsc-material-theme|Equ|1.0.2
code-settings-sync|Sha|2.8.2
html-snippets|abu|0.1.0
project-manager|ale|0.19.0
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
gitlens|eam|4.3.3
code-runner|for|0.6.32
search-node-modules|jas|1.1.1
Angular2|joh|2.4.0
vscode-icons|rob|7.12.0
vim|vsc|0.9.0
vscode-preview-server|yui|0.7.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1.cmd+shift+e and delete a file
2.cmd+z can restore the file

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: no</Description>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32071</IssueID>
    <Title>Text is blurring </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Windows 10

Steps to Reproduce:

1.Install VSCode and compare the window header with all other texts in the app. Notice the window header is rendered with good quality, but all other text is blurring:
![image](https://user-images.githubusercontent.com/12115586/29007227-4356d88a-7ab3-11e7-9b58-f2e3ee9086ac.png)

2.Open properties of code.exe and change compatibility settings:
![image](https://user-images.githubusercontent.com/12115586/29007188-b4c592d2-7ab2-11e7-8c86-2630b35c0e19.png)

3. Restart VSCode and see blurring disappeared:
![image](https://user-images.githubusercontent.com/12115586/29007215-1c7aea76-7ab3-11e7-8001-17a43afdadc7.png)



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>06/08/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32034</IssueID>
    <Title>Notifications : Accessibility: Add Keyboard Navigation To Notification Buttons</Title>
    <Description>Currently the only keyboard control of notification messages is Escape to clear the message
or messages.
There is an increasing number of notification messages with multiple important button options
and the only way to address them is with the mouse.

Proposal:
- Add Focus to notification message keyboard command
- Add keyboard controller to the notification widget to allow Left/Right/Up/Down button navigation
- Only remove notification message that has been selected and a button activated</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32021</IssueID>
    <Title>How to write a code snippet generating current time?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14
- OS Version: Ubuntu 14.04

I want to write a code snippet used to write the time when I write the code.
For example, I define a code snippet named timeit, and then when I write timeit, it will generate:

&gt; write on 2017.8.4

However, I don't know how to generate the current time. Please give me some advice. Thank you.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31779</IssueID>
    <Title>Ctrl+Shift+F search runs on the UI thread and makes the UI unusable on even small projects.</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.0
debugger-for-chrome|msj|3.1.6
tsimporter|pmn|1.2.14
vscode-icons|rob|7.11.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>31/07/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31754</IssueID>
    <Title>Dragging tabs and new window behaviour</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

So I come from using sublime for years, so far I am enjoying VS Code, but there are a few usability things I'd like to raise. Can we change the behaviour when dragging a file tab out of the VSCode window that it automatically creates a new window and opens the file in there, and removes the tab from the original window? This is the behaviour in sublime, and it is very nice to be able to just drag a tab out to another monitor and continue coding.

Another thing which is similar, if you already have another window of VSCode open, and you drag a tab over to the other window it creates two instances of the open file, which is a problem because you can lose track which one you were using if you have many files/windows/tabs open. Changing the behaviour that dragging a tab over to another window closes the original tab reduces confusion. 

Can we make this default? If not, how would I go about changing it myself?

</Description>
    <CreatedDate>31/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31682</IssueID>
    <Title>Copy one file from a VS Code window(project) to another one</Title>
    <Description>Right now in left side explorer if you right click on a file and copy it, you can easily paste it in that explorer in another place, which is a very good thing.
but you cannot copy and paste it to explorer which is opened for another project in another VS Code window.</Description>
    <CreatedDate>28/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31586</IssueID>
    <Title>menu bar shortcut not work</Title>
    <Description>origionally when I **press** and then **release** Alt key the menu bar would show the hot keys with underscores, and then I could type the key to activate the menu:
i.e. press and release alt would show the help with 'h' underscored, and then press h, the help menu would showup.
this is the default feature works in all the editors, i.e. visual studio, and windows explorer

**Problem:**  
recently the feature is not work.
currently it's not work, if I press 'h', i will type 'h' in the editor
</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31423</IssueID>
    <Title>Need a new setting for toggle Find widget can be over first line or not.</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (fed03b66ac8acdac93897727a1d19ee0f6898bf2, 2017-07-25T07:30:52.414Z)
- OS Version: Windows_NT x64 10.0.15063

Steps to Reproduce:
1. ctrl+f to show the `Find widget`;

It's good feature but i hate it. It try to change my focus.
In my custom, after scroll the file to top, the top is always the first line of file.
But now, I can't sure the top is the first line of file or the Find widge.
It's uncertain! So I need a setting for toggle feature.

eg. when compare two file with two row, only one file show the Find widget, two file is not sync after scroll to top.
![1](https://user-images.githubusercontent.com/894004/28600690-20056304-71e6-11e7-80f3-892806577174.gif)

![3](https://code.visualstudio.com/images/1_13_uncover-matched-results.gif)
</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31414</IssueID>
    <Title>Allow dragging and dropping of files from explorer across multiple windows</Title>
    <Description>Currently, if you have two VS Code windows open with different folders, and try to drag a file from the explorer window of one into the explorer window of another, nothing happens.

It would be nice if this moved or copied the file (or maybe asked whether you wanted to move or copy it).</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31368</IssueID>
    <Title>Feature Request: "Scope to This"</Title>
    <Description>This is not a bug, but a feature request.

Most projects have many files and a deep file structure. Especially files at the top levels are rarely edited in TypeScript projects (lots von differenct json / config files). In the example screenshot, all the code editing happens in the marked area, the rest ist stuff I almost never edit:

&lt;img src="https://user-images.githubusercontent.com/13885303/28562761-e0d2c8f6-7123-11e7-88b2-1ac6c86460e2.PNG" height="400" /&gt;

In full Visual Studio there is a feature to "Scope to This" in the Solution Explorer to virtually move the shown root folder to a sub-folder of the solution.

It would be great to have the same functionality in VSCode - this way the user could concentrate on the files that actually matter most of the time.</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31218</IssueID>
    <Title>Window title bar doesn't show correct folder when swapping folders</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
language-x86-64-assembly|13x|2.2.11
rainbow-brackets|2gu|0.0.6
read-only-indicator|ale|0.6.0
alignment|ann|0.3.0
Doxygen|bbe|1.0.0
python|don|0.6.8
EditorConfig|Edi|0.9.4
matlab|Gim|0.5.0
triggertaskonsave|Gru|0.1.2
vscode-dimmer|hoo|2.1.0
docthis|joe|0.4.7
select-part-of-word|mle|1.0.1
cpptools|ms-|0.12.1
indent-rainbow|ode|0.6.1
vscode-clearcase|Ope|1.10.0
vscode-icons|rob|7.10.1
indenticator|Sir|0.4.2
vscode-hexdump|sle|1.4.0
code-spell-checker|str|1.3.0
comment-snippets|Tob|0.2.0
selectline-statusbar|tom|0.0.2
change-case|wma|1.0.0
highlight-trailing-white-spaces|yba|0.0.2

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Load a different folder (I used File, Open Recent)
2. The window title bar still shows the &lt;original folder&gt; - &lt;file in that folder&gt;
3. Clicking on a file fixes it. Not sure if always does. I think it may get stuck not updating.
4. Clicking on a file tab rather than in the file (sometimes) doesn't change the window title.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30989</IssueID>
    <Title>[feature request] Ignore/Hiding lint errors</Title>
    <Description>So I recently switched to VS Code and what I noticed is that having a global counter of file errors is handy. However, when say an error is not valid because the language doesn't support something yet, it is annoying to have these errors.

For example, in the CSS linter, there is an issue where the `@supports` rule isn't supported yet, or that the `/deep/` selector for Angular 4 isn't properly recognized. To make the errors go away I have to disable linting or (perhaps) disable rules that I don't want to disable. 

Also you can't limit the linter to only look at the existing file and get an overview of only that, so you are pretty limited to what you can and cannot do.

So my request is to extend the linting solution to allow errors to be hidden. Rightclick one and select `Hide error for this workspace` or something similar. And an option `only show errors for current file` would also be nice.

I also found out that it is pretty eager to validate my `node_modules` folder as well. I feel we also need a setting for workspace to specify linting exclusions (and/or globally)</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30978</IssueID>
    <Title>Closing developer tools multiple times causes VSCode to crash</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (3cfa565abbd6e162b7ae6f3055c231128da63df2, 2017-07-17T05:15:46.760Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: none
---

Steps to Reproduce:
1. Help &gt; Toggle Developer Tools
2. Click the 'X' on the panel.
3. Help &gt; Toggle Developer Tools
4. Click the 'X' on the panel.

Looks like this is an actual crash and not an unexpected close. The only files in `VSCode Crashes` are from just now when I was reproducing this...</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30846</IssueID>
    <Title>Sort "Open Editors" by name, folder, etc</Title>
    <Description>There doesn't seem to be any way at present of sorting the "Open Editors" section of the explorer menu by name or similar.  If I can't find a tab I tend to then look in Open Editors, but due to the inability to sort it can be almost as difficult to then find what I need.  I think the ability to sort by name at least would be a big improvement.</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30841</IssueID>
    <Title>Use workspace/folder settings when file is opened outside of workspace</Title>
    <Description>Given a workspace `foo`, if file `foo/bar` is opened in VSCode standalone (not inside the `foo` workspace`), any settings in `foo/.vscode/settings.json` will not be picked up.

This matters when [using VSCode as a git mergetool](https://github.com/Microsoft/vscode/issues/5770). VSCode will open a file an editor to present the merge conflict, but the editor will not respect workspace settings. One example is where this is significant is formatter settings (like Prettier). Formatting the file will not respect project settings.

I understand workspace settings are specifically related to workspaces in VSCode, but I can't help but wonder if it makes sense to have "folder" settings which can be inherited from any parent folder for a given file. Has this idea been discussed?</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30817</IssueID>
    <Title>Visual Studio Code Server</Title>
    <Description>Hi,

I'd like to ask about feature that came recently to my mind.
Let's say that we have Vagrant or just plain VM.
Let's say we use Rust or similiar programming language where we have appropriate extensions for VSCode, but they require some time and knowledge to setup (Rust Language Server etc.).
Let's say that we have beginner programmers that may use Windows, Linux or Mac and it's cumbersome for them to setup development environment themselves, so it should be possible to just download code, run prepared Vagrant VM and have everything up and running.

Now, it would be nice if this virtual machine had some "Visual Studio Code Server" (and that's my requested feature), so we would have Visual Studio Code on our host machine that can connect to this server on VM (ssh?), use server's configuration, plugins and allow to browse file, folders, execute commands provided by extensions, use terminal, remotely.

I can see huge value in this feature, because it would allow to provide seamless, friendly experience, even for most complicated projects.

</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30799</IssueID>
    <Title>Do not clean last command on escape key press</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: Windows 10 bulid 15063

### Summary

Sometimes I open the Command Palette `Ctrl+Shift+P` by mistake, for example, while I actually want to open is the Goto Anything... `Ctrl+P`. So I press `Escape` key, to close the Command Palette. However doing so erases my last command inputted.


### Expected behavior

To remember the last inputted command on the Command Palette when it is closed by the `Escape` key. 

To clean the last inputted command on the Command Palette it is expected to:

1. Open the Command Palette `Ctrl+Shift+P`
1. Press the `Backspace` key
1. Press the `Escape` key to close the Command Palette


### Actual behavior

The last inputted command on the Command Palette is forgotten when the Command Palette is closed by the `Escape` key.


### Steps to reproduce

1. Enable the setting `"workbench.commandPalette.preserveInput": true,`
1. Open the Command Palette `Ctrl+Shift+P`
1. Type some command as `select`
1. Open the Command Palette again, you will notice your command `select` is remembered
1. Now press the `Escape` key
1. Open the Command Palette again
1. Your command `select` was forgotten

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

___ 

Related issues:

1. https://github.com/Microsoft/vscode/issues/17163 Preserve and restore the last typed text in command palette
1. https://github.com/SublimeTextIssues/Core/issues/1814 Command palette cleans the last command on escape key press 
</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30726</IssueID>
    <Title>how do i get to run the same task n times</Title>
    <Description>in the latest version

![image](https://user-images.githubusercontent.com/937933/28225300-2ee097f8-68a0-11e7-9ff1-a9f3204039a5.png)

there is a number of tasks in the status bar that **implies there can be more than one task running at the same time**

![image](https://user-images.githubusercontent.com/937933/28225255-fef79d48-689f-11e7-8335-c6917d33bb9b.png)

yet when i try to run another task i get:

![image](https://user-images.githubusercontent.com/937933/28225269-12fc11de-68a0-11e7-9dce-4ee7c03fb1ac.png)


so how do i get to run more than one tasks if anything?</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30705</IssueID>
    <Title>Go to definition (bash script) doesn't work</Title>
    <Description>- VSCode Version: 1.14.1
- OS Version: 10.12.5

Steps to Reproduce:
1. Create a simple bash script
```bash
#!/bin/bash

main() {
  echo "You're in!"
}

main
```

2. Put the cursor on the last line, where `main` is. Press `F12`
3. Cursor doesn't move to the function definition.

Reproduces without extensions: Yes

I don't remember this ever working.</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30680</IssueID>
    <Title>Minimal width for editor tabs</Title>
    <Description>I want to be able to customize the minimum width for editor tabs, to improving the number of tabbed pages on small monitor.

Options ideas:
1. Favicon only (perhaps cool only, may by keyboard to navigate; Best if can be achieve with extensions).
2. Customize min width, overflow only when will be less than this width.
3. Customize min number of characters on tabs, like 3 characters on head and other characters be hidden while overflow. `...` and duplicate name path hints need to be considered. Use hover to see the tooltips.
4. Based on the above, allow hover to expand a tab.
5. Refer to many extensions for tabbed browsers.

Related issue: #29953, #28431.</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30327</IssueID>
    <Title>paste is needed when r-clicked on a file</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.8.0-58-generic
- Extensions: none
---

Steps to Reproduce:

1. r-click a file
2. no paste option shown

expected:

1. r-click a file
2. show paste options
3. select paste option
4. paste a file on the same directory.
</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30168</IssueID>
    <Title>Split Editor Pane's Initial State Should Be Empty</Title>
    <Description>As originally requested (and closed) in [issue 29651](https://github.com/Microsoft/vscode/issues/29651), when a user splits their editor pane, the new pane's initial state should be empty.

Currently the file in the active tab is duplicated in the new pane. This doesn't make sense to me. Frequently I open an additional editor pane in Sublime and drag a config file/notes/readme file to it from a location _outside_ of the currently loaded project directory(ies).

Obviously if a user explicitly selects a file to open in a new pane, the new pane should not be empty. I am _not_ talking about that use case.</Description>
    <CreatedDate>06/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30141</IssueID>
    <Title>Resizing split windows with touch is hard to do</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: Windows 10
- System: Surface Pro 4

Steps to Reproduce:

1. Split the editor into two or three
2. Try to select the split bar between them with your finger. It is very hard to find as the area is so small. 

Would be nice if there were a setting for the resize bar to be larger.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/07/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30061</IssueID>
    <Title>Multiple file select in folder window</Title>
    <Description>It would be useful to be able to select multiple files in the folders window to either delete or remove them</Description>
    <CreatedDate>03/07/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29967</IssueID>
    <Title>Allow working tab to be a draggable file</Title>
    <Description>A great feature MS Word &amp; Excel have is the file icon at the top of the said window is draggable into a drop zone for attachments in emails etc. This eliminates the necessity for digging around my hard drive for the files location. 
Code does not have this feature. Please add it for ease of accessibility. 

- VSCode Version:
1.14.0-insider</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29953</IssueID>
    <Title>Maximum width for editor tab</Title>
    <Description>Would be nice to have "maximum widths" for each of the editor tabs, especially if you have long file names.</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29754</IssueID>
    <Title>Request feature - h + v - view mode split in to 4 screen. </Title>
    <Description>Wishlist feature:
Split screen into 4 peace.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29702</IssueID>
    <Title>The Explorer font is too small to set size</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-caniuse|akamud|0.5.3|
|project-manager|alefragnani|0.18.1|
|vscode-refresh-html|bajdzis|0.0.2|
|vscode-html-css|ecmel|0.1.7|
|vscode-great-icons|emmanuelbeziat|2.1.8|
|php-debug|felixfbecker|1.10.1|
|auto-rename-tag|formulahendry|0.0.14|
|beautify|HookyQR|1.1.1|
|crane|HvyIndustries|0.3.6|
|output-colorizer|IBM|0.1.1|
|easy-icons|jamesmaj|0.3.1|
|autofilename|JerryHong|0.1.3|
|format-indent|Kasik96|1.3.0|
|string-manipulation|marclipovsky|0.1.0|
|PowerShell|ms-vscode|1.4.1|
|vuehelper|oysun|0.1.0|
|view-in-browser|qinjia|0.0.5|
|vscode-icons|robertohuertasm|7.10.1|
|indenticator|SirTori|0.4.2|
|guides|spywhere|0.8.3|
|JavaScriptSnippets|xabikos|1.4.1|
|Material-theme|zhuangtongfa|2.8.9|
|html-css-class-completion|Zignd|1.7.0|;


---

Steps to Reproduce:

1.The Explorer font is too small to set size.
2.Want to set the Explorer font size freely.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29309</IssueID>
    <Title>Shrink selection with mouse click should not deselect everything</Title>
    <Description>Steps to Reproduce:

1. Make selection with mouse drag or shift+arrow keys
2. Shift click inside the selection to shrink it (in case you selected more than you wanted)

In this case everything is deselected and you have to start over. Shrinking the selection with shift+arrow keys does work as expected. Please make a shift+click behave like that.</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29272</IssueID>
    <Title>Add filtering option on warnings and errors in Problems Output tab</Title>
    <Description>Similar to Unity engine console logger..

While we may be able to filter by problems we are not able to filter by errors or warnings instead I am presented with huge list and have to scroll through it! I would like to have option to quickly hide and unhide warnings instead seeing them all in list.. As well as having option to hide and unhide specific errors... Thank you!</Description>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29125</IssueID>
    <Title>Rename Show Recommendations to Show all recommendations</Title>
    <Description>Say I open a vue file. I get a notification recommending the Vetur extension with a button that says "Show Recommendations"

I click on it and a hundred recommendations show up.

As a user I was in the context of Vue, so I'd expect Vue related extensions to show up.
Now I need to search through the recommendations or do a lot of scrolling.

We should set the expectation up front that we intend to "Show **all** recommendations"

cc @Microsoft/vscode 
</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29083</IssueID>
    <Title>view in browser option</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.10.0|;


---

why there is no option for view in browser for web pages ex. html ?</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29017</IssueID>
    <Title>See current component in react</Title>
    <Description>Is very common in react programming to have different components in the same file. It would be very helpfull if we can have immediate evidence of the component that is currently being edited (something like intellij's navigation bar)</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28956</IssueID>
    <Title>Scroll position not retained when switching back to a file that was opened from the source control diff section</Title>
    <Description>- VSCode Version: Version 1.13.1 (1.13.1)
- OS Version: macOS Sierra 10.12.4

**Steps to Reproduce:**
1. open the diff view for any file from the Source Control panel
2. click the Open File button at the top-right corner of vscode
3. scroll to a different position in the file (doesn't matter if the cursor is also at the new position or the old position)
4. switch to a different file then back.

**What I saw:** the scroll position is back to where it was when the file was originally opened from the diff view.
**Expected:** the new scroll position should have been preserved; just like it does if the file was opened from the Explorer (or CMD+P)

Reproducible when vscode is started with extensions disabled.


**GIF of the bug:**
The cursor is moved from the initial line no.1577 to line no.1495. After switching back to this file, we are back to line no. 1577.
![issue](https://user-images.githubusercontent.com/11534188/27259414-9985f6f4-5430-11e7-8291-721910dc9a0d.gif)</Description>
    <CreatedDate>18/06/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28941</IssueID>
    <Title>Show search results in a page like Sublime Text</Title>
    <Description>Using the sidebar tab for search does not provide enough width or contextual information for each match.

It would be nice to offer search results inside a regular VS Code Tab with larger context (lines above and below the result), the way Sublime Text 3 does it.

Bonus points for improving upon Sublime Text's results listing too, e.g. by adding a "refresh/search again" button on the tab with the results.</Description>
    <CreatedDate>17/06/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28929</IssueID>
    <Title>Pin folders</Title>
    <Description>In a large project finding folders can be a pain.  If could pin folders so they appear at the top of the folder listing or in a pinned folder section that would make finding them much faster.

For example, I am working on a branch writing a Crafting widget.  It's a big project so I keep coming back to it and have to find the folder buried deep inside the folder structure of the main project. would be so much more convenient if it was pinned somewhere.

An extension of this feature would be to be able to limit a search to the pinned folder or folders.</Description>
    <CreatedDate>17/06/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28915</IssueID>
    <Title>Extension packs broken when sideloading</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0

---

Steps to Reproduce:

1. Use `yo code` to create an extension pack
2. Add an extension dependency (e.g. [PeterJausovec.vscode-docker](https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-docker))
3. Package as vsix (`vsce`) OR copy extension pack folder to .vscode/extensions/
4. Dependencies are not installed, and the "dependency" tab for the extension never loads, returning this trace:

```
shell.ts:445 Cannot read property 'properties' of null: TypeError: Cannot read property 'properties' of null
    at e.loadCompatibleVersion (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:591617)
    at e.getAllDependencies (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:591442)
    at e.loadDependencies (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:2248684)
    at e.task (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:84759)
    at e.get (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:62707)
    at file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:89196
    at t.loadContents (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:95436)
    at t.openDependencies (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:89141)
    at t.onNavbarChange (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:87295)
    at e.invoke (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:25074)
e.onUnexpectedError @ shell.ts:445
(anonymous) @ shell.ts:405
e.onUnexpectedError @ errors.ts:68
o @ errors.ts:88
e.invoke @ callbackList.ts:65
e.fire @ event.ts:123
e._update @ extensionEditor.ts:104
i @ extensionEditor.ts:82
e.run @ actions.ts:208
t.runAction @ actions.ts:237
t.run @ actions.ts:229
t.onClick @ actionbar.ts:152
(anonymous) @ actionbar.ts:132
```</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28906</IssueID>
    <Title>No auto scroll to where is typing when there's multi selection</Title>
    <Description>Multi select your code, scroll way down, start typing, no auto scroll/focus where you're typing.

```
OS: Windows 10
VS Code: 1.13.1
```</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28671</IssueID>
    <Title>Add real time collaborate function</Title>
    <Description>
    </Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28585</IssueID>
    <Title>Uninstall extension did not remove previous betas</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: Win 10x64

Steps to Reproduce:

1. Install extension beta build of any extension via "..." / "Install from VSIX...";
2. Wait until this extension will get new public version (VSCode will update your beta till latest build) and reload VScode;
3. Uninstall this extension and reload VSCode

Expected: VSCode without our uninstalled extension

Actual: VSCode with beta build of the extension. With auto update it immediately start to update =&gt; You can't uninstall it until do not turn off auto updater. 
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28540</IssueID>
    <Title>Expand settings pane to all editor groups</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: macOS 10.12.5

Usually I have 2 editor groups opened, so when I open settings it only uses one of the groups, making it difficult to edit. The settings pane has already two sections so you can imagine the trouble to make changes to it.

&lt;img width="1626" alt="screen shot 2017-06-12 at 16 25 41" src="https://user-images.githubusercontent.com/1868454/27041429-dba53044-4f8b-11e7-875a-eb6ce05db696.png"&gt;

Having used SublimeText, I think they got this right. The default behaviour should be to open settings as if there is only one editor group, or at least open in a new window:

&lt;img width="1623" alt="screen shot 2017-06-12 at 16 27 11" src="https://user-images.githubusercontent.com/1868454/27041483-08498e88-4f8c-11e7-922f-5101bf89c9cc.png"&gt;
</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28431</IssueID>
    <Title>Improve usability on portrait monitors</Title>
    <Description>I prefer to use a monitor in portrait mode for editing code. (Or one portrait and one landscape.)
Currently there are some issues when using this configuration:
- The sidebar has a minimum width is not changeable and should be able to change the font size seperatly
- The sidebar is used for search results - there should be an option to put search results on the bottom panel with the other tabs (Problems, Output, etc.)
- No tear-off editors movable to other monitors
</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28374</IssueID>
    <Title>Preview windows blank when using Ctrl+Shift+H to find/replace variables</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-color|anseki|0.4.1|
|asp|ilich8086|0.0.1|
|htmltagwrap|bradgashler|0.0.3|
|gitignore|codezombiech|0.5.0|
|githistory|donjayamanne|0.2.0|
|theme-dracula|dracula-theme|2.1.0|
|vscode-html-css|ecmel|0.1.6|
|vscode-npm-script|eg2|0.2.0|
|vs-code-xml-format|fabianlauer|0.1.5|
|git-project-manager|felipecaputo|1.3.2|
|php-intellisense|felixfbecker|1.3.0|
|Theme-Dreamweaver|gerane|0.0.2|
|Theme-FlatDark|gerane|0.0.2|
|beautify|HookyQR|1.1.1|
|classic-asp|ilich8086|0.0.2|
|theme-onedark-sublime|joshpeng|0.3.6|
|format-indent|Kasik96|1.3.0|
|simple-dark-theme|manutero|0.0.1|
|vscode-todo|MattiasPernhult|0.8.0|
|csharp|ms-vscode|1.10.0|
|theme-oceandeep|pierrenel|0.0.1|
|vscode-icons|robertohuertasm|7.9.0|
|code-spell-checker|streetsidesoftware|1.1.0|
|gitblame|waderyan|1.11.2|
|JavaScriptSnippets|xabikos|1.4.0|
|Material-theme|zhuangtongfa|2.8.5|
|html-css-class-completion|Zignd|1.7.0|;


---

Steps to Reproduce:

1. Press CTRL+Shift+H and search for an existing variable that you know exists across multiple pages
2. Click on the code line in the results panel and instead of seeing the preview I get a blank screen. Or, I'll see the preview but when I hit CTRL+Shift+1 to replace the item and go to the next item the preview window will blank out instead of showing code change preview.

![code_2017-06-09_13-07-06](https://user-images.githubusercontent.com/6462859/26988644-d333b99e-4d15-11e7-9524-ed1f5c9bf428.png)
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28279</IssueID>
    <Title>Renderer process consumes too much power</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.14.2
- OS Version: macOS Sierra 10.12.6 (2016 new mbp with touchbar)

em begging vscode to save my power, seriously. can someone stand that a full-powered mbp only works for 2 hours, always less than 2 hours, em not kidding u. these days i had to switch back to sublime, using sublime i can work more than 7 hours.

so please make it better, thx :)
&lt;img width="800" alt="screen shot 2017-06-09 at 10 34 23" src="https://user-images.githubusercontent.com/10388933/26959017-776b873c-4d00-11e7-9b28-8ae285147120.png"&gt;

</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28276</IssueID>
    <Title>Dynamic File Links (Dreamweaver-esque)</Title>
    <Description># Feature Request

In Dreamweaver 5.5, there is a bar below and attached to each tab that lets one simply click on the name of a file reference to access said file, you can also filter the dynamic links by extension in Dreamweaver.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28274</IssueID>
    <Title>Dreamweaver-style Find/Replace</Title>
    <Description># Feature Request

As a user coming from Dreamweaver 5.5, I've grown used to having a multiline find and replace widget with regex and the ability to search through specific files/folders for certain term(s).  What I'd like is for VS Code to have a similar search capability to Dreamweaver's.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27993</IssueID>
    <Title>Include announcement section for extension authors</Title>
    <Description>Sometimes extension authors like me at `settings-sync` need to announce something, which may large chunk of users wont care but some users though. Hence allow authors to interact with users by showing announcements.

Currently there is not way other then that I am showing the message upon the code start and users takes it as spam or whatever.
When they click on the message, link should be opened, or the message can have multiple buttons.

If there is announcement section in the extension with a notification badge in the extensions will allow users to view them anytime, unlike they are doing right now to close the information message box every time.




// cc @Tyriar (https://github.com/shanalikhan/code-settings-sync/issues/335#issuecomment-305996633)</Description>
    <CreatedDate>04/06/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27988</IssueID>
    <Title>Base64 and line column limitation?</Title>
    <Description>In this recent version, I noticed that some longer base64 encoded strings didn't allow me to pan to the end of the line. When opening the file, the line wrap is turned on, when I turn line wrap off, I cannot navigate to the end of those lines using the arrow keys. I believe the data is still all there, just causes navigation issues. It seems perhaps this is a limitation in the number of columns? The color coding does not display the same as other shorter lines, so I don't know if it isn't recognized properly or just isn't displaying all of the data.

I have included a sample of one giving me trouble.
[base64-vscode-issue.zip](https://github.com/Microsoft/vscode/files/1050057/base64-vscode-issue.zip)



- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.16199
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|project-manager|alefragnani|0.18.0|
|json-tools|eriklynd|1.0.2|
|vscode-auto-open-markdown-preview|hnw|0.0.4|;


---

Steps to Reproduce:

1. load the base64.html included in the zip in this VSCode version.
2. The line including the base64 data when line wrapping is turned off cannot be navigated to using the arrow keys.</Description>
    <CreatedDate>04/06/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27960</IssueID>
    <Title>Add a "landing page" feature to tasks</Title>
    <Description>While you're working on the task features, I'd like to request that tasks have a property that can specify what pane to open when the task completes. For instance, I'd like my test task to land the user on the problems pane to view the problems surfaced by the problem matcher.
</Description>
    <CreatedDate>02/06/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27901</IssueID>
    <Title>Git: cannot undo a change in this folder</Title>
    <Description>Steps to Reproduce:

1. have a folder `super cool stuff" ---?!?!() sdäü*`
2. add a file
3. from git viewlet undo

=&gt; nothing happens

Output:
```
git clean -f -q -- /Users/bpasero/Development/monaco/super cool stuff" ---?!?!() sdäü*/tsfmt.json
git status -z -u
git symbolic-ref --short HEAD
git rev-parse master
git rev-parse --symbolic-full-name --abbrev-ref master@{u}
git rev-list --left-right master...origin/master
git for-each-ref --format %(refname) %(objectname)
git remote --verbose
```
</Description>
    <CreatedDate>02/06/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27637</IssueID>
    <Title>Task execution should have an option to show problems</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Linux version 4.10.11-1-ARCH (builduser@tobias) (gcc version 6.3.1 20170306 (GCC) )

Steps to Reproduce:

1. Create a task in json
```{
            "taskName": "Make Local",
            "command": "make",
            "args": ["-C", "${fileDirname}", "CONFIG_OPT=no", "-sj4", "local"],
            "isShellCommand": true,
            "showOutput": "silent",
            "isBuildCommand": true,
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        }```
1. There's no way to pop up the `Problem` tab when there are problems, only the `Output` tab unconditionally (which no longer has click-able filenames apparently?)

The `Problems` tab is quite useful, but the task definition should support a new property `showProblems` which opens the `Problems` tab if any problems are found in the output. Otherwise no change to the current behavior. `showProblems` should override `showOutput` in the case that there are detected problems.
</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27586</IssueID>
    <Title>Vertical scroll in vscode not work properly after the suspension . It is not smooth, it jumps</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
1.12.2
- OS Version:
Windows 10

System: Dell Inspiron 5000, i5 7200u

Steps to Reproduce:

1. Suspend Windows 10
2. Start Windows 10
3. Vertical scroll in vscode not work properly. It is not smooth, it jumps
4.  Reduce windows size
5. Maximize the windows, and the problem is solved.
</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27380</IssueID>
    <Title>Long Text longer than 10000 letters wrapped with [...]</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.2.2|
|php-pack|felixfbecker|1.0.1|
|mssql|ms-mssql|1.0.0|
|wordpress-snippet|tungvn|1.1.2|;

---

Steps to Reproduce:

1. I try to paste a very long text (Base64Encoded) I noticed that the text wrapped and ends with [...]
2. It stops in Col (10,000).</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27359</IssueID>
    <Title>Blacklisting Extensions</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.4.0-21-generic
- Extensions: the listing exceeds the lower minimum of browsers' URL characters limit
---

Steps to Reproduce:

1. Install one of the many worthless or broken extensions with an appealing name or description.
2. Try it &amp; find out it sucks and you never want to see it again.
3. Try to find some extension blacklist feature, but there is none.


This feature is still needed badly.</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27281</IssueID>
    <Title>Allow Zooming on Small Images</Title>
    <Description>I am working on a repository that contains very small images (10x10 pixel .png files). I would like to view these images contained in my repository before and after running code to modify them. However, they are much too small, and I am forced to use a 3rd party application. This is rather tedious when modifying multiple images at once. </Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27194</IssueID>
    <Title>Feature Request: Offer opening binary files with default application</Title>
    <Description>- VSCode Version: 1.12.2.
- OS Version: any

Steps to Reproduce:

1. Click on Pdf in Fileexplorer
2. The file will not be displayed in the editor because it is either binary...

It would be nice if we had a button that would make it possible to open these files with their default applications. Right now I have to right click "Reveal in Explorer" and manually open it.

Relevant place in code:
https://github.com/Microsoft/vscode/blob/6f790f7676581a97918f014bec0cff8f0d690e81/src/vs/base/browser/ui/resourceviewer/resourceViewer.ts#L181</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27148</IssueID>
    <Title>Explorer: folders should act like the ones in Finder/Xcode on Mac</Title>
    <Description>As a Mac user, I expect all folders act the same behavior just like they do in Finder or Xcode:

1. click the folder: just select the folder (**not expands/collapses it**).
2. click the disclosure triangle: expands/collapses the folder.
3. `option + arrow-right/arrow-left` on a selected folder: expands/collapses all sub-folders in the hierarchy.
4. hold `option` and click the disclosure triangle: just like what `option + arrow-right/arrow-left` do to expands/collapses all sub-folders in the hierarchy.

Current behaviors which I did not expect:

1. Simply clicking the folder will expands/collapses the folder (should just select it).
2. Can't find a familiar way to expands/collapses all sub-folders in the hierarchy (using `option`).

I really do expect that VSCode team can fulfill this expectation in Explorer.</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27103</IssueID>
    <Title>Scrolling using trackpad is the worst</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Use Dell XPS 13's trackpad when scrolling, it just scroll for a second then drops
2.</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26932</IssueID>
    <Title>Feature-request: Please add command to "run last run task"</Title>
    <Description>Task runner is great, I type &lt;run task&gt; keybinding followed by substring of name of task to execute.
e.g. 'Ctrl+Shift+B' then 'int' for my 'Build Integration tests' task.

If I could bind another keybinding to run the last run task then I could use the above operation to effectively switch between build configurations and this proposed new feature to execute the build configuration.

Thanks</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26740</IssueID>
    <Title>Git: Broken diff view with png</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (613724d43b4d50f6052bbb8007447ca96e687f26, 2017-05-16T06:11:37.391Z)
- OS Version: Windows_NT ia32 10.0.16193

---

Steps to Reproduce:

have a picture tracked with git

![before](https://cloud.githubusercontent.com/assets/7588612/26103399/c6a963f2-3a6b-11e7-9a9a-9ac63d61518c.PNG)

change it

![after](https://cloud.githubusercontent.com/assets/7588612/26103402/ca8ed844-3a6b-11e7-93cf-3415614d270e.PNG)

view the diff

![diff](https://cloud.githubusercontent.com/assets/7588612/26103407/cf368798-3a6b-11e7-8007-1edb7c749b79.PNG)
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26728</IssueID>
    <Title>Option to override globally disabled extension in workspace settings</Title>
    <Description>VScode currently has the option to disable an extension for certain workspaces.
However, there are extensions such as Arduino and the likes which are _very_ workspace specific and negatively impact the overall experience if enabled outside that environment.

Instead of having to manually disable those extensions for every workspace, I suggest making it possible to enable an extension for a workspace even if it is globally disabled.

The current behaviour does not allow you to enable the extension for a workspace if it is disabled globally:
![image](https://cloud.githubusercontent.com/assets/2827047/26096008/0971f7fe-3a20-11e7-8592-c0f76d329119.png)
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26627</IssueID>
    <Title>[Feature Request] Quick Navigation as WebStorm</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1 
- OS Version: Mac

Steps to Reproduce:

1. Type at slidebar could navigation file tree, just like WebStorm

![untitled](https://cloud.githubusercontent.com/assets/227713/26038953/4e8efb28-3946-11e7-9a0b-5082af868e30.gif)

</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26318</IssueID>
    <Title>Linux: commands with keybindings ignore when clause of the command if defined</Title>
    <Description>Version: 1.12.1
OS: Windows 10

I have the following keybinding:

```json
    {
        "key": "ctrl+enter",
        "command": "workbench.action.toggleZenMode",
        "when": "editorTextFocus"
    }
```

When I am using `git` and I am entering a commit message, by pressing &lt;kbd&gt;ctrl+enter&lt;/kbd&gt; to commit the message, the editor commits it but it also goes into zen mode. Based on my `when` statement, it shouldn't do that since I am using `editorTextFocus`.</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26314</IssueID>
    <Title>Refactor when moving files</Title>
    <Description>The best feature you could have is to refactor when moving files in the explorer (out of the box) 
There is a extension (move ts) but it's buggy. 
It's a basic refactor thing, which to my surprise is not in visual code. 

So if i move a file from a folder to another, i want it's path reference to be updated automatically in the project. I tried this on a angular 2 project with .ts files and it did not work. I haven't tried with other files.

Thanks</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26283</IssueID>
    <Title>Debuging, error linking to file and row by lines number from output [DEBUG CONSOLE]</Title>
    <Description>I'm not happy with solutions to execute code, scripts, etc.

 

- [ ] I want sugest solution with linking to file and row lines number from output to place where is error for debuging this place (line). Something like hyberlink.

1. python
` File "e:\PYTHON\test.py", line 10, in TestFunction self.test= SuperTest(self)`
- **line 10** can be as hyperlink to row 10 in test.py file (e:\PYTHON\test.py or e:/PYTHON/test.py) 
 File "e:\PYTHON\test.py", [line 10](/PYTHON/test.py#10), in TestFunction self.test= SuperTest(self)

There is **vscode-code-runner** plugin, but it's far in pratice from the optimal solutions what exist on market and other editors. 
https://github.com/formulahendry/vscode-code-runner/issues/111

BTW all errors methods for output from debugers is little old and simple, eg. why the outputs lines are not numered as rows (1. error 2. bug 3. noFunction) which can be more usefull in social consulting, citating the row only as number of row/line and etc.
Eg. PyScripter for Python is old and not much changes and have nice solutions as upper, eg. can show current bug
https://sourceforge.net/projects/pyscripter/

Maybe in ServerSide coding is not special needed, but not sure.. I mind that output is serverd on the web browser front side.

- [ ] Let we imagine that in MVC exist some bugs.. I repair them in some files and want run again the main script.. must find this file and execute. In my good pratice is that ctr+E execute current file and ctr+shift+E execute the last file or file setted as main in all project. This can help fast reduce number of errors in output and stupid clicking process (expensive time and booring way).
- In VSC is ctr+shift+f5 but in debug mode. If I chaning file to repair and try run this.. again execute current file and must back to the main.py and find this.
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26030</IssueID>
    <Title>window.zoomLevel should affect the menus</Title>
    <Description>Everything is scaled by system DPI which is great. In constrast, everything except for the menus is also scaled by `window.zoomLevel`. It would be awesome to have consistency between menus and everything else.</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25912</IssueID>
    <Title>Search viewlet gives padding to selected/hovered results incorrectly</Title>
    <Description>VSCode 1.12 stable candidate

Notice the selected item and the hovered item have different right padding to the other items.

![image](https://cloud.githubusercontent.com/assets/2193314/25717393/27f411a2-30b7-11e7-8570-77e6685a1f74.png)
</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25824</IssueID>
    <Title>Filter folders for formatOnSave  </Title>
    <Description>We run a bigger project where we've recently added prettier and are using the `formatOnSave` option. However, we don't want to run the formatting process on files that are not part of a few directories.

Is it possible to add another option so I can configure a regex that will be tested against the filename before `formatOnSave` will be triggered? A glob would work as well.
</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25730</IssueID>
    <Title>gitignored items not excluded from search</Title>
    <Description>A possible bug in _use .gitignore to ignore search inside files and folders_ #78.

I have this workspace open in VSCode 1.11:

| Path            | Contents |
| --------------- | -------- |
| /.gitignore     | a.txt    |
| /a.txt          | aaa      |
| /dir/.gitignore | b.txt    |
| /dir/b.txt      | aaa      |

Search for "aaa" with "Use Ignore Files" enabled yields this:

![image](https://cloud.githubusercontent.com/assets/101152/25580641/c4192f68-2e82-11e7-9546-2f348f144c8c.png)

These two search results shouldn't show up, should they? I've tried this on a workspace where Git repo actually exists (`.git` present) and where it doesn't with the same result.

Repro project: [gitignoresearch.zip](https://github.com/Microsoft/vscode/files/967908/gitignoresearch.zip)
</Description>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25710</IssueID>
    <Title>Does not kill processes spawned by plugins, even after uninstall</Title>
    <Description>- VSCode Version: Version 1.11.2 (1.11.2)
- OS Version: OSX

Steps to Reproduce:

1. Flow running? No

        $ ps aux | grep flow
            36458   0.0  0.0  2433828    792 s002  S+    3:58PM   0:00.00 grep flow

2. `ext install vscode-flow-ide`

3. Flow running? Yes. Ok.

        $ ps aux | grep flow
        36745  77.2  5.5 27533024 930788   ??  R     4:01PM   1:10.21 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36896  75.6  2.9 27071692 486060   ??  R     4:03PM   0:23.35 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37162  74.8  1.5 26837004 249920   ??  R     4:03PM   0:14.13 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36660  67.3 26.2 36228108 4401732   ??  R     4:00PM   2:06.29 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36508   0.0  0.2 26673176  27236   ??  Ss    3:58PM   0:02.10 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37230   0.0  0.0  2432804    776 s002  S+    4:03PM   0:00.00 grep flow
        36514   0.0  0.0  2496456   2708   ??  S     3:58PM   0:00.92 ./node_modules/flow-bin/vendor/flow
        36512   0.0  0.0 26594388    224   ??  S     3:58PM   0:00.00 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36511   0.0  0.0 26594388    388   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36510   0.0  0.0 26594388    420   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36509   0.0  0.0 26594388    400   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .

4. Quit VSCode. Flow running? Yes. Not ok.

        $ ps aux | grep flow
        36745  77.2  5.5 27533024 930788   ??  R     4:01PM   1:10.21 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36896  75.6  2.9 27071692 486060   ??  R     4:03PM   0:23.35 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37162  74.8  1.5 26837004 249920   ??  R     4:03PM   0:14.13 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36660  67.3 26.2 36228108 4401732   ??  R     4:00PM   2:06.29 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36508   0.0  0.2 26673176  27236   ??  Ss    3:58PM   0:02.10 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37230   0.0  0.0  2432804    776 s002  S+    4:03PM   0:00.00 grep flow
        36514   0.0  0.0  2496456   2708   ??  S     3:58PM   0:00.92 ./node_modules/flow-bin/vendor/flow
        36512   0.0  0.0 26594388    224   ??  S     3:58PM   0:00.00 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36511   0.0  0.0 26594388    388   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36510   0.0  0.0 26594388    420   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36509   0.0  0.0 26594388    400   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .

5. Uninstall extension
6. Quit VSCode
7. Flow running? Yes. Not ok.

        $ ps aux | grep flow
        36745  77.2  5.5 27533024 930788   ??  R     4:01PM   1:10.21 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36896  75.6  2.9 27071692 486060   ??  R     4:03PM   0:23.35 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37162  74.8  1.5 26837004 249920   ??  R     4:03PM   0:14.13 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36660  67.3 26.2 36228108 4401732   ??  R     4:00PM   2:06.29 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36508   0.0  0.2 26673176  27236   ??  Ss    3:58PM   0:02.10 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        37230   0.0  0.0  2432804    776 s002  S+    4:03PM   0:00.00 grep flow
        36514   0.0  0.0  2496456   2708   ??  S     3:58PM   0:00.92 ./node_modules/flow-bin/vendor/flow
        36512   0.0  0.0 26594388    224   ??  S     3:58PM   0:00.00 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36511   0.0  0.0 26594388    388   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36510   0.0  0.0 26594388    420   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .
        36509   0.0  0.0 26594388    400   ??  S     3:58PM   0:00.02 ./node_modules/flow-bin/vendor/flow start --temp-dir /private/tmp/flow .

8. `pkill -9 -f 'flow'` peace at last

I'm not sure if this a problem with the specific extension, but VSCode should not allow processes spawned by extensions to stay running after the editor has quit. I almost completely locked up my computer trying out several Flowtype extensions, not realizing they were all spawning background tasks that didn't die.

I also now have no idea what other background processes VSCode has left open from extensions. 
</Description>
    <CreatedDate>30/04/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25340</IssueID>
    <Title>Feature Request: Doc Block Annotations (vscode / Typescript)</Title>
    <Description>- VSCode Version: all
- OS Version: all

Something like this:
```TS
/**
 * The long description...
 * Second line etc...
 *
 * @deprecated
 * @default 10
 * @example 125
 */
let val: number
```

Become this in the vscode autocompletion:
&lt;img width="478" alt="bildschirmfoto 2017-04-25 um 23 18 45" src="https://cloud.githubusercontent.com/assets/1138623/25408234/9ee787c2-2a0d-11e7-9b0e-99128c254369.png"&gt;
&lt;img width="359" alt="bildschirmfoto 2017-04-25 um 23 18 39" src="https://cloud.githubusercontent.com/assets/1138623/25408235/9eea19b0-2a0d-11e7-941f-60f93f8b5b1a.png"&gt;

It would be great if some of them get supported and displayed in a logical position.
The autocompletion of vscode is the best outside for the web but unfortunately slightly naked.</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25191</IssueID>
    <Title>Prominently indicate whether an editor or the panel has focus</Title>
    <Description>This is a feature request.

I keep catching myself starting to type a terminal command while it's the editor that currently has focus. When the focus is on the sidebar, this is easy to see — for example, selected file is white-on-blue, or the search box has blue border. I think there should be a similarly prominent visual indication of focus being on an editor or on the bottom panel.

PS To anyone having the same issue — I think setting

    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "block"

 should mitigate this a bit.</Description>
    <CreatedDate>22/04/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24913</IssueID>
    <Title>Feature Request: Open Code from stdout</Title>
    <Description>I think there could be some interesting uses for being able to populate the contents of a new Untitled document from stdout via command-line. I frequently dump data from a process to a file and open it in Code, but that's usually not a file I want to save, I just want to view the contents in Code. This functionality would save me several steps.

For example:
```powershell
PS C:\&gt; '{"key": "value"}' | code
```
Would start up Code like this.

![code_2017-04-17_16-27-18](https://cloud.githubusercontent.com/assets/114173/25103489/bf83351e-238a-11e7-932b-6791f6d61264.png)

</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24870</IssueID>
    <Title>VS Code disable fullscreen zen mode animation</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: macOS Sierra 10.12.4

Sublime Text has an option that disables the animation when going full screen it's called `use_simple_full_screen` i tried to search for something similar in vs code but didn't find anything. 

Is it possible to have the same thing, not sure if this is the right place to ask something like this, but would someone be kind enough to answer me?</Description>
    <CreatedDate>16/04/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24574</IssueID>
    <Title>Implement support for syncing all settings</Title>
    <Description>Please implement a way to sync settings (Theme, Keyboard bindings, installed extensions etc.) across multiple computers without having to use 3rd party extensions or hacks.</Description>
    <CreatedDate>12/04/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24359</IssueID>
    <Title>Allow any tab to be moved across instances</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.1
- OS Version: CentOS Linux release 7.3.1611

Steps to Reproduce:

1. Open 2 VSCode windows
2. In the first vscode window go to Help -&gt; Welcome
3. Try to move (drag and drop) the "Welcome" tab to the second window
4. Nothing happens, unlike editable documents which can be moved using the same usage pattern, this affects any kind of preview tab

Closes https://github.com/joaompinto/asciidoctor-vscode/issues/14 , opening as a vscode issue, reproducing  without 3rd party extensions involved.</Description>
    <CreatedDate>09/04/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24109</IssueID>
    <Title>File icons for default languages outside of VS Code (icons in Finder)</Title>
    <Description>## Description

I would like to be able to distinguish my Objective-C .h, .m, Markdown, and Swift (and any other programming/markup language) files from one another in the Finder when VS Code is set to be the default app for opening these files. Currently all the files show the same VS Code document icon. When files are set to be opened by Xcode by default the file icons are different based on their type. Additionally it would be nice if external packages could dictate different images for different file types.

## Steps to Reproduce

Set VS Code to be the default app for opening Objective-C and Swift files.
View file icons in Finder
#### Expected behavior: [What you expected to happen]

File icons are different based on the file type.

#### Actual behavior: [What actually happened]

File icons are all the same VS Code document icon.
</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24095</IssueID>
    <Title>Backspace between the beginning of the line and the first non-space character should erase a "tabful" of spaces</Title>
    <Description>- VSCode Version: 1.12.0
- OS Version: Windows 10

This is something Sublime does, and I find it very useful.

Say you have tabs set to 4 spaces - if you press tab, the editor will behave as if you have added a tab, but in reality it will **add** spaces. The opposite should also be true - if you hit backspace, it should **remove** enough spaces to make it look like you have deleted a tab.

Example (• = space, | = tab stop, _ = cursor)

    ••••|••_•let x: string;

When hitting backspace, the editor should simply erase all the four spaces that make up the "tab", both before and after the cursor

    ••••let x: string;

That's only important at the beginning of a line for me (there may be other use cases) and of course a preference setting to control would be perfectly fine. Thanks</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24068</IssueID>
    <Title>[Feature Request] Support for low-latency remote development</Title>
    <Description>Hi,

Common scenario is to have my workstation in my office, but when travelling or working from home, I would like to have a low latency editing experience. Today I do it through RDP what is quite slow...

Facebook engineers seem to be pretty happy with Nuclide approach:
https://nuclide.io/docs/features/remote/

Thanks</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23961</IssueID>
    <Title>Allow string to be passed to packge.json's configurationSnippets to execute a command like initialConfigurations</Title>
    <Description>For the C/C++ extension, we would like to dynamically create configuration snippets like initial configurations. Depending on the platform, we would like to not display certain configurations. 

@pieandcakes </Description>
    <CreatedDate>05/04/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23899</IssueID>
    <Title>COntrol-C kills vscode</Title>
    <Description>This just started today, but is annoying. When I run any node application in my terminal on Windows, and kill it with control-c it kills VSCode as well.  This only occurs if I opened VSCode from the command line, which I usually do.

Version: 1.10.2

If you need more info, let me know how to obtain and I will share.</Description>
    <CreatedDate>04/04/2017</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23887</IssueID>
    <Title>Add a setting to stop grouping the errors by file</Title>
    <Description>I failed at finding such a setting, but it would be quite nice to have.

Explanation: When building a c++ program, (real) template errors may cause a huge amount of (false) errors. In this context, we need to have the errors listed in the order they appear in the build output, to start by fixing the first one.

I would be pleased to have your opinion.</Description>
    <CreatedDate>04/04/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23885</IssueID>
    <Title>Alert before quit when no files in workspace</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2 
- OS Version: macOS Sierra

Steps to Reproduce:

When I close all my files in my workspace, accidentally I pressed `⌘+W` when the last file has been closed. It makes my vscode quit.
How about you add confirmation before quitting when no files in workspace and accidentally user pressed `⌘+W`</Description>
    <CreatedDate>04/04/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23649</IssueID>
    <Title>Opening a new window should read the user environment all over again</Title>
    <Description>From the discussion in #10876 </Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23614</IssueID>
    <Title>Keybindings: canceling popup context menu causes second menu to appear</Title>
    <Description>OS: Windows 7
Insiders 3-29

- select key binding line with keyboard
- press Shift-F10
- popup menu appears nearby
- press Escape
- first menu disappears
- second menu appears away from line
- this can be closed by Escape
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23602</IssueID>
    <Title>Welcome interface overview points at the wrong spot if the side bar is on the right</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (d98a518c5485bd7a47c70f5b3783f70efa5edcd6, 2017-03-29T06:05:18.022Z)
- OS Version: Darwin x64 16.5.0

![image](https://cloud.githubusercontent.com/assets/641685/24470272/5e7959ae-148c-11e7-8147-15b4f26d5a6c.png)
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23324</IssueID>
    <Title>Add an configure options let us disable GPU hard ware accelerate</Title>
    <Description>RFC: Add an configure options let us disable GPU hard ware accelerate

while running vscode inside virtual machine, or VPS, it does not has a modern GPU. so we should disable GPU hardware accelerate for VSCode.

Or VSCode very slow .

would you please provided us an option / configure to control it?</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22705</IssueID>
    <Title>ftp graphical</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: win7

Can we have graphical solution, for ftp &amp; sftp.
Just wanted to avoid command line.
</Description>
    <CreatedDate>16/03/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22576</IssueID>
    <Title>Add settings with GUI</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Steps to Reproduce:

1. Add settings with GUI for VS Code
</Description>
    <CreatedDate>14/03/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22384</IssueID>
    <Title>Open the html in either Finder or specific Browser</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:Version 1.9.1 (1.9.1)
- OS Version:10.11.5

Steps to Reproduce:

There is currently no option to open the html file in Finder or a browser directly from VSCode. You have to Reveal the item in Finder and then open it from there. Would be handy to have a open in browser feature directly.</Description>
    <CreatedDate>10/03/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22104</IssueID>
    <Title>Output console error catch (feature)</Title>
    <Description>Hello there, will be nice to have an error handler from output console; I mean, if I want to compile a file with gcc/g++ or make (from task.json) and during compilation there are some errors, will be great to (Ctrl +) click on the error showed on output console of Visual Studio Code and to be redirected to specified file at specified line number and column number (like in Eclipse).

The format error string showed on the output console is like (in python it is almost the same) :
fileName:line number:column number: error: description error

Just an error example:
file.cpp:630:6: error: expected '}' before 'else'

What do you think? I think this feature can improve a lot the productivity.

Cheers
Paolo
</Description>
    <CreatedDate>06/03/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21953</IssueID>
    <Title>Window Title Bar does not change color when inactive</Title>
    <Description>- VSCode Version: Code 1.10.1 (653f8733dd5a5c43d66d7168b4701f94d72b62e5, 2017-03-02T00:33:15.706Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.11.0|
|vscode-perforce|bam|1.1.0|
|path-intellisense|christian-kohler|1.2.0|
|regex|chrmarti|0.0.7|
|python|donjayamanne|0.5.9|
|an-old-hope-theme-vscode|dustinsanders|2.0.0|
|code-runner|formulahendry|0.6.12|
|theme-ubuntu-style|formulahendry|0.0.2|
|vscode-conemu|ipatalas|1.0.1|
|vscode-simple-icons|LaurentTreguier|0.10.1|
|vscode-todo-parser|minhthai|1.8.7|
|cpptools|ms-vscode|0.10.2|
|startanyshell|remcoros|0.3.1|
|todotasks|sandy081|0.4.0|
|Spell|seanmcbreen|0.9.1|
|theme-notepadplusplusremixed|sh4dow|1.0.2|
|theme-oceanic-next-italic|SintrumIT|1.1.14|
|slack|sozercan|0.0.13|
|guides|spywhere|0.7.0|
|code-spell-checker|streetsidesoftware|0.17.2|
|spellchecker|swyphcosmo|1.2.9|
|ayu|teabyii|0.2.1|
|theme-panda|tinkertrain|0.5.0|
|dark-plus-material|vangware|0.2.4|
|vsc-tasks|walli|0.9.0|
|Revisionmarks|yuhuagou|0.1.0|;


---

Steps to Reproduce:

1. Windows 7. Control Panel\All Control Panel Items\Personalization : Windows Classic theme
2. Open VS code
3. Change to a different window
**ISSUE**: The Title Bar of the VS Code window does not change color to show that it is not active.
Effect: The user cannot be sure which one is the active window. Annoying.

</Description>
    <CreatedDate>04/03/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21818</IssueID>
    <Title>Render whitespaces  inside the selected block.</Title>
    <Description>It's not intrusive and it's quite useful thing.</Description>
    <CreatedDate>02/03/2017</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21607</IssueID>
    <Title>Add bread crumbs support</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (40fecfaa77f01672e8a147be71f6f7ccb9cf8a12, 2017-02-27T14:09:29.088Z)
- OS Version: Darwin x64 16.5.0

Add bread crumbs support like jetbrain idea IDE or chrome element inspects!
</Description>
    <CreatedDate>01/03/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20556</IssueID>
    <Title>VS Code should enable navigation for more file/line formats</Title>
    <Description>- VSCode Version: 1.10.0-insiders

**Issue**: VS Code has a filter that runs over text sent to the debug console which enables navigation if the text looks like '\&lt;filePath\&gt;:\&lt;line\&gt;:\&lt;column\&gt;'. But I am not aware of a way (and please correct me if I am  wrong) to add in more 'file/line/column' scrappers. .NET Core internally will sometimes dump stack traces to the output stream in its format. It would be nice if they were navigable, but they are currently not.

**Trivial example to reproduce the problem**:
Run the following code which will dump two string to the debug console:
```
   at Program.SleepThread(Object obj) in d:\proj\clicon\Program.cs:line 23
   at Program.SleepThread(Object obj) in d:\proj\clicon\Program.cs:23:0
```

**Expected Result**
Both links should be navigable

**Actual Result**
Only the second (artificial) link is.

Trivial example to show the problem:
```csharp
            try
            {
                throw new Exception("My example exception");
            }
            catch (Exception e)
            {
                Debug.WriteLine(e.StackTrace);
                Debug.WriteLine(e.StackTrace.Replace("line ", "") + ":0");
            }
```
</Description>
    <CreatedDate>13/02/2017</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20412</IssueID>
    <Title>Feature Request: Support search operators in Problems tab filter field</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1
- OS Version: MacOS &amp; Windows 7

Steps to Reproduce:

1. Open a codebase with a large number of **errors** and **warnings** in the source files
2. Open the Problems panel
3. Type the keyword _"error"_ in the filter input to show only **errors** and filter out **warnings**

Current behaviour:

- Any **warnings** which contain the word _"error"_ in their message also appear alongside **errors**

Desired behaviour:

- The possibility to categorically show only one type of problem. This could be done, for example, with search operators like _"type:error"_, &amp;c.

Related issues:

- #8305
</Description>
    <CreatedDate>10/02/2017</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20256</IssueID>
    <Title>addSelectionToNextFindMatch doesn't work with multiple cursors</Title>
    <Description>- VSCode Version: 1.9.0
- OS Version: Windows 10

Steps to Reproduce:

1. Have three rows with a string in them.
2. hold alt, click before the first character of every word.
3. activate addSelectionToNextFindMatch, I have sublime-keymap, so that's ctrl+d for me.
4. only the last word will be selected.
</Description>
    <CreatedDate>09/02/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19642</IssueID>
    <Title>Allow per-language settings for addons.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.9.0-insider (fcac9b686abe4292e69a774f61c8c4ce17768bf5)
- OS Version: Arch Linux

Right now per-language settings work for editor settings only, it would be really nice to be able to control addons too.

For example I use tslint for both JS and TS, however I'd like to enable `"tslint.autoFixOnSave": true` for typescript files only.</Description>
    <CreatedDate>31/01/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19259</IssueID>
    <Title>VS Code cannot load extension with prerelease version if earlier, non-prerelease version is installed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: VS Code Stable 1.8.1 and VS Code Insiders 1.9.0
- OS Version: Windows 10 Anniversary

Steps to Reproduce:

1. Install the PowerShell extension from the Marketplace
2. Install this VSIX using `code --install-extension filename.vsix`: https://ci.appveyor.com/api/buildjobs/kqjgav8i2q1nowlq/artifacts/PowerShell-0.9.1-insiders-17.vsix
3. Start VS Code and open the Extensions pane
4. Observe that the new extension is recognized but it always shows the "Reload" button:

![image](https://cloud.githubusercontent.com/assets/79405/22262038/2943c052-e224-11e6-8694-814747e5f07c.png)

You can also see that this message is in the dev console:

```
Overwriting extension C:/Users/daviwil/.vscode-insiders/extensions/ms-vscode.PowerShell-0.9.1-insiders-16 with C:/Users/daviwil/.vscode-insiders/extensions/ms-vscode.PowerShell-0.9.0.
```

If you uninstall both extensions and then *only* install the "insiders" extension, everything works fine.  Maybe the version comparison code for prerelease extensions isn't respecting the greater patch version digit?</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18974</IssueID>
    <Title>Add sticky header for programming langs</Title>
    <Description>From emacs' sticky func mode:

&gt; [Displays a header line that shows the declaration line of the function or tag on the topmost line in the text area. This allows you to keep that declaration line in view at all times, even if it is scrolls off the “top” of the screen.](https://www.gnu.org/software/emacs/manual/html_node/semantic/Sticky-Func-Mode.html)

I rely on this mode heavily. Jetbrains' IDEs like Pycharm and IntelliJ also have similar functionalities. I hope you can add this to vscode:D</Description>
    <CreatedDate>21/01/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18709</IssueID>
    <Title>Create environment variable within user/workspace settings</Title>
    <Description>It would be great if you could define variables (and/or environment variables) within the user/workspace settings.

Example: 

```json
{
    "variables": {
        "MY_VAR": "foo"
    },
    "environment_variables": {
        "MY_ENV_VAR": "bar"
    },

    "some_first_setting": "${var.MY_VAR}",
    "some_second_setting": "${env.MY_ENV_VAR}"
}
```

I have the same path typed multiple times in my settings, and if I wish to change it, I have to change the path in multiple places. This feature request could enable more complex settings as you could use paths based on variables.

I'm also keeping my fingers crossed that  [settings overrides](https://github.com/Microsoft/vscode/issues/1587#issuecomment-273397301) will be implemented and that both such overrides as well as defining variables could enable something like this:

```json
{

    "environment_variables": {
        "CONDAENVS": "${workspaceRoot}../condaenvs"
    },

    "windows": {
        "python.pythonPath": "${env.CONDAENVS}/env_win/",
        "window.zoomLevel": -0.001
    },
    "osx": {
        "python.pythonPath": "${env.CONDAENVS}/env_osx/"
    }
}
```

Note: the `python.pythonPath` setting is part of the [PythonVSCode extension](https://github.com/DonJayamanne/pythonVSCode) and here's my feature request to have this extension support python settings based on platform: https://github.com/DonJayamanne/pythonVSCode/issues/644</Description>
    <CreatedDate>18/01/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18456</IssueID>
    <Title>Feature request: Search in folder of currently open file/buffer</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|read-only-indicator|alefragnani|0.4.0|
|alignment|annsk|0.3.0|
|bettertab|arenl|1.0.1|
|Doxygen|bbenoist|1.0.0|
|python|donjayamanne|0.5.5|
|EditorConfig|EditorConfig|0.3.4|
|vscode-great-icons|emmanuelbeziat|1.1.37|
|matlab|Gimly81|0.4.0|
|status-bar-tasks|GuardRex|0.1.2|
|vscode-dimmer|hoovercj|2.1.0|
|docthis|joelday|0.3.9|
|cpptools|ms-vscode|0.9.3|
|vscode-clearcase|OpenNingia|1.4.1|
|vscode-icons|robertohuertasm|6.0.0|
|theme-cyanicpastels|SamuelLampa|0.0.9|
|indenticator|SirTori|0.2.1|
|vscode-hexdump|slevesque|1.1.4|
|code-spell-checker|streetsidesoftware|0.14.3|
|comment-snippets|Tobiah|0.2.0|
|dark-plus-material|vangware|0.1.4|
|change-case|wmaurer|1.0.0|
|highlight-trailing-white-spaces|ybaumes|0.0.2|

---

Steps to Reproduce:

1. Press Crtl+Shft+F.
2. Enter search term.
3. Search only in the directory (+ subdirectories if required) of the currently open file.

Available for example in SlickEdit under "Find in Files" select "&lt;Current Buffer Directory&gt;" in "Look in:".
Could it be handled in "files to include" by have an extra option button next to regular expressions?
Similarly would may be useful to exclude the current directory.
Could it be an extension of the regular expression syntax by having a value that expands to the current directory?</Description>
    <CreatedDate>12/01/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18421</IssueID>
    <Title>.</Title>
    <Description>.</Description>
    <CreatedDate>11/01/2017</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18381</IssueID>
    <Title>Go to file - allow to type folder name after file name for better narrowing of many results</Title>
    <Description>User typed 'types':

Current view:
![image](https://cloud.githubusercontent.com/assets/1723815/21982246/69a50c9e-dbb9-11e6-88a1-24b3f82ba261.png)


Notice how there are multiple files with the same name and then there is useful folder name after the file name to distinguish the files - but as soon as user starts typing folder name - hoping that it will filter the values - it returns empty result:

![image](https://cloud.githubusercontent.com/assets/1723815/21830794/43a29d86-d76d-11e6-84ba-285216fd7724.png)

It would be very helpful if `types comm` would return:
![image](https://cloud.githubusercontent.com/assets/1723815/21830855/bcd24616-d76d-11e6-8275-4d659b1d6899.png)

</Description>
    <CreatedDate>11/01/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18369</IssueID>
    <Title>Tasks::problemMatcher should highlight problems in output log and make files clickable</Title>
    <Description>I tried everything, but I'm not able to make vs-code to highlight problems in output log and make that problems clickable (click on file that will bring me to the file/line/column of the problem).

I know I can press Ctrl+Shift+M and see all problems, but that's kinda something I don't want to do if I already see the output log. I want to see something Visual Studio does when compiling the project, for example...</Description>
    <CreatedDate>10/01/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17972</IssueID>
    <Title>Ability to undock views and panels to new window</Title>
    <Description>I usually move debug and compile output to other monitors.</Description>
    <CreatedDate>31/12/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17854</IssueID>
    <Title>Allow to configure the entries of the editor toolbar</Title>
    <Description>- VSCode Version: 1.9.0-insider
- OS Version: OSX El Capitan 10.11.4

Steps to Reproduce:

1. Open a file when the editor is open

&lt;img width="842" alt="screenshot 2016-12-27 at 13 16 08" src="https://cloud.githubusercontent.com/assets/10364894/21500496/4f25ce12-cc37-11e6-8fb1-5661571306c5.png"&gt;

I personally never use these buttons and they take up valuable room for tabs.

</Description>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17814</IssueID>
    <Title>Editor viewport should scroll when multiple cursors are going off screen</Title>
    <Description>- VSCode Version: Code - Insiders 1.9.0-insider (04f541160e0d41be95df9a964b1b570aec549157, 2016-12-20T07:18:37.536Z)
- OS Version: Linux x64 4.8.0-28-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.1.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.3.0|
|vscode-eslint|dbaeumer|1.2.2|
|python|donjayamanne|0.5.5|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|typescript-javascript-grammar|ms-vscode|0.0.13|
|sass-indented|robinbentley|1.3.0|
|dark-plus-material|vangware|0.1.4|

---

Steps to Reproduce:

1. Open a file with a lot of text
2. Add a cursor below the current line
3. Press down until the cursor(s) are off the screen

It would make a lot of sense for the viewport to follow the cursors in this case as both cursors were in the viewport previously.</Description>
    <CreatedDate>25/12/2016</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17775</IssueID>
    <Title>Make the space for tabs configurable (min, max, normal)</Title>
    <Description>When i am using vscode with file icons activated on my 13' Macbook, i quickly get a problem with the number of tabs actually visibles.

&lt;img width="1381" alt="capture d ecran 2016-12-23 14 16 08" src="https://cloud.githubusercontent.com/assets/5599375/21454811/bf9ae4f8-c91b-11e6-8f30-0e2d9bd52e54.png"&gt;

Especially for long file names in my project :

&lt;img width="1084" alt="capture d ecran 2016-12-23 14 29 54" src="https://cloud.githubusercontent.com/assets/5599375/21454896/54b4b9d8-c91c-11e6-9ce6-4ffaa2c435e9.png"&gt;

This is annoying for angular projects with every file named "file.**component**.ts" or "file.**service**.ts".


What i suggest is two things : 

# **First**

it could be great to adding a config in settings.json to allow the display of tabs another potential way, here is a suggestion when the screen is not split :

&lt;img width="1384" alt="capture d ecran 2016-12-23 14 11 01" src="https://cloud.githubusercontent.com/assets/5599375/21455614/f9e0b7e0-c921-11e6-85bf-4f9ce1725612.png"&gt;

By moving this bar just behind after the code of the title bar : 

&lt;img width="1385" alt="capture d ecran 2016-12-23 14 06 02" src="https://cloud.githubusercontent.com/assets/5599375/21454835/e9d6ace8-c91b-11e6-8365-1df8791ddae8.png"&gt;

I could be awesome, and i'm not sur we can do thing like that with an extension.

# **Second**

It could be possible to add a filter on text size for tabs, or a way to limit the size with a [css ellipsis](https://css-tricks.com/snippets/css/truncate-string-with-ellipsis/).

Thanks to consider.

David B.
</Description>
    <CreatedDate>23/12/2016</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17719</IssueID>
    <Title>Class View like VS is very useful</Title>
    <Description>No feature support.
</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17668</IssueID>
    <Title>Allow variables to be displayed in a different base during debugging</Title>
    <Description>Integer variables are always displayed in decimal format in Locals, Watches and on hover.

It would be nice to have a context menu option to allow the values to be displayed in binary, octal or hexadecimal format, perhaps with a "debug.displayBase" option for a default configuration value.</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17564</IssueID>
    <Title>Implement copy and paste of whole files across workspaces</Title>
    <Description>Platform: `OSX 10.11.6`
Version of Code: `1.8.1`

Often when I bootstrap new projects, I like to grab existing files like `.eslintrc` and `.gitignore` from other projects. I've noticed that I cannot right-click a file in one workspace, and paste it into a different directory tree in another workspace.

It would be great to have a cut, copy, and pasting of files across the clipboard in a future update. Particularly because getting hidden files to show up in OSX Finder is a pain.</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17532</IssueID>
    <Title>UX about inline traffic light</Title>
    <Description>I'm thinking about picking up #12628, but would like to get some input from the UX team, so we can get the design right.

## Current State

![](https://cloud.githubusercontent.com/assets/49038/20053382/88475732-a4d8-11e6-97aa-80eb257c5264.png)

However, this design doesn't work when activitybar is hidden or in the right.

## Electron's limitation

Electron allows one of the four following styles, but they can't be changed at runtime. Would need a restart of VSCode to use another style.

![image](https://cloud.githubusercontent.com/assets/4033249/21313907/4580a386-c62f-11e6-9984-a08284442a28.png)

## Points of Discussion

### To make the inline traffic lights work, there are three options:

1. When inlining traffic lights into activitybar, lock activitybar so user can't hide it or move it to the right.

2. Tweak the sidebar and tabbar, so they could contain the traffic lights. Chrome-style tabbar is achievable:

    ![](https://cloud.githubusercontent.com/assets/900690/19407942/0deedfac-92b1-11e6-9a5c-ae38a3a3b28b.png)

    **but I can't find a good way to let sidebar contain traffic lights**. Haven't seen other OS X app putting traffic light in sidebar either.

3. Instead of inlining traffic lights into activitybar, we inline the traffic lights into a **custom titlebar**. This is how many macOS apps are designed, like Mail, iTunes and Safari:

    ![image](https://cloud.githubusercontent.com/assets/4033249/21311564/c7c6dc32-c622-11e6-83f5-8f4188b85805.png)

1 is easy to implement. 3 feels right design-wise. 2 probably isn't worth pursuing, as it involves a lot effort for a not-so-good design.

### Do we also add such a feature for Windows?

- If so, I think inlining traffic lights into custom titlebar is better, as the "traffic lights" are to the right in Windows. Borrowing @be5invis's mockups...

    This looks natural:

    ![image](https://cloud.githubusercontent.com/assets/4033249/21310986/f094e698-c61f-11e6-978c-7457d924e882.png)

    Whereas this one looks odd, and doesn't account for the case when both activitybar and sidebar are hidden. It also leaves no space for menu items.

    ![image](https://cloud.githubusercontent.com/assets/4033249/21311076/4dc9b8d4-c620-11e6-920d-a48a96eb90b2.png)

## My thoughts

Overall, I feel 3 is better than 1 in terms of usability and cross-platform design consistency.

It seems @bpasero already made a custom titlebar for macOS. If we choose design 3, I can try to make `titleBarStyle: custom` for Windows. If we choose to push the original idea forward, I want to get some input from the UX team for the usability concerns.

/cc @bpasero @stevencl @bgashler1
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17373</IssueID>
    <Title>Tab double click to maximize editor of the tab</Title>
    <Description>- VSCode Version: 1.8
- OS Version: Mac OS Sierra

Hello,

if I'm not wrong, by double clicking the tab it pins the file . Personally, I would prefer to expand the file editor / collapsing the menu on the left. It would be same behaviour as the File Explorer button on the top left. Is it possible? Or, can people customize the tab double click? 
People could set a pin option on each tab and the double click expands the file editor window.
Or, if simpler, set the option in a right click context menu on each tab. Isn't it?

Thanks a lot

Matteo
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17278</IssueID>
    <Title>Accessibility:MAS36: Not able to navigate to the Menu Bar using Tab key.</Title>
    <Description>VS Code Version: 1.6.1
OS Version:1607

**Steps to Reproduce:**
1.Open visual studio code editor.
2.Using "Tab", key try to navigate to the "Menu Bar"

**Expected result:**
User should be able to navigate to all the "Menu Bar" using Tab key

**Actual Result:**
User is not able to navigate to the Menu bar options using "Tab" key.

**User Impact:**
User might wouldn't able to Navigate to Menu Bar without using short cut keys

**Attachments:**
![not able to navigate to the menu bar using tab key](https://cloud.githubusercontent.com/assets/22956130/21217759/dd0e0144-c2d3-11e6-9592-63ea5d51ca66.jpg)

</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17148</IssueID>
    <Title>Add file preview while searching.</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: macOS Sierra

Sublime Text shows file previews live when fuzzy searching. It'd be cool to have this feature in VSCode.

1. Press CMD+P to search for files.
2. While using the arrow keys to move through the entries, the current entry should be visible as a preview tab.

Cheers
</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16992</IssueID>
    <Title>Linux: Flickering when starting to drag editor tab</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (40243d1e01f426f54670f3dbaa6b77d18469310d, 2016-12-09T12:05:39.439Z)
- OS Version: Linux x64 3.13.0-91-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|regex|chrmarti|0.0.4|
|python|donjayamanne|0.3.21|
|cpptools|ms-vscode|0.9.2|

Verifying #14470. There is still some flickering at the start of the drag:
![linux-tab-flicker](https://cloud.githubusercontent.com/assets/9205389/21057898/5475d150-bdf0-11e6-9eb3-b37fbd3fcce0.gif)
</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16775</IssueID>
    <Title>Option to trigger copy setting action via keyboard</Title>
    <Description>Testing #16530

- While using `Enter` to navigate the filtered settings, there is no way to trigger the "copy" action using just keyboard. Can we use arrow keys to navigate instead and use Enter to trigger the "copy" action?</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16392</IssueID>
    <Title>Add enum option to show whitespaces inside selection only</Title>
    <Description>So far `editor.renderWhitespace` accepts the following properties:

- all
- boundary
- none

I suggest we add a new option `selection` to only show whitespaces inside the current selected block of text. This can help conserving a readable code while getting insights when selecting a block of code.
</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16313</IssueID>
    <Title>[decorators] before/after decorators for empty lines</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Ubuntu 16.04.1 LTS

I would like to display github review comments as text-decorations in visible editors. Unfortunately the decorations are not shown for empty lines. Is there a reason to not display them in this case?
IMHO the before and after elements of the decorations should be visible.
</Description>
    <CreatedDate>01/12/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16278</IssueID>
    <Title>Alert messages covering the tab bar is just a bad idea</Title>
    <Description>I've been trying to switch to VS Code for a while, but one single annoyance makes me stop using it: any kind of error or informational message covers the tab bar, making me unable to do anything unless I dismiss it.  This could be a plugin announcing a new feature, or a plugin announcing that there is a warning.  For example, Unity projects always announce warnings when they build, so for every build, the tabs hide behind a message.

One possible solution: an icon appears in the status bar when errors appear. Clicking on it shows them. Clicking outside hides them. 

- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|theme-realgithub|NoHomey|1.0.4|
|material-icon-theme|PKief|1.0.3|
|theme-dreamweaverweb|Persephona|1.5.4|
|unity-tools|Tobiah|0.1.4|
|unity-debug|Unity|1.1.0|
|theme-onedark|azemoh|0.2.12|
|theme-ezekel|be5invis|0.1.1|
|theme-dracula|dracula-theme|1.2.5|
|theme-karyfoundation-themes|karyfoundation|5.2.0|
|quicksnippet|mousetraps|0.0.1|
|csharp|ms-vscode|1.4.1|
|theme-readable-material-darker|petemill|0.0.2|
|vscode-icons|robertohuertasm|4.0.4|</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15996</IssueID>
    <Title>Supported File Live Previews</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: macOS Sierra 10.12 Public Beta (16B2657)

My idea is to open files supported by the OS, VSC extensions, etc as a file in preview mode. For example, right clicking an html file then clicking "Open as Preview" will open a new tab as if its a file and show the contents in a simple frame. If you are wanting to see an example I've edited to look like the new feature I'm requesting, well here you go...

![](http://i.imgur.com/gUeMsUo.jpg)
![](http://i.imgur.com/Knt9UsA.jpg)

I'm sorry, I'm not the best at photoshopping but I did my best. This is kind of what I mean. If the file is being view without a workspace (alone as a single file), then there would be a button next to "Split view" at the top right near the exit button that will open the file as a preview file if it is supported by an extension, software, raw file view by OS or is supported by VSC. If the file you want to preview is in a workspace (currently open is a folder viewing workspace), then there would be an option to right click the file then "Open as Preview" or the same way you would open it as a singular file (without workspace). I tried my best to explain what I mean but if you are still having trouble understanding, just take a look at the images above. Please note that there is a reload button on the top right of the preview side of the second image, that will reload the preview to be updated with the code. A second idea (possibility) is a JavaScript Developer Console can be put below the preview with JavaScript errors, warnings and logs like Chrome does but that is optional.</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15890</IssueID>
    <Title>Intellisense and type checking in Embedded code in markdown</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Win 7

Unable to have completion and type checking on embedded typescript code in markdown
```markdown
    ```typescript
    import Person = require("Person");
    var person = new Person("My name");
    console.log(person.name)
    ```
```

It would be also a useful feature to be able to run embedded code 

</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15832</IssueID>
    <Title>Keep separate sizes for each viewlet (helps to read extensions better)</Title>
    <Description>This is an simple **Enhancement proposal**.

The current behaviour for all the panel tabs (explorer / git / extension etc ...) is to keep its size permanently whatever the active tab is. But it's very annoying when you like extensions.

Here is a small workflow example :

So, when i'm working on my files on **explorer** i give the tab a reasonable small size to maximise my workspace size : 

&lt;img width="267" alt="capture d ecran 2016-11-21 a 19 57 08" src="https://cloud.githubusercontent.com/assets/5599375/20496315/f7d68c4c-b024-11e6-9fe0-0239a6956425.png"&gt;

Then, if i go to the "Extension" tab, the same size is preserved (current default behaviour) : 

&lt;img width="258" alt="capture d ecran 2016-11-21 a 19 57 21" src="https://cloud.githubusercontent.com/assets/5599375/20496339/11c4d0aa-b025-11e6-90b7-6a861875fab1.png"&gt;

But it hide all the most important things i want to know about extensions including icon, notes, version and for most cases, number of downloads. Which is a bunch of needed informations to judge the popularity of an extension.
At this moment in my workflow, i manually size up the tab to obtains this, which is very more comfortable and pretty : 

&lt;img width="435" alt="capture d ecran 2016-11-21 a 19 56 48" src="https://cloud.githubusercontent.com/assets/5599375/20496392/46ca8f92-b025-11e6-9100-7fd5dfbf6c22.png"&gt;

When i'm done this my extensions, i get back to my "explorer" tab, and get this result with so many space lost : 

&lt;img width="468" alt="capture d ecran 2016-11-21 a 19 56 38" src="https://cloud.githubusercontent.com/assets/5599375/20496519/cf2a4f58-b025-11e6-9d18-3cf0f53e7de0.png"&gt;

And i have to reduce the size again.
A good alternative for that could be to save the tab sizes, at least for the extension tab.

It's not a big deal, but small details makes great editors ;)

David B.</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15665</IssueID>
    <Title>Add support for multiple windows (docking panels) for the bottom panel</Title>
    <Description>I moved to Code from Webstorm and never regreted it, VSCode is just great, however I miss one thing which was amazing in WS and it was the support for multiple panels or tabs docked at the bottom of the screen, for example in vscode if I am debugging and have the debugging console open, I cannot see the terminal or some other useful windows that could be displayed in that area of the screen at the same time. It would be awesome to have tabs or the possibility to dock panels at the bottom to make easier switching among the different tools available.  In fact, the ability to dock panels, I think, is what made Visual Studio amazing and is a feature that other editors like Atom, Brackets or Sublime totally lack. 

Hopefully this is something doable and many others like the idea.  </Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15405</IssueID>
    <Title>Support for empty editor groups</Title>
    <Description>- VSCode Version: 1.7.1

Really annoying thing: I want to open new file [to the side](https://code.visualstudio.com/Docs/editor/codebasics#_side-by-side-editing). When I do that, it shows the same file. When I use `Ctrl+P`, newly created, duplicated file, stays in background.

Steps to Reproduce:

1.  Go to any file
2.  Press `Ctrl+\`
3. The same file opens up as I've been to. When I then use `Ctrl+P` to open another one, it stays in background.

[Video of how it looks like](https://gfycat.com/GreatShabbyGoldeneye)

What I propose:

1. Don't open the same file after using `Ctrl+\` (why would I want to have a file opened two times?). Show blank space instead.
2. Or at least close this file when I use `Ctrl+P` to open another one.</Description>
    <CreatedDate>12/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15357</IssueID>
    <Title>Feature request: Floobits extension</Title>
    <Description>Reopen a question already asked in #2411.

It would be a great thing to permit **real-time collaboration on code** between users.

I used Floobits in Sublime, and they also created a great extension for Atom. https://github.com/Floobits/floobits-atom

I know that VSCode team is working on some third party extensions, so would it be conceivable for you to work on a Floobits extension, or at least check that VSCode API has all necessary features for it?

(Not necessarily video chat, just enable code sync)</Description>
    <CreatedDate>11/11/2016</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15251</IssueID>
    <Title>Keyboard navigation in sidebar: jump to letter</Title>
    <Description>A nice usability feature of select menus in browsers is, once focussed, you can start typing the name of an entry and the browser will select any matches. E.g, if I had options "foo", "bar", "baz", and I typed "ba" when the select is focussed, the browser would select "bar" for me.

It would be great to have the same accessibility feature in the sidebar.</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15038</IssueID>
    <Title>Allow for floating and/or movable sidebar views</Title>
    <Description>I'm using VS Code for a while (since 1.0 or so) and sometimes it's quite annoying that multiple sidebar views can't be used at once.

Most notable issue is that debugger view too tight and it's necessary to expand it every time. But then editor window becoming too narrow.
At the same time it's completely useless to have such wide view for explorer, git or search.
So, You have to drag or toggle sidebar every time when you need to debug.
If you have monitor that something less than 1080p it leads to real problems in usability.

The best solution in my opinion is to make at least debugger view detachable. Such approach is very convenient to use with dual-monitor configuration.

Other solution is to optionally move this watcher view to bottom panel where debug console located. Maybe it'll hard to use with debug console at the same time but JetBrains IDEs uses similar layout and it works fine.</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15028</IssueID>
    <Title>Add a setting to prompt before closing window</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (dbf3ba74e6cf3b33687b7d47e321e642fc1e7562, 2016-11-04T10:15:01.593Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

Steps to Reproduce:

1. No matter what I choose, when I do either of the above, wanting to close all open files, I end up exiting the editor. What an annoyance! I'm just trying to close all files is all. Why is it exiting if I didn't ask it to exit? A program should not jump to conclusions. Is there a desire here to emulate Google Chrome's behavior? Chrome is not such a "perfect" browser, FYI, and closing the browser when I close all the tabs is not what I want. Don't assume. If I want to exit I'll do a &gt;File &gt;Exit.
2. Thank you.
</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14879</IssueID>
    <Title>Improve the sorting and matching of quick pick</Title>
    <Description>Originally posted in the [`vscode-project-manager`](https://github.com/alefragnani/vscode-project-manager) extension issues [here](https://github.com/alefragnani/vscode-project-manager/issues/66). @alefragnani suggested that I file the issue here to have this applied to `PickList`. I'm unfamiliar with this codebase. But I think that [`match-sorter`](https://github.com/kentcdodds/match-sorter) provides a better way to filter and sort items in a list based on user input. Could we consider adding that kind of functionality to VSCode?

Thanks!</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14602</IssueID>
    <Title>Show zoom scale indicator in status bar</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14525</IssueID>
    <Title>Allow to undock the sidebar into a new window</Title>
    <Description>At work I can only use a small screen, and I need the explorer view always open.
The matter is that keeping it opened leaves very small place for actual code.
So I started looking for a undocking option, but I found out that there's none.
I'd really love to be able to switch between explorer and code in two different windows (just like I do, for example, with Chrome and Chrome Debugger).

(I don't know how to add tags to the request, I wanted to use explorer-files, feature-request, ux)

Thanks!
</Description>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14483</IssueID>
    <Title>API: view management API for non-TextEditors</Title>
    <Description>Request: API support for managing non-`TextEditor` views. The functionality should support:
- show()
- hide()/close()
- move tabs/groups
- on-closed event (#12114, #13623)
- on-focus-changed event (via `onDidChangeActiveTextEditor` or new `onDidChangeActiveView`)
- presence in `visibleTextEditors` or new `visibleViews` (#6941)

In particular, `previewHtml` should return an object that provides the above functionality,

_Example use case:_ I create a preview for each open document of a certain file type. (The preview is derived from the current state of processing the document; not its contents.) Typically, the documents are all on the left column and their previews are on the right. When interacting with the document, its associated preview should become visible (without receiving focus); moving to a different column than the document itself if necessary. Without this kind of functionality, it easy for the user of my extension to become lost and confused when interacting with multiple documents.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14473</IssueID>
    <Title>Ability to display Symbols list on a Panel</Title>
    <Description>I'd love to have the ability to persistently display the Symbols list for the current file on a Panel, that way I could have a split screen of my code on the left, and this on the right:

&lt;img width="620" alt="screen shot 2016-10-25 at 16 07 49" src="https://cloud.githubusercontent.com/assets/418473/19698335/a2eb1ce6-9acd-11e6-962a-e3fe895bc5c7.png"&gt;

Instead of having to press Cmd + Shift + O to display it like a popover every time.

This is possibly related to #9418, but not exactly the same.

Thanks in advance!
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14142</IssueID>
    <Title>Quick Open widgets to open below tab/action bar</Title>
    <Description>- VSCode Version: 1.7

Has there been any meetings about the placement of the quick open widget?  with the new eager preview option, its kinda weird to not see which tabs are being switched around or opened in the background while the widget is not hidden.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14111</IssueID>
    <Title>Needed validation in `contributes.keybindings` for extension manifest</Title>
    <Description>While building a keymap extension I ran into an issue. 

I created a keybinding contribution as seen below:

``` json
{
  "mac": "ctrl+shift+pageup",
  "win": "alt+shift+pageup",
  "linux": "alt+shift+pageup",
  "command": "cursorColumnSelectPageUp",
  "when": "editorTextFocus" 
}
```

What is wrong with the above? 

Once I debugged the extension I found the issue. 

![image](https://cloud.githubusercontent.com/assets/2449568/19569406/77f42bee-96aa-11e6-937b-9c9cc4eaf2bb.png)

Two things could be fixed here:

1 - The error message is too large and so I cannot see what is going on. I did figure out that I can see the same error in the debug console. It would be better if there was a way to see the complete message in the error box. (ping @bgashler1 @stevencl on this one)
2 - I would've expected to have caught this with the JSON validation of the file. We should introduce a squiggle line indicating that the keybinding object is missing a required `"key"` property. 
3 - The error message should indicate the line number where the issue exists. See the debug console error message below does not give me an indication where the problem is. 

![image](https://cloud.githubusercontent.com/assets/2449568/19569706/9e057a44-96ab-11e6-80c3-6ba0e21e314e.png)

To fix this today, I simply need to add the `key` property. 

``` json
{
  "mac": "cmd+shift+l",
  "win": "ctrl+shift+l",
  "linux": "ctrl+shift+l",
  "key": "ctrl+shift+l",
  "command": "editor.action.insertCursorAtEndOfEachLineSelected",
  "when": "editorTextFocus"
}
```

As an aside, I created https://github.com/Microsoft/vscode/issues/14112 to address the necessity of the `"key"` property. 
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13325</IssueID>
    <Title>Support large image more than 1MB</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T13:06:49.879Z)
- OS Version: Darwin x64 16.1.0

I can't preview large image which more than 10M?    So I think it would be better to support preview  large image file.
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13285</IssueID>
    <Title>Display multi-line errors in panel list</Title>
    <Description>As shown in the picture below we are not displaying multi-line errors in the error list. I would expect that multi-line errors occupy the correct number of lines.

I know you are using the tree widget as the underlying implementation, so you can check the repl which does the same. Uses the tree but for elements that are multiple lines it [reserves additional lines](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/electron-browser/replViewer.ts#L119).

I am passionate about removing the error zone widget and this is one of the rare things that the error list is missing which the error zone widget provides.

&lt;img width="660" alt="screen shot 2016-10-06 at 10 26 14" src="https://cloud.githubusercontent.com/assets/1926584/19145597/f8da07ac-8baf-11e6-9497-41e3f868a2f0.png"&gt;
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13252</IssueID>
    <Title>When using multicursor, Home and End keys do not scroll.</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 8.1

Steps to Reproduce:
1. Make some long texts until appears the horizontal scroll on the editor.
2. Use multicursor in some or all of these lines.
3. Press Home or End key to see what happens.

![bug multicursor](https://cloud.githubusercontent.com/assets/7959437/19119399/3b9d6e42-8ae5-11e6-90c8-7a5096667712.gif)
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12991</IssueID>
    <Title>File search (ctrl + E) should suggest more relevant options</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10

Steps to Reproduce:
1. From anywhere inside VSC, ctrl + E opens a dialog to search by file name. 
2. Start typing, list of options appear. 

Unfortunately, the options are not sorted by any relevance (recently opened, or files from folder currently working on). It would be great if this could be improved!

Example: 

I have 6 files open, all from a folder called .../userSettings/
I want to open a 7th file called main.js from that same folder so I type ctrl + E, "main.js"
I have a main.js file in a dozen different folders in my project, so I get a list of all the main.js from all my folders, but I would expect userSettings/main.js to be at the top of the list as I'm working on that folder. Failing that, it should still be at the top of the list because I worked on it an hour ago and closed it, and I'm reopening it again (having not worked on any other main.js from other folders in a while).

Hope this makes sense! Thanks
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12941</IssueID>
    <Title>Implement an overflow design for the status bar</Title>
    <Description>Testing #12519 

Change window.zoomLevel in settings to 3, and shrink the window a bit until the "responsive" design starts kicking in. Pressing Ctrl+M then toggles the UI between the following two states:
![image](https://cloud.githubusercontent.com/assets/762848/18932111/d3f702dc-8583-11e6-833f-42df3a6fbdd0.png)

This is problematic because
-  there's no indication to the user what just happened or that the mode switch was successful.
- It's unclear (from a user perspective) why stuff just disappeared from the status bar
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12227</IssueID>
    <Title>Workspace setting to open files as read-only/non-editable via editor.</Title>
    <Description>- VSCode Version:1.5.2
- OS Version:Windows 10

Feature request: Option to allow certain files to be open in the editor only as Read-only.
A workspace settings similar to "files.exclude".

```
"files.readOnly": {       
         "client/src/app/common":true, //Folder
         "server/src/common":true,
         "common/**/*.ts":true //Globs,
         "client/src/app/test.ts":true //Specific file
}
```

With the above settings, a user will not be able to make any changes to the files specified via the editor.

A sample scenario is mentioned in the stack overflow question
[http://stackoverflow.com/questions/39560184/open-certain-files-in-a-workspace-as-read-only-in-vs-code](http://stackoverflow.com/questions/39560184/open-certain-files-in-a-workspace-as-read-only-in-vs-code)
</Description>
    <CreatedDate>18/09/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12226</IssueID>
    <Title>Link highlighting makes it hard to see underscores</Title>
    <Description>A link's underline is masking underscore symbols.
Requesting a setting to change link decoration (or to have a link's underline removed while hovering over it).

Having links highlighted in some other way would offer a better overview of link's that have one or more underscores in them.
- VSCode Version: 1.5.2
- OS Version: Windows 10 Pro 1607

Happened in a JavaScript file: request.get('http://localhost:11590/user/_design/user', next);
</Description>
    <CreatedDate>18/09/2016</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12156</IssueID>
    <Title>Detect links in Problems panel</Title>
    <Description>- VSCode Version: 1.5.2 (1.5.2)
- OS Version: OSX 10.11.6 (15G1004)

Steps to Reproduce:
- Install the [TSLint](https://marketplace.visualstudio.com/items?itemName=eg2.tslint) extension.
- In an Angular 2 project install [codelyzer](https://www.npmjs.com/package/codelyzer)
- Make some mistake like not adding the implements OnInit and simply add the ngOnInit() { } in the Angular 2 Component:

import { Component, OnInit } from "@angular/core";

@Component({
    moduleId: module.id,
    selector: "sg-test",
    template: "`Test`"
})
export class ExamplesListDepth1Component {
    constructor() {

```
}

ngOnInit() {

}
```

}
- This will show an warning in the output of VS Code:
  ![vs code output](https://cloud.githubusercontent.com/assets/4989411/18590435/797c2fe4-7c37-11e6-9c90-4d6268a50875.png)
## Issue:

The output text contains an link with useful information provided by the codelyzer JS package but that link is not intractable by any means, I cannot click the link or copy the text to manually paste it in the browser.
## Expected/desired behavior

The text in the output to be intractable, best would be any http links to be directly clickable but simply letting us copy the output error/warnings would also be acceptable.
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>27/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11979</IssueID>
    <Title>Support dark theme in Gnome</Title>
    <Description>- VSCode Version: 1.5
- OS Version: Linux

I do use light theme on my linux distribution, but in VScode i prefer standard dark theme for editor, so i desired to try to change a gtk theme for single window as i do often with several applications modifying their launchers and .desktop files, and had no success. As i figured out VScode doesn't use gtk for window decorations, so i tried xprop to change theme variant to dark. What i got is that window decoration changed to dark, but menu is still using old light style.

It would be great if VScode will start to use CSD (client side decorations) like in most native and not native gnome apps, so i request this feature too

Steps to Reproduce:
0. Use light gtk theme, that support dark variant, like Arc-GTK
1. Type in terminal: xprop -f _GTK_THEME_VARIANT 8u -set _GTK_THEME_VARIANT "dark"
2. Click VScode window
3. Notice that decorations turned to dark, but menu is still light
3. Cry.
</Description>
    <CreatedDate>13/09/2016</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11902</IssueID>
    <Title>Feature Request: Add Guide lines to indicate folder structure</Title>
    <Description>Currently, it's hard to figure out where the `code` folder is in the tree structure:

![image](https://cloud.githubusercontent.com/assets/4033249/18447562/0ba25cd6-78dc-11e6-92da-a6023798e117.png)

Would be great if such guide lines should be added (of course not red color):

![image](https://cloud.githubusercontent.com/assets/4033249/18447857/43afaf9c-78dd-11e6-87aa-7a14e8b87ea1.png)
</Description>
    <CreatedDate>12/09/2016</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11596</IssueID>
    <Title>Add line-wrap to file comparison</Title>
    <Description>Currently, there is no way to wrap long lines when comparing two files. Alt+Z has no effect, the "Softwrap" plugin has no effect, nothing. This makes it extremely cumbersome to compare using files that have long lines.
</Description>
    <CreatedDate>06/09/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11393</IssueID>
    <Title>Feature Request: R language extension</Title>
    <Description>- VSCode Version: 1.4
- OS Version: Windows 10

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>01/09/2016</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10859</IssueID>
    <Title>Configure the maximum number of Editor Groups </Title>
    <Description>I would like to be able to configure the number of editors. I would like to limit it to two. 
</Description>
    <CreatedDate>23/08/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10642</IssueID>
    <Title>Display current zoom level</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 6.1.7601

Original title: How i know zoom level? ctrl+=/- | ctrl+mouseWheel
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10425</IssueID>
    <Title>Support flat UI titlebar (Windows)</Title>
    <Description>- VSCode Version: All
- OS Version: Windows 7

The Aero styled border in Windows 7 is annoying. Please (as in Visual studio) use flat design)
</Description>
    <CreatedDate>11/08/2016</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10070</IssueID>
    <Title>Support dark window chrome when dark theme is used</Title>
    <Description>- VSCode Version:
  1.3.1
- OS Version:
  Windows 10
  Steps to Reproduce:

The toolbars and application menu are currently white/gray and many users have a dark theme for the code area and the contrast is quite :/ 

Any way to put in a option to make the toolbar and menu at the top of the screen to be black like in visual studio dark theme...

![image](https://cloud.githubusercontent.com/assets/3189206/17360988/7067cc60-596e-11e6-91b1-11749545cf2c.png)
</Description>
    <CreatedDate>03/08/2016</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10001</IssueID>
    <Title>PHP should have word completion</Title>
    <Description>- VSCode Version:
  - Version 1.3.1
  - Commit e6b4afa53e9c0f54edef1673de9001e9f0f547ae
  - Date 2016-07-12T13:28:46.761Z
  - Shell 0.37.6
  - Renderer 49.0.2623.75
  - Node 5.10.0
- OS Version: `ubuntu 14.04`  `3.13.0-32-generic`  `x86_64` 
- File Type: *.php

Preferences:

``` json
{
    "files.trimTrailingWhitespace": true,
    "files.autoSave": "onFocusChange"
}
```

Steps to Reproduce:
1. Open code.
2. `Select Language Mode` to PHP. (Or open a `php` file)
3. In the first line, I input `Helloworld`.
4. In the second line I input `Hell`.
5. Check `word completion list` has word `Helloword`.

![screenshot - 2016 07 29 - 12 21 15](https://cloud.githubusercontent.com/assets/6329191/17237665/f8dbb692-5586-11e6-80b0-ceff96fe73cf.png)

In this version has save problem. 
- Version 1.4.0-insider
- Commit 4656fe3ff2952e9538d81e7a7571674352e5d62f
- Date 2016-07-29T05:12:17.453Z
- Shell 0.37.6
- Renderer 49.0.2623.75
- Node 5.10.0
</Description>
    <CreatedDate>01/08/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9996</IssueID>
    <Title>Command to scroll multiple lines (add args to keybindings.json)</Title>
    <Description>At the moment there are only keybinding commands to scroll one line up/down or one page.
Feature request: provide commands to scroll 2, 3 or more lines at a time
</Description>
    <CreatedDate>31/07/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9839</IssueID>
    <Title>Extend the API to add custom file opener</Title>
    <Description>I wanted to port the [pdf-view](https://github.com/izuzak/atom-pdf-view) extension for atom to vscode.

One thing that I came across that I don't know how to do it in vscode is atom's ability to add custom file openers: https://atom.io/docs/api/v1.8.0/Workspace#instance-addOpener

I'm pretty new to vscode so correct me if I'm wrong but without such API one would have to take a detour through the command palette to open a PDF file with pdfjs and the intuitive way via "Open File..." and (double) clicking on the file tree wouldn't work.
</Description>
    <CreatedDate>27/07/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9593</IssueID>
    <Title>Moving a set of adjacent editor cursors does not move the editor's viewport to them </Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (f4780e67933164a2289b86f2c279aaa05fda672f, 2016-07-19T05:12:40.233Z)
- OS Version: Linux x64 4.4.0-31-generic, Ubuntu 16.04

Steps to Reproduce:
1. Open large file
2. Add cursor somewhere
3. Add cursor down command
4. Scroll down with mouse
5. Press up, notice the viewport doesn't move. With a single cursor the viewport will go to the cursor.

Maybe this should be a special case for when cursors either can fit within the viewport and/or are all adjacent to each other?
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9323</IssueID>
    <Title>Warn before closing the window when closing editor without having editor open</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: OS X El Capitan

Steps to Reproduce:
1. Have a few tabs/editors running in your window
2. cmd + w to close the current one, until no one is left
3. Next cmd + w will close the entire editor

Should warn the user that the entire editor will be closed and the choice to cancel.
This is just an idea since it happens all the time for me, though I understand the current implementation as it do exactly what the command says – closes the window.

![vscode_closes](https://cloud.githubusercontent.com/assets/624182/16868799/f40f3714-4a79-11e6-944c-13a599703319.gif)
</Description>
    <CreatedDate>15/07/2016</CreatedDate>
    <ClosedDate>18/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8698</IssueID>
    <Title>Allow extensions to send output to the debug console.</Title>
    <Description>I am building an extension/debugger combination for Clojure that uses the debug console to display the output from a continuously running REPL. I need to be able to evaluate code selected in an editor outside of the normal `Debug: evaluate` path (primarily so the extension can identify the namespace in which to execute the code). I have this working, but I would like to display the the result in the debugger  #console.
</Description>
    <CreatedDate>03/07/2016</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8053</IssueID>
    <Title>Don't automatically fetch when there are no remotes available</Title>
    <Description>Continually giving message "fatal: No remote repository specified.  Please, specify either a URL or a
remote name from which new revisions should be fetched." when I am working on files in a local git repo. There is no remote repo and in any case I can't find a way to interact with git apart from committing changes + a message. I don't even know what branch I'm working on so still have to revert to git shell. 
- VSCode Version: 1.2.1
- OS Version: Windows 7 SP1

Steps to Reproduce:
1. Open a folder that contains a git repo
2. Toggle git output

![image](https://cloud.githubusercontent.com/assets/15934099/16305349/513d7e44-3951-11e6-9a4b-bf4a19799f4f.png)
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7437</IssueID>
    <Title>Question / Request: Shortcut to expand multi-cursors to word boundaries</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Windows 8 x64

Question: Is there a way to expand multi cursors to select each current word, even when the words aren't the same?

Here is an example of attempting to convert javascript object notation to properly quoted JSON, using multicursor support and the ctrl+d shortcut.

Functionality in Sublime (middleclick+drag, ctrl+d):
![2016-06-07t09_09_14-multiselect_word_boundaries](https://cloud.githubusercontent.com/assets/4721566/15910086/36a7e558-2d7e-11e6-94c9-c93417c97b2b.gif)

Functionality in VSCode (leftclick, shift+alt+leftclick+drag, ctrl+d):
![2016-06-07t09_09_14-multiselect_word_boundaries-vscode](https://cloud.githubusercontent.com/assets/4721566/15910108/5473fb9e-2d7e-11e6-8e57-92a8664a853c.gif)

Is there a shortcut / function that I'm missing which will expand all cursors to their respective boundaries? I know I can _technically_ get the same functionality through usage of ctrl+arrow key to get to the beginning or end of a boundary (where necessary) followed by shift+ctrl+arrow key in the opposite direction, but I've done it with a single shortcut for so long that the habit may be difficult to break.
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7427</IssueID>
    <Title>Add string to selection with CTRL + double click?</Title>
    <Description>In every advanced text editor I've used in the last few years holding CTRL and double clicking adds the string under the cursor to the current selection.

Is there a reason this doesn't work in VS Code or has it not been implemented yet?
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7330</IssueID>
    <Title>Allow to open the same folder in multiple windows</Title>
    <Description>second window will not open same working folder as first window
- VSCode Version: 1.1.1 / also 1.2.0-insider 
- OS Version: 8.1

Steps to Reproduce:
1. Open first window and standard working folder.
2. File -&gt; new window
3. Second window opens with blank workspace; attempt to select same working folder as first window. Folder does not open in second window.
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>16/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7320</IssueID>
    <Title>Is it possible to stream a file into vscode from terminal </Title>
    <Description>- VSCode Version:1.2.0
- OS Version:ubuntu 16.4

on a remote server or while editing root needed config files from builtin terminal i have to use vim at the moment . 
Is there or will there be a functionality to pipe file into current code pane from builtin terminal
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>11/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7179</IssueID>
    <Title>Make move lines multi cursor aware</Title>
    <Description>At first, moving lines up and down didn't seem to work at all, but then I found a stranger issue. Notice how line 6 becomes a mix of lines 5 and 7:

![bug](https://cloud.githubusercontent.com/assets/22350/15774263/c4dca018-297b-11e6-807a-319997effbfe.gif)

Here's the buffer, notice the first line is empty, so you can move the lines up.

```

        if (this.mergeDecorator) {
            this.mergeDecorator.dispose();
            this.mergeDecorator = null;
        }

        if (!this.contextService || !this.gitService) {
            return;
        }
```

Steps:
- Put cursor right before the first `if`
- Duplicate cursor down 5 times
- Move lines up
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6941</IssueID>
    <Title>[API] Provide Virtual Document in window.visibleEditors or similar</Title>
    <Description>- VSCode Version: 1.1.1-insiders
- OS Version: Win10

I know window.visibleEditors is supposed to contain actual text editors but it is not possible to tell at the moment if a VirtualDocument (ie a htmlContentProvider) is in view.

The scenario I would need this for is for detecting if a Virtual Document has focus when a command is triggered. If there is another work around for this please let me know.

Thanks :smile: 
</Description>
    <CreatedDate>26/05/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6619</IssueID>
    <Title>clicking at the output messages of the compiler (TypeScript) do not navigate to a file/line/column of where the error occurred</Title>
    <Description>- VSCode Version:1.1.1
- OS Version:Windows 7

Steps to Reproduce:
1. Compile a typescript with an error in int
2. Observe an error message in the console output 
3. Click the line with the message in the output
4. Expected: to navigate to the source file/line/column where the error decected. Actual: no action taken

Expected: To navigate to a referred place 
</Description>
    <CreatedDate>21/05/2016</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6561</IssueID>
    <Title>Cmd+D doesn't select multilines as expected</Title>
    <Description>- VSCode Version: Version 1.1.1 (1.1.1) def9e32467ad6e4f48787d38caf190acbfee5880
- OS Version: OS X 10.11.4

Steps to Reproduce:
1. Open a buffer with the following content:

```
func noname() {}
panic("lol")

func noname() {}
panic("lol")


func noname() {}
panic("lol")
func noname() {}
panic("lol")
```
1. Select `"func noname() {}\npanic(\"lol\")"` and press `Cmd+D` to try to select the multiple instances of the string `"func noname() {}\npanic(\"lol\")"`.
2. It doesn't work.
3. Try the same thing in Atom or Sublime Text; it works.

A gif that demonstrates the difference in behavior: 

![derp](https://cloud.githubusercontent.com/assets/1189716/15412867/49c595ac-1df9-11e6-8d81-b6f94e1efdd7.gif)

Thanks!
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5909</IssueID>
    <Title>Manage more than three layout panels</Title>
    <Description>We need to design an experience for creating and managing more than three layout panels.

Related to #224 
</Description>
    <CreatedDate>27/04/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5792</IssueID>
    <Title>Repetitive problem message when pointing to problem line</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: windows 7

Steps to Reproduce:
1. In one header create warning message
2. Include this header into multiple files
3. Compile and go, to problem Mach in this header
4. Problem message shows a list repetitive messages

It is strange to see list of problem messages that are the same.
</Description>
    <CreatedDate>26/04/2016</CreatedDate>
    <ClosedDate>07/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5292</IssueID>
    <Title>use chrome/electron's spell checker for comments and text documents</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: arch linux 64bit kernel 4.5

This is a feature request.

Currently the only spellchecker available is https://github.com/Microsoft/vscode-spell-check, which is slow if you have a crappy connection, and is insecure.

chrome has already a built in spell-checker, is there any way to use that rather than that extension? or aspell?
</Description>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>03/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5045</IssueID>
    <Title>Printing support</Title>
    <Description>I'm interested in support for printing out code files.

Is there a way to cause the editor to render the full file into the DOM (as opposed to only the visible set of rows)? That seems like the main hurdle.
</Description>
    <CreatedDate>06/04/2016</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4767</IssueID>
    <Title>Not getting intellisense for predefined common variables in task.json and launch.json.</Title>
    <Description>- VSCode Version:0.10.12-alpha
- OS Version: windows10

Steps to Reproduce:
1. Launch app and open any folder which contains .ts project
2. Add task.json file or select the node.js environment to generate launch.json.
3. Try to update the property value with predefined common variables like ${file},${cwd}, ${workspaceRoot} etc. in task.json or launch.json .
4. Verify intellisense should display for all the predefined common variables.

Actual: Intellisense is displaying only for ${workspaceRoot}.
![image](https://cloud.githubusercontent.com/assets/17735796/14119581/a96818e6-f5a3-11e5-8b51-2a92289e769e.png)
</Description>
    <CreatedDate>29/03/2016</CreatedDate>
    <ClosedDate>13/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4664</IssueID>
    <Title>Incorrect rendering of ascii escape sequences in REPL</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version:Windows 10 version 1511

Steps to Reproduce:
1. Write to the REPL window using a string with an ascii escape sequence indicating both color and boldness as parameters e.g. '\u001b[35;1mmagentabold'
2. Either bold or text color work separately but they do not work together.  Nor are the escape sequences properly removed from the output.

A repo showing the problem can be seen here https://github.com/eightvans/asciiescape
A comment in replViewer.ts references this link http://ascii-table.com/ansi-escape-sequences.php showing how the sequence should be parsed.
</Description>
    <CreatedDate>25/03/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4521</IssueID>
    <Title>Multiple messages with different action buttons look bad</Title>
    <Description>E.g. install an extension and open readme and then return:

![image](https://cloud.githubusercontent.com/assets/900690/13930168/0a8e7b58-ef9e-11e5-94ed-5ea5f86f9b74.png)
</Description>
    <CreatedDate>21/03/2016</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4374</IssueID>
    <Title>Formatter option could be inferred from linter options</Title>
    <Description>See  https://github.com/Microsoft/vscode/issues/4303#issuecomment-197361978 for details.
</Description>
    <CreatedDate>17/03/2016</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3258</IssueID>
    <Title>VSCode Debugging Toolbar is hidden behind message pop up</Title>
    <Description>All Error/Warning or simple "Update Available" Messages from VSC hide the debugging bar when I start debugging. 
As a user I'm confused to not be able to see &amp; interact with the toolbar (and might not be aware that the debugger is running at all).
I'm probably supposed to close those messages, but there might be reasons to keep them open (e.g. as a reminder).

Found with: VS Code Version 0.10.8, running on a Mac.
</Description>
    <CreatedDate>22/02/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2105</IssueID>
    <Title>Max editor count should be configurable</Title>
    <Description>The maximum number of editors currently is **three**.  There doesn't appear to be a way to change this in user settings.

It would be helpful and flexible if there was a configuration option in user settings to override this default max value (i.e. some developers might be able to handle four or five editors and still feel "organized").

I like the max editor cap, but I believe the count of max editors should be configurable.
</Description>
    <CreatedDate>19/01/2016</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1823</IssueID>
    <Title>Add support for ctrl+k + (second command) in the Define Keybinding helper</Title>
    <Description>The define keybinding helper is great, but it would be nice If it could allow a second keybinding to be added it it detects ctrl+k have been entered. Like the ctrl+k ctrl+k that is needed to open the helper in the first place.
Thanks
</Description>
    <CreatedDate>06/01/2016</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1688</IssueID>
    <Title>Diagnostics for empty lines hard to discover</Title>
    <Description>Diagnostics for empty/blank lines are hard to discover as a user.

For example, the tslint rule `no-consecutive-blank-lines` flags the second blank line as a warning. This puts a green mark on the right gutter but gives no indication at the actual location of the error in the editor. It might be found through the "Errors and Warnings" interfaces, but if the project contains many other issues (perhaps in other files or a dependency) this might not work either.
</Description>
    <CreatedDate>29/12/2015</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>940</IssueID>
    <Title>Use default Format options in Extensions</Title>
    <Description>Hi, i writing an extension to VS Code, but i dont find any way to be able use VS Code Formating on my Strings (Like HTML and JS Format separatly). Any plans to add it?
</Description>
    <CreatedDate>02/12/2015</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>686</IssueID>
    <Title>tasks for single file</Title>
    <Description>I want to make a task to build a single file, like a lua script file. But seems like, the `tasks.json` must under a folder's `.vscode`. 

I don't want to open a folder and create many same `tasks.json` each time when I just new a temp single file.

May `tasks.json` become a extension option like sublime's `build system`?
</Description>
    <CreatedDate>26/11/2015</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>367</IssueID>
    <Title>Allow detachable multiple windows on the same workspace</Title>
    <Description>Allow opening additional windows (BrowserWIndow) to be able to work on multi-monitor setups.

See also:
- [Detachable split-view](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8279298-detachable-split-view)
- [Ability to have a "folder" open over multiple windows (like Visual studio)](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7764594-ability-to-have-a-folder-open-over-multiple-wind)
- [Multiple windows, same folder](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8162727-multiple-windows-same-folder)
</Description>
    <CreatedDate>20/11/2015</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37153</IssueID>
    <Title>Integrated terminal causing VSCode to freeze</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Windows 10 build 16299.19

Integrated terminal freezes sporadically since VSCode version 1.16.

Steps to Reproduce:

1. Open and maximize a terminal
2. Make VSCode window large enough
3. Keep terminal outputting something, e.g. `node -e "var count = 0; setInterval(() =&gt; console.log(count++), 100);"`

Screenshot with normal PowerShell on the left side:

![bc8bacf1-5ae0-4bf2-9f1b-099e535c1f8f](https://user-images.githubusercontent.com/970430/32177383-2b3bb888-bdc5-11e7-97b1-0e7c54abd358.GIF)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37138</IssueID>
    <Title>Tasks -&gt; Configure Default Build Task does not preserve comments</Title>
    <Description>I had some comments in my tasks.json. 
After running Tasks&gt;Configure Default Build Task these comments were removed.</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37124</IssueID>
    <Title>The terminal selector is not convenient</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: windows 8.1

The terminal selector on the left of the _New Terminal_ button is not so convenient. We have to click two times to change to another terminal.
I think it's better to change the selector to tabs so that we can click one time to change current terminal. Or we can optimize it so that we can use a mousedown-mousemove-mouseup style to change the terminal like the selector on the mac os.</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37118</IssueID>
    <Title>How to turn off copy with syntax highlighting?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Windows 7

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

I don't want to use it most of the time but I can't find a way to turn it off.

How can I turn it off so that I copy plain text only?</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37115</IssueID>
    <Title>clear the 'multi cursor' please</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Mac OS 10.13

The 'multi cursor' work when i press 'ctrl + alt + up/down'(my key bindings). But it doesn't work with mouse.

Steps :

1. Holding the 'alt' key
1. Holding the 'main' key(in mouse) and drag the mouse cursor vertically, and it's behavior is same as holding the 'command' key at `step 1`. It is just a 'multi line', not 'multi cursor'!
</Description>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37092</IssueID>
    <Title>Cannot read property 'panel' of undefined when searching extensions</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18 Insiders dated 2017-10-27
- OS Version: Any

Steps to Reproduce:

1. Search for any extension in the extensions viewlet
2. The search is successful but an error "Cannot read property 'panel' of undefined" pops up

Call Stack in the console:
&lt;img width="1123" alt="screen shot 2017-10-28 at 8 39 56 pm" src="https://user-images.githubusercontent.com/16890566/32140509-2968a544-bc20-11e7-9b8d-022b0a162ddc.png"&gt;
</Description>
    <CreatedDate>29/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37090</IssueID>
    <Title>更新到1.17之后vs 启动变得很卡</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version:win10企业版

Steps to Reproduce:

1. 关于vs code刚刚打开的时候Microsoft VS Code\resources\app\node_modules\vscode-ripgrep\bin文件夹下的rg.exe卡电脑cup的问题 
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37077</IssueID>
    <Title>Typescript beautification - operator combination turns following code green</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-instant-markdown|dba|1.3.0
terraform|mau|0.0.18
csharp|ms-|1.12.1
PowerShell|ms-|1.5.0

---

Steps to Reproduce:

1. Example code below when beautification  takes place, all code after ```++ &lt;``` becomes green. Issue seems to be around this operator combination, if I change this to ```++ &lt;=``` beautification  works as expected. If I remove the ```++``` this also solves the problem.

Thanks,

```typescript
var greenCode
if (greenCode++ &lt; 10) 
{
    var itsAllGreen 
    var Here
}
```
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![vscode_01](https://user-images.githubusercontent.com/27624232/32134016-15c2a808-bbdc-11e7-8551-47937acf0532.JPG)

![vscode_02](https://user-images.githubusercontent.com/27624232/32134020-25c87f48-bbdc-11e7-924e-c232da01c49a.JPG)

</Description>
    <CreatedDate>28/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37076</IssueID>
    <Title>Cannot read property 'panel' of undefined</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (e6a76e4bd3f52ab07452bb181e861f5a9bfb6596, 2017-10-27T04:19:22.491Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-svgviewer|css|1.4.3
EditorConfig|Edi|0.11.1
git-project-manager|fel|1.4.0
vscode-scss|mrm|0.6.2
cpptools|ms-|0.14.0
seti-icons|qin|0.1.3
vscode-header-source|ryz|1.1.0
ayu|tea|0.8.0
lorem-ipsum|Tyr|1.0.0
shell-launcher|Tyr|0.1.3

(3 theme extensions excluded)


---

I ran the install extensions from the command palette, not sure how that would be related though.

![image](https://user-images.githubusercontent.com/2193314/32132831-f6ac090c-bb7f-11e7-9a91-a4368082f15e.png)
</Description>
    <CreatedDate>28/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37063</IssueID>
    <Title>Terminal rendering wonky after waking up from suspended state on Ubuntu</Title>
    <Description>- VSCode Version: 1.17.2, Commit: b813d1... Shell: 1.7.7, Renderer: 58.0.3029.110, Node: 7.9.0, X64
- OS Version: Ubuntu 14.04

Steps to Reproduce:
1.  Open VScode and edit an ASP.NET Core app 
2.  Suspend the machine
3.  Wake the machine up

Result:
![image](https://user-images.githubusercontent.com/1808428/32127664-4606294a-bb2d-11e7-8520-62dec9f3bbe8.png)

</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37057</IssueID>
    <Title>Go to File does not find files when using certain files.exclude masks</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
1.17.2

- OS Version:
Windows 7 SP1 Enterprise 64-bit

Steps to Reproduce:

1. Open VSCode in the directory with the following file structure
```
/
|-- foo/
    |-- foo.js
|-- bar/
    |-- foo.js
|-- foo.js
```
2. Press Ctrl+P (Go to File...). Type foo.js in the search box. All three foo.js files are shown.
3. Add the following to Workspace Settings
```
{
    "files.exclude": {
        "f*/": true
    }
}
```
The intention is to hide the foo folder in the Explorer. In real life I have a lot of folders starting with f and I don't want to list them all, hence using a wildcard (note the / at the end). I would expect the following shown in the explorer:
```
/
|-- bar/
    |-- foo.js
|-- foo.js
```
I would also expect foo.js and bar/foo.js to be found by Go to File.

**Actual Result**:
1. The explorer only shows the 'bar' folder with both 'foo' folder and foo.js file hidden.
```
/
|-- bar/
    |-- foo.js
```
2. Go to File does not find **any** of the foo.js files, including bar/foo.js

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
Yes</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37055</IssueID>
    <Title>inconsistent file-search-and-replace behavior depending on open files</Title>
    <Description>- VSCode Version: 1.17.2 (1.17.2), b813d12980308015bcd2b3a2f6efa5c810c33ba5
- OS Version: Mac OS 10.13 (17A405)

## Steps to Reproduce

This is about inconsistend behavior when using file-search-and-replace, so you need to perform the same search action twice with different file sets opened.

### PREPARE

Create a couple of text files which contain a couple of lines, and include the same **line** in all of them (e.g. "search me")

### FIRST CASE

1. *close* all open editor windows
2. Hit CMD-SHIFT-H to open file search and replace
3. Search for "search me\n" with regex enabled

RESULT FIRST ROUND: no finds (at least on my machine :)

### SECOND CASE

1. *open any file(s)* containing the line
2. Hit CMD-SHIFT-H to open file search and replace
3. Search for "search me\n" with regex enabled

RESULT SECOND ROUND: the string is found for any file(s) opened in an editor window (and only for those)


## Without extensions

Reproduces without extensions: Yes</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37051</IssueID>
    <Title>Integrated Terminal letter spacing too wide</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: CentoOS 7.4.1708

Steps to Reproduce:

1. Open Visual Studio Code
2. Open Integrated Terminal

Reproduces without extensions: Yes

The integrated terminal displays text with letter spacing that is way too wide. See the screenshot below. This started with 1.17.0, and is still present in 1.17.2.

![image](https://user-images.githubusercontent.com/1993518/32116178-2e269fe4-bb0f-11e7-8013-b6fea95ecaba.png)
</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37049</IssueID>
    <Title>weird terminal fonts</Title>
    <Description> font in terminal rendered weird in recent updates.
it's being perfect at first installation,what can I do and where to start to fix this?

- VS Code Version: 1.17.2
- OS Version: ArchLinux 4.13.8-1-ARCH
- setting: 
```
{
    "window.zoomLevel": 1,
    "files.associations": {
        "*.pug": "jade"
    },
    "workbench.colorTheme": "One Dark Pro Vivid",
    "python.venvPath": "/opt/py2venv/bin/python",
    "python.pythonPath": "/opt/py2venv/bin/python"
}
```
- Extensions: 

| ext | version | author |
|-----------|---| ------ |
|Beautify|1.1.1| HookyQR |
|C/C++|0.14.0|Microsoft|
|Go|0.6.66|lukehoban|
|Linux Themes for VS Code|1.0.1|SolarLiner|
|mssql|1.2.0|Microsoft|
|One Dark Pro|2.10.17|zhuangtongfa|
|Perview|1.3.4|Haixin Chen|
|Pug snippets|1.0.1|mrmlnc|
|Python|0.7.0|Don Jayamanne|
|React-Native|1.4.1|EQuimper|
|SCSS InterlliSense|0.6.2|mrmlnc|
|Swagger Viewer|1.4.0|Arjun|

![werid-terminal](https://user-images.githubusercontent.com/5368975/32114539-69d80354-bb76-11e7-8340-a373c3bb1b72.png)
</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37046</IssueID>
    <Title> TypeError: Cannot read property 'addMatch' of undefined</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (e6a76e4bd3f52ab07452bb181e861f5a9bfb6596, 2017-10-27T04:19:22.491Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jshint|dba|0.10.15
vscode-eslint|dba|1.4.0
githistory|don|0.2.3
xml|Dot|1.9.2
tslint|eg2|1.0.13
vscode-abap|lar|0.1.0
Go|luk|0.6.66
postscript|max|1.0.0
code-beautifier|mic|1.7.2
debugger-for-chrome|msj|3.4.0
vscode-icons|rob|7.16.0
vscode-table-formatter|shu|1.2.1
addDocComments|ste|0.0.8
vscode-import-cost|wix|2.5.1

(1 theme extensions excluded)

---

```

console.ts:123 [IPC Library: Search] TypeError: Cannot read property 'addMatch' of undefined
    at t.handleMatchLine (c:\Programme\VSCodeInsider\resources\app\out\vs\workbench\services\search\node\searchApp.js:4:154137)
    at t.handleDecodedData (c:\Programme\VSCodeInsider\resources\app\out\vs\workbench\services\search\node\searchApp.js:4:153868)
    at t.handleData (c:\Programme\VSCodeInsider\resources\app\out\vs\workbench\services\search\node\searchApp.js:4:153528)
    at Socket.&lt;anonymous&gt; (c:\Programme\VSCodeInsider\resources\app\out\vs\workbench\services\search\node\searchApp.js:4:152371)
    at emitOne (events.js:101:20)
    at Socket.emit (events.js:191:7)
    at readableAddChunk (_stream_readable.js:178:18)
    at Socket.Readable.push (_stream_readable.js:136:10)
    at Pipe.onread (net.js:560:20)
t.log @ console.ts:123
(anonymous) @ ipc.cp.ts:158
e.invoke @ callbackList.ts:36
e.fire @ event.ts:123
r @ event.ts:12
emitTwo @ events.js:106
emit @ events.js:194
process.nextTick @ internal/child_process.js:766
_combinedTickCallback @ internal/process/next_tick.js:73
_tickCallback @ internal/process/next_tick.js:104

```

Steps to Reproduce:

1. No idea sorry
</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37039</IssueID>
    <Title>Cannot read property 'panel' of undefined</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (e6a76e4bd3f52ab07452bb181e861f5a9bfb6596, 2017-10-27T04:19:22.491Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-database|baj|1.2.0
jshint|dba|0.10.15
vscode-eslint|dba|1.4.0
githistory|don|0.2.3
python|don|0.7.0
xml|Dot|1.9.2
vsc-material-theme|Equ|1.0.5
code-runner|for|0.8.2
extension-leaderboard|for|0.0.2
beautify|Hoo|1.1.1
intellij-idea-keybindings|k--|0.2.15
MagicPython|mag|1.0.12
cpptools|ms-|0.14.0
debugger-for-chrome|msj|3.4.0
material-icon-theme|PKi|2.2.4
python|tht|0.2.3
local-history|xyz|1.6.1

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Go to Extensions
2. Type anything on search form

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
No</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37031</IssueID>
    <Title>Can not read property panel of undefined</Title>
    <Description>To repro, maybe open vscode extension with no panel open. Launch extension, panel gets opened and I see the exception

![screen shot 2017-10-27 at 11 12 10](https://user-images.githubusercontent.com/1926584/32096769-bd4ccc14-bb07-11e7-9b44-0b4bd28e7710.png)
</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>37021</IssueID>
    <Title>[Feature Request] provide api to custom snippetVariables</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: Mac

Steps to Reproduce:

want to use custom variables(which provided by extension) at snippets define

https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/browser/snippetVariables.ts

maybe: 
```js
// extension.ts
vscode.commands.executeCommand("setSnippetVariables", "TM_FRAMEWORK", 'egg');
```

```js
// snippet
const Controller = require('${1:${TM_FRAMEWORK}}').Controller;
```

now I use `vscode.languages.registerCompletionItemProvider` + `insertText` to workaround.



</Description>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36996</IssueID>
    <Title>Sidebar toggle does not restore width</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (8bc02c7443305a0db442c11b76e67d6f4929dc0e, 2017-10-26T05:11:40.525Z)
- OS Version: Darwin x64 16.7.0

Only starts to happen this morning

![sb](https://user-images.githubusercontent.com/4033249/32068492-5ec304e6-ba3b-11e7-9da8-a4b58e13856a.gif)

</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36993</IssueID>
    <Title>Integrated Terminal Bug</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:48.528Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
vscode-great-icons|emm|2.1.18
php-debug|fel|1.11.1
php-intellisense|fel|1.5.2
php-pack|fel|1.0.1


**Issue -**  I am working with an Angular2 app. I ran the application with **ng serve --o** command which opened my web browser to display the application. I pressed Ctrl + C to terminate the batch job, but instead decided to continue running it. So instead of Typing Y(for yes) I pressed N but still my batch job got terminated. 

Pressing 'N' or 'n' should have let me continue with that existing batch job.

---

Steps to Reproduce:

1. Type ng server --o command to run an angular2 app.
2. Press Ctrl + C to terminate the batch job.
3. Press 'N' as input.
![vscode_it_issue](https://user-images.githubusercontent.com/13273605/32064693-38040596-ba98-11e7-8744-992a9f7e101e.JPG)



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36992</IssueID>
    <Title>Terminal initially to narrow</Title>
    <Description>pls see the screenshot below and how the powershell welcome is wrapped. 

I suspect that the initial terminal width is not correct. It happens when ever I open a new terminal on Windows.

![image](https://user-images.githubusercontent.com/172399/32062848-f761aeb6-ba75-11e7-993f-2f5229f50076.png)
</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36989</IssueID>
    <Title>Terminal gets corrupted display when resized horizontally</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (de249a04dffcb9b495b9263415c80a82cbfd18ba, 2017-10-26T04:18:36.148Z)
- OS Version: Windows_NT x64 10.0.17025
- Extensions: 
---

![terminal](https://user-images.githubusercontent.com/641685/32060674-7b916c14-ba3d-11e7-8b4c-986b9d7ab164.gif)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36980</IssueID>
    <Title>Not restoring last workspace</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z)
- OS Version: Linux x64 4.13.0-16-generic
- Extensions: none
---

Steps to Reproduce:

1. Open a folder
2. Close VS Code
3. Reopen VS Code</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36970</IssueID>
    <Title>the color of the modified file name to distinguish</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.17.2
- OS Version:Windows 7

In the git environment, the color of the modified file name to distinguish, so that we can quickly find, like webstorm.
![tim 20171026172633](https://user-images.githubusercontent.com/20215926/32045449-ded7bc8a-ba72-11e7-84c9-fe2b9e48292f.png)
</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36968</IssueID>
    <Title>Sublime text like autocompletion</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Windows 10

Is there any way to insert suggestion without opening the suggestion widget. What I want is similar how Sublime Text works. During typing if I press TAB it automatically completes the word based on the words in the current text. Pressing TAB again and again it cyclically completes it, so it goes through the available suggestions without opening the widget.
For example: I have a text "ally automatically", and for the next word I write "aly", then pressing TAB will autocomplete it to "ally", and pressing again TAB completes "automatically", again TAB --&gt; "ally", and so on...
Is there any way to achieve this mechanism in VSCode?</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36965</IssueID>
    <Title>How to show color in js file?</Title>
    <Description>I wrote color value in js file using with JSX syntax, and How can I see the color in the editor like in css file?

**Colors.js**

    const colors = {
      background: '#1F0808',
    }</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36961</IssueID>
    <Title>Add support to filtering files on Resources Manager when type file name.</Title>
    <Description>so it is more convient to search file.</Description>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36939</IssueID>
    <Title>FR: Provide a cause for the onDidChangeTextDocument</Title>
    <Description>It would be very helpful for to provide a `kind`/cause attribute for the TextDocumentChangeEvent, similar to the one provided for `TextEditorSelectionChangeEvent`.

@rebornix </Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36936</IssueID>
    <Title>FR: Exclude workspace folders from the problem panel/linting</Title>
    <Description>All Versions/OS

I now use the multi- folder workspaces to add a folder with utility files, issues, WIP files et cetera.
None of these folder contents are either in git or used directly in the projects, however, they
get Processed for errors unnecessarily.  I searched for but was unable to locate an option
to exclude such folders from the problem analysis.  If this does not exist, appropriate good addition?</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36933</IssueID>
    <Title>Display total number of found entries after a search</Title>
    <Description>Hello guys,

I've a suggestion and I would like to share with you and get your thoughts on that as well. As vscode is such a versatile code editor, sometimes we also use it as a text editor, since its quite simple, just press Cmd + N and you've a new beauty tab.

But unfortunately, there's one condition on it that I did not seen in Atom, Sublime, or even simple text editors / log stream readers. Its about displaying the total amount of found entries in a search. And as I couldn't find an option to configure it, I'm assuming that its the default behavior of vscode.

It would be nice if users could see the number of found entries on search, but unfortunately it seems that vscode just stops the counting after 999, always displaying a static string "X of 999+ items", instead of this, why not display like "X of 1766 items"?  For example, today, I had to do this twice because I was checking some log files, and I had to open Atom just do to this. And its not the first time for this week. So, maybe other folks also have the same need.

- VSCode Version: 1.16.1
- OS Version: OSX 10.12.6

Steps to Reproduce:

1. Create a file with 1000 entries of some string, like " TEST ".
2. Press cmd + f and try to search for " TEST "
3. We can see that a search box is displayed, and it says "X of 999+ items". 
&lt;img width="427" alt="screen shot 2017-10-25 at 4 10 01 pm" src="https://user-images.githubusercontent.com/1733227/32018119-39153850-b99f-11e7-8a5e-e68567bfbf8b.png"&gt;

What do you guys thinks about that proposal?

Thanks! :)
</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36930</IssueID>
    <Title>Keyboard input stops working</Title>
    <Description>Since I installed this version of VSCode, sporadically I have found the keyboard input to stop working. It does not have to do with memory pressure or resource constraints. When it happens, pressing space or enter does nothing. When I switch to another open App (TextEdit, Safari) my keystrokes are accepted. I have found that closing and re-opening the file usually fixes it, if not, I close/restart VSCode.

- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.0



---

Steps to Reproduce:

1. Edit a file, navigate around with arrow keys and then type (press enter, space, etc).
2. When the problem occurs (it is sporadic), nothing happens after each keypress.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36904</IssueID>
    <Title>Editor does not auto close quotation marks.</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: MacOS 10.13

Steps to Reproduce:
1. Configure the system keyboard Layout as US International - PC.

2. Go to the editor and type the key ' and after space key, or when you type the ' key and after press the arrow key, the editor does not auto close the quotes. But when you configure the US keyboard Layout the auto close function works when you type quotes.
I think the Editor should have the same behaviour in both Layouts.
This happens with double quotes too.

Reproduces without extensions: Yes</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36903</IssueID>
    <Title>FR: Terminal on the right side</Title>
    <Description>Hey! I was wondering if there would ever be a possibility to have terminal (and problems, output, debug console) on the right side of the screen. I think that very big amount of people would benefit from that. There are people who have 21:9 screens or similar and vertical space is more important than horizontal space.

Here's my screen, I attach PhpStorm with terminal on the right for comparison:
![image](https://user-images.githubusercontent.com/4085280/32002326-8a87999c-b99c-11e7-98dd-288ccbfe540a.png)
![image](https://user-images.githubusercontent.com/4085280/32002430-d17bfa5a-b99c-11e7-842c-b8eeb661a86b.png)
</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36896</IssueID>
    <Title>Issue about the indent of inserted new line</Title>
    <Description>![qq 20171025201817](https://user-images.githubusercontent.com/8857634/31998967-345f6d92-b9c4-11e7-958a-8ee08f10f684.png)

As in figure. Sublime Text doesn't have this problem. I guess Sublime copy the indent characters of last line to next line, instead of regenerate indent.

Have already set `"editor.autoIndent": false,` in settings.

Version: 1.17.2 (Windows 64 bit)</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36895</IssueID>
    <Title>把logo给老子换回去！不然就用回sublime，换的什么臭logo！！！</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:57:00.652Z)
- OS Version: Linux x64 4.9.0-deepin12-amd64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-css-formatter|aes|0.0.2
python|don|0.7.0
Go|luk|0.6.66



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36863</IssueID>
    <Title>Drag VSCode to Another Screen, terminal(iterm2+zsh) display error</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
react-native-react-redux|EQu|1.4.1
vscode-css-formatter|aes|0.0.2
vscode-eclipse-keybindings|alp|0.9.6
node-debug2|ms-|1.18.3
vetur|oct|0.10.1
velocity|sod|0.1.0
vscode-react-native|vsm|0.4.4



---

Steps to Reproduce:

1.open my VSCode at my macbook‘s local screen, the terminal(item2+zsh) works well
![image](https://user-images.githubusercontent.com/9249608/31979959-11c2d9e6-b90f-11e7-97d7-7f94f99dd5e3.png)


2.drag it to the macbook's another screen, it works wrong
![image](https://user-images.githubusercontent.com/9249608/31979987-31f534e8-b90f-11e7-8d68-b57ea0499e55.png)

3.drag it back to the local screen, the terminal works well again




&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36862</IssueID>
    <Title>Insider integrated terminal cannot render underscore character properly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0-insider commit:  aaec2980609a4bbe44d0cfe2d3f78c85cba1be83
- OS Version: Ubuntu 16.04

This is both happen in light and dark theme

Steps to Reproduce:

1. Launch VSCode and open integrated terminal
2. Type underscore character and try to switch the vscode theme 

![image](https://user-images.githubusercontent.com/8751130/31979000-fe7cf304-b976-11e7-9fbb-0f001d1c795d.png)
I already type the underscore character but it doesn't appear.
</Description>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36848</IssueID>
    <Title>"editor.wordSeparators" option is not always honored</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
swift|Kas|0.0.3
php-namespace-resolver|Meh|0.8.0
material-icon-theme|PKi|2.2.3
vscode-intelephense-client|bme|0.7.2
vscode-eslint|dba|1.4.0
vscode-dash|dee|1.7.1
gitlens|eam|5.7.1
vscode-npm-script|eg2|0.3.1
phpunit|ema|2.1.1
LogFileHighlighter|emi|1.2.0
phpcs|ika|0.7.0
insert-cursor-at-beginning-of-each-line-selected|kai|1.0.1
prettify-json|moh|0.0.3
vscode-duplicate|mrm|1.2.0
debugger-for-chrome|msj|3.4.0
php-docblocker|nei|1.3.2
pdf|tom|0.2.0
vim|vsc|0.10.2

(4 theme extensions excluded)


---

Steps to Reproduce:

1. Set the `editor.wordSeparators` option to `"editor.wordSeparators": "`~!@#%^&amp;*()-=+[{]}\\|;:'\",.&lt;&gt;/?"`. This is essentially the default value with `$` removed.
2. Enter this in the editor
```
$this-&gt;stuff
this stuff
and $this thing
```
3. Place the cursor at the beginning of line 1 and press `CMD+D` to highlight the word `$this`. Nothing happens. Further, moving the cursor to anywhere within the word `$this` and pressing `CMD+D` highlights `this`, effectively ignoring the `editor.wordSeparators`.
4. Side note: using the mouse *does* seem to honor the setting.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36838</IssueID>
    <Title>VS Code Insiders icon is now the Electron default icon</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (aaec2980609a4bbe44d0cfe2d3f78c85cba1be83, 2017-10-24T04:19:43.883Z)
- OS Version: Windows_NT x64 10.0.15063

The standard VS Code Icon no longer shows in VS Code Insiders or when app is pinned to taskbar, instead the default Electron app icon shows. This happened a couple updates ago. I've noticed this on two different machines I run code on. 

Screenshot:

![code-insiders-icon-is-default-electron-app-icon](https://user-images.githubusercontent.com/190154/31957131-b6f118f0-b8bb-11e7-9414-718eaa140a52.PNG)
</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36837</IssueID>
    <Title>Proposed FileSystemProvider API doesn't support multiple workspace folders per provider</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (4b01451cea60f32412098735709fddcac567b33d, 2017-10-19T08:25:22.140Z)
- OS Version: Linux x64 4.9.0-4-amd64

I would like to support multiple folders for a given FileSystemProvider in a single workspace.

As an example, a user's code-workspace might be configured as follows:

```
{
  "folders": [
    {
      "uri": "sftp://user1@host1/path/1"
    },
    {
      "uri": "sftp://user2@host2/path/2"
    }
  ]
}
```

I've attempted to accomplish this in a number of different ways, but it seems that the API, as currently implemented, doesn't support this use case.

With the current implementation, it appears that the `authority` passed to `vscode.workspace.registerFileSystemProvider()` must match precisely the scheme of the folder URI in order for the `onFileSystemAccess` activation to be properly dispatched. Only the first provider registered for a given authority will receive dispatches.

Additionally, the `root` field must be a single `vscode.Uri` to match the FileSystemProvider interface, so it is not possible to manually handle dispatching to separate backends in a single FileSystemProvider instance.</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36831</IssueID>
    <Title>Disable Typescript snippets suggestions on imports</Title>
    <Description>How to disable Typescript snippets on Imports?
It's annoying to read with all the snippets!

![image](https://user-images.githubusercontent.com/15092120/31940865-034407c2-b8c0-11e7-8982-bc8086091346.png)
</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36816</IssueID>
    <Title>editor.action.changeAll limited to only 999 selections</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 15.6.0

---

**Steps to Reproduce**:
1. Open a new file and add the same word 1000 times (may be you can use Emmet extension to do this quickly, for ex: div*1000 and tab, will produce &lt;div&gt;&lt;/div&gt; 1000 times)
2. Select the 1st word and press ⌘F2 or execute `editor.action.changeAll`

**Expected Result**:
All the 1000 matching words should be selected

**Actual Result**: 
Only 999 matching words are selected

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
**Reproduces without extensions**: Yes</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36814</IssueID>
    <Title>Old VS Code Icon on Pin to taskbar</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. Go to installation folder of VS Code
2. Right click executeable
3. Click pin to taskbar</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36810</IssueID>
    <Title>Poor Fuzzy search results in Go To File...</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.2.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vsc-material-theme|Equ|1.0.5
material-icon-theme|PKi|2.2.3
vscode-docker|Pet|0.0.20
application-insights|Vis|0.4.1
html-snippets|abu|0.1.0
android-dev-ext|ade|0.4.1
azuretoolsforvscode|bra|1.3.0
Gradle|caz|1.1.2
npm-intellisense|chr|1.3.0
bower|don|0.0.3
githistory|don|0.2.3
tslint|eg2|1.0.12
vscode-npm-script|eg2|0.3.1
vscode-npm|fkn|3.3.0
useful-react-snippets|igo|1.1.1
azure-functions-tools|joh|0.3.1
Go|luk|0.6.66
prettify-json|moh|0.0.3
mssql|ms-|1.2.0
atom-keybindings|ms-|3.0.2
azure-account|ms-|0.1.3
azurecli|ms-|0.3.0
csharp|ms-|1.12.1
mono-debug|ms-|0.15.7
node-debug2|ms-|1.18.3
PowerShell|ms-|1.4.3
vscode-azureextensionpack|ms-|0.0.6
team|ms-|1.122.0
azurerm-vscode-tools|msa|0.3.7
debugger-for-chrome|msj|3.4.0
Csharp-ASPNETCore|rah|1.0.5
usql-vscode-ext|usq|0.2.6
azure-iot-toolkit|vsc|0.3.0
vscode-react-native|vsm|0.4.4

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Open a project with many similar text files (MVC with lots of index.cshtml files)
2. Go To File and enter text from a word where the letters also exist in the namespace
In my example, I want the Tips index.cshtml but instead every file is selected because T, I and P are in my namespace
&lt;img width="616" alt="screenshot 2017-10-24 10 46 46" src="https://user-images.githubusercontent.com/511773/31936230-e2c50dd2-b8a8-11e7-8f2a-0440b57b8e48.png"&gt;

I would expect results order preference to favour full string matches

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36806</IssueID>
    <Title>extra characters are added to the links in the terminal </Title>
    <Description>- VSCode Version: Version 1.17.2
Commit b813d12980308015bcd2b3a2f6efa5c810c33ba5
Date 2017-10-16T13:57:00.652Z
Shell 1.7.7
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64
- OS Version: ubuntu 17.10

Steps to Reproduce:

1. print an output like this into the terminal:
```
templateData:  { event:
   { title: 'event one',
     location: 'room 1',
     description: 'not much 1',
     when: 'Mon. Nov 20, 11pm - 11 pm',
     timezone: 'BST',
     link:
      { yes: 'http://looopco.loc.dev:3000/#/event/1?confirm',
        no: 'http://looopco.loc.dev:3000/#/event/1?confirm=false' } } }
```
2. click on one of those URLs while holding down ctrl

expected result:
a proper link is opened

actual result:
a link is opened, but it has an extra `',` for the yes link and `'` for the no link

Reproduces without extensions: Yes

probably the regex used for the links needs tweaking</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36798</IssueID>
    <Title>Insiders 1.18.0 shows with default icon of Electron</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (aaec2980609a4bbe44d0cfe2d3f78c85cba1be83, 2017-10-24T04:19:43.883Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.17.0
gitlens|eam|5.7.1
vscode-icons|rob|7.16.0



---

Steps to Reproduce:

1. Open Visual Studio Code
2. Watch the icon on Taskbar

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36783</IssueID>
    <Title>Program Icon is default Electron icon</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (c1be82537d9fda852a258851f48ea78b7fc8a7a3, 2017-10-23T04:18:13.902Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.11.0
xml|Dot|1.9.2
EditorConfig|Edi|0.11.1
csharp|ms-|1.12.1
PowerShell|ms-|1.4.3
team|ms-|1.122.0



---

Steps to Reproduce:

1. Install latest update
2. Launch program


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![electron](https://user-images.githubusercontent.com/2301725/31916283-bcc2bd20-b806-11e7-8978-7e6c8ab58126.png)
</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36781</IssueID>
    <Title>Application icon shows the original one from the Electron framework.</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (c1be82537d9fda852a258851f48ea78b7fc8a7a3, 2017-10-23T04:18:13.902Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.4.0
python|don|0.7.0
xml|Dot|1.9.2
gitlens|eam|5.7.1
beautify|Hoo|1.1.1
node-module-intellisense|lei|1.4.0
cpptools|ms-|0.14.0
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.4.0
vscode-icons|rob|7.16.0
cmake|twx|0.0.17
unity-debug|Uni|1.2.1
cmake-tools|vec|0.10.2



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36780</IssueID>
    <Title>Truncated text in Error message pop-over bar blocks user from reading full error text</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
User Story:
- As a VSCode user, I would like to have the ability to read the full text of error messages generated by the IDE.

System Info:
- VSCode Version: 2.6.1-insiders.20171019
- OS Version: macOS 10.11.6 El Capitan

Steps to Reproduce:
1. Run F5/Debug on any TypeScript file _without_ any run profile configured
2. Error message pop-over contains truncated text and is impossible to read full error text
![vscode truncated error text 2017 10 23 at 14 39 22 png 2078x118](https://user-images.githubusercontent.com/3075047/31914990-b989b726-b801-11e7-8d98-cbca56da28e0.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Unable to confirm. `code` shortcut not found on system.
```bash
&gt; $ code --disable-extensions                                                                                                                                                 
zsh: command not found: code
```</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36777</IssueID>
    <Title>max single line length for some language colorizers is 20K characters (20000) and breaks subsequent line coloring.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2 ia32
- OS Version: Windows 10 Version 1703 (Build 15063.674)

Hello, I was looking at a CSS file `C:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\workbench\workbench.main.css` and It seems that only line 14 all of the color is off. All lines after show as though the are commented out.

Steps to Reproduce:

1. Open C:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\workbench\workbench.main.css
2. Look at line 14 (all uncolored).
3. if you add line 15 and start typing, only the comment **green** coloring continues until you do another block comment end "*/"

This will happen also for langauages JavaScript and C#. It was not happening for Clojure nor CoffeeScript. with the same length line.

It is related to #5303

The editor should let the developer know that their is a break between what they are seeing and the true **kind** of data being represented.
A warning pointing to this issue or a general message would suffice. 
Also of consideration, can this be offloading to an async Promise?

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36767</IssueID>
    <Title>New vscode icon is horrible</Title>
    <Description>- VSCode Version: 1.17.2
- OS Version: Win 10

Steps to Reproduce:

1. Install fresh VSCode
2. Suffer

Reproduces without extensions: Yes

Solution: Just use the old one. If the similarity to the visual studio icon is an issue, google "vscode icon" for tons of great alternatives as a source for inspiration.

P.S. Sorry guys, I know this issue is kinda silly but I couldn't resist: new icon looks terrible. Especially the color is bad.</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36759</IssueID>
    <Title>Module import intellisense is not working</Title>
    <Description>
- VSCode Version: 1.17.2
- OS Version: macOS Sierra

Steps to Reproduce:

1. `import 'angular'` intellisense is not working and it is not suggesting me angular
2. `import {} from 'angular'` now intellisense works

![image](https://user-images.githubusercontent.com/3028012/31896270-04d4c760-b81c-11e7-9210-04aa04da195d.png)

Note that I can still use control + space but if I have some longer imports I need to click it on every folder path.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36756</IssueID>
    <Title>Git panel always displays "scanning" progress bar.</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (c1be82537d9fda852a258851f48ea78b7fc8a7a3, 2017-10-23T05:12:06.273Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-settings-sync|Sha|2.8.3
sort-lines|Tyr|1.3.0
html-snippets|abu|0.1.0
Bookmarks|ale|0.17.0
project-manager|ale|0.22.0
vscode-eslint|dba|1.3.2
gitlens|eam|5.7.1
tslint|eg2|1.0.12
vscode-console-wrapper|fab|0.4.0
auto-rename-tag|for|0.0.14
Angular2|joh|2.9.0
ecdc|mit|0.10.3
HTMLHint|mka|0.4.0
vscode-autoprefixer|mrm|2.1.2
vscode-stylefmt|mrm|2.5.0
angular2-inline|nat|0.0.17
vscode-versionlens|pfl|0.19.1
stylelint|shi|0.30.0
Align|ste|0.2.0
change-case|wma|1.0.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Activate the source control page
2. the animated "scanning" bar runs continuously.

&lt;img width="320" alt="screen shot 2017-10-23 at 10 48 32 am" src="https://user-images.githubusercontent.com/835148/31895709-ebc00046-b7df-11e7-9e68-51193684672b.png"&gt;


</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>25/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36752</IssueID>
    <Title>Startup time seems to have gotten much longer</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: 

Extension|Author (truncated)|Version
csharp|ms-|1.12.1

---

Steps to Reproduce:

1.  Open code
2.  Wait.  An older (2-3 months ago) version of Code in one of my VM's loads in 3-4 seconds.  The current version Code on the physical machine takes 29 seconds.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
Yes</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36745</IssueID>
    <Title>Custom Stylesheet Support</Title>
    <Description>Please VSCode team, could you add support for custom stylesheet like Atom does? I want to be able to change my editor background image. This is supported on WebStorm as a plugin, it is supported on Atom by editing the Custom Stylesheet provided.
I would love to see this feature add.

- VSCode Version: 1.17.2
- OS Version: macOS High Sierra

Great work so far!!!</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36743</IssueID>
    <Title>issue in showing terminal when increasing the font size </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.2
- OS Version: kali
this is my setting:
{
    "window.zoomLevel": 2,
    "liveServer.settings.donotShowInfoMsg": true
}
and the image below shows the terminal
![image](https://user-images.githubusercontent.com/10278253/31886244-68744d0c-b800-11e7-801a-54114b9ec887.png)
</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36734</IssueID>
    <Title>Terminal text vertically clipped</Title>
    <Description>VSCode version:
```
Version 1.17.2
Commit b813d12980308015bcd2b3a2f6efa5c810c33ba5
Date 2017-10-16T13:57:00.652Z
Shell 1.7.7
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64
```

Using Ubuntu Xenial (16.04), installed fonts (using `apt-get`): `fonts-noto`, `fonts-dejavu`

Using `"editor.fontFamily": "'Noto Mono'"`, `"terminal.integrated.fontSize": 14`, notice how the bottom of the letter `g` is clipped:
![screenshot from 2017-10-23 16-37-47](https://user-images.githubusercontent.com/103977/31879855-49a6f3aa-b811-11e7-92d4-5bddc5b08d0e.png)

Using `"editor.fontFamily": "'DejaVu Sans Mono'"`, `"terminal.integrated.fontSize": 14`, running `echo ____`, notice how the underscore character `_` is completely invisible:
![screenshot from 2017-10-23 16-51-28](https://user-images.githubusercontent.com/103977/31880263-8b6e7e60-b812-11e7-9e59-356340722051.png)

The problem only happens in the terminal panel but not in the file editing area, despite they're using the same font with the same font size. Adjusting `"terminal.integrated.lineHeight"` has no effect on the clipping issue.</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36732</IssueID>
    <Title>Startup time really long (specially with extensions)</Title>
    <Description>VS Code takes really long to start. I attached screenshots from the startup performance window where it is visible that extensions alone take over 5 seconds. This is a really annoying issue. But even without extensions VS Code takes about 5 secs. This might not seem too much of an issue for you (as i've read in another issue that you consider 5 seconds to be fast) but it still breaks my workflow (considering i'm using extensions) and is really annoying. I'd hate to switch to another Editor, as I've really come to love using code and it's getting better with every update, however performance is a major factor for me. If I just want to open a file quickly and modify or just view it, I have to wait over 10 seconds, which for me is not acceptable. 

- VSCode Version: 1.17.2
- OS Version: Win 10 1703

Reproduces without extensions: Partially

Starting with extensions
![with extensions](https://user-images.githubusercontent.com/4669823/31878287-e4e784d4-b7d9-11e7-9294-5043f078899f.PNG)
![with](https://user-images.githubusercontent.com/4669823/31878864-c7675fd6-b7db-11e7-9aa0-d21024849f96.PNG)



Starting without extensions:
![noext](https://user-images.githubusercontent.com/4669823/31877971-bf86ee42-b7d8-11e7-91a0-a8210496a3f3.PNG)


EDIT: I uninstalled the code spellchecker (took most of the time) and disabled the azure tools extensions (3 of them, need them occasionally) so I will have to check how this affects the startup time as I'm currently using code.</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36731</IssueID>
    <Title>VSCODE Icon is not the correct one</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (c1be82537d9fda852a258851f48ea78b7fc8a7a3, 2017-10-23T04:18:13.902Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-svgviewer|css|1.4.3
code-runner|for|0.7.4
mediawiki|jak|2.1.0
web-browser|mas|0.0.1
vscode-antlr4|mik|1.1.10
azure-account|ms-|0.1.3
cpptools|ms-|0.14.0
debugger-for-chrome|msj|3.4.0
vscode-docker|Pet|0.0.20
material-icon-theme|PKi|2.2.3
vscode-hexdump|sle|1.4.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Run VsCode
2. Look at the Icon on the Title Bar... It-s not VsCode Icon.

</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36718</IssueID>
    <Title>Electron JS icon shown instead of VSCode icon in Windows</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (65c08338e4bece35fb53f5a1cdf56d30b7706157, 2017-10-20T15:35:45.848Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
project-manager|ale|0.22.0
vscode-icon-theme|jtl|1.5.0
markdown-shortcuts|mdi|0.8.1
debugger-for-chrome|msj|3.4.0
vscode-subword-navigation|ow|1.1.5
ejs-language-support|Qas|0.0.1
Encryptor|Rus|0.3.1
code-settings-sync|Sha|2.8.3
vscode-autohotkey|sle|0.2.1

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Have VSCode Insiders pinned to Windows taskbar

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

This is what it looks like
![image](https://user-images.githubusercontent.com/3955052/31869758-dd5cb222-b7f5-11e7-9938-b440d400e092.png)

![image](https://user-images.githubusercontent.com/3955052/31869785-03dec49e-b7f6-11e7-9abf-5d860524ec89.png)

![image](https://user-images.githubusercontent.com/3955052/31869806-1c45b1c8-b7f6-11e7-9e32-679032639fda.png)
</Description>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36710</IssueID>
    <Title>1.18 Insiders using default electron icon?</Title>
    <Description>Like it says in the title, I updated today and the VS Code icon is missing in favor of the blurry Electron circle.

![image](https://user-images.githubusercontent.com/192942/31865610-7ee6f718-b73f-11e7-87dd-3fc68001efd3.png)


- VSCode Version: Code - Insiders 1.18.0-insider (65c08338e4bece35fb53f5a1cdf56d30b7706157, 2017-10-20T15:35:45.848Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
armsnippet|art|0.7.0
githistory|don|0.2.3
xml|Dot|1.9.2
gitlens|eam|5.7.1
vscode-great-icons|emm|2.1.17
vsc-material-theme|Equ|1.0.5
code-runner|for|0.7.4
fontsize-shortcuts|fos|1.4.0
rest-client|hum|0.15.3
easy-icons|jam|0.3.1
vstsbuildstatus|jep|0.7.1
Angular2|joh|2.9.0
copy-github-url|mat|0.1.0
theme-monokai-pro-vscode|mon|1.1.2
azure-account|ms-|0.1.3
PowerShell|ms-|1.4.3
sublime-keybindings|ms-|2.9.1
vscode-code-outline|pat|0.0.11
vscode-docker|Pet|0.0.20
startanyshell|rem|0.3.1
vscode-icons|rob|7.16.0
code-settings-sync|Sha|2.8.3
cucumber|ste|0.9.6
ayu|tea|0.8.0
tmlanguage|Tog|0.8.4
expand-selection-to-scope|vit|0.2.0
bootstrap-3-snippets|wcw|0.1.0
better-align|wwm|1.1.6
sublime-commands|Zar|0.1.0
html-css-class-completion|Zig|1.11.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36709</IssueID>
    <Title>Feature request: Ability to focus single folder in file explorer</Title>
    <Description>While working, would be pretty darn sweet if we could right click a folder and select an option like "Focused Folder/Directory" or something around those lines. 

What this would do is single out this selected directory in your file explorer while collapsing everything else. So you would only see what you are interested in your file explorer (while still having the option to see everything else). This is essentially a filter on the explorer.</Description>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36707</IssueID>
    <Title>Icons are not correctly rendered in Open Editors pane</Title>
    <Description>![image](https://user-images.githubusercontent.com/696981/31865372-6b891c9e-b76e-11e7-97b5-c4e3fca57bac.png)


Steps to Reproduce:

1. Open a file
1. Modify it
1. Grab the left pane and shrink it until you get something similar to this.

![image](https://user-images.githubusercontent.com/696981/31865370-61b37e76-b76e-11e7-9e16-70d540defad3.png)

You can see below that depending on the file icon theme this can happen or not.

![left-pane](https://user-images.githubusercontent.com/696981/31865389-be399de2-b76e-11e7-873e-a6e7d01ab926.gif)

For more info you can see this issue [vscode-icons#1280](https://github.com/vscode-icons/vscode-icons/issues/1280).
</Description>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36705</IssueID>
    <Title>"editor.showFoldingControls": "always" option not effect on  version 1.17.2 (1.17.2).</Title>
    <Description>"editor.showFoldingControls": "always" option not effect on  version 1.17.2 (1.17.2).</Description>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36664</IssueID>
    <Title>"resource" scoped setting returns stale value</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0-insider
  Commit 4b01451cea60f32412098735709fddcac567b33d
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. Clone `https://github.com/dlech/vscode-workspace-settings-bug.git` in VS Code
2. Run/debug the extension
3. Open a folder in the extension development host
4. Open any file in this folder (create a new file if needed)
5. Use command palette to run "Show setting1" - it shows an info box with the default value "default"
6. Use the settings editor to change the value of "extension.setting1" for the folder.
7. Run the  "Show setting1" command again - **it still shows "default" instead of the new value**
8. Reload the window
9. Run the  "Show setting1" command again - it now shows the correct value from the folders settings


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36661</IssueID>
    <Title>Integrated console is not loading</Title>
    <Description>![image](https://user-images.githubusercontent.com/13441800/31843945-6ab9098c-b5bb-11e7-9e83-c75f490daa09.png)

- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.3.2
bower|don|0.0.3
githistory|don|0.2.3
gitlens|eam|5.6.5
tslint|eg2|1.0.12
beautify|Hoo|1.1.1
csharpextensions|jch|1.3.0
docomment|k--|0.0.17
vscode-csproj|luc|0.7.0
prettify-json|moh|0.0.3
csharp|ms-|1.12.1
team|ms-|1.122.0
debugger-for-chrome|msj|3.4.0
vscode-docker|Pet|0.0.20
material-icon-theme|PKi|2.2.2
guides|spy|0.9.0
jsx|Twe|0.0.1
html-css-class-completion|Zig|1.11.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36660</IssueID>
    <Title>Search and replace in multiple files is not usable with long lines</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.16299
- Extensions: none
---

Steps to Reproduce:

1. I use search and replace in a large markdown-based documentation project 
2. Search and replace UI allows me to pick specific instances of a term to be replaced
3. To the right of the search pane I see a diff view of before and after the replacement
4. Documents are authored with long lines, and many instance of the term to be replaced don't fit in the screen 
5. It is not possible to turn on word wrap in a diff view. Hence the text that I am replacing is not visible without extensive horizontal scrolling, and as a result VS Code is not usable for this scenario.

In comparison, the search and replace experience offered by Atom is much more usable for this scenario, e.g. the text to replace is always visible and in context.</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36643</IssueID>
    <Title>Integrated terminal doesn't recognize project folder location on removable media (WSL Bash)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17
- OS Version: Windows 10.0.16299.19 (Win10 1709) 

Steps to Reproduce:

1. Mount any removable device (say its drive letter is D) in WSL Bash so you can access it via "/mnt/d".
2. Make sure you use WSL Bash as integrated terminal.
3. Open a project folder on this removable device.
4. The integrated Bash terminal defaults to WSL Bash's user home directory, not to the project folder. This somehow makes sense because it was not possible to mount removable devices in former builds of WSL. However it's been implemented for a while now and since Fall Creators Update this feature is available to a wider public. As a consequence, it's not trivial to use Tasks oder Launch commands because they all operate in the wrong location. 
This fallback solution should be replaced with a check whether the folder is currently accessible in /mnt/ or not. Note that the removable drives stay mounted as long as there exists an open Bash window (globally, not restricted to VS Code terminals) or the user unmounts it.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36642</IssueID>
    <Title>Git Diff line button near line number overlays folding button</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (3495b0b185acbe8188e821ccb3ae807274703a9c, 2017-10-17T04:23:54.942Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
vscode-css-modules|cli|0.2.2
vscode-markdownlint|Dav|0.10.1
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
xml|Dot|1.9.2
gitlens|eam|5.7.1
vscode-npm-script|eg2|0.2.1
prettier-vscode|esb|0.24.0
git-project-manager|fel|1.4.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.2
vscode-npm|fkn|3.3.0
flow-for-vscode|flo|0.7.2
vscode-rust|kal|0.4.2
graphql-for-vscode|kum|1.6.2
azure-account|ms-|0.1.3
PowerShell|ms-|1.4.3
debugger-for-chrome|msj|3.4.0
vscode-docker|Pet|0.0.20
material-icon-theme|PKi|2.2.2
markdown-preview-enhanced|shd|0.2.9
wordpress-snippet|tun|1.1.2
vscode-import-cost|wix|2.5.0
JavaScriptSnippets|xab|1.5.0
markdown-all-in-one|yzh|0.11.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Hover over the folding left-handside button on a modified git line
2. Folding button is not clickable, overlayed by the Git Diff button

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36637</IssueID>
    <Title>Poor compatibility with Power Line</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
![2017-10-20 17-13-49](https://user-images.githubusercontent.com/11586744/31825199-160563e6-b5ba-11e7-8c78-00f4379ea409.png)

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.17.1
- OS Version: Fedora 26

Steps to Reproduce:

1. Run VS Code
2. Open terminal

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36632</IssueID>
    <Title>Disable space converstion to tabs</Title>
    <Description>Upon pressing enter, Visual Studio Code will convert `\t\t_____` to `\t\t\t_` (underscore means space) if your tab size is set to 4.  When I say "2 tabs and 5 spaces" I mean "2 tabs and 5 spaces" and I don't want VS Code replacing some of my spaces with tabs.  I am using tabs for indentation and spaces for alignment.  There should be an option to prevent VS Code from converting spaces to tabs when determining indentation upon pressing enter.</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36622</IssueID>
    <Title>Minimap out of sync with scrollbar</Title>
    <Description>Not sure if this belongs here but it is issue after all....

Minimap gets out of sync with scroll position. ( left image - u can crearly see, that scrollbar handle is far lower than minimap 'handle' ... )

Also error markers ( in green circle ) are in scope of scrollbar and not minimap ... i usually center minimap view to that red box, get confused for a while and then move to correct place

Can be minimap changed to look similar to Visual Studio (right image) - basically hide 'default' scrollbar and render custom scrollbar with minimap inside?

![minimap](https://user-images.githubusercontent.com/12444673/31811455-efe8c67e-b57f-11e7-8f1c-a5df46b89d8d.png)


</Description>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36564</IssueID>
    <Title>Fixes icon is overlapping the content/code in windows</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
ng-template|Ang|0.1.7
path-intellisense|chr|1.4.2
angular2-snippets|dan|1.0.16
jshint|dba|0.10.15
vscode-eslint|dba|1.3.2
vscode-html-css|ecm|0.1.8
tslint|eg2|1.0.11
vscode-great-icons|emm|2.1.16
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
auto-close-tag|for|0.5.1
code-runner|for|0.7.3
beautify|Hoo|1.1.1
rest-client|hum|0.15.3
angular2-switcher|inf|0.1.4
vscode-angular2-emmet|jak|2.0.3
Angular2|joh|2.9.0
vscode-extension-auto-import|mop|1.3.3
vscode-scss|mrm|0.6.2
typescript-hero|rbb|1.6.0
vscode-icons|rob|7.15.0
stylelint|shi|0.30.0
autoimport|ste|1.2.2
Angular2|UVB|0.4.1
JavaScriptSnippets|xab|1.5.0
html-css-class-completion|Zig|1.11.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36543</IssueID>
    <Title>vscode change file stat</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
   1.17.2
- OS Version:
   macos 10.13


Steps to Reproduce:

On macOS 10.13 i use __Samba__ connect __linux__, __vscode open project on linux server__, vscode create file or save file will change file stat.
form
![image](https://user-images.githubusercontent.com/7554917/31763738-cb69880c-b484-11e7-8ef8-4ba6e89380b4.png)
to
![image](https://user-images.githubusercontent.com/7554917/31763753-d9170a4c-b484-11e7-82f9-fb41e7489a15.png)

someting wrong on integrate terminal:
![image](https://user-images.githubusercontent.com/7554917/31763855-2a5e04be-b485-11e7-87de-45002b8a57a8.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36526</IssueID>
    <Title>[Feature request] Toolbar functionality (custom or extend exist)</Title>
    <Description>It will be great to have possibility to create custom toolbar similar way like in atom - https://atom.io/packages/tool-bar

Or (imo better solution) possibility to extend current toolbar with user defined action / icons

![](https://i.imgur.com/EWMgqQ8.png)

</Description>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36521</IssueID>
    <Title>Error messages no longer "link" to error in code</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:10:17.189Z)
- OS Version: Darwin x64 16.7.0
- Extensions: none
---

Steps to Reproduce:

1. create an error in some server side code.
2. run the code and let the debugger flag the error
3. try to click on the line of code where the error is identified... 
4. nothing happens :( (it used to which is why I keep trying it)</Description>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36516</IssueID>
    <Title>Render Issue - macOS 10.13</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z) - also 1.17/1.17.1
- OS Version: Darwin x64 17.2.0 (macOS 10.13.1 Beta (17B35a))
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
material-icon-theme|PKi|2.2.2
java|red|0.12.0
code-spell-checker|str|1.4.10
code-spell-checker-german|str|0.1.2

(2 theme extensions excluded)


---

### Description

Some parts of the window begin to flicker or disappear by hovering over them (see the image below). The application it self doesn't seem be stuck in this moment. Shortcuts and command are working properly. Also writing and saving is no problem, despite that I can't see what I'm writing at this moment. 

It happens often during longer sessions and also sometimes directly after startup. 

In some cases it can be easily by with switching to another application and back, but more often the window has to be reloaded in order to fix this issue. (At least for a short period.)

![vs-code_render-issue](https://user-images.githubusercontent.com/20145354/31742673-9cd5363e-b458-11e7-9f88-cf51951a9e81.png)

Currently I'm trying to figure out if it happens only while using specific extensions. Does someone else has similar issues?

### Steps to Reproduce:

I don't found a good way to reproduce this issue. 

As mentioned earlier, it happens often during longer sessions, but also sometimes directly after startup. 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No (not quite sure yet)</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36515</IssueID>
    <Title>Integrated Terminal: Character Under Cursor Gets Pushed Up</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
output-colorizer|IBM|0.1.2
quokka-vscode|Wal|1.0.72
markdown-checkbox|bie|0.0.3
markdown-emoji|bie|0.0.6
markdown-preview-github-styles|bie|0.1.0
vscode-svgviewer|css|1.4.3
githistory|don|0.2.3
prettier-vscode|esb|0.24.0
git-project-manager|fel|1.4.0
auto-rename-tag|for|0.0.14
graphql-for-vscode|kum|1.6.2
csharp|ms-|1.12.1
sublime-keybindings|ms-|2.9.1
debugger-for-chrome|msj|3.4.0
word-counter|plu|0.0.1
json-template|sto|0.3.1
language-stylus|sys|1.7.3
twig|wha|1.0.2

Reproduces without extensions: Yes

---

User Settings:

```json
{
	"[markdown]": {
		"editor.quickSuggestions": false,
		"editor.rulers": [],
		"editor.wordWrap": "bounded",
		"editor.wordWrapColumn": 80,
		"editor.wrappingIndent": "none",
		"files.trimTrailingWhitespace": false
	},
	"files.associations": {
		".aliases": "shellscript",
		".functions": "shellscript",
		".tern-config": "json"
	},
	"editor.fontSize": 15,
	"editor.insertSpaces": false,
	"editor.minimap.enabled": true,
	"editor.multiCursorModifier": "ctrlCmd",
	"editor.renderControlCharacters": true,
	"editor.renderWhitespace": "boundary",
	"editor.rulers": [120, 80],
	"editor.tabSize": 2,
	"editor.wordWrap": "on",
	"explorer.autoReveal": false,
	"explorer.openEditors.visible": 0,
	"extensions.autoUpdate": true,
	"files.exclude": {
		"**/.DS_Store": true,
		"**/.git": true,
		"**/.gitkeep": true,
		"**/.hg": true,
		"**/.svn": true,
		"**/bin": true,
		"**/CVS": true,
		"**/node_modules": true
	},
	"files.insertFinalNewline": true,
	"files.trimTrailingWhitespace": true,
	"telemetry.enableCrashReporter": false,
	"telemetry.enableTelemetry": false,
	"window.newWindowDimensions": "maximized",
	"window.title": "${activeEditorMedium}${separator}${rootName}",
	"window.zoomLevel": 0,
	"workbench.colorTheme": "Monokai",
	"workbench.commandPalette.history": 0,
	"workbench.commandPalette.preserveInput": true,
	"workbench.editor.openPositioning": "last",
	"workbench.startupEditor": "newUntitledFile",
	"workbench.statusBar.visible": true,
	"prettier.printWidth": 120,
	"prettier.singleQuote": true,
	"prettier.trailingComma": "all",
	"prettier.useTabs": true,
	"markdown.preview.fontSize": 16,
	"debug.inlineValues": true,
	"window.restoreWindows": "all",
	"editor.minimap.showSlider": "always",
	"editor.minimap.renderCharacters": false,
	"editor.wrappingIndent": "indent",
	"editor.colorDecorators": false,
	"editor.formatOnSave": true,
	"javascript.implicitProjectConfig.checkJs": true,
	"npm.runSilent": true,
	"terminal.integrated.lineHeight": 1.2,
	"gitProjectManager.baseProjectsFolders": [
		"~/Projects",
		"~/Work"
	],
	"gitProjectManager.ignoredFolders": ["node_modules"],
	"gitProjectManager.searchInsideProjects": false,
	"auto-rename-tag.activationOnLanguage": ["html", "php", "xml", "jsx", "tsx"],
	"typescript.format.enable": false,
	"javascript.format.enable": false,
	"html.format.enable": false,
	"git.confirmSync": false,
	"window.nativeTabs": true,
	"workbench.editor.enablePreview": false,
	"editor.tabCompletion": true,
	"editor.formatOnPaste": true,
	"editor.wordBasedSuggestions": false
}
```

---

I got an issue on macOS Sierra in the integrated terminal, that the character under the cursor gets pushed up. It only happens since I updated from `1.17.0` to `1.17.1`, How far it gets pushed up depends on the line the cursor is in, and from line six on the currently selected character is invisible.

![screencast](https://user-images.githubusercontent.com/3410759/31699821-9de79468-b421-11e7-9daf-d53cd1a34715.gif)

![image](https://user-images.githubusercontent.com/3410759/31711224-fa04093e-b453-11e7-9c55-48336d398fd5.png)

![image](https://user-images.githubusercontent.com/3410759/31711289-1b17b9c2-b454-11e7-8244-62c3cc72e19c.png)

![image](https://user-images.githubusercontent.com/3410759/31711311-2deda872-b454-11e7-87f3-e2dd8060cb9b.png)

![image](https://user-images.githubusercontent.com/3410759/31711314-33ac5560-b454-11e7-920d-af50440c23ca.png)

![image](https://user-images.githubusercontent.com/3410759/31711367-5b353264-b454-11e7-8fed-17346f72d09d.png)

(originally reported in #35991)</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>21/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36508</IssueID>
    <Title>Marketplace request times out</Title>
    <Description>Im not sure where to post this issue, but im having trouble reaching marketplace.visualstudio.com both through browsers and extensions in vscode. In vscode, when I try to search for extensions I get this error after a while: "XHR failed:".

I'm not behind any proxy and I can reach all other sites just fine, the problem started about a week ago.
Done the basic things as restarting router, trying on another computer etc.

Here are some additional information:

Pinged these sites:
```
vscode-update.azurewebsites.net -&gt; Request timed out
vscode.blob.core.windows.net -&gt; Request timed out
marketplace.visualstudio.com -&gt; Request timed out
www.gallerycdn.vsassets.io -&gt; OK
rink.hockeyapp.net -&gt; Request timed out
```

nslookup for marketplace.visualstudio.com gives me:
```
Server:  router.asus.com
Address:  192.168.1.1

Non-authoritative answer:
Name:    marketplace.visualstudio.com
Address:  13.85.19.92
```


Tracert for marketplace.visualstudio.com:

```
  1    &lt;1 ms    &lt;1 ms    &lt;1 ms  router.asus.com [192.168.1.1]
  2     1 ms     1 ms     1 ms  xxx
  3    &lt;1 ms    &lt;1 ms    &lt;1 ms  xxx
  4    &lt;1 ms    &lt;1 ms    &lt;1 ms  xxx
  5    &lt;1 ms    &lt;1 ms    &lt;1 ms  xxx
  6     1 ms    &lt;1 ms    &lt;1 ms  xxx
  7     5 ms     5 ms     5 ms  mlm-cr1.link.netatonce.net [85.195.62.38]
  8     6 ms     6 ms     6 ms  netnod-ix-cph-1500.microsoft.com [195.69.117.181]
  9     6 ms     5 ms     5 ms  ae0-0.cph30-96cbe-1a.ntwk.msn.net [198.206.164.26]
 10    29 ms    29 ms    29 ms  ae10-0.amb-96cbe-1a.ntwk.msn.net [198.206.164.28]
 11   132 ms   132 ms   132 ms  be-61-0.ibr01.amb.ntwk.msn.net [104.44.9.132]
 12   134 ms   133 ms   134 ms  be-5-0.ibr01.lts.ntwk.msn.net [104.44.4.233]
 13   133 ms   132 ms   133 ms  be-1-0.ibr02.lts.ntwk.msn.net [104.44.4.220]
 14   132 ms   132 ms   132 ms  be-2-0.ibr02.lon30.ntwk.msn.net [104.44.5.40]
 15   132 ms   132 ms   132 ms  be-8-0.ibr02.nyc04.ntwk.msn.net [104.44.5.28]
 16   132 ms   132 ms   133 ms  be-4-0.ibr02.nyc04.ntwk.msn.net [104.44.4.29]
 17   132 ms   132 ms   133 ms  be-3-0.ibr02.was05.ntwk.msn.net [104.44.4.26]
 18   133 ms   133 ms   134 ms  be-1-0.ibr01.cnr01.bn6.ntwk.msn.net [104.44.4.159]
 19   135 ms   132 ms   133 ms  be-3-0.ibr01.bn1.ntwk.msn.net [104.44.4.49]
 20   132 ms   134 ms   132 ms  be-1-0.ibr01.atb.ntwk.msn.net [104.44.4.38]
 21   132 ms   134 ms   133 ms  be-6-0.ibr02.sn4.ntwk.msn.net [104.44.4.47]
 22   131 ms   131 ms   131 ms  ae81-0.sn4-96cbe-1a.ntwk.msn.net [104.44.9.89]
 23     *        *        *     Request timed out.
```

Anyone have an idea?</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36507</IssueID>
    <Title>Mac: ENOSPC causes currently editing file content to be deleted</Title>
    <Description>When I'm working in VS Code and my Mac is running on low storage, I've encountered numerous times VS Code complaining about "ENOSPC" and refusing to save a file, which makes sense to me and is expected behavior. Once I close VS Code, however, I find that it had completely deleted the content of the file I was working on. At this point, the only hope I have is to copy the editor content before exiting VS Code, paste it into vim, and save it before rebooting.

I should mention that I have Auto-save turned on.

Ideally, if a "ENOSPC" error occurs, VS Code should not write out empty file contents.

- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:47:41.889Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.19
python|don|0.7.0
azure-account|ms-|0.1.3
cpptools|ms-|0.13.1

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Live dangerously, and work on a file in VS Code with very low space on your OS X boot drive
2. Edit away until an "ENOSPC" error occurs
3. Close VS Code, ignoring its warning of unsaved changes
4. Open the file you were editing in another text editor, use `cat`, or open it in VS Code again once you have freed up some space. It won't matter. Your code is gone for good.

Reproduces without extensions: Uncertain</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36504</IssueID>
    <Title>End of HTML comments failing</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Steps to Reproduce:
![image](https://user-images.githubusercontent.com/5665290/31731055-afe9d448-b3e8-11e7-8238-f2f266621fda.png)

Html Comment styling continues past end of comments.

</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36501</IssueID>
    <Title>Long lines are truncated and find does not work on them</Title>
    <Description>Version 1.17.1
Commit 1e9d36539b0ae51ac09b9d4673ebea4e447e5353
Date 2017-10-10T14:21:18.489Z
Shell 1.7.7
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64

OS Version: Linux Mint

Steps to Reproduce:
1. create new file
2. copy this line into it:
```

```
3. you should be not able to sroll to the end. You will see `aaaaa...` on the end. Instead you should see `aaab`
4. try to find occurence of `b` with ctrl + f function, it will find the character but it will not scroll into it

Reproduces without extensions: Yes</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36496</IssueID>
    <Title>Feature Request: Columns and rows selection like Visual Studio</Title>
    <Description>In Visual Studio, and in every text editor like notepad++, I'm able to select rows and columns pressing Shift+Alt and the arrows key. The same behaviour is possible in Visual Studio code pressing Ctrl-Shift-Alt-Arrows but at the end of the editing i want to return to the normal state pressing one of the arrows key. Now in VS Code the only way to exit for this state is pressing esc button. Hope it's clear. ;-) Thanks!</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36481</IssueID>
    <Title>The custom-built PATH shows twice in terminal of vscode.</Title>
    <Description># Basic Information # 
VSCode Version: 1.17.2
 OS Version: macOS 10.13

# Steps to Reproduce : #

1.  I'm working in go, so I configured the running environment of go on my mac.
2. I edit `.bash_profile`,  add the statement `export $PATH=$PATH:$(go env GOPATH)/bin`.(`$(go env GOPATH)` equals to `/Users/Mann/go`)
3. In terminal of vscode, it shows `/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/Mann/go/bin:/Users/Mann/go/bin` when I excute the command `echo $PATH`.(`/Users/Mann/go/bin` shows twice)
4. But it shows only once on bash of mac.

# Screenshot #
## terminal of vscode: ##
![image](https://user-images.githubusercontent.com/10355814/31717672-7c700c42-b3d2-11e7-9ea5-09b02b3dc5b8.png)

## bash of mac: ##
![image](https://user-images.githubusercontent.com/10355814/31717706-a111c680-b3d2-11e7-9dfa-331844bbe5d4.png)


Reproduces without extensions: Yes</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>21/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36470</IssueID>
    <Title>changelog opened when click collapse function/class/etc.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.18.0-insider
- OS Version: MacOS Siera 10.12.6 (16G29)

Steps to Reproduce:

1. click collapse button [+]
2. open SCM changelog

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36464</IssueID>
    <Title>Scrolling using touch pad is very choppy.</Title>
    <Description>- VSCode Version: Code 1.17.2 (b813d12980308015bcd2b3a2f6efa5c810c33ba5, 2017-10-16T13:59:46.104Z)
- OS Version: Windows_NT x64 10.0.17008
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
MagicPython|mag|1.0.12
cpptools|ms-|0.13.1
csharp|ms-|1.12.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36463</IssueID>
    <Title>[Feature Request] feature to update vscode internally</Title>
    <Description>it would be great if we could have update vscode without every time downloading and installing it again and again, maybe through using some gui or even option for automatic update, this is awesome because specially now days minor updates are coming in short periods of time. 
</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>21/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36454</IssueID>
    <Title>the terminal always crashes when stop a process by Ctrl+C</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:41.632Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
speech|bie|0.0.1
scala|dal|0.0.4
vscode-markdownlint|Dav|0.10.1
vscode-instant-markdown|dba|1.3.0
glslx-vscode|eva|0.0.11
easy-less|mrc|1.4.5
java|red|0.11.0
sass-indented|rob|1.4.4
preview-vscode|sea|1.3.4
shader|sle|1.0.0
shader-toy|ste|0.4.0
ActionScript3|yop|0.0.1

(4 theme extensions excluded)


---

Steps to Reproduce:

1. type `npm start` to start a server process
2. stop the server by `Ctrl+C`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36436</IssueID>
    <Title>TypeScript Syntax Highlighting breaks when using ++ inside an if statement</Title>
    <Description>- VSCode Version: 1.17.0
- OS Version: Windows 10

Using the ++ shorthand in an if statement on a TypeScript file breaks the syntax highlighting (fine when preceding the variable).

How it should look:

![image](https://user-images.githubusercontent.com/4381789/31678674-d7ab218c-b33c-11e7-9dc8-71914fc1caec.png)

How it looks:

![image](https://user-images.githubusercontent.com/4381789/31678695-ec339008-b33c-11e7-95b2-68ea87c7ac26.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36434</IssueID>
    <Title>excuse me, can you tell me how to set two or more backgroundImages in my IDE's</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36419</IssueID>
    <Title>Blurred text on integrated terminal</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:21:18.489Z)
- OS Version: Linux x64 4.10.0-37-generic
- Distribution: Ubuntu 17.04 (Zesty)
- Extensions: none
---

Steps to Reproduce:

1. Install VSCode from .deb package
2. Open Integrated terminal.

Images:
v1.16 (not-blurred):
![not-blurred](https://user-images.githubusercontent.com/9947992/31667481-94c75896-b31d-11e7-99f8-1766b57af733.png)

v1.17(blurred):
![blurred](https://user-images.githubusercontent.com/9947992/31667486-97572d02-b31d-11e7-8946-abe9a6584bd9.png)

Details:

On versions 1.16.x and 1.17.0 the integrated terminal works perfectly fine (except for some resize functionalities). After the 1.17.1 update, I noticed the blurred output. Everything else seems to work as expected. I tried reinstalling but the issue persisted. I tried downgrading to 1.16, and the difference persisted. Also, I used two new VMs, 16.04 and 17.04 respectively. In the 16.04 version, the output is not blurred but it is on 17.04. Thus, this issue only affects 17.04.
</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36414</IssueID>
    <Title>rg.exe take all cpu</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
rainbow-brackets|2gu|0.0.6
autofoldyeah|bob|1.0.6
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
regex|chr|0.1.0
vscode-svgviewer|css|1.4.3
vue-peek|dar|1.0.2
vscode-eslint|dba|1.3.2
python|don|0.7.0
vscode-html-css|ecm|0.1.8
tslint|eg2|1.0.11
vscode-npm-script|eg2|0.2.1
phpunit|ema|2.1.1
json-tools|eri|1.0.2
tortoise-svn|fan|0.1.1
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
php-pack|fel|1.0.1
auto-close-tag|for|0.5.1
auto-rename-tag|for|0.0.14
webpack-snippets|gog|0.0.3
vue-snippets|hol|0.1.5
emoji-code|idl|0.3.0
phpcs|ika|0.7.0
webpack|jer|2.0.2
php-namespace-resolver|Meh|0.8.0
code-beautifier|mic|1.7.2
debugger-for-chrome|msj|3.3.1
vuejs-extension-pack|mub|0.2.1
php-docblocker|nei|1.3.2
vetur|oct|0.9.11
material-icon-theme|PKi|2.2.2
vscode-css-peek|pra|1.3.1
CSSLint|ray|0.0.3
sass-indented|rob|1.4.4
vue-vscode-snippets|sdr|1.0.3
markdown-preview-enhanced|shd|0.2.9
stylelint|shi|0.30.0
guides|spy|0.9.0
vscode-todo-highlight|way|0.5.11
vscode-import-cost|wix|2.5.0
JavaScriptSnippets|xab|1.5.0
html-css-class-completion|Zig|1.11.0



---

Steps to Reproduce:

1.git clone https://github.com/googlearchive/flipjs
2.cd flipjs
3.code .
4.npm i
5.reopen flipjs

![2017-10-16_101813](https://user-images.githubusercontent.com/12824616/31664355-af75a9f4-b377-11e7-8ce9-600bbfde5db8.png)
![2017-10-16_101833](https://user-images.githubusercontent.com/12824616/31664356-afb7f57a-b377-11e7-9a3a-b3919fbc0f8e.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36406</IssueID>
    <Title>always show git change window when fold code</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0-insider
- OS Version: windows 10

Steps to Reproduce:

1. enable git in settings
2. do some change on my code
3. try to fold or unfold my changed code
before mouse hover
![image](https://user-images.githubusercontent.com/8176600/31658686-5113cc82-b364-11e7-823e-beff8a5da0c1.png)
after mouse hover
![image](https://user-images.githubusercontent.com/8176600/31658645-2da86410-b364-11e7-8896-0aa20dafc572.png)
4. click the fold butons, always show a changes win
![image](https://user-images.githubusercontent.com/8176600/31658778-99a6995c-b364-11e7-96aa-9d72e3e0ce01.png)
5. even though I unfold my code within some changes, this changes window will show too.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: no</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36404</IssueID>
    <Title>Touch board double finger rolling sometimes has delay, not smooth. In win10</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
better-comments|aar|0.1.3
html-snippets|abu|0.1.0
vscode-database|baj|1.2.0
githistory|don|0.2.3
jquerysnippets|don|0.0.1
python|don|0.7.0
vscode-npm-script|eg2|0.2.1
react-native-react-redux|EQu|1.4.1
php-debug|fel|1.11.1
auto-close-tag|for|0.5.1
auto-rename-tag|for|0.0.14
vue-snippets|hol|0.1.5
phpcs|ika|0.7.0
vue|jcb|0.1.5
php-cs-fixer|jun|0.1.45
code-beautifier|mic|1.7.2
mssql|ms-|1.2.0
node-debug2|ms-|1.18.3
debugger-for-chrome|msj|3.3.1
vetur|oct|0.9.11
vuehelper|oys|0.1.0
vscode-icons|rob|7.15.0
sass-indented|rob|1.4.4
php-formatter|Sop|0.2.4
autoimport|ste|1.2.2
code-spell-checker|str|1.4.10
react-beautify|tai|0.3.0
python|tht|0.2.3
vscode-react-native|vsm|0.4.2
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:

1.Touch board double finger rolling sometimes has delay, not smooth
2.Sometimes there's no problem
3.Double finger scrolling has no problem with other programs

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36402</IssueID>
    <Title>Add abilty to select multiple file or folder on file exploler view using Ctrl and Shift Key</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Ubuntu 16.04

This would be helpful when you try to delete or move files and folders  inside the workspace</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36399</IssueID>
    <Title>Suggestion for multi-lines comments and folding</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Windows 10

Steps to Reproduce:

1. Write a multi-lines comment using `/** */`. Eg:
```javascript
/**
 * This is my comment
 * on multiple lines.
 */
```
2. Fold up the comment
```javascript
 /** ...
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

**Suggestion:**
It would be good to have the first line of the comment when folded. Eg:
```javascript
/** This is my comment...
```

Best regards</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36395</IssueID>
    <Title>cpu run 100% when open the vscode</Title>
    <Description>
![bug2](https://user-images.githubusercontent.com/20512530/31653496-528b86fe-b355-11e7-8aa5-e59c174cd2fe.png)
Hello , when i have updated the vscode to 1.17.1,it seems to have some question.Everytime  i open the vscode when i first turn on the computer


- VSCode Version:1.17.1
- OS Version:14393.1770

Steps to Reproduce:

1.Turn on the computer
2.Then i open the vs
![bug1](https://user-images.githubusercontent.com/20512530/31653483-4d6ef11a-b355-11e7-8de6-fb9fb38438d6.png)
code 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
![bug1](https://user-images.githubusercontent.com/20512530/31653504-5d4c0816-b355-11e7-93d7-f86faf0f397b.png)


Reproduces without extensions: No</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36386</IssueID>
    <Title>fontFamily Consolas, Use space but not ALIGN</Title>
    <Description>
![untitled 2](https://user-images.githubusercontent.com/10942241/31647866-49a6db00-b33d-11e7-96d7-21de891794fc.png)
- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-great-icons|emm|2.1.16
material-icon-theme|PKi|2.2.2

(6 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36382</IssueID>
    <Title>there is code ghosting  in the terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: 10.11.6

Steps to Reproduce:

1.  when output logs in the terminal, there is code ghosting.
![image](https://raw.githubusercontent.com/tingtien/node-web/master/templates/images/1.jpg)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36380</IssueID>
    <Title>hide tree view  persistence on workspace settings</Title>
    <Description>there is many root tree view item when installed some plugins. so the real file explorer there is minimal space.   and i click `Hide from sidebar` but next open is still appear. 
can you persistence the hide opration to workspace settings.

or just let the high frequency tree view  in the root. others can fold theres  to one.</Description>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36365</IssueID>
    <Title>Clicking the fold controls in the gutter opens changes magnification.</Title>
    <Description>- VSCode Version: Version 1.18.0-insider

Steps to Reproduce:

1. Make some changes to any file that has some Source Control. Specifically foldable changes.
2. Click the fold controls in the gutter.

Reproduces without extensions: Yes

![changes_gutter](https://user-images.githubusercontent.com/11430497/31620165-8d0ed1ba-b264-11e7-9bf7-63ce5ef97d48.gif)

I Would hope that's not the expected behavior. It is wicked annoying.
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36360</IssueID>
    <Title>Peek definition scrolls the files</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider  de68b077b53d6eeafeaf39699d6384c4b8750a19, 2017-10-16T05:22:08.224Z  
- OS Version: Linux x64 4.13.4-200.fc26.x86_64 
- Extensions:  cpptools|ms-|0.13.1
- Steps to Reproduce: Peek a definition on the bottom part of the screen in a C++ file, then close the peek view using shortcut (esc)

I don't know if it is intentional or not, but since the last update, when i peek a definition, it scrolls the file so the function within the peek editor gets on top of the screen.
Not sure if i like this behaviour all that much, as it forces you to scroll back up to see the close button.
The real problem then comes when i close the peek view using a shortcut (esc by default), it doesn't scroll back down, so i lose the line i was working on :

![peekexample](https://user-images.githubusercontent.com/29691930/31615363-9c554d00-b289-11e7-9f79-a0afd01087fd.gif)
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36353</IssueID>
    <Title>Broken dropdown for terminals</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Open vscode open a few terminals
2. press the dropdown

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/11232402/31611923-aac7a9a8-b286-11e7-95cb-8ce826986832.png)
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36345</IssueID>
    <Title>Add the option to search only in modified git files</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.18.0-insider (1.18.0-insider)
- OS Version: macOS Sierra 10.12.6

I search in the issues and didn't find this feature request. add an option to search only in the modified files not committed to git yet.
I don't know if that's enough informations, don't hesitate to ask if you don't understand something.

If that's something that people want. I don't mind working on this.</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36344</IssueID>
    <Title>macOS: Add proxy icon</Title>
    <Description>I use the proxy icon quite a lot for dragging/dropping and opening the directory tree.
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36341</IssueID>
    <Title>Character "g" in bold is clipped in the terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Windows 10 1703

Steps to Reproduce:

1. Run anything from the terminal which outputs bold text
2. The character "g" in bold is clipped at the bottom. See attached screenshot.

Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/296540/31604433-331e3fc8-b25b-11e7-8dc6-16e222f43278.png)
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36323</IssueID>
    <Title>触摸板双指滚动卡顿</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.打开vscode，或者最小化vscode再打开
2.双指滑动触摸板，有卡顿

fixed issues
1.resize一下窗口，再双指滑动触摸板，卡顿消失

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36320</IssueID>
    <Title>Vscode Sometimes broken</Title>
    <Description>Sometimes when I use ^ ` open terminal ,  the vscode broken

- VSCode Version: 1.17.1
- OS Version: macOS High Sierra 10.13
- Extensions:

| Extension    |  Version  | 
| --------   | -----  | 
| EditorConfig for Visual Studio Code | 0.11.0 |
| Nomo Dark Icon Theme | 1.3.3 |
|One Dark Pro | 2.10.16 |
| Path Intellisense | 1.4.2 |
| Prettier formatter for Visual Studio Code | 0.24.0  |
| React Native Tools | 0.4.2 |
| React-Native/React/Redux snippets for es6/es7 | 1.4.1 |
| sass | 1.4.4 |
| Version Lens | 0.19.1 |
| Vetur | 0.9.11 |
| vscode-icons | 7.15.0 |
| vscode-styled-components | 0.0.8 |

### results
![2017-10-16 12 19 37](https://user-images.githubusercontent.com/13158765/31595628-affe2b02-b26f-11e7-9c91-512769bdbf16.png)
</Description>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36279</IssueID>
    <Title>In my vscode extension, I create a new terminal but it has not output in frist time.</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
latex-preview|ajs|0.5.1
project-manager|ale|0.21.1
regex|chr|0.1.0
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.3.2
vscode-faker|dee|1.1.0
githistory|don|0.2.3
tslint|eg2|1.0.11
code-runner|for|0.7.3
seito-openfile|Fr4|1.4.0
mdmath|goe|2.0.7
vscode-auto-open-markdown-preview|hnw|0.0.4
beautify|Hoo|1.1.1
output-colorizer|IBM|0.1.2
latex-workshop|Jam|3.5.5
docthis|joe|0.5.0
markdown-table-formatter|jos|0.2.3
vscode-codemetrics|kis|1.9.6
vscode-regexp-preivew|le0|0.0.3
vscode-todo-parser|min|1.9.1
vscode-filesize|mkx|1.0.0
cpptools|ms-|0.13.1
PowerShell|ms-|1.4.3
debugger-for-chrome|msj|3.3.1
vetur|oct|0.9.11
vscode-code-outline|pat|0.0.11
run-as|ply|0.3.10
vscode-icons|rob|7.15.0
ActiveFileInStatusBar|Ros|1.0.3
autoimport|ste|1.2.2
code-spell-checker|str|1.4.10
quokka-vscode|Wal|1.0.70
change-case|wma|1.0.0
---

Steps to Reproduce:

1. open default terminal
2. close vscode
3. open vsscode
4. use my extension 'run-as', right click a file (*.bat or something else), click the menu item 'Run as ..', we can see the terminal 'Run As...' is open but **no output**
5. kill terminal 'Run As...'
6. kill terminal 'powershell', we can see another terminal 'Run As...'
7. kill terminal 'Run As...' again
8. use my extension 'run-as', right click a file (*.bat or something else), click the menu item 'Run as ..', we can see the terminal 'Run As...' is open and finally has output
9. kill terminal 'Run As...'
10. use shortcut Ctrl+` to open **a new default terminal, we can see it named 'Run As...'**

But in this situation, it is no problem
1. close default terminal
2. close vscode
3. open vsscode
4. use my extension 'run-as', right click a file (*.bat or something else), click the menu item 'Run as ..', we can see the terminal 'Run As...' is open and has output

**My extension is work correctly in vscode 1.16.**

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>14/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36262</IssueID>
    <Title>blue icon color was good. orange is barely visible on windows 7 aero.</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36243</IssueID>
    <Title>Iteration plan for October?</Title>
    <Description>https://github.com/Microsoft/vscode/wiki/Iteration-Plans ?</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>13/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36223</IssueID>
    <Title>Increased tweet character limit for Twitter feedback</Title>
    <Description>
    </Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>14/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36215</IssueID>
    <Title>crash / become unresponsive if terminal.integrated.fontSize is set to 1</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
gitignore|cod|0.5.0
vscode-eslint|dba|1.3.2
python|don|0.7.0
EditorConfig|Edi|0.10.1
tslint|eg2|1.0.11
vscode-npm-script|eg2|0.2.1
cpptools|ms-|0.13.1
csharp|ms-|1.12.1
PowerShell|ms-|1.4.3
polymer-ide|pol|0.6.0
java|red|0.11.0
vscode-icons|rob|7.15.0



---

Steps to Reproduce:

1. open settings.json and set terminal.integrated.fontSize to 1
2. open integrated terminal (if not opened)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36209</IssueID>
    <Title>add new file bug in directory tree</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:10:17.189Z)
- OS Version: Darwin x64 17.0.0

There's a bug in directory tree while adding a new file.

Steps to Reproduce:

1. open a project in VSCode.
2. collapse the directory tree panel.
3. click "new file" icon button.
4. expand the directory tree panel.
5. click any file.
6. there will be a weird input box on a random file.

Possible reason:  the input box dose not trigger any blur events, so it never get removed.

Images:

![1](https://user-images.githubusercontent.com/5260937/31537483-f8cd2720-afc7-11e7-9203-949be59ce939.png)

![2](https://user-images.githubusercontent.com/5260937/31537493-fd13a3fe-afc7-11e7-96f5-172374ba0ed2.png)

![3](https://user-images.githubusercontent.com/5260937/31537497-fffb652a-afc7-11e7-8329-539068bb566b.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36206</IssueID>
    <Title>File filter on explorer</Title>
    <Description>Add an input text field into the explorer panel used to filter the list of files show in this panel ( using regular expression for the selection)
It s very usefull when we have a lot of file directory into the workspace


this feature exist in visual studio in the solution explorer panel 
![filter](https://user-images.githubusercontent.com/8782217/31536571-74b600d2-afff-11e7-9b32-8b1477845020.png)
</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36205</IssueID>
    <Title>Error: ENOENT: no such file or directory, stat '/opt/visual-studio-code/resources/app/extensions/git/out/main.nls.en-us.json'</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

when  debug the `vscode-markdown-preview-enhanced` vscode-extension ,there has errors.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:  `1.17.1`
- OS Version:
 `➜  out  uname -a
Linux tec-pc 4.9.49-1-MANJARO #1 SMP PREEMPT Sun Sep 10 07:50:25 UTC 2017 x86_64 GNU/Linux
`

```bash

➜  out  ls /opt/visual-studio-code/resources/app/extensions/git/out
askpass-empty.sh             commands.nls.de.json     main.nls.es.json     model.nls.ko.json          statusbar.js
askpass.js                   commands.nls.es.json     main.nls.fr.json     model.nls.ru.json          statusbar.nls.de.json
askpass-main.js              commands.nls.fr.json     main.nls.it.json     model.nls.zh-cn.json       statusbar.nls.es.json
askpass-main.nls.de.json     commands.nls.it.json     main.nls.ja.json     model.nls.zh-tw.json       statusbar.nls.fr.json
askpass-main.nls.es.json     commands.nls.ja.json     main.nls.json        repository.js              statusbar.nls.it.json
askpass-main.nls.fr.json     commands.nls.json        main.nls.ko.json     repository.nls.de.json     statusbar.nls.ja.json
askpass-main.nls.it.json     commands.nls.ko.json     main.nls.ru.json     repository.nls.es.json     statusbar.nls.json
askpass-main.nls.ja.json     commands.nls.ru.json     main.nls.zh-cn.json  repository.nls.fr.json     statusbar.nls.ko.json
askpass-main.nls.json        commands.nls.zh-cn.json  main.nls.zh-tw.json  repository.nls.it.json     statusbar.nls.ru.json
askpass-main.nls.ko.json     commands.nls.zh-tw.json  model.js             repository.nls.ja.json     statusbar.nls.zh-cn.json
askpass-main.nls.ru.json     contentProvider.js       model.nls.de.json    repository.nls.json        statusbar.nls.zh-tw.json
askpass-main.nls.zh-cn.json  decorators.js            model.nls.es.json    repository.nls.ko.json     uri.js
askpass-main.nls.zh-tw.json  git.js                   model.nls.fr.json    repository.nls.ru.json     util.js
askpass.sh                   iterators.js             model.nls.it.json    repository.nls.zh-cn.json
autofetch.js                 main.js                  model.nls.ja.json    repository.nls.zh-tw.json
commands.js                  main.nls.de.json         model.nls.json       staging.js
➜  out

```
 there is no such file `main.nls.en-us.json`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![image](https://user-images.githubusercontent.com/6021724/31536436-2e40dadc-b031-11e7-95a4-b25a7292aab9.png)
</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>13/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36202</IssueID>
    <Title>Chinese display in Terminal</Title>
    <Description>- VSCode Version: 1.17.0
- OS Version: macOS Sierra 10.12.5

Steps to Reproduce:

![image](https://user-images.githubusercontent.com/27057518/31535574-3674712a-afc1-11e7-8ef6-1cacf060bdec.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36200</IssueID>
    <Title>Underscores are invisible in integrated shell under Fedora 26</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Fedora 26

Steps to Reproduce:

1. Set  "terminal.integrated.fontSize": 14 (14 seems to be the default value)
2. 
![14](https://user-images.githubusercontent.com/13048299/31535140-8799406e-afbf-11e7-90f5-c3ab546f3376.png)

3. Set  "terminal.integrated.fontSize" = 16 and the underlines are visible again.
4. 
![16](https://user-images.githubusercontent.com/13048299/31535179-b110f388-afbf-11e7-8709-4603d7ac98fa.png)



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36199</IssueID>
    <Title>Store split pane view state globaly, not per workspace</Title>
    <Description>Very often I need to resize the tools views width and height. I like to have then thin, and keep some views collapsed - like Open Editors - and the File Explorer fully expanded as possible.  Also, I like to keep Terminal with around 20 lines high.

So, every time I start a new VSCode Windows I need to resize everything again. Will be really nice if there is a way to Save my defined windows/views positions and sizing design, and VSCode remember that when it is opened again. </Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36191</IssueID>
    <Title>vscode的图标好难看，丑，一眼看去不知道是啥软件来的</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:41.632Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
lua-debug|act|0.1.2
GBKtoUTF8|buk|0.0.2
python|don|0.7.0
Lua|key|0.0.9
cpptools|ms-|0.13.1
vs-keybindings|ms-|0.1.7
debug|web|0.21.2



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>13/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36185</IssueID>
    <Title>`ext install &lt;name&gt;` doesn't work like it used to</Title>
    <Description>You used to be able to use `ext install &lt;name&gt;` to install an extension. Now it instead just opens the extension pane and searches for the text supplied for `&lt;name&gt;`. That alone isn't a big deal, but you can't search the extensions pane for the name of an extension. 

For example, if I type `ext install gitlens`, it opens extension pane and searches for `gitlens` which returns no results -- even though the actual name of GitLens is `gitlens` as you can see here:

https://github.com/eamodio/vscode-gitlens/blob/4360c86197728430759ef1d7851ca0edfbd52110/package.json#L1-L15

As an aside, the only reason I ended up having the `displayName` being what it is, was because of poor searching. When it was just called *GitLens*, you couldn't find it when searching for `git` or `lens` or any other keywords. With any luck that would also be wonderful to have fixed -- because I'd love to set its `displayName` back to just *GitLens* and not have to *SEO* pack it.

Originally reported here: https://github.com/eamodio/vscode-gitlens/issues/160</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36181</IssueID>
    <Title>Problem with display of built-in terminal. (case of dual display)</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:10:17.189Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 



---

Steps to Reproduce:

1. Dual Display(1: external display, 2: macbook pro retina display)
2. Open VSCode on [1]
3. Move VSCode to [2] 
4. Check built-in terminal
&lt;img width="417" alt="vscode-terminal" src="https://user-images.githubusercontent.com/1410177/31526164-1282794e-b000-11e7-9940-0534d38224d4.png"&gt;


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36172</IssueID>
    <Title>VS Code Terminal Kerning Way Off after latest update - 1.17.1</Title>
    <Description>Can you please fix the kerning in the terminal - it's so far off! It's driving me nuts. The font in the editor should be the same as the font in the terminal. It's killing me...


![terminal vscode2](https://user-images.githubusercontent.com/26234626/31521549-823c7fbe-af6f-11e7-8e49-e90fb901c70b.png)

- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:41.632Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
gitlens|eam|5.6.3
tslint|eg2|1.0.11
beautify|Hoo|1.1.1
docthis|joe|0.5.0
prettify-json|moh|0.0.3
mssql|ms-|1.2.0
PowerShell|ms-|1.4.3
material-icon-theme|PKi|2.2.2
vscode-icons|rob|7.15.0
vscode-hexdump|sle|1.4.0
vscode-jumpy|wma|0.3.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
![image](https://user-images.githubusercontent.com/26234626/31521404-09f80fc8-af6f-11e7-9867-03b985feff77.png)
</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36160</IssueID>
    <Title>Integrated terminal renders fonts incorrectly since 1.17.1</Title>
    <Description>- VSCode Version: 1.17.1
- OS Version: MacOS Sierra

"Monaco" font on my MacOS now looks like this in the integrated terminal (with `"terminal.integrated.fontFamily": "Monaco"`)

&lt;img width="577" alt="screen shot 2017-10-12 at 21 45 24" src="https://user-images.githubusercontent.com/1707/31513325-b05efdaa-af96-11e7-88e8-526f07d79228.png"&gt;

This is how it looks in the Terminal.app (i.e. how it should look):

&lt;img width="575" alt="screen shot 2017-10-12 at 21 44 23" src="https://user-images.githubusercontent.com/1707/31513271-8b64b314-af96-11e7-9452-5c05e3703319.png"&gt;

Steps to Reproduce:

1. Set `"terminal.integrated.fontFamily": "Monaco"` in the Settings
2. Open Integrated Terminal, compare rendering to Terminal.app (with the same font settings chosen)

Reproduces without extensions: Yes</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36155</IssueID>
    <Title>simpleFindWidget overlays part HTML webview, causing dead zone in upper-right</Title>
    <Description>The recent release of 1.17.1 introduced a new "dead zone", an un-clickable area near the upper-right corner of the HTML preview / webview.  The actual `&lt;webview&gt;` is obscured by a `&lt;div class="simple-find-part-wrapper"&gt;&lt;div class="simple-find-part"&gt;...` that appears in the DOM just prior to it.

Note that this breaks ALL existing extensions that place UI controls in the upper-right of an HTML panel, so I would love to see an urgent fix for this.

I created a "reduced case" extension to test this, [source on GitHub here](https://github.com/emackey/browser-tester).  This extension contributes a single command called `Hello World`, that opens an HTML preview with a giant button in the upper-right.  This button turns green when hovered and orange when clicked.  The top line of the button is un-clickable and un-hoverable at all times.  Real extensions use smaller buttons, and those are completely obscured by this.

Here's my reduced-case extension being debugged.  You can see that `simple-find-part-wrapper` is completely obscuring part of the `webview`, making the extension's content unreachable.

![vscodedeadzone](https://user-images.githubusercontent.com/1235080/31510313-52b26c12-af52-11e7-80bb-9589ed388de8.png)
</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36150</IssueID>
    <Title>Accessibility: output terminals inaccessible.</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (c098b394b07afbb58975ab609117a0e115c5a3fa, 2017-10-12T05:24:34.433Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jshint|dba|0.10.15
python|don|0.7.0
cpptools|ms-|0.13.1
incremental-search|sie|0.2.1
code-spell-checker|str|1.4.8
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:

1. Create a new node.js project.
2. place this in .babelrc
    ```
    {
      "presets": ["env"]
    }
    ```
3. in package.jsonconfigure this.
This is a sample package.json.
    ```
    {
      "name": "elizabot",
      "version": "1.0.0",
      "description": "test",
      "main": "lib/index.js",
      "dependencies": {
        "babel-cli": "^6.26.0",
        "jshint": "^2.9.5"
      },
      "devDependencies": {
        "babel-preset-env": "^1.6.0"
      },
      "scripts": {
        "build": "babel src -d lib",
        "test": "echo \"Error: no test specified\" &amp;&amp; exit 1"
      },
      "author": "",
      "license": "ISC"
    }
    ```
5. Now, type this in src/index.js
    ```
    you will fail to transpile!
    ```
4. Build. The program asks to configure default build task. If you use the node task, it'll work. My tasks.json is like this however.
    ```
    {
        // See https://go.microsoft.com/fwlink/?LinkId=733558
        // for the documentation about the tasks.json format
        "version": "2.0.0",
        "tasks": [
            {
                "type": "npm",
                "script": "build",
                "problemMatcher": [
                    "$eslint-compact"
                ]
            }
        ]
    }
    ```

Expected: With the NVDA screen reader running, vscode's output window is readable.

Actual: There's no text whatsoever visible with NVDA. However, if I OCR the whole window, text is visible in the console.
I've reproduced this with a python project with custom tasks.json as well.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36149</IssueID>
    <Title>color</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:41.632Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1.颜色像狗屎，，赶紧回复以前的颜色
2.The color is like shit, and quickly reply to the color

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36110</IssueID>
    <Title>Feature Request: Collapse Activity Bar on focus change</Title>
    <Description>VSCode Version: 1.17.1
I've looked through the default settings for the feature, but didn't find it. Also asked on stackoverflow, someone suggested to set it to a hotkey/suggest it on here.</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>13/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36106</IssueID>
    <Title>Terminal line alignment cause characters cropped</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.13.5-200.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
language-x86-64-assembly|13x|2.2.11
vscode-docker|Pet|0.0.18
code-gnu-global|aus|0.2.2
file-templates|brp|1.2.0
FreeMarker|dco|0.0.9
python|don|0.7.0
CppSnippets|har|0.0.12
restructuredtext|lex|38.0.0
Go|luk|0.6.66
cpptools|ms-|0.13.1
csharp|ms-|1.12.1
vetur|oct|0.9.11
java|red|0.11.0
html-preview-vscode|tht|0.1.1
vim|vsc|0.10.1
jinja|who|0.0.8



---

Steps to Reproduce:

1. open terminal
2. the prompt line display like [the screenshot](http://wx4.sinaimg.cn/mw690/5700655cly1fkf8pqc8j7j20c902gt8l.jpg)





&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36103</IssueID>
    <Title>文件多选问题</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:41.632Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.2
beautify|Hoo|1.1.1
cpptools|ms-|0.13.1
debugger-for-chrome|msj|3.3.1
java|red|0.11.0
JavaScriptSnippets|xab|1.5.0

为什么目录树里面的文件不能按住shift进行多选 这个功能很需要啊</Description>
    <CreatedDate>12/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36098</IssueID>
    <Title>Integrated Terminal frozen at launch, showing only cursor</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (3ffa14e5ed86b3489f86d9f8d966ae3076f94a61, 2017-10-11T05:26:57.467Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Launch Code
2. Launch Integrated Terminal

Developer Tools &gt; Console :  

`2C:\Program Files\Microsoft VS Code Insiders\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'wheel' event. Consider marking event handler as 'passive' to make the page more responsive.
C:\Program Files\Microsoft VS Code Insiders\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
C:\Program Files\Microsoft VS Code Insiders\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
raw.marked.js:15 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
quickOpenScorer.ts:114 [Violation] 'keydown' handler took 795ms
`

![vscodeintegratedterminal](https://user-images.githubusercontent.com/14075798/31469899-a44d768a-aeb1-11e7-88fc-e5b25c3f2f2c.PNG)


Also reproduced in VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)

`2C:\Program Files\Microsoft VS Code\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'wheel' event. Consider marking event 
![vscodeintegratedterminal](https://user-images.githubusercontent.com/14075798/31469889-9a4074da-aeb1-11e7-85b7-ca095eb1fb96.PNG)
handler as 'passive' to make the page more responsive.
C:\Program Files\Microsoft VS Code\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'touchstart' event. Consider marking event handler as 'passive' to make the page more responsive.
C:\Program Files\Microsoft VS Code\resources\app\node_modules\xterm\lib\Terminal.js:1379 [Violation] Added non-passive event listener to a scroll-blocking 'touchmove' event. Consider marking event handler as 'passive' to make the page more responsive.
scorer.ts:133 [Violation] 'setTimeout' handler took 846ms`

No User Settings
Using Default Setting:
`  "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",`



</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36095</IssueID>
    <Title>Terminal dropdown doesn't appear on first click after window reload</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: Windows 7

The first time that I click on the terminal selector dropdown after reloading the vscode window, the list of terminals does not appear (It is just black)

![image](https://user-images.githubusercontent.com/16767154/31467427-ed3a05f2-aea7-11e7-98e2-6685d562db94.png)


Steps to Reproduce:

1. Open a new VSCode window
2. Open the integrated terminal
3. Reload the window `ctrl+shift+p`, then Reload Window
4. Click on terminal selector dropdown

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>13/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36093</IssueID>
    <Title>New Orange icon burns my eyes</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
PowerShell|ms-|1.4.3



---

Steps to Reproduce:

1. Open VScode
2. Stare intensely at the orange icon.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36086</IssueID>
    <Title>Terminal font looks terrible</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:21:18.489Z)
- OS Version: Linux x64 4.4.0-97-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-class-suggestions|And|1.0.7
ng-template|Ang|0.1.7
material-icon-theme|PKi|2.2.2
vscode-intelephense-client|bme|0.7.2
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-todo-plus|fab|1.5.2
auto-rename-tag|for|0.0.14
icon-fonts|idl|1.8.2
code-beautifier|mic|1.7.2
vscode-scss|mrm|0.6.2
debugger-for-chrome|msj|3.3.1
vscode-todo-highlight|way|0.5.11

(3 theme extensions excluded)


---

Terminal font's look terrible in new update. its so hard to read



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36083</IssueID>
    <Title>Markdown syntax highlighting mis-italicizes underscored words</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
xml|Dot|1.9.2
json-tools|eri|1.0.2
sftp|lix|0.8.4
cpptools|ms-|0.13.1
csharp|ms-|1.12.1
PowerShell|ms-|1.4.3
debugger-for-chrome|msj|3.3.1
partial-diff|ryu|0.3.3
vim|vsc|0.10.1



---

Steps to Reproduce:

1. Create  new markdown document
2. type a word separated by underscores

![mdbug](https://user-images.githubusercontent.com/5684286/31457028-63a6ef80-ae70-11e7-8748-697125ee1ec9.png)

Reproduces without extensions: Yes

The issue is that the syntax highlighting italicizes the middle bit or the word, even though it will not be rendered in italics

</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36080</IssueID>
    <Title>Allow more than 3 split editors</Title>
    <Description>Please allow user to have more than 3 split editors. This is the only problem I have with vscode. I love being able to adjust panes in any way i want like in vim and atom.</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36076</IssueID>
    <Title>Integrated terminal font looks distorted on Mac </Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:10:17.189Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.10.1
emoji|Per|0.0.3
vscode-eslint|dba|1.3.2
gitlens|eam|5.6.0
vscode-codemetrics|kis|1.9.6
prettify-json|moh|0.0.3
vscode-scss|mrm|0.6.2
pdf|tom|0.2.0



---

Steps to Reproduce:

1. Open Code.
2. Open the integrated terminal.

![image](https://user-images.githubusercontent.com/118913/31452182-9216a310-ae84-11e7-9330-12b1b3ca1f2f.png)

![image](https://user-images.githubusercontent.com/118913/31452215-a70d14b6-ae84-11e7-924d-2e308656f49f.png)


Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36060</IssueID>
    <Title>Intellisense pop-up opens erroneously &amp; does not closes itself (since 1-2 release)</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:10:17.189Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
material-icon-theme|PKi|2.2.2
vscode-docker|Pet|0.0.18
Bookmarks|ale|0.16.0
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
tslint|eg2|1.0.10
expand-region|let|0.1.1
string-manipulation|mar|0.2.0
code-beautifier|mic|1.7.2
dotenv|mik|1.0.0
vscode-scss|mrm|0.6.2
cpptools|ms-|0.13.1
csharp|ms-|1.12.1
sublime-keybindings|ms-|2.9.1
team|ms-|1.122.0
Lodash|oys|1.0.0
sass-indented|rob|1.4.2
vscode-todo-highlight|way|0.5.11
blade-runner|yuk|1.0.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Write any Object in TypeScript
2. When Completed first parameter and its value then after pressing comma, the auto complete popup appears to complete wrapping function parameters, that doesn't closes until I close it by pressing escape (annoying)
3. You can Check below attached image 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/1535613/31438934-b50d6ce0-aea3-11e7-9689-569c000553eb.png)
</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36059</IssueID>
    <Title>Terminal: lines are not well rendered</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.12.14-300.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
cpptools|ms-|0.13.1



---

Just updated to 1.17.0 and I have a new issue with the terminal. The lines are not well rendered (see the screenshot). I am using fedora 26 with gnome 3/X11 and my computer have a 1920x1080px screen resolution.

Steps to Reproduce:

1. Launch Code and open the terminal
2. The lines of the terminal are not rendered properly.

![capture d ecran de 2017-10-11 13-34-07](https://user-images.githubusercontent.com/32302162/31438594-f53a1496-ae88-11e7-8567-18f40212049f.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36049</IssueID>
    <Title>使用创建新文件功能Bug</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 6.3.9600
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
vscode-markdownlint|Dav|0.10.1
vscode-great-icons|emm|2.1.16
beautify|Hoo|1.1.1
sublime-keybindings|ms-|2.9.1
debugger-for-chrome|msj|3.3.1
view-in-browser|qin|0.0.5



---

Steps to Reproduce:

1.资源管理器，项目文件夹收起的状态下，单击右侧新建文件图标，无反映，多次单击。
2.再次展开项目文件夹，发现里面增加了好多新增默认空名文件。

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36037</IssueID>
    <Title>Visual artifacts in terminal</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.13.4-200.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.10.1
vscode-docker|Pet|0.0.18
python|don|0.7.0
restructuredtext|lex|38.0.0
hg|mrc|1.1.7
language-gettext|mro|0.0.2
qub-xml-vscode|qub|1.2.8
sass-indented|rob|1.4.2



---

Steps to Reproduce:

1. Open integrated terminal. You can see the artifacts (little yellow dots) right away: 
![captura de pantalla de 2017-10-11 10-34-29](https://user-images.githubusercontent.com/973709/31429975-cafc0612-ae6f-11e7-9f1f-21e3488055fc.png)




&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36025</IssueID>
    <Title>Windows - Terminal font change between 1.17 and 1.17.1</Title>
    <Description>The new one is smaller and I find it harder to read.

1.17
![image](https://user-images.githubusercontent.com/172399/31425228-9a334a06-ae5e-11e7-9c88-bd382567eeca.png)

1.17.1
![image](https://user-images.githubusercontent.com/172399/31425241-ae84ef50-ae5e-11e7-96ec-dd740dd0bbfa.png)
</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36018</IssueID>
    <Title>title doesn't change when switching open files via tabs</Title>
    <Description>
- VSCode Version:  VSCode 1.18.0-Insider
- OS Version: Win7 64bit

Steps to Reproduce:

1.Open VSCode, and open a few files.
2.switch open files via tab, the title doesn't change to the right file path.
3.if I change the size of the VSCode window, or minimize then maximum, the title is refreshed to the currently open file path. 

my settings:
{
    "workbench.activityBar.visible": false,
    "files.autoGuessEncoding": true,
    "editor.minimap.enabled": false,
    "workbench.colorTheme": "Visual Studio Light",

    "editor.rulers": [
        120
    ],
    "editor.renderLineHighlight": "all",
    "editor.renderWhitespace": "all",
    "window.title": "${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}",

    "workbench.colorCustomizations": {
        "tab.border": "#00F",
        "tab.activeBackground": "#F99BC5",
        "tab.inactiveBackground": "#E7E7EF"
    }
}

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36017</IssueID>
    <Title>Terminal Font on Mac defaulted to DejaVu Sans Mono</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- OS Version: OSX 10.13

Steps to Reproduce:

1. Open Integrated Terminal from within VSCode
2. Observe the font

The change for #35188 broke the font.  I use Consolas in my editor. Observe the terminal.

&lt;img width="1280" alt="screen shot 2017-10-11 at 4 51 45 pm" src="https://user-images.githubusercontent.com/287302/31424165-80d5defc-aea4-11e7-962b-bf4e5ac6d68d.png"&gt;

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36015</IssueID>
    <Title>VS Code always appears of my screens</Title>
    <Description>- VSCode Version: Code 1.17.1 (1e9d36539b0ae51ac09b9d4673ebea4e447e5353, 2017-10-10T14:24:50.851Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jshint|dba|0.10.15
vscode-eslint|dba|1.3.2
tslint|eg2|1.0.10
beautify|Hoo|1.1.1
csharp|ms-|1.12.1
js-atom-grammar|ms-|0.1.14
PowerShell|ms-|1.4.3
team|ms-|1.122.0
---

Steps to Reproduce:

_This is an issue when using multiple screens and with two different environments on the same machine (laptop)._

1. Load Code having one multi screen orientation (e.g. at home I use my laptop with a screen connected above my laptop screen)
2. Move Code to "other" screen and Close.
3. Change screen orientations (at work I have 2 additional screens to the left of the laptop screen)
4. Open Code.

Code now appears to the left of my left most screen.  I have to use Alt+Space then M and the arrow keys to move the screen right so that it appears on my left most screen.  i.e.  I'm assuming the top left coordinate that is saved is a -ve value, hence why I can't see the screen.

I hope that makes sense.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36014</IssueID>
    <Title>Please, return default font for Terminal.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.1
- MacOS Version: 10.13.1

![screen shot 2017-10-11 at 1 19 57 pm](https://user-images.githubusercontent.com/25575840/31420789-fe66d11e-ae86-11e7-9efd-c915250f646c.png)







&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36009</IssueID>
    <Title>I hate this new logo</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.I hate this new logo
2.I hate this new logo

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36007</IssueID>
    <Title>VScode hangs when adjusting the terminal height</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (dcd1aa35dfa590b4a528e1ab55e957002f430f17, 2017-10-10T05:26:33.683Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>11/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36003</IssueID>
    <Title>Select all cmd-shift-G does not select all</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.17.1 (1.17.1)
- OS Version: macos sierra 10.12.6 (16G29)

Steps to Reproduce:

1. Create a file with 10k sql insert statements --&gt; 

INSERT INTO tabel (one, two, three) 
   VALUES 
   (1, 'value2', 3, 4),
   (1, 'value2', 3, 4),
    ... // 10k lines
   (1, 'value2', 3, 4);

2. Highlight the open paren and select all with cmd-shift-G

Scroll down and notice that only 2k are selected and 8k are not.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

Don't know</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>21/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>36000</IssueID>
    <Title>Add filename, line &amp; column information in EvaluateArguments with 'hover' context</Title>
    <Description>I'm implementing a z80 debugger, for example:
```
162A 5E       ld e, (hl)
162B 19       add hl, de
```

Hovering over `(hl)` in the first line should have more information than hovering over the `hl` in the second line - however, obviously the brackets are treated as a word boundary and don't get include in the EvaluateRequest.

Given the line &amp; col information I could extract additional information. For (hl), for example, I could show the contents of the memory address pointed to by the HL register.
</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35989</IssueID>
    <Title>Incorrect highlighting in TypeScript</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Create a `.ts` file with the following:

```typescript
do {

} while(foo++ &lt; 20);

function bar() {

}
```
2. Notice that the `function` keyword is not highlighted properly. It seems to be caused by the postfix unary operator `++`.

![image](https://user-images.githubusercontent.com/20820/31398537-928c0452-ade9-11e7-87c8-6b7ab27ff1bc.png)

![image](https://user-images.githubusercontent.com/20820/31398546-97d69ada-ade9-11e7-80c9-c91d72aac4c9.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35983</IssueID>
    <Title>Chinese bug when in intergratedterminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: win10

Steps to Reproduce:

1.&gt;node
2.input any Chinese
3.Oooops,bug!

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35982</IssueID>
    <Title>Displaying broken characters in console</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: Win10 x64

Steps to Reproduce:

1. msbuild
or
2. Type any character that ends in '\': for eaxmple '許' '功' '蓋'


![image](https://user-images.githubusercontent.com/5507113/31384132-2eb073f8-adf0-11e7-868e-82875f77de56.png)

(Code Page 950)
</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35975</IssueID>
    <Title>a bug in Chinese version</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 
在終端機中 要是有出現中文 而且空間不夠 需要滾動的時候滾下去就會出現殘影 很難閱讀 不過英文的就不會 https://imgur.com/a/Sv3YU

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
cpptools|ms-|0.13.1
VerilogHDL|msh|0.0.13



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35973</IssueID>
    <Title>The new icon sacks (on my blue desktop) - revert to the old one</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
vscode-firefox-debug|hbe|0.16.1
debugger-for-chrome|msj|3.3.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35969</IssueID>
    <Title>终端中文显示</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-05T06:07:51.906Z)
- OS Version: Darwin x64 16.4.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
autofilename|Jer|0.1.3
vscode-standard-format|che|0.0.12
velocity|sod|0.1.0
vscode-import-cost|wix|2.5.0



---

Steps to Reproduce:

1.
2.
![image](https://user-images.githubusercontent.com/12008127/31374634-5833fe2a-ad64-11e7-804a-22082adb3666.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35968</IssueID>
    <Title>Font modified to PingFang SC, the console font becomes ugly!</Title>
    <Description>[-]([url](url)) VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-05T06:07:51.906Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
react-native-react-redux|EQu|1.4.1
vsc-material-theme|Equ|1.0.4
auto-close-tag|for|0.5.1
auto-rename-tag|for|0.0.14
path-autocomplete|ion|1.6.1
ayu|tea|0.8.0

(5 theme extensions excluded)


---

Steps to Reproduce:
&lt;img width="1387" alt="45" src="https://user-images.githubusercontent.com/18509054/31374552-15474388-ad64-11e7-938b-58a8b9fa0da5.png"&gt;


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35964</IssueID>
    <Title>Terminal canvas  rendering Chinese anomalies</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: Ubuntu 16.04.3 LTS

Steps to Reproduce:

1. open Terminal
2. touch 测试.txt
3. ls
4. ctrl + l  Terminal clear
![peek 2017-10-10 15-03](https://user-images.githubusercontent.com/25047036/31373413-8e72ab40-adcc-11e7-9bdb-09a5d29288c4.gif)
&lt;!-- Launch with `code --disable-extensions`  to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35962</IssueID>
    <Title>copy paste doesn't work in the folder explorer</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:44:50.318Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
read-only-indicator|ale|0.6.0
statusbar-commands|anw|0.1.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
php-pack|fel|1.0.1
status-bar-tasks|Gua|0.2.1
crane|Hvy|0.3.8
mssql|ms-|1.2.0
omnipascal|Wos|0.15.0



---

Steps to Reproduce:

1. open a folder
2. ctrl-c on a fille in the file explorer
3. ctrl-v of this file in the file explorer
4. an error message appeared with 'a system error occured (unknown: unknown error, mkdir '\\server\folder\...')

![snip_20171010084752](https://user-images.githubusercontent.com/4083412/31372827-e62702d0-ad97-11e7-9325-e8c5b90de089.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35949</IssueID>
    <Title>Terminal: Chinese words print error.</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-05T06:07:51.906Z)
- OS Version: Darwin x64 16.7.0
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Type some chinese words in terminal.
2. Press enter or just scroll.
![terminal](https://user-images.githubusercontent.com/7723729/31367458-202bb544-ad3d-11e7-8c61-f76b753a7df0.gif)

![image](https://user-images.githubusercontent.com/7723729/31367384-ad519b4c-ad3c-11e7-88a6-7874c9c460a1.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35944</IssueID>
    <Title>there are a bug in Chinese OS. when you use inner terminal in vs under ubuntu-os you'll find that there are many unexpected char. for example, after I execute "git status &amp;&amp; git reset --hard HEAD^ &amp;&amp; git pull ", some  incomplete Chinese-char left at  framebuffer and displaying in terminal</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.4.0-96-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
python|don|0.7.0
code-python-isort|fre|0.0.3
auto-comment-blocks|kev|1.0.1
MagicPython|mag|1.0.12
vscode-clang|mit|0.2.2
cpptools|ms-|0.13.1
reloaded-cpp|rel|0.1.6
python|tht|0.2.3



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35942</IssueID>
    <Title>VSCode new icon Windows 10 not shown correctly</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
vscode-eslint|dba|1.3.2
beautify|Hoo|1.1.1
vscode-colorize|kam|0.6.7
theme-monokai-pro-vscode|mon|1.1.2
material-icon-theme|PKi|2.2.2

(7 theme extensions excluded)


---

Steps to Reproduce:

1. Right Click on VSCode related files.
---

I'm using Windows 10, I really like the new icons, but I'm having troubles with the icon when I right click the icon on the taskbar for example:

![image](https://user-images.githubusercontent.com/29575744/31362437-7963af16-ad26-11e7-9aec-bb03ef296b27.png)

But with the insiders version it doesn't happen.
![image](https://user-images.githubusercontent.com/29575744/31362407-5078e4d6-ad26-11e7-9f35-ac2816ead8fb.png)

Another example is when I right click to a file, to be opened in VSCode:
![image](https://user-images.githubusercontent.com/29575744/31363628-a65d0812-ad2d-11e7-9bca-9d1c98ce1ae8.png)
The Stable version icon is not shown correctly.

But when it comes to file icons (when they're opened by the editor by default), the stable version looks better:
![image](https://user-images.githubusercontent.com/29575744/31363693-208dbbae-ad2e-11e7-88ae-12ff07c12d54.png)
![image](https://user-images.githubusercontent.com/29575744/31364875-b625fdaa-ad35-11e7-873b-53d24e40574b.png)
 But then, this happens again...
![image](https://user-images.githubusercontent.com/29575744/31364958-3c82a2d6-ad36-11e7-9208-6e21fc338cbc.png)
The Insiders icon looks better.
![image](https://user-images.githubusercontent.com/29575744/31364982-710b68b2-ad36-11e7-94f4-566f6574c7eb.png)
</Description>
    <CreatedDate>10/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35931</IssueID>
    <Title>error when copying and pasting file in the same folder</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0 (issue present in both 32bit and 64bit)
- OS Version: Windows 7 32bit, Windows 10 64bit
- Project is on the mapped network drive
- File server is Synology Diskstation DSM 5.2-5967 Update 4

Steps to Reproduce:

1. Open sidebar -&gt; file explorer;
2. In file explorer on selected file open context menu (right mouse click);
3. choose copy;
4. then open context menu again and paste in the same folder;
5. file copy is created correctly but vs code shows error;

All previous VS code versions worked correctly.

![image](https://user-images.githubusercontent.com/30110941/31358573-d4207268-ad4e-11e7-964e-df90845963ad.png)
![image](https://user-images.githubusercontent.com/30110941/31358578-d9e9a05c-ad4e-11e7-8eff-b91ec6dfcd1c.png)
![image](https://user-images.githubusercontent.com/30110941/31358584-df715f06-ad4e-11e7-9635-a4d173d9a8e8.png)
![image](https://user-images.githubusercontent.com/30110941/31358591-e40760c4-ad4e-11e7-884b-b1b52365dcbc.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: I have no extensions installed</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35929</IssueID>
    <Title>Compare Files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.18.0-insider
- OS Version: Windows 10

-- Sorry for the English, I used Google Translator --

When comparing file and switch to another tab and return to comparison tab, the scroll back to the beginning. This is very annoying. 

Is there any setting to stop this?


![scrollcompare](https://user-images.githubusercontent.com/19866231/31357192-1a593bbc-ad17-11e7-8a40-4a9a6b82136e.gif)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35928</IssueID>
    <Title>Cursor remains in the beginning after pressing comments shortcut</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: OSX 10.12.6

Steps to Reproduce:

1. Press `⌘ + /`
2. Notice that cursor is stuck at the beginning of the line, it should be at the end of the line.</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35925</IssueID>
    <Title>Snippets should have custom transforms</Title>
    <Description>Snippets currently have a facility to transform input in predefined ways.

But those predefined ways are very limited.

* upcase
* downcase
* capitalize

What I would like to achieve is something more custom.

This is portion of a bigger snippet code that I am trying to work as smoothly as possible.

```
.ofType&lt;GetLogicalSwitchesSearchAction&gt;(GET_LOGICAL_SWITCHES_SEARCH_ACTION)
```

Right now I have to type the text twice. But if there is a way one could throw in custom logic, then I could simply type `GetLogicalSwitchesSearchAction` once and the 2nd part should intelligently fill up `GET_LOGICAL_SWITCHES_SEARCH_ACTION`.

Hence creating this issue to track this request for custom logic in snippets.</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35916</IssueID>
    <Title>Powerline fonts Messed Up in integrated terminal!</Title>
    <Description>- VSCode Version: 1.17.0 (1.17.0)
- OS Version: macOS 10.13

Yesterday; I updated VS Code then my integrated terminal messed up.

&lt;img width="974" alt="screen shot 2017-10-09 at 7 45 50 am" src="https://user-images.githubusercontent.com/5374985/31343900-f2fb08b2-acc5-11e7-94c4-aebde573702d.png"&gt;

As you can see i'm using the powerline fonts; and there seems to be a lot of extra 'padding' there between everything which wasn't there before.

Reproduces without extensions: Yes</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35914</IssueID>
    <Title>Feature request: Add ability to center the display in Zen Mode</Title>
    <Description>- VSCode Version: 1.18 Insiders
- OS Version:  OSX 10.12.6 Sierra

Steps to reproduce: Activate Zen Mode - Cmd K + Z

At the moment, in order to achieve the desired visual effect, I have to use the `split editor` feature and open a dummy file. It would be really good if there was a configurable way of getting the Zen Mode option to center/left pad the display.

![screen shot 2017-10-09 at 15 41 30](https://user-images.githubusercontent.com/260612/31343610-025e1cf8-ad08-11e7-8af5-b8714dfc918b.png)

  </Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35912</IssueID>
    <Title>The terminal doesn't render properly</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.12.13-300.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
MochaSnippets|Ala|0.0.1
postgresql|JPT|0.0.2
vscode-docker|Pet|0.0.18
code-settings-sync|Sha|2.8.3
vscode-javascript-snippet-pack|aka|0.1.5
django-html|bib|1.2.0
django-snippets|bib|1.1.0
color-info|bie|0.5.0
django|big|1.0.0
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
python-snippets|cst|0.0.5
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
jupyter|don|1.1.3
python|don|0.7.0
python-extension-pack|don|1.0.0
vscode-html-css|ecm|0.1.8
vscode-npm-script|eg2|0.2.1
Python-autopep8|him|1.0.2
vscode-angular2-emmet|jak|2.0.3
search-node-modules|jas|1.2.0
docthis|joe|0.4.8
node-module-intellisense|lei|1.4.0
Go|luk|0.6.66
MagicPython|mag|1.0.12
vscode-todo-parser|min|1.9.1
github-issues-prs|ms-|0.6.0
chai-snippets|nwh|0.1.0
vscode-css-peek|pra|1.3.1
vscode-icons|rob|7.15.0
code-spell-checker|str|1.4.7
python|tht|0.2.3
python-extended-snippets|tus|0.0.1
nodejs-extension-pack|wad|0.1.9
jinja|who|0.0.8
JavaScriptSnippets|xab|1.5.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1. Open the terminal section you'll find the line high is less than the font hight so the letters are cut out. 
![](https://i.imgur.com/vUzWOUf.png)</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35900</IssueID>
    <Title>vscode terminal rendering wrongly !</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: simplified chinese edition 1.17.0 x64
- OS Version: simplified chinese win10 pro x64

Steps to Reproduce:

1. Enter "powershell"
2. Then "cls"
like below:
![test](https://user-images.githubusercontent.com/8075421/31338404-9fb14254-ad31-11e7-9fcd-f24b6a51b2e3.gif)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35890</IssueID>
    <Title>Command line Chinese garbled</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-05T06:07:51.906Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ejs-language-support|Qas|0.0.1
jsx|Twe|0.0.1
vscode-wakatime|Wak|1.1.16
vscode-eslint|dba|1.3.2
python|don|0.7.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
Lua|key|0.0.9
cpptools|ms-|0.13.1
Ruby|reb|0.15.0
vscode-icons|rob|7.15.0
vscode-lua|tri|0.8.1
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35885</IssueID>
    <Title>[folding] "editor.showFoldingControls": "always" stopped working in 1.17</Title>
    <Description>
    </Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35883</IssueID>
    <Title>UI render crash on macOS High Sierra</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (af6ca44db81f5186d3104226c8e76e026789ce20, 2017-10-06T07:50:45.639Z)
- OS Version: Darwin x64 17.0.0 (macOS 10.13 High Sierra, with Supplemental Update Oct. 9 2017)
- Extensions: the listing length exceeds browsers' URL characters limit
---

&lt;img width="1920" alt="2017-10-09 2 26 25" src="https://user-images.githubusercontent.com/6594276/31331382-aa1a2d62-aca7-11e7-8450-925b6e8e087d.png"&gt;

Steps to Reproduce:

1. Launch VSCode (I'm using Insider version)
2. Do anything for a while (navigation / scrolling / ...)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

- This issue only occurred after I upgrade to High Sierra last night. It worked fine on Sierra.
- This issue occurs occasionally, not always.
- Waiting for a while and it came back to normal. then it goes nut again. back and forth. (sometimes minimize and restore the window helps. maybe it triggers a re-render. but I think it's more like just luck)
- Rebooting the computer didn't solve the problem.
- Thought might be problem with electron. but ATOM behaves normal.
- I installed latest node &amp; npm after upgrading. All my projects are working. So runtime should be fine.

This could be an individual case. I don't know if anyone else had the same problem. Hope there's a fix other than reinstalling the OS.</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35876</IssueID>
    <Title>在终端里 git log 会有残影</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:44:50.318Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.3.2
tslint|eg2|1.0.9
vscode-npm-script|eg2|0.2.1
vscode-auto-open-markdown-preview|hnw|0.0.4
search-node-modules|jas|1.2.0
Angular2|joh|2.7.0
vscode-JS-CSS-HTML-formatter|lon|0.2.3
csharp|ms-|1.12.1
vetur|oct|0.9.10
typescript-hero|rbb|1.5.0
nodejs-extension-pack|wad|0.1.9
JavaScriptSnippets|xab|1.5.0

(3 theme extensions excluded)


---

Steps to Reproduce:

1.open teminal
2.git log
3.中文残影（在空白行中显示下一行里每个字的右半部分）

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35874</IssueID>
    <Title>bug：更新版本之后，终端的问题（terminal bug）</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
markdown-mail|ccc|1.1.2
vscode-markdownlint|Dav|0.10.1
githistory|don|0.2.3
git-project-manager|fel|1.4.0
Go|luk|0.6.66
prettify-json|moh|0.0.3
sublime-keybindings|ms-|2.9.1



---

Steps to Reproduce:

1.我替换了terminal为git bash 
2.当我使用git log 的时候，我的某些commit message 里面包含(contains)中文chinese-simplified 
3.这个是我录的gif picture [https://imgur.com/a/YNTmd](https://imgur.com/a/YNTmd)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35873</IssueID>
    <Title>when I run a py file, there are a lot of extra characters in the console.</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-05T06:07:51.906Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.18
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
python|don|0.7.0
gitlens|eam|5.4.1
tslint|eg2|1.0.9
code-runner|for|0.7.2
sublime-babel-vscode|jos|0.2.9
java|red|0.11.0
vscode-java-debug|vsc|0.1.0
vim|vsc|0.10.1

(3 theme extensions excluded)


---

Steps to Reproduce:

1. run py file to parse html 
2. print html content
3. a lot of extra characters in the console, they are words already exist, and appear twice or more times, and the worst thing is that each character in them only have half of it, and only Chinese characters have this situation.
![image](https://user-images.githubusercontent.com/22197930/31328678-f81e5d78-ac9b-11e7-93f3-4ce3227ee441.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35872</IssueID>
    <Title>Newest version occupy too much CPU</Title>
    <Description>- VSCode Version:1.17.0
- OS Version:Windows 10

Steps to Reproduce:

1.Open VSCode software
2.Two unknown .exe files called 'rg.exe' which occupy too mush CPU(more than 50%),When you close VSCode,It's will be release.This is only find in newest version,old version don't find this question.Please reply as soon as possible,Thanks.</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35870</IssueID>
    <Title>sync user vscode settings,extensions</Title>
    <Description>i want to sync my vscode settings and extensions to my microsoft account,so i can easy use vscode in the same way on different computer;</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35861</IssueID>
    <Title>升级到1.17.0后，终端乱码了</Title>
    <Description>

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:   1.17.0
- OS Version:   10.12.5

Steps to Reproduce:
![image](https://user-images.githubusercontent.com/21991861/31324261-9b83979c-ac76-11e7-9089-9937e1ceba46.png)

1.   terminal display garbled
![vscode012312314350320](https://user-images.githubusercontent.com/21991861/31324367-59a3026c-ac77-11e7-806c-c82a68f03ff2.png)

Reproduces without extensions: Yes </Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35859</IssueID>
    <Title>explorer.newFile/Folder opens the file under the cursor on a preview editor.</Title>
    <Description>- VSCode Version: 1.17.0 be377c0faf7574a59f84940f593a6849f12e4de7
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Add keyboard shortcuts for `explorer.newFile` and `explorer.newFolder` (e.g. &lt;kbd&gt;a&lt;/kbd&gt; and &lt;kbd&gt;shift+a&lt;/kbd&gt;).
    ```
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "explorerViewletVisible &amp;&amp; filesExplorerFocus"
    },
    {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "explorerViewletVisible &amp;&amp; filesExplorerFocus"
    },
    ```
    
2. Close all editors.
3. Show explorer (&lt;kbd&gt;shift+cmd+e&lt;/kbd&gt;) and move the cursor to a file.
4. Run `explorer.newFile` or `explorer.newFolder` command. Then, the file under the cursor is opened on a preview editor.

Reproduces without extensions: Yes</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35857</IssueID>
    <Title>vscode terminal display problem</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
![image](https://user-images.githubusercontent.com/8402502/31323720-5864a826-acde-11e7-88bd-6a37643e7ff2.png)
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
![image](https://user-images.githubusercontent.com/8402502/31323627-0b8c00cc-acdd-11e7-975b-bb0f6d2d7e20.png)

- OS Version:
![image](https://user-images.githubusercontent.com/8402502/31323623-fd65d54a-acdc-11e7-9268-02f91802f3c5.png)

Steps to Reproduce:

1. open Terminal (集成终端, ctrl+`), 
2. input some Chinese characters, like 你好
3. type Enter to make the scroll bar visible

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions:  didn't check.</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35854</IssueID>
    <Title>Take up a lot of CPU   rp.exe</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: **1.17**
- OS Version:    **windows 15063.608**

CPU: **i5-4460 3.20GHz**
RAM: **8G**


Steps to Reproduce:

1. 打开项目

2. 打开一个`.js`文件 

3. 打开任务管理器：rg.exe  占用大量CPU
 
![rg](https://user-images.githubusercontent.com/7030260/31323370-8451f9e8-acd9-11e7-848b-0d4b2729f573.png)
![sn o779rt ts7 ajt n9sm](https://user-images.githubusercontent.com/7030260/31323372-8cb44c26-acd9-11e7-9e3b-512fc8eca67a.png)



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35852</IssueID>
    <Title>There is a problem with the terminal display</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eclipse-keybindings|alp|0.9.6
cocos-creator|Chu|0.0.1
cocos-debug|Chu|0.0.1
vscode-eslint|dba|1.3.2
tslint|eg2|1.0.9
vscode-npm-script|eg2|0.2.1
Angular2|joh|2.7.0
Angular-BeastCode|Mik|5.0.6
debugger-for-chrome|msj|3.3.1



---

Steps to Reproduce:

1.
![default](https://user-images.githubusercontent.com/32122849/31323101-f4c295a2-acd4-11e7-82b8-8572f80bada4.png)

2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35850</IssueID>
    <Title>Integrated Terminal render error in chinese</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: macOS 10.13

Steps to Reproduce:

1. when use integrated terminal. rendering error in chinese
![IMG](http://ovhfrawes.bkt.clouddn.com/QQ20171009-084837.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>09/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35845</IssueID>
    <Title>Named workspaces + `window.title`</Title>
    <Description>Hi,

It would be awesome if we have the ability to name our workspaces. And subsequently be able to use them in `window.title` setting.

Like this:

```
{
  "settings": {
    "workspace.Name": "ui-ng"
    "window.title": "${workspaceName}${separator}${activeEditorMedium}${separator}${dirty}"
  }
}
```

And the same workspace names should be used to open recent workspaces in vscode.</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35844</IssueID>
    <Title>Two finger scroll becomes laggy on Surface Book when one or more plug-in's are enabled</Title>
    <Description>I'm having a scroll-lag issue in Visual Code when using two-finger scrolling on a Surface Book (i7 model) when one or more plug in is enabled.  The more plug-ins I enabled, the greater the lag.   

The lag is seen when following these steps:

1. Scroll down some way in a large piece of code (say 200 lines)
2. Place two fingers at the lower side of the track pad
3. Slide two fingers up 
4. The Visual Code UI will not slide immediately
5. There is a lag and then the sliding begins and snap scrolls

The performance of two finger scroll on Chrome or Edge is far superior.  I searched the usual places on the internet to see if someone else had this issue, but it seems two-finger scrolling has had a number of issues over the years.  I have to rule out the device itself because it works perfectly in other apps that support smooth scrolling.

- VSCode Version: 1.17.0
- OS Version: Latest Windows 10 Preview build. 

Reproduces without extensions:  **No**  but any extension will slow it down. </Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35842</IssueID>
    <Title>Integrated terminal shows no command prompt and no cursor</Title>
    <Description>Integrated terminal shows no command prompt and no cursor.
Code Version 1.17.0, OS X 10.11.6

I think the last update ruined it.</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>12/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35828</IssueID>
    <Title>How to rebind navigation in "Reference Search"?</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.12.13_1
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.10.1
vscode-eslint|dba|1.3.2
python|don|0.7.0
gitlens|eam|5.4.1
vetur|oct|0.9.10
language-stylus|sys|1.7.3
vim|vsc|0.10.1
vscode-todo-highlight|way|0.5.11

(1 theme extensions excluded)


---
Usually, I need to navigate with Ctrl+p and Ctrl+n instead of UpArrow and DownArrow. How can I bind it in Reference Search popup?
![image](https://user-images.githubusercontent.com/10251687/31316734-81e2f99a-ac76-11e7-8b77-455d9ace4744.png)
![image](https://user-images.githubusercontent.com/10251687/31316741-aad0a2ee-ac76-11e7-9f24-d896af28a5bc.png)</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>11/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35822</IssueID>
    <Title>Docker extension creates new terminal session with no console view: VS Code 1.17 new release</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17
- OS Version: Windows 10 Creators Update
- Terminal: Powershell

Steps to Reproduce:

1. Download and install VS Code 1.17
2. Download and install Docker extension
3. Create dockerfile and go F1 &gt; `Docker: Build` or `Docker: Run`
4. It creates another terminal session with no console view like this:
![vs_code_docker_no_console_view_terminal_1](https://user-images.githubusercontent.com/12271104/31315846-b7c26408-ac5b-11e7-9700-2b3b23f727e8.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No. requires Docker extension

Extensions list:
```
abusaidm.html-snippets
Angular.ng-template
christian-kohler.npm-intellisense
chrmarti.regex
CoenraadS.bracket-pair-colorizer
cssho.vscode-svgviewer
donjayamanne.githistory
ecmel.vscode-html-css
eg2.tslint
eg2.vscode-npm-script
formulahendry.auto-rename-tag
ginie.pug2html
HookyQR.beautify
humao.rest-client
humy2833.ftp-simple
joelday.docthis
johnpapa.Angular2
kisstkondoros.typelens
moppitz.vscode-extension-auto-import
mrmlnc.vscode-jade-snippets
ms-vscode.PowerShell
msjsdiag.debugger-for-chrome
PeterJausovec.vscode-docker
pflannery.vscode-versionlens
rubbersheep.gi
Shan.code-settings-sync
thekalinga.bootstrap4-vscode
ziyasal.vscode-open-in-github
```

I encountered this problem on two machines, both has same Windows and VS Code configuration and same project.

This problem has appeared after 1.17 update, no problem on previous version.</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35820</IssueID>
    <Title>CJK text not properly rendered in built-in terminal</Title>
    <Description>- VSCode Version: 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7)
- OS Version: Kubuntu 17.04 x86_64

Steps to Reproduce: 

1. type any command that will get Chinese text output in the built-in terminal
2. scroll the text in terminal. Text will not get cleared properly

Reproduces without extensions: I estimate this has nothing to do with plugins.

![screenshot_20171008_160321](https://user-images.githubusercontent.com/399946/31315088-0cc8a37c-ac43-11e7-9cb8-ecfb5dad8f71.png)
</Description>
    <CreatedDate>08/10/2017</CreatedDate>
    <ClosedDate>08/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35803</IssueID>
    <Title>Adding a new file should open the Explorer file list </Title>
    <Description>- VSCode Version: 1.17.0
- OS Version: OSX 10.13 (High Sierra) 

Steps to Reproduce:

1. Close the collapse on the left side toolbar (Explorer file list) 
2. Click on the "new file" icon. 

Reproduces without extensions: Yes

I think the collapse should open so you can type and see the file name you are about to create. 
What do you guys thing? Thats more of an UX issue! =)

</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35794</IssueID>
    <Title>Terminal font doesn't fit to the line after update 1.17</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:33:45.303Z)
- OS Version: Linux x64 4.13.4-200.fc26.x86_64

integrated-terminal font doesn't fit to the line after update 1.17

![22228309_1736678776632498_4608159730353965000_n](https://user-images.githubusercontent.com/18547251/31308785-596ac782-ab85-11e7-809e-bc3a238e8e76.jpg)
</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35792</IssueID>
    <Title>Terminal text background filled partially when rendering certain multibyte characters</Title>
    <Description>- VSCode Version: Code - Insiders 1.18.0-insider (af6ca44db81f5186d3104226c8e76e026789ce20, 2017-10-06T05:26:16.770Z)
- OS Version: Windows_NT x64 10.0.17004
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
code-gnu-global|aus|0.2.2
vscode-svgviewer|css|1.4.3
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
xml|Dot|1.9.2
escaping-characters|drp|1.0.0
tslint|eg2|1.0.9
vscode-npm-script|eg2|0.2.1
json-tools|eri|1.0.2
genrandom|esp|0.0.4
genuuid|esp|0.3.3
insert-file|esp|0.0.2
sushi-vscode|esp|0.0.3
unicode-normalizer|esp|0.0.1
unixtime-converter|esp|0.0.2
vcterminal|esp|0.0.11
CppSnippets|har|0.0.12
markdown-shortcuts|mdi|0.8.1
vscode-clang|mit|0.2.2
ecdc|mit|0.10.3
cpptools|ms-|0.13.1
csharp|ms-|1.12.1
mono-debug|ms-|0.15.7
debugger-for-chrome|msj|3.3.1
emoji|Per|0.0.3
vscode-versionlens|pfl|0.19.1
vscode-icons|rob|7.14.0
addDocComments|ste|0.0.8
sort-lines|Tyr|1.3.0
change-case|wma|1.0.0
html-css-class-completion|Zig|1.10.0

---

Steps to Reproduce:

1. Open terminal
2. Ex.) launch `bash` and do `ls -la` on certain directory that contains directories that has Japanese names.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/1311400/31308166-b8217114-abac-11e7-9747-e65e42ab9bd9.png)
</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35791</IssueID>
    <Title>Terminal does not render awesome patched icon fonts correctly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: Linux

Steps to Reproduce:

1. Use an [awesome-terminal-fonts](https://github.com/gabrielelana/awesome-terminal-fonts) patched font in terminal with a powerline that uses awesome icons (such as [powerlevel9k](https://github.com/bhilburn/powerlevel9k))
2. Open terminal

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Before updating to 1.17:

![screenshot from 2017-05-05 19-03-48b](https://user-images.githubusercontent.com/1764167/31308179-a3ddd616-ab7a-11e7-80c4-76868924059a.png)



With 1.17.0:

![screenshot from 2017-10-07 16-01-05](https://user-images.githubusercontent.com/1764167/31308183-ac99c9fe-ab7a-11e7-890c-0a9ffbad7b26.png)

</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35787</IssueID>
    <Title>"window.nativeTabs": true - Not working. </Title>
    <Description>"window.nativeTabs": true - Not working for me.

Mac OS 10.12.6
VSCode 1.17</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35784</IssueID>
    <Title>After scoll / flush terminal's screen, the content still display.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17 stable
- OS Version: Windows 10 version 1703 build 15063.632

Steps to Reproduce:

1. Open a terminal in Chinese Windows environment, input a command such as `ls`;
2. Scoll the screen, text should be flush, but they are still on screen.
![2017-10-07_174318.png](https://ooo.0o0.ooo/2017/10/07/59d8a2770c430.png)
3. Use `clear` to clean screen, this problem will be more esay to observe.
![2017-10-07_170729.png](https://i.loli.net/2017/10/07/59d8a2770130c.png)

A gif to show it: https://i.loli.net/2017/10/07/59d8a277631b3.gif

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35776</IssueID>
    <Title>Toggle comment  sets the cursor before the comment</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: Windows 7 64 bit

Steps to Reproduce:

1. Create a line comment using the **Toggle Line Comment** keyboard shortcut, on an empty line, with no code in it. The cursor is set to the left of the comment: `$//`. In the previous version the cursor was set after the comment: `// $`. (I used the dollar sign to point where the cursor is after creating the comment).

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>09/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35774</IssueID>
    <Title>The console shows the ghost when I use Chinese</Title>
    <Description>- VSCode Version: Code 1.17.0 (be377c0faf7574a59f84940f593a6849f12e4de7, 2017-10-04T23:45:46.804Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
vscode-npm-script|eg2|0.2.1
search-node-modules|jas|1.2.0
Go|luk|0.6.66
mssql|ms-|1.2.0
csharp|ms-|1.12.1
vscode-icons|rob|7.14.0
nodejs-extension-pack|wad|0.1.9
JavaScriptSnippets|xab|1.5.0



---

Steps to Reproduce:

1. The console show the ghost when I use Chinese, Here is the screenshot

![_20171007112759](https://user-images.githubusercontent.com/1396702/31304395-d186a674-ab52-11e7-834a-d89dbb97c288.png)







&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>07/10/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35413</IssueID>
    <Title>Wrong JSDoc Parse</Title>
    <Description>- VSCode Version: 1.16.1
- OS Version: Windows 10 Pro (Build 15063.608)

Steps to Reproduce:

1. Install `jquery` from npm.
2. Require `jquery`, and use that as function.
3. Hover mouse on code that wrote on step 2.

![image](https://user-images.githubusercontent.com/21969938/31043512-09d7fc68-a5f8-11e7-9942-c7d25494a1e4.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>30/09/2017</CreatedDate>
    <ClosedDate>30/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35393</IssueID>
    <Title>Can't use "Revert selected ranges" when lines are deleted at the end of the file</Title>
    <Description>- Open any file tracked in git
- Delete the last few lines
- Open the git diff view, select anything, run "Revert selected ranges"
- 🐛 See error popup, `Git: Illegal value for 'line'`

Stack:

```
ExtHostDocumentData._lineAt (/Users/roblou/code/vscode/src/vs/workbench/api/node/extHostDocumentData.ts:144)
lineAt (/Users/roblou/code/vscode/src/vs/workbench/api/node/extHostDocumentData.ts:81)
CheckoutItem.revertSelectedRanges.diffs.filter.diff (/Users/roblou/code/vscode/extensions/git/src/commands.ts:587)
(anonymous function) (/Users/roblou/code/vscode/extensions/git/src/commands.ts:585)
fulfilled (/Users/roblou/code/vscode/extensions/git/out/commands.js:14)
[ Promise.resolve ] (Unknown Source:undefined)
CompletePromise_then (/Users/roblou/code/vscode/out/vs/base/common/winjs.base.raw.js:1566)
```</Description>
    <CreatedDate>29/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35384</IssueID>
    <Title>Hangs when writing optional param with default value in JavaScript comment</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-color|ans|0.4.5
githistory|don|0.2.3
python|don|0.7.0
gitlens|eam|5.3.0
code-runner|for|0.7.2
Lua|key|0.0.9
cpptools|ms-|0.13.0
typescript-javascript-grammar|ms-|0.0.24
material-icon-theme|PKi|2.2.1
java|red|0.10.0

(3 theme extensions excluded)


---

Steps to Reproduce:

1. Write a JavaScript JsDoc comment on a class member function with a parameter.
2. Edit the documentation of the param to make it optional with a default value.  When typing the equals sign, without having typed the closing brace first, vs code will often hang and need to be restarted.

E.x.
```
class Test {
    /**
     * Some test documentation
     * @async
     * 
     * @param {string} [configFile= - The absolute path of the module's configuration file.
     * @returns {Promise}
     */
    parseModuleConfig(config) {
        return config + 1;
    }
}
```

When typing the **=** in the above comment, vs code hangs.

Reproduces without extensions: Yes</Description>
    <CreatedDate>29/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35376</IssueID>
    <Title>Terminal content expanding when resizing</Title>
    <Description>Version 1.17.0-insider
Commit caa5656df9e8fa9c556c7eddeb6b4d532814054b
Date 2017-09-29T05:16:09.696Z

- give the editor section a small with, and close the window
- start with a empty window
- add an empty folder with 'Add workspace folder'
- open the terminal. It will open with small width, don't resize yet, but type `ls`
- resize the terminal to get more width
- context stays small

![image](https://user-images.githubusercontent.com/6461412/31018372-2228f0c8-a52c-11e7-9315-e191611ae54c.png)
</Description>
    <CreatedDate>29/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35355</IssueID>
    <Title>Jump to Bracket moves cursor but not the view</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Fedora 26

Steps to Reproduce:

1. Ctrl-p Go to Bracket

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Go to Bracket will jump the cursor to the matching bracket but not the view when the matching bracket is not on screen. 
One can move cursor with the arrow keys after jumping to matching bracket and the view would jump too.
Previous vscode versions would "scroll" to the matching bracket automatically.
Is this on purpose in the latest vscode version, seems like a bug.

Thanks.</Description>
    <CreatedDate>29/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35344</IssueID>
    <Title>Inverted text not readable</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (3831ef5e2ca82e7040cca4af44d76d064f9430a5, 2017-09-28T08:38:19.665Z)
- OS Version: Darwin x64 16.7.0
- Extensions: Many

---

Steps to Reproduce:

1. `less somefile.txt`
2. The last line should show color-inverted text:
![image](https://user-images.githubusercontent.com/9205389/30994518-3b3a2e9c-a469-11e7-9936-50a762113d38.png)
</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35332</IssueID>
    <Title>Type information is not picked up from .mjs files for "IntelliSense"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: *

Steps to Reproduce:

1. Create `a.mjs`:

```
    /** @param {string} name */
    export default function a(name) {
      return 'hi'
    }
```

2. Create `use-it.js`:

```
    import a from './a.mjs'

    // Then...
```

3. ...type `a(`
4. No useful "IntelliSense"
5. Renaming `a.mjs` to `a.js` results in useful "IntelliSense"


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35321</IssueID>
    <Title>[tsx]syntax highlighting problem</Title>
    <Description>
- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
markdown-preview-github-styles|bie|0.0.4
path-intellisense|chr|1.4.2
vscode-markdownlint|Dav|0.10.1
vscode-icons|rob|7.14.0
vscode-react-native|vsm|0.4.2



---
![tsx1](https://user-images.githubusercontent.com/24318019/30973875-ceff1d22-a4a0-11e7-8c76-8abcb46cf227.png)
![tsx2](https://user-images.githubusercontent.com/24318019/30973889-d71768f2-a4a0-11e7-8234-e4c8f1d395cd.png)

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>30/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35311</IssueID>
    <Title>Select all occurrences does is limited to 999 lines / selections</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:26:20.018Z)
- OS Version: Linux x64 4.4.0-91-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-mjml|att|0.0.8
vscode-eslint|dba|1.3.2
mjml-syntax|dig|0.0.1
githistory|don|0.2.3
phpcs|ika|0.7.0
cpptools|ms-|0.13.0
php-docblocker|nei|1.2.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. create new file
2. add 1600 lines containing this string: `28.09.2017    09:20:34`
3. select spaces at first line
4. press ctrl + shift + L
5. it select only first 999 lines instead of all of them


Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35302</IssueID>
    <Title>Issue with tab Indentation</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
Not able to work efficiently on VScode since tab setting does not work properly. Even after multiple solutions applied by googling. Now becoming frustrated for such a small issue since every 2 min I have to apply setting using command palette. Please help me to resolve this issue.

Also, when using tab, the width of tab character increases and decreases affecting the indentation of the file, when the cursor is focused on the line.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
![image](https://user-images.githubusercontent.com/8476966/30954250-11b543d4-a44d-11e7-8cba-5082952103dd.png)

- OS Version:
![image](https://user-images.githubusercontent.com/8476966/30954281-323186f4-a44d-11e7-8f35-3935e216a8f6.png)

GIF for better understanding:
![vscode_tab_issue](https://user-images.githubusercontent.com/8476966/30954526-1b00a98c-a44e-11e7-96c0-3962f5e75fe6.gif)

![vscode_tab_issue2](https://user-images.githubusercontent.com/8476966/30954731-e17d446c-a44e-11e7-9dc8-dcd2e39dedab.gif)



Steps to Reproduce:

1. Set the tab related setting
2. Edit file and switch tab and come back to the previous tab



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35301</IssueID>
    <Title>Import @angular in *.ts file - red underline in path.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 2.5.3-insiders.20170919
- OS Version: Win 7, 64-bit

Steps to Reproduce:

1. Install angular via npm
2. Import it in ts module (eg. `import { NgModule } from '@angular/core';`)
3. You can see that VS Code underlines path (may it be issue with at sign in @angular?)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes



Error does not occur if I import for example rxjs/Rx.

If I do instead `import { NgModule } from '@angular/core/core';` from example above,  it works, however it is not valid path, and app does not build.

It worked properly in previous build.

**Warning**: VS Code underlines import path after few seconds</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35299</IssueID>
    <Title>Select All keyboard shortcut fails in save dialog </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.0 (1.16.0) 27492b6bf3acb0775d82d2f87b25a93490673c6d
- OS Version: macOS 10.12.6 (16G29)

Steps to Reproduce:

1. Create new file with ⌘N
2. Save file with ⌘S
3. In the save dialog, the ⌘A keyboard shortcut does not select all text in neither the "Save as:" nor "Tags:" fields.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35278</IssueID>
    <Title>Custom aliases for quick open shortcuts (view, task, debug, etc)</Title>
    <Description>I use the quick open shortcuts pretty often, and I want them to be accessible but don't want to come up with new shortcuts for all of them. In the terminal I usually assign one or two letter shortcuts to commands that I use often, so it would be awesome if I could customize the command palette in the same way.

For example, I might want to type `db` to get a list of debug configs instead of `debug`, or `t` for tasks.

```
"workbench.quickOpen.aliases": {
  "db": "debug ",
  "t": "task ",
  // or maybe symbols
  "!": "view ",
  // or for the command palette beyond the existing shortcuts
  "x": "&gt;extensions:"
}
```

</Description>
    <CreatedDate>28/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35265</IssueID>
    <Title>Cannot read terminal content - nano</Title>
    <Description>Testing #34868 

When I load up Nano I can;t see the control chars at the bottom and also their are some strange artifacts at the top of the terminal.

![image](https://user-images.githubusercontent.com/1051190/30939935-181ff106-a394-11e7-80ed-bfa93a9e1621.png)
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35264</IssueID>
    <Title>Content does not reflow on resize</Title>
    <Description>Testing #34868 

When the terminal has text flowing over many lines it does not reflow the text to full window size (or a reduced window size).

![image](https://user-images.githubusercontent.com/1051190/30939523-8854881c-a392-11e7-8e1e-c3657ee61bdd.png)

The native terminal does do this and this does work on Windows for our integrated terminal.

Sean</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35230</IssueID>
    <Title>Not very helpful link origin when logging out of an extension</Title>
    <Description>See screen shot:

The link points to extensionHostProcess and clicking on it takes me to minified code. I was expecting to see a link to my extension code. 

&lt;img width="703" alt="capture" src="https://user-images.githubusercontent.com/1931590/30917414-3e1b2300-a39c-11e7-9fe7-cc077dec1698.png"&gt;
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35218</IssueID>
    <Title>Terminal size is very often cropped</Title>
    <Description>Doesn't seem to relate to my tmux setup, it also happens when I disable that.

![image](https://user-images.githubusercontent.com/22350/30908372-a4dfdfa0-a37d-11e7-8560-3235f2ffa641.png)
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35217</IssueID>
    <Title>VSCode for linux only match first 2000 lines.</Title>
    <Description>As you see, I selected "pid", but it only match first 2000 lines even I scroll to bottom.

![image](https://user-images.githubusercontent.com/5822468/30907913-a4205c44-a3ae-11e7-9d5d-edc8e70a7c76.png)
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35209</IssueID>
    <Title>VS Code freezes on editing jsdoc</Title>
    <Description>- VSCode Version: 1.16.1
- OS Version: Windows 8.1

Steps to Reproduce:

1. Edit jsdoc that has something=[]
2. Put opening [ before `something`
3. VSCode freezes

Example: 
```
* @param {object[]} something=[] Some description
```

Changing to
```
* @param {object[]} [something=[] Some description
```

Reproduces without extensions: Yes</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35206</IssueID>
    <Title>SCM: lots of git processes hanging around after quitting</Title>
    <Description>Steps to Reproduce:

1. open a folder with many git repositories as children
2. see your CPU go flying

![screen shot 2017-09-27 at 09 21 10](https://user-images.githubusercontent.com/900690/30900702-4ad0bf6a-a365-11e7-9843-52bbf40e8743.png)

These processes were hanging around even after I quit VS Code. I had to reboot my machine to get out of very high CPU/memory consumption.
</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35193</IssueID>
    <Title>When openFiles and openFolders are both true, everything is pickable</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:24:48.911Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Testing #34821.

When openFIles and openFolders are both set to true, both files / folders are pickable.

This is the same behavior as when both are false. One of them should error out I think.

Maybe a better approach is to rename the two options to showFiles and showFolders, both default to true.

Both true -&gt; show all
Only showFiles false -&gt; show folders only, similarly for showFolders
When both are false -&gt; error out

And currently the word "open" is overloaded with two different meanings in the API, as openLabel and openFiles are totally different. Might cause some confusion.</Description>
    <CreatedDate>27/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35175</IssueID>
    <Title>Cannot run tsc build task</Title>
    <Description>Testing #34992.

- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:11:30.780Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
material-icon-theme|PKi|2.2.1
vscode-docker|Pet|0.0.18
quokka-vscode|Wal|1.0.66
regex|chr|0.1.0
crazy|kie|0.0.1
githistory|don|0.2.3
python|don|0.7.0
gitlens|eam|5.2.0
tslint|eg2|1.0.9
vscode-npm-script|eg2|0.2.1
vsc-travis-ci-status|fel|1.1.0
svgpreview|kis|0.2.0
Go|luk|0.6.65
mssql|ms-|1.2.0
github-issues-prs|ms-|0.5.0
debugger-for-chrome|msj|3.3.0
vscode-versionlens|pfl|0.19.1
Ruby|reb|0.15.0
kustovscode|sea|0.0.1
php-syntax-visualizer|vsc|0.0.1
vscode-open-in-github|ziy|1.2.8

(2 theme extensions excluded)


---

Steps to Reproduce:

1. `yo code`
2.  open the created folder in vs code
3. delete the `.vscode/tasks.json` file
4. `Tasks: Run Task` from the command palette 
5. Choose `tsc: watch - tsconfig.json`
-&gt; Error: The process task system can only execute custom tasks.
</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35174</IssueID>
    <Title>Watch task spinner never goes away</Title>
    <Description>Testing #34953

- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:15:18.286Z)
- OS Version: Linux x64 4.4.0-83-generic

- Follow instructions in #34953 for the first gulp watch task, and also the later tsc watch task, using the `$tsc-watch` matcher
- When I start the watch task, the spinner appears and never goes away as long as the task is running. It should only be visible while the task is building.

Output for the second one is

```
&gt; Executing task in folder tasks-tsc: npm run watch &lt;


&gt; tasks-tsc@1.0.0 watch /home/parallels/code/tasks-tsc
&gt; tsc -w -p .

test.ts(1,9): error TS2551: Property 'logg' does not exist on type 'Console'. Did you mean 'log'?
2:07:16 PM - Compilation complete. Watching for file changes.
```</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35159</IssueID>
    <Title>Find results in markdown preview has different highlight color than normal editor</Title>
    <Description>
Testing #33296

On the left is the editor with a markdown file, on the right is the markdown preview.
The find results have very different highlights.

![image](https://user-images.githubusercontent.com/16890566/30876861-bc0a6686-a2ac-11e7-8e4a-942aef857ec4.png)


</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35154</IssueID>
    <Title>Cannot save an empty Untitled File</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:15:18.286Z)
- OS Version: Linux x64 3.13.0-108-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
credstore|ms-|0.0.1
github-issues-prs|ms-|0.5.0

---

Steps to Reproduce:

1. Ctrl + N
2. Ctrl + S
3. Expect Save dialog, but nothing happens. I think that used to work.

Also on Mac.</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35150</IssueID>
    <Title>VS Code unusable on Mac with large projects</Title>
    <Description>- VSCode Version: Version 1.16.1 (1.16.1)
- OS Version: macOS Sierra 10.12.4 (16E195)

Opening a large project in VS Code on Mac causes other in-no-way-related programs to crash, break, or behave otherwise unexpectedly. Examples include Safari and Chrome failing to load anything, Terminal failing to even show a basic prompt, and even VS Code's Git extension failing to initialize. VS Code continues to work, until you try to save, at which point it fails to do so. Makes it unworkable for large projects.

Steps to Reproduce:

1. Create project with large number of files. My project currently has 20k+ files (that does not include npm modules BUT it does include build artifacts).
2. Observe (in Activity Monitor for example) a high thread count. It currently floats around 660 threads for me. If using Activity Monitor, observe the number of open files by CodeHelper (gets up to around 9k before crashing the log.)
3. Observe other programs failing. This includes basically every program -- browsers failing to load despite having internet, other IDEs, Terminal, Chrome extensions, even VS Code's Git extension fails.

Reproduces without extensions: Yes</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>30/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35145</IssueID>
    <Title>Console log origin not shown on Linux</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:15:18.286Z)
- OS Version: Linux x64 3.13.0-108-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
credstore|ms-|0.0.1
github-issues-prs|ms-|0.5.0

Testing #34756

---

![image](https://user-images.githubusercontent.com/9205389/30874003-f246f272-a2a3-11e7-8313-663a7f18dce3.png)
</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35139</IssueID>
    <Title>OpenDialogOptions: 'openFiles = false' lets me open files</Title>
    <Description>Testing #34821, Linux

- Use yo code to create a sample extension and set extension.ts to
```
import * as vscode from 'vscode';
export function activate(context: vscode.ExtensionContext) {
    let disposable = vscode.commands.registerCommand('extension.sayHello', () =&gt; {
        vscode.window.showOpenDialog({
            openFiles: false,
            filters: {}
        }).then(r =&gt; console.log(r));
    });
    context.subscriptions.push(disposable);
}
```
- run the 'sayHello' command
- select a file and press ok</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35136</IssueID>
    <Title>failed to execute 'setrequestheader' on 'xmlhttprequest'</Title>
    <Description>Hi,

In installed the last version of Visual Studio Code (x64 1.16.1) and I have this error.
![image](https://user-images.githubusercontent.com/1764519/30868045-8d2c8390-a2ab-11e7-9ca2-dcb37b165e62.png)

I try to install Extensions.

Can you help to fix this problem?

Thank you
</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35133</IssueID>
    <Title>Extensions viewlet gets cleared on workspace folder add</Title>
    <Description>1. Open extensions viewlet -&gt; notice installed extensions shown and recommendations
2. Explorer -&gt; add new workspace folder
3. Back to extensions viewlet -&gt; it is completely emtpy

Once I search for something and cancel the search the extensions viewlet gets healthy</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35100</IssueID>
    <Title>Gitlens view has duplicate title</Title>
    <Description>![image](https://user-images.githubusercontent.com/22350/30860616-0694ade0-a2c8-11e7-9427-dcf7efab3709.png)
</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35099</IssueID>
    <Title>Snippet tabstops disappear after changing tabs</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0-ins
- OS Version: win7x64

After expanding your snippet, if there would tabstops (with placeholders or without), they will disappear after you will move to another tab and return back.

GIF:
![tabstops disappear after changing tabs](https://user-images.githubusercontent.com/24613274/30860539-1bfe4d64-a2d0-11e7-9484-fbf2b44deedf.gif)
</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35097</IssueID>
    <Title>Search: allow to search workspace relative paths</Title>
    <Description>I would expect in this case to get a file result, I wonder if this is because of our RipGrep change for file search:

![image](https://user-images.githubusercontent.com/900690/30860471-80385bb6-a2c7-11e7-95fc-41d14c592742.png)

I do have `vscode-docs` as one of the folders inside my workspace. </Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35070</IssueID>
    <Title>Terminal Output incorrectly rendered for IEx help</Title>
    <Description>When using Elixir's Interactive Shell the help headings for functions is incorrectly formatted. It should be a yellow bar with black letters to indicate the name of the function, instead it is a shortened, non-contiguous bar with no text.

- VSCode Version: Code - Insiders 1.17.0-insider (f7962f0682a76516df51de4856f8ccc5d8ad578a, 2017-09-20T05:10:59.524Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.10.1
EditorConfig|Edi|0.10.1
material-icon-theme|PKi|2.2.1
vscode-docker|Pet|0.0.18
code-settings-sync|Sha|2.8.3
better-toml|bun|0.3.1
vscode-eslint|dba|1.3.2
vscode-babel-coloring|dza|0.0.4
gitlens|eam|5.2.0
rest-client|hum|0.15.2
terraform|mau|0.0.18
vscode-elixir|mjm|1.0.0
prettify-json|moh|0.0.3
cpptools|ms-|0.12.4
elm|sbr|0.15.0
vscode-nginx|sha|0.4.1
vim|vsc|0.10.1

(3 theme extensions excluded)


---

Steps to Reproduce:

1. Open terminal
2. Launch `iex`
3. Run `h String.split/1`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35062</IssueID>
    <Title>Filters don't work in showOpenDialog</Title>
    <Description>Testing #34821 on macOS

As soon as I add `filters: { 'TypeScript': ['*.ts'] }` to the options of `showOpenDialog`, I can no longer select any files, including `*.ts` files.</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35056</IssueID>
    <Title>Custom views titles are rendered twice</Title>
    <Description>![image](https://user-images.githubusercontent.com/10746682/30854760-ef79846a-a2b2-11e7-849b-c9b09d77db5b.png)


@joaomoreno FYI</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>35014</IssueID>
    <Title>API: Document RelativePattern</Title>
    <Description>Looks like the class should get some JSDocs.</Description>
    <CreatedDate>26/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34973</IssueID>
    <Title>How to Find text in Debugger console in visual studio code ? </Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
jshint|dba|0.10.15
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
EditorConfig|Edi|0.10.1
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.0
git-project-manager|fel|1.4.0
vscode-npm|fkn|3.3.0
beautify|Hoo|1.1.1
vscode-JS-CSS-HTML-formatter|lon|0.2.3
debugger-for-chrome|msj|3.3.0
vscode-icons|rob|7.14.0
gitblame|wad|2.1.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34971</IssueID>
    <Title>Restore terminals including the current directory upon restart</Title>
    <Description>Steps to Reproduce:

Operating System: Linux Mint.

1. Open terminal in VSCode
2. cd to some directory (different from the default/home directory)
3. Restart vscode
4. Terminal is restored but the current directory is not same as the one prior to restart

#Reproduces without extensions: Yes</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34960</IssueID>
    <Title>@angulr/core flagged as module not found by tslint</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (f7962f0682a76516df51de4856f8ccc5d8ad578a, 2017-09-20T05:10:59.524Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
code-settings-sync|Sha|2.8.3
sort-lines|Tyr|1.3.0
html-snippets|abu|0.1.0
Bookmarks|ale|0.16.0
project-manager|ale|0.21.1
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.3.2
gitlens|eam|5.2.0
tslint|eg2|1.0.9
vscode-console-wrapper|fab|0.4.0
auto-rename-tag|for|0.0.14
Angular2|joh|2.7.0
ecdc|mit|0.10.3
HTMLHint|mka|0.4.0
vscode-autoprefixer|mrm|2.1.2
vscode-stylefmt|mrm|2.5.0
angular2-inline|nat|0.0.17
vscode-versionlens|pfl|0.19.1
stylelint|shi|0.29.1
Align|ste|0.2.0
ayu|tea|0.8.0
change-case|wma|1.0.0

(4 theme extensions excluded)

---

Steps to Reproduce:

1. Files that I've been using for weeks without any errors showing are now flagging my components with an error in lines like

`import { Component, OnInit } from '@angular/core';`

&lt;img width="548" alt="screen shot 2017-09-25 at 9 16 20 am" src="https://user-images.githubusercontent.com/835148/30810246-7076d072-a1d2-11e7-9423-f954d2ba8d9e.png"&gt;

2. not sure what's different.  Same project, using Code's version of TS.

Could be user error, but I have no idea why and haven't changed anything, other than updating each Insiders build.</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34949</IssueID>
    <Title>Programs starting with underscore makes its path to be merged with previous directry</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
htmltagwrap|bra|0.0.3
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
danielo-node-snippets|dan|1.0.3
markdown-table-prettify|dar|1.1.1
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
gitlens|eam|5.2.0
EditorConfig|Edi|0.10.1
vscode-npm-script|eg2|0.2.1
auto-close-tag|for|0.5.0
auto-complete-tag|for|0.0.2
auto-rename-tag|for|0.0.14
vue-snippets|hol|0.1.5
JSDocTagComplete|Hoo|0.0.2
badges|idl|1.0.7
sublime-babel-vscode|jos|0.2.9
vscode-github|Kni|0.19.0
vue|liu|0.1.5
lit-it|moh|1.2.12
debugger-for-chrome|msj|3.3.0
vetur|oct|0.9.10
vuehelper|oys|0.1.0
vscode-docker|Pet|0.0.18
material-icon-theme|PKi|2.2.1
vscode-icons|rob|7.13.0
code-settings-sync|Sha|2.8.3
code-spell-checker|str|1.4.0
vscode-react-redux-snippets|tha|0.3.3
quokka-vscode|Wal|1.0.66
ReactSnippets|xab|1.4.0



---

Steps to Reproduce:

1. Try to debug a program that has underscore as first parameter. Something like this
```js
{
            "name": "Run mocha",
            "request": "launch",
            "type": "node",
            "program": "${workspaceRoot}\\node_modules\\.bin\\_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "-b",
                "--recursive",
                "build/test/"
            ],
            "cwd": "${workspaceRoot}",
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            // Environment variables passed to the program.
            "env": {
                "NODE_ENV": "test"
            }
        }
```
2. See how the pat becomes `node_modules/.bin_mocha` instead of `node_modules/.bin/_mocha`</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34932</IssueID>
    <Title>Selecting Tag Suggestions Results In Double Opening Chevrons (eg &lt;&lt;html&gt;&lt;/html&gt;)</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:26:20.018Z)
- OS Version: Linux x64 4.10.0-35-generic
- Extensions: none
---

Steps to Reproduce:

1. Type '&lt;'
2. Select any of the suggested tags</Description>
    <CreatedDate>25/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34910</IssueID>
    <Title>Mixed HTML PHP &amp; AngularJS breaks syntax color highlighting.</Title>
    <Description>![screenshot from 2017-09-24 10-50-43](https://user-images.githubusercontent.com/4021306/30785114-3a178c2c-a116-11e7-8c41-854954e9ba02.png)
- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.11.3-202.fc25.x86_64
- Extensions: none
---

Messy template that mixes PHP HTML &amp; AngularJS (v1) breaks syntax highlighting https://gist.github.com/joshribakoff/eec82fdf61209db815b682069110dcec

intelliJ, and sublime both handle this fine. Atom also messes up but in a different way than VSCode. I would not be surprised to hear the code is invalid, but Sublime does handle it fine anyways.</Description>
    <CreatedDate>24/09/2017</CreatedDate>
    <ClosedDate>24/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34908</IssueID>
    <Title>Terminal window content, wordwrapped content is not suitable for "problemsMatcher" integration </Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:09.760Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
gitlens|eam|5.2.0
tslint|eg2|1.0.9
vscode-npm-script|eg2|0.2.1
Angular2|joh|2.7.0
debugger-for-chrome|msj|3.3.0

---
I have a problem with the multiline problemsMatcher and word wrapped results in the terminal console. 

When I integrate jasmine error reports to vscode "problems" tab and my vscode window is small, the reported error lines are cut at the visual width of the terminal window. Because multiline pattern matching works line by line, those wrapped lines doesn't contains whole information and  are not consistent any more with my pattern matching regex expressions. 

Is there any way to disable word wrapping in the terminal window or do you have any other workaround maybe ? 

I tested with two different terminals (Git Bash and win. PowerShell), because both have the same behavior I think the wrapping is at the vscode side ?   
  
Steps to Reproduce:

I describe whole integration between jasmine and vscode in [this blog article](http://bisaga.com/blog/programming/testing-typescript-node-app-with-jasmine/) 

1. create project with jasmine tests, run jasmine in the terminal successfully, then 
2. create task with the content: 
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "command": "run",
    "args": [],
    "tasks": [
        {
            "taskName": "test",
            "command": "node_modules/.bin/jasmine",
            "type": "shell",
            "isBackground": true,
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated"
            },
            "problemMatcher": {
                "owner": "javascript",
                "fileLocation": ["absolute"],
                "severity": "error",
                "pattern": [
                    {
                        "regexp": "Message.*"
                    },
                    {
                        "regexp": "[^ ](.*)",
                        "message": 1
                    },
                    {
                        "regexp": "Stack.*"
                    },
                    {
                        "regexp": "at +.*\\((.*\\\\*.ts):(\\d+):(\\d+)\\)",
                        "file": 1,
                        "line": 2,
                        "column": 3
                    }
                ]
            }
        }            
            
    ]
}
3. run the task with maximized size of the terminal window , pattern matcher does recognize errors and create problem in the problems tab
An error line (where the last regex pattern looks for file, line and column) looks like: 

`
        at UserContext.it (c:\Bisaga\Workspaces\learning\mytest\spec\myapi-spec.ts:16:32) 
`

4. run the task with very narrow size of the terminal window, pattern matcher does not recognize errors any more because the error line reported from the jasmine is now in 3 lines ...
An error line from jasmine is now in the 3 lines instead of the one : 

```
        at UserContext.it (c:\Bisaga\Worksp
aces\learning\mytest\spec\myapi-spec.ts:16:
32)
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34888</IssueID>
    <Title>Git Bash terminal emulator `clear` doesn't work correctly</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0



---

When using the Git Bash emulator, using the `clear` command doesn't clear the screen. The cursor moves back to the top of the terminal and I am able to type commands, but the previous text isn't cleared until I type over it.

Steps to Reproduce:
1. Use Git Bash emulator
2. Try to clear screen

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>23/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34872</IssueID>
    <Title>toggle blockcomment</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (b86108e54b31572d0f9678ffbd14f9ee8d3b3780, 2017-09-21T05:15:52.338Z)
- OS Version: Linux x64 4.9.0-deepin11-amd64

vscode is only append blockcomment when i code javascript, it don't toggle blockcomment when click keyboard shortcuts again. 
sorry for my poor english</Description>
    <CreatedDate>23/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34858</IssueID>
    <Title>Assertion Failed! error message when VSCode is open</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0-insider (updated on 9-22-2017 at 5:40 PM EST)
- OS Version: Windows 10 Enterprise

Steps to Reproduce:

1. Open VSCode (Run: code --disable-extensions)
2. Open the Integrated Terminal (Click on View / Integrated Terminal or use the shortcut)
3. Exit VSCode (File / Exit)
4. Open VSCode again

Reproducible 100% of the time.

&lt;img width="903" alt="vscode - step 1" src="https://user-images.githubusercontent.com/6663243/30765238-b33db050-9fbc-11e7-94cc-5fc6ab36b998.png"&gt;

&lt;img width="904" alt="vscode - step 2" src="https://user-images.githubusercontent.com/6663243/30765583-60b75d84-9fbe-11e7-8220-426b31d0c2ea.png"&gt;


Microsoft Visual C++ Runtime Library | Assertion Failed! | ASSERT_CONDITION

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34854</IssueID>
    <Title>.deb package missing multiple dependencies</Title>
    <Description>- VSCode Version: 1.16
- OS Version: Ubuntu 1604

Steps to Reproduce:

1. Add Code repo to apt according to directions on https://code.visualstudio.com/docs/setup/linux
1. Run `sudo apt-get update; sudo apt-get install code`
1. Run `code`

The `code` program would not run; the error indicated missing libraries. The following packages had to be installed explicitly in order to get code to run:
- libgtk2.0-0
- libxss1
- libasound2

Reproduces without extensions: Yes</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34847</IssueID>
    <Title>Cannot read property 'length' of undefine</Title>
    <Description>/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:29 Error processing request. Cannot read property 'length' of undefined
TypeError: Cannot read property 'length' of undefined
    at Object.unescapeLeadingUnderscores (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:8537:18)
    at Object.getSuggestionForNonexistentSymbol (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:19526:95)
    at Object.getActionsForCorrectSpelling [as getCodeActions] (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:73108:38)
    at /Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:72832:33
    at Object.forEach (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:1293:30)
    at Object.getFixes (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:72831:16)
    at /Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:76581:35
    at Object.flatMap (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:1525:25)
    at Object.getCodeFixesAtPosition (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:76579:23)
    at IOSession.Session.getCodeFixes (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:82554:64)
    at Session.handlers.ts.createMapFromTemplate._a.(anonymous function) (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:81476:61)
    at /Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:82698:88
    at IOSession.Session.executeWithRequestId (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:82689:28)
    at IOSession.Session.executeCommand (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:82698:33)
    at IOSession.Session.onMessage (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:82718:35)
    at Interface.&lt;anonymous&gt; (/Users/selcuk/Documents/casemanagement/node_modules/typescript/lib/tsserver.js:83804:27)
    at emitOne (events.js:96:13)
    at Interface.emit (events.js:191:7)
    at Interface._onLine (readline.js:241:10)
    at Interface._normalWrite (readline.js:384:12)
    at Socket.ondata (readline.js:101:10)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    at readableAddChunk (_stream_readable.js:178:18)
    at Socket.Readable.push (_stream_readable.js:136:10)
    at Pipe.onread (net.js:560:20)</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>22/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34829</IssueID>
    <Title>Terninal powershell 'cls' command operation result suggest</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
markdown-toc|Ala|1.5.6
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-markdownlint|Dav|0.10.1
vscode-eslint|dba|1.3.2
vscode-instant-markdown|dba|1.3.0
githistory|don|0.2.3
es7-react-js-snippets|dsz|1.1.0
vscode-babel-coloring|dza|0.0.4
react-native-react-redux|EQu|1.3.0
git-project-manager|fel|1.4.0
auto-close-tag|for|0.5.0
auto-rename-tag|for|0.0.14
code-runner|for|0.7.1
beautify|Hoo|1.1.1
useful-react-snippets|igo|1.0.9
path-autocomplete|ion|1.6.1
docthis|joe|0.4.8
mdhelper|jos|0.0.11
vs-color-picker|lih|0.6.0
vscode-todo-parser|min|1.9.1
vscode-extension-auto-import|mop|1.3.3
cpptools|ms-|0.12.4
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.3.0
view-in-browser|qin|0.0.5
vscode-icons|rob|7.13.0
autoimport|ste|1.2.2
react-beautify|tai|0.3.0
JavaScriptSnippets|xab|1.4.1
ReactSnippets|xab|1.4.0
html-css-class-completion|Zig|1.10.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.🥇open ternimal with powershell
2.🥈 input cls and enter it
3.🥉 It not clear the panel, and just the slider slides down when the content is too nuch.

---

![b4 fmq2c7yq4or8ywii7eho](https://user-images.githubusercontent.com/22830374/30742874-d644f390-9fcd-11e7-8414-5d0a16847cfe.png)

```js
// this is not a serious problem, but nobody will be willing to clear them's panel by close it.
// thanks for your attention, my friends. —— a 😋 vscode user.
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34828</IssueID>
    <Title>[Feature Request] - Disable and Enabling Extensions</Title>
    <Description>Visual Studio Code x64
Version: 1.16.1

**What is happening:**
I notice that when we "Disable (Always)" an extension, when I want to enable it again I can't just enable for that workspace, I need to enable Always again. 

**What I want**
I can  "Disable (Always)"  for the default behavior, but Should let I "Enable (Workspace)". 

**Why?**
It's good to have some plugins that is disabled by default and I enable only when I need without the needing of enable it always.

**Thank you**</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34824</IssueID>
    <Title>Go To Bracket doesn't scroll to the cursor</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.12.13-300.fc26.x86_64

When using Go To Bracket and the matching bracket is out of view, the editor should scroll to it (it does as soon as I start typing).</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>22/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34811</IssueID>
    <Title>showQuickPick input events?</Title>
    <Description>Hi there!

I was wondering if there is a way to get input events for the `showQuickPick` dialog? For example I want to handle the return key when all items have been filtered out, so that the QuickPick kinda acts like a combination of Input and QuickPick.</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34810</IssueID>
    <Title>Customise ctrl+click</Title>
    <Description>Is it possible to allow the command that is executed by ctrl+click to be changed? Currently it does "go to definition", but the go to definition behaviour is frustrating, so I'd like to be able to change it to "peek definition"...

There is a stack overflow page which suggests that this functionality did once exist in Code, but it was taken out. If that's true, what was the reason?</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>22/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34807</IssueID>
    <Title>Debug: VSCode API tests always stops in bootstrap.js</Title>
    <Description>- VSCode Version: 1.17-insiders
- OS Version: macOS

Steps to Reproduce:

1. start the VSCode API tests debug config
2. you end up in bootstrap.js stopped

![image](https://user-images.githubusercontent.com/900690/30731545-496307c8-9f6e-11e7-90b6-1b990dcded0d.png)
</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>22/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34800</IssueID>
    <Title>VScode always crashs and force user reopen window When I open more five terminals</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:09.760Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
project-manager|ale|0.21.1
laravel-5-snippets|ate|0.0.1
random-string-password-generator|bib|1.0.1
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.3.2
githistory|don|0.2.3
jquerysnippets|don|0.0.1
tslint|eg2|1.0.8
vscode-npm-script|eg2|0.2.1
prettier-vscode|esb|0.23.1
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
php-pack|fel|1.0.1
flow-for-vscode|flo|0.7.1
auto-close-tag|for|0.5.0
beautify|Hoo|1.1.1
rest-client|hum|0.15.2
docthis|joe|0.4.8
laravel-blade|KTa|0.0.1
node-module-intellisense|lei|1.4.0
vs-color-picker|lih|0.6.0
debugger-for-chrome|msj|3.3.0
node-modules-resolve|nau|1.0.2
laravel-blade|one|1.9.0
laravel5-snippets|one|1.3.4
tsimporter|pmn|1.2.14
remote-vscode|raf|1.1.0
java|red|0.10.0
vscode-icons|rob|7.13.0
laravel-5-snippets|sac|2.0.1
ionic2|Tha|2.4.0
cordova-tools|vsm|1.2.12
vscode-react-native|vsm|0.4.2
JavaScriptSnippets|xab|1.4.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>22/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34765</IssueID>
    <Title>Code Insiders Angular imports </Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (f7962f0682a76516df51de4856f8ccc5d8ad578a, 2017-09-20T05:24:33.599Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
githistory|don|0.2.3
gitlens|eam|5.1.0
tslint|eg2|1.0.8
prettier-vscode|esb|0.23.1
auto-close-tag|for|0.5.0
auto-rename-tag|for|0.0.14
angular2-switcher|inf|0.1.4
csharpextensions|jch|1.3.0
Angular2|joh|2.7.0
csharp|ms-|1.12.1
material-icon-theme|PKi|2.2.1
better-merge|ppr|0.7.0
typescript-hero|rbb|1.5.0
gitblame|wad|2.2.0
html-css-class-completion|Zig|1.10.0



---

Steps to Reproduce:
![captureimports](https://user-images.githubusercontent.com/1800249/30705742-4e766426-9ec4-11e7-9da2-18fdc5a75823.PNG)

1. Open angular project with code-insiders
2. Any imports with '@angular/core' as an example have a red squiggly and hovering over says [ts] says cannot find module .... No problem with imports with custom code
3. Uninstall code-insiders and install code
4. Open angular project with code, no issues 
5. Launch with code-insiders --disable-extensions still shows same issue listed in #2

&lt;!-- Launch with `code-insiders --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34758</IssueID>
    <Title>How can I set  autoreload False  when a file was changed externally？</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (f7962f0682a76516df51de4856f8ccc5d8ad578a, 2017-09-20T05:24:33.599Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-icontheme-nomo-dark|be5|1.3.2
bracket-pair-colorizer|Coe|0.10.9
xml|Dot|1.9.2
EditorConfig|Edi|0.10.1
code-runner|for|0.7.1
java-properties|ith|0.0.2
vscode-docker|Pet|0.0.18
java|red|0.10.0
vscode-icons|rob|7.13.0
vscode-sql-beautify|sen|0.0.4
code-settings-sync|Sha|2.8.3
velocity|sod|0.1.0

(2 theme extensions excluded)


---

Steps to Reproduce:

1.  When a  file changed ,I wish that notice me instead of  autoreload. Because  sometimes I need the old  files to compare.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34753</IssueID>
    <Title>Integrated terminal wrongly highlight filename</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Code - Insiders 1.17.0-insider (f7962f0682a76516df51de4856f8ccc5d8ad578a, 2017-09-20T05:10:59.524Z)
- OS Version: Darwin x64 16.7.0
- Extensions: Extensions are disabled

Steps to Reproduce:

1. Launch a Javascript project (mine is a react one) from integrated console
2. Add some unused variables in some files
3. Filenames in console eslint warnings are highlighted and can't be read
4. Switching themes would make no difference

Screenshot in VS Code: 

&lt;img width="498" alt="capture d ecran 2017-09-21 a 16 03 08" src="https://user-images.githubusercontent.com/674667/30697335-4c5e2e6c-9ee7-11e7-816a-008383b40d50.png"&gt;

Screenshot in iTerm: 

&lt;img width="500" alt="capture d ecran 2017-09-21 a 16 03 15" src="https://user-images.githubusercontent.com/674667/30697354-61884e76-9ee7-11e7-90ce-792717ad9002.png"&gt;



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34727</IssueID>
    <Title>code searchService always takes a whole CPU core</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.12.13-300.fc26.x86_64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
language-x86-64-assembly|13x|2.2.11
vscode-docker|Pet|0.0.18
code-gnu-global|aus|0.2.2
file-templates|brp|1.2.0
FreeMarker|dco|0.0.9
python|don|0.7.0
CppSnippets|har|0.0.12
restructuredtext|lex|37.0.0
cpptools|ms-|0.12.4
csharp|ms-|1.12.1
vetur|oct|0.9.7
java|red|0.10.0
html-preview-vscode|tht|0.1.1
vim|vsc|0.10.1
jinja|who|0.0.8



---

A background process `/usr/share/code/code /usr/share/code/resources/app/out/bootstrap --type=searchService` always takes a whole CPU core.

Steps to Reproduce:

1. open a node project created by vue-cli
2. one `Code` process takes a whole CPU core and creates six subprocesses running `find -L . -type f`
3. after closing the Code, these subprocesses take all my four CPU cores for about one minute before exit

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>21/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34725</IssueID>
    <Title>CSS and SCSS indentation using tabs is off with lines with the color decorator</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Ubuntu Linux 16.04 Gnome

Steps to Reproduce:

1. Start a blank file `/tmp/foo.css/`
2. Paste this code in there:

```css
/* I've intentionally indented with 2 spaces */
.foo {
  padding: 10px;
  color: #123;
}
```

3. Go to the bottom right and click the tab size box and select "Convert indentation to Tabs".
4. The `color` line has slightly different indentation.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Here's a screenshot with `code --disable-extensions`:

![foo css_023](https://user-images.githubusercontent.com/314/30672400-29ba5e38-9e3a-11e7-9395-ed8e3cbac4ec.png)

Believe me, I prefer spaces for indentation, but I'm on a couple code bases where the team has chosen tabs. And this is a weird annoyance. 

This goes away if I set: `"editor.colorDecorators": false` in the settings.</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34721</IssueID>
    <Title>exception not displayed in console</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
debugger-for-chrome|msj|3.3.0



---
```
require('async_hooks').createHook({
  init: () =&gt; {
    process._rawDebug("you won't see mee");
    a.b = c; // crash
  }
}).enable();

Promise.resolve().then(()=&gt;{
  console.log("me neither");
});
```
I'm writing code using async_hooks magic and it seems that process._rawDebug does not appear in the console anymore. Worst, if a crash happens in a hook then you won't have any indication that it happened. I spent 4 hours debugging this :(

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34702</IssueID>
    <Title>Winston Logger has stopped logging in Debug console ( NodeJS )</Title>
    <Description>- VSCode Version: 1.16.1
- OS Version: Win 10 64bit

Steps to Reproduce:

1. For a NodeJS app which uses Winston logger, start it in debug mode
2. None of the winston log messages appear in the Debug console.
3. This used to work till the June drop.

Reproduces without extensions: Yes</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34698</IssueID>
    <Title>Support outline？</Title>
    <Description>For markdown, show outline on sidebar.</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>20/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34694</IssueID>
    <Title>[Feature Request] Different way to complete with tab (YCM style)</Title>
    <Description>## Before I start
Hello.

VS Code is great software, and i really like how it grows over time, so I want to improve the experience of using it.

Previously I used Vim a lot, because at work it is my only option, but at home for hobbies I use VS Code, and when I program in C, at my work I use YouCompleteMe (YCM) plugin for `tab` completions, and I really like the way it works. 

## Touch typing

The main thing is that I use all my 10 fingers to write code, and rarelly move hands from home row, because vim, _you know_, has `hjkl` and other ways to navigate in code. So first thing was to install vim-extension to VS Code, to stop using arrow keys, and it works well. But tab completion still forces me to use arrows.

How it works in Vim: I select from the list using the `tab` button and I confirm the completion by simply continuing typing. Therefore, my hands never leave the home row.

The way it works in VS Code: `tab` button completes the completion and closes popup, And arrow keys are just navigate within the list and not confirm anything. So I need to navigate in list with arrow keys (and leave home row) then press `tab` for completion. In fact it is way faster just to type most things by hand just looking at the popup for reference. And it is frustrating after long way of programming in vim.

## So what do _you_ want?
All I want is an option in settings to change `tab` key behavior to something like (or close to) YCM style. 
The behavior itself can be described like so:
  1. Start typing (`std::` for example)
  2. Completion popup is displayed (or invoked by `tab`)
  3. Press the `tab` and completion is done, but popup isn't closed
  4. Press tab again, and next item in popup list replaces previous completion
  5. Press tab until you will be satisfied with your completed text
  6. Continue typing, popup is closed (unless you folow the completion hint from popup)

That's how (mostly) it works in such plugins like YouCompleteMe, Supertab in Vim. You can try this plugins for better understanding of what i mean. And it is comfortable because you don't need arrow keys at all.

## P.S:
Previously (before Vim) I used Visual Studio for C++ programming, and when I swithced to YCM's completion system I noticed a great boost of writing speed. YCM has it's own plugin in the marketplace, but it uses standard `tab` behavior, which makes it little less useful an makes me little less productive.

Thanks.</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34677</IssueID>
    <Title>Horizontal scroll should work on window instead of text...</Title>
    <Description>Ref #32128

Here are GIF you asked for..</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34671</IssueID>
    <Title>Ctrl+Shift+ \ doesn't page down to matching bracket</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:38:23.027Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
cform|aws|0.0.10
githistory|don|0.2.3
terraform|mau|0.0.17

Not sure if this is a bug or not, but since upgrading to v1.16 I've noticed that the Go to Bracket keybinding will mark the matching bracket but it does not page down to that bracket.  I've checked shortcut settings and it is indeed listed as a shortcut.  I just updated to v1.16.1 but the problem still persists.  If it is not a bug and instead some sort of setting I need to change please let me know.

---

Steps to Reproduce:

1.  Highlight a curly bracket then hit Ctrl+Shift+\ 
2.  Typically the page would jump to the matching bracket and in my case it no longer does.

Thanks for the help.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>20/09/2017</CreatedDate>
    <ClosedDate>20/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34666</IssueID>
    <Title>Two notifications when renaming an element that I can't rename</Title>
    <Description>- Have a variable that isn't defined
- F2 to rename it
- See a warning and an error. I think I just expect the warning

![image](https://user-images.githubusercontent.com/323878/30620442-3e0321f8-9d5a-11e7-859e-f56cbc8932e7.png)
</Description>
    <CreatedDate>19/09/2017</CreatedDate>
    <ClosedDate>30/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34657</IssueID>
    <Title>Unreadable search input box (too tight)</Title>
    <Description>Hello!

It looks like that when I open the search bar (command+F) it is initialized with not enough horizontal space, so the input field it is barely visible, and nothing I type inside it is readable unless I manually give more room to it.

![image](https://user-images.githubusercontent.com/3191993/30612181-0efa9d94-9d84-11e7-9131-85db3711aa45.png)

Even opening the search box with some selected text gives the same behavior

![image](https://user-images.githubusercontent.com/3191993/30612221-245bc924-9d84-11e7-9d79-06af7de791a5.png)

If you manually resize the input box the new size is kept until restart.
If you need additional info I'm at your service

- VSCode Version: 1.16.1
- OS Version: Mac Os Sierra 10.12.6

Steps to Reproduce:

1. open any file
2. open the search box (command + F)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>19/09/2017</CreatedDate>
    <ClosedDate>19/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34656</IssueID>
    <Title>Vertical scrolling is staggered</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Windows 10 Pro (1703)

Steps to Reproduce:

1. Scroll through any file using touchpad.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: </Description>
    <CreatedDate>19/09/2017</CreatedDate>
    <ClosedDate>20/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34630</IssueID>
    <Title>Recently opened files refuse to disappear from suggestions</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.1
python|don|0.7.0
pgsql|dou|0.0.8
EditorConfig|Edi|0.10.1
vsc-material-theme|Equ|1.0.2
JSDocTagComplete|Hoo|0.0.2
vscode-esformatter|how|1.5.2
output-colorizer|IBM|0.1.2
vscode-puglint|mrm|2.3.0
code-spell-checker|str|1.4.0

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Open a file (Ctrl+P).
2. See a file you don't want, like crap from `dist` or `coverage`
3. Put the `dist` or `coverage` folder into `files.exclude`.
4. The file is still suggested for opening.
5. Clear recently opened documents.
6. The file is still suggested for opening.

And it's always the top suggestion as well. Extremely annoying.</Description>
    <CreatedDate>19/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34594</IssueID>
    <Title>[Feature Request] VSCode TypeScript extension exported things + auto import</Title>
    <Description>The intellisense doesn't show the exported classes, functions, enums, ... in the actual workspace.
I know there's extension that allow to make that, but the native extension working with the great TSServer running will be amazing for that !
Also, the diagnostic logic of typescript already proprose to import something with the bulblight after we type the complete name of the exported thing, and it works like a charm with baseUrl and already imported section. Why don't propose an option to autoimport after hitting the completion key on the intellisense window ?</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>19/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34592</IssueID>
    <Title>Add TM_FILEPATH_RELATIVE snippet variable</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: all
- OS Version: all

I have a lot of snippets for my projects and I often use variables.
`TM_FILEPATH` - it's good, but sometimes project has very long path, something like:
`/home/user/Documents/work/project1/frontEnd/bestUi/src/component/modal/utils/view.js`
My root folder in vsCode is `bestUi` I don't need to print or use all path, just path from root-folder to file:
`/bestUi/src/component/modal/utils/view.js`,
My proposal is to add new variable, called `TM_FILEPATH_RELATIVE`, which return, only path from root-folder to file.
If this proposal is being interesting for community, I can implement it, added test for that, add support for multi root-folders and so on,
Just one question, I cannot understand - Where is vsCode saving information about root folder of project?
Thanks a lot for all discussions.</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>19/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34591</IssueID>
    <Title>[Feature Request] Sticky Tabs</Title>
    <Description>I'd like to stick a tab somehow. In the way that I could close all tabs, but the sticky ones. 

Maybe even we could manage groups of tabs, but that could be beyond this. :P. With the stick ability I'll work fine. Thanks! (And sorry if this is someone duplicate, I tried to search for it).</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34588</IssueID>
    <Title>vscode (1.16.1) getting crashed </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Windows 10 1607

![vsbug](https://user-images.githubusercontent.com/20628218/30561685-6d1b1d0a-9cd9-11e7-92d8-52aa008c99bc.PNG)

### Issue:

- While running `mongoDB` and `node.js` server in  the  windows command shell in vs terminal .
vscode is getting crashed frequently.

</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>19/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34587</IssueID>
    <Title>Assertion failed - node-pty/winpty</Title>
    <Description>Receiving the following error upon VSCode Insiders startup:

![Error Screenshot](https://i.imgur.com/no0AE7C.png)

The terminal then closes and shows the following error in VSCode Insiders:
&gt; The terminal process terminated with exit code: 3221226505

- VSCode Version: 1.17.0-insider
- OS Version: Windows 10 Home

Steps to Reproduce:

1. Close VSCode while bash terminal is open (nothing running)
2. Open VSCode Insiders manually, or through `code-insiders .`, or through `code-insiders --disable-extensions`
3. Error appears

Reproduces without extensions: Yes</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34583</IssueID>
    <Title>every time vim in the bash edits file  always trigger the p-key which automately copy the trash into the file. This is shit !</Title>
    <Description>- VSCode Version: Code 1.16.1 (27492b6bf3acb0775d82d2f87b25a93490673c6d, 2017-09-14T16:24:39.530Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
project-manager|ale|0.21.1
python|don|0.7.0
cpptools|ms-|0.12.4

(1 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34564</IssueID>
    <Title>Search input field barely visible</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Open a new document
2. Press &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;f&lt;/kbd&gt;

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

When searching in file the input field is too small, and the input text can't be seen.

![input search](https://i.imgur.com/jLKwrbe.jpg)</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34558</IssueID>
    <Title>stdout/stderr not working in debug console</Title>
    <Description>launch.json
```
  {
    "version": "0.2.0",
    "configurations": [
      {
        "type": "node",
        "request": "launch",
        "name": "test",
        "program": "${workspaceRoot}/test.js",
        "console": "internalConsole"
      }
    ]
  }
```
code 
```
"use strict";
// we are using npm debug module, that uses stdout/stderr to write logs
//process.env.DEBUG = 'server'
//const debug = require('debug')('server');
//debug('debug')
process.stdout.write('stdout\n')
process.stderr.write('error\n')
```
debug console does not print stdout/stderr
If I change "internalConsole" to "integratedTerminal" or run app from terminal, stdout/stderr works fine


- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.11.0-041100-generic
- Extensions: Extensions are disabled</Description>
    <CreatedDate>18/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34538</IssueID>
    <Title>Request for project saving feature</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: KDE Neon 5.10



Thanks, VsCode team for the awesome 1.16.1 Update... but I think there is more room for improvement,
If there is an option to save the workspace will be useful... I use 2 integrated terminals for my work. I  have to start it manually each time it gets back to work. if there is an option to save these all as a project it would be easier and fun to work. I feel language support more than JS is not up to the mark. but thanks to plugins which definitely fills the gap, But an integrated solution is more appreciated 

</Description>
    <CreatedDate>17/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34533</IssueID>
    <Title>Queuing project folders configurable</Title>
    <Description> like it is in e.g Atom</Description>
    <CreatedDate>17/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34530</IssueID>
    <Title>Lag while scrolling</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Open a file that contains many lines of code
2. Try to scroll.

-&gt;When I use two fingers gesture to scroll it lags. It is very annoying.

Feature request: 
It would be great if there is an option to view four panels like the below image.  

![screenshot 2](https://user-images.githubusercontent.com/17526871/30517950-dc49c670-9b8c-11e7-899a-af0f7673d42b.png)

</Description>
    <CreatedDate>17/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34524</IssueID>
    <Title>Integrated terminal off-by-one rendering errors.</Title>
    <Description>- VSCode Version: 1.17.0 128a4e3640c5375f7b0bc1cfd37f626481b1386f
- OS Version: macOS 10.13 Beta (17A362a)


Steps to Reproduce:

1. Paste the following command into the integrated terminal:
`python -c 'print ("\x1b[31m0123456789\x1b[0m")*9`
This prints the string [RED]0123456789[RESET] nine times, followed by a newline.

2. Resize the VSCode window so that the window half clips one of the red characters, and run it again.


Issues:

The terminal output does not wrap the partially-clipped character; it is possible to resize the window so that the final character essentially disappears.

Additionally, double-clicking a line of text to select it causes the line below to become highlighted instead.

Ideally, previously rendered text would wrap dynamically as the window was resized but this is not the case.


Reproduces without extensions: Yes</Description>
    <CreatedDate>16/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34517</IssueID>
    <Title>RegExp Replace stopped if 998+ matches found</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- Version 1.16.1
- OS Version: Linux  4.12.13-1-ARCH #1 SMP PREEMPT Fri Sep 15 06:36:43 UTC 2017 x86_64 GNU/Linux
- Commit 27492b6bf3acb0775d82d2f87b25a93490673c6d
- Date 2017-09-14T16:26:20.018Z
- Shell 1.7.3
- Renderer 58.0.3029.110
- Node 7.9.0
- Architecture x64

Steps to Reproduce:

1. Build this test document in a new window(just kept ctrl+c and ctrl+v)
```
a b c 10
&lt;Repeat last line for 999 times&gt;
```
2. Ctrl+H to call Replacement, and input this as your regexp to replace from, and replace it to 123123:
```
^(\S+)\s+?(.+)\s+?(\d+)\d*$
```

3. Replace for all

Excepted Result:

All lines should be replaced to 123123

Produced Result:

Nothing happened.

Futher Steps:

4. Change the first line to `dddddd`

5. Replace use those arguments again

Produced Result:

All lines except the first line is replace to `123123`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34512</IssueID>
    <Title>[SCSS] Incorrect tab indentation when color preview is present</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
![vscode-version](https://user-images.githubusercontent.com/1855505/30512071-45050198-9ade-11e7-87e0-d7c66874c2d2.PNG)

- OS Version:
Windows 10 Pro
Version 1703
OS Build 15063.608
System Type: x64

Steps to Reproduce:
1. Create a `.scss` file and add something like this:
```scss
.parent {
  color: #f00;

  .child {
    color: #f0f;
    whatever: whatever;
  }
}
```
**Note** Tabs must be used to indent the rules above.

![indentation-issue](https://user-images.githubusercontent.com/1855505/30512068-2cf89196-9ade-11e7-8d69-85b4e8d8e484.PNG)



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34499</IssueID>
    <Title>High CPU Usage (Render Processes)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1 (2017-09-14 - Shell: 1.7.3 - Renderer: 58.0.3029.110 - Node: 7.9.0 - Architecture ia32)
- OS Version: Windows Server 2012 R2 Datacenter w/GUI

Steps to Reproduce:

1. Install latest version of VS Code (32bit or 64bit)
2. Run it.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

The rendering processes will each take up ~40% CPU just idling. During startup it will max the CPU the entire time starting, it takes upto 2 minutes for the UI to finally show. After that it keeps the CPU pinned at 60-100% usage doing literally nothing.

Server is a fresh install of 2k12 R2 and VSCode is a fresh install with no extensions. 
Happens on both 32bit and 64bit builds.</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34480</IssueID>
    <Title>Feature request: add time stamp to edited/newly created comment</Title>
    <Description>e.g.
```javascript
// 9/15/2017@10:53am Some comment that was true at the time
/ *
* 9/15/2017@10:53am Some comment that was true at the time
* /
```
Change any of the text in the comment and the time changes. </Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34476</IssueID>
    <Title>Multiple item selection in explorer</Title>
    <Description>For deleting and reorganizing it would be nice to be able to select multiple files/directories in the explorer by holding down a modifier key while selecting.</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34475</IssueID>
    <Title>[Terminal] Selection is a few characters off</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (b0c0634339c6f64a5c7f08b56fe732fb9154d3c4, 2017-09-15T05:24:23.107Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
gitlens|eam|5.0.0
tslint|eg2|1.0.7
vscode-icons|rob|7.12.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Have text in the integrated terminal.
2. Select text.

![vs code selection](https://user-images.githubusercontent.com/1019478/30492216-999c6f7e-99f4-11e7-8a5d-41f17c525744.gif)


</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>19/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34472</IssueID>
    <Title>Window crash after exec two internal powershell terminals</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: Windows 10 Pro Insider Preview 1703 (16281.1000

Steps to Reproduce:

1.Open one terminal and exec gulp (gulp watch)
2.Open other terminal and exec sass 
3.Vscode crash
(Maybe not crash inmediatly)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: **Yes**/No</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>16/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34460</IssueID>
    <Title>error xhr failed when installing extentions in visual studio code 2017</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:2017
- OS Version:Windows 10

Steps to Reproduce:

1.  Install an extension in VS code 
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

0         down vote          favorite | Just installed VS Code 2017 and when I try to install any extensions I  get popup Error XHR Failed. Tried googling but cant find any clues.  Anybody run across this?
-- | --


</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34444</IssueID>
    <Title>terminal sizing issues</Title>
    <Description>Elementary OS Freya (14.04)
Version 1.17.0-insider
Commit b0c0634339c6f64a5c7f08b56fe732fb9154d3c4
Date 2017-09-15T05:16:08.120Z
Shell 1.7.7
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64

When initially start VSCode with the terminal view visible, it has sizing issues:
- Note the prompt goes over two lines
- Note the gray area on the right

![image](https://user-images.githubusercontent.com/6461412/30477928-38dd7140-9a0f-11e7-919c-07f49dc2203e.png)

- pressing enter fixes the rendering of the prompt
- the gray area on the right stays, also when resizing VSCode 
</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34436</IssueID>
    <Title>[Feature request] Allow open integrated terminal aside</Title>
    <Description>Another feature request. In case of working with huge terminal output, I suppose it will be very conveniently to be able to open terminal aside (like editor splitting)</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34429</IssueID>
    <Title>Go to matching bracket doesn't scroll</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.1
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Simply create javascript file or any other language mode.
2. Create matching bracket "{ }"
3. Give a lot of new line in between so the bracket separated until the editor scrolls.
4. Now try to use shortcut "Go to matching bracket"
5. The cursor jump, but the editor doesn't scroll.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>21/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34418</IssueID>
    <Title>Please add your own FTP module!</Title>
    <Description>I already try every ftp plugin on the market....amd many times I'm endin with blank files or losing content because this plugins are not working properly... PLEASE!! add your own ftp module!</Description>
    <CreatedDate>15/09/2017</CreatedDate>
    <ClosedDate>15/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34393</IssueID>
    <Title>Vs code crash for no reason</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.1
codeception-snippets|die|0.0.4
vscode-great-icons|emm|2.1.16
beautify|Hoo|1.1.1
easy-icons|jam|0.3.1
debugger-for-chrome|msj|3.3.0
seti-icons|qin|0.1.3
vscode-icons|rob|7.12.0

(3 theme extensions excluded)


---

Steps to Reproduce:

1. Open codecetjs project
2. Execute chromedriver
3. Execute selenium-standole start
4. Execute codeceptjs run --steps --verbose
5. App crashes 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34390</IssueID>
    <Title>Code does not support git submodules</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-jasmine-es5|dee|1.0.1
gitlens|eam|4.3.2
tslint|eg2|0.17.0
code-runner|for|0.6.28
Angular2|joh|2.4.0
typescript-hero|rbb|1.3.0
html-css-class-completion|Zig|1.8.0



---

Steps to Reproduce:

1. Create a git repo with a submodule
2. Open this git repo in Code
3. Add a change in the submodule and commit this change
4. Make sure you checkout this commit (of the submodule) in the parent repo
5. The parent repo should now contain a unstaged change with the new pointer to the new commit of the submodule
6. When you open this change in Code, a error message is shown in a popup notification

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>15/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34380</IssueID>
    <Title>after close vscode ,  find -L . type f command consule all cpus</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.16.0 (1.16.0)
- OS Version: osx 12.6

Steps to Reproduce:
sometimes when i close  a  workspace which contains 225973 file, the command 
```bash
find -L .type f 
```
will consume all cpus
&lt;img width="1161" alt="2017-09-14 9 19 37" src="https://user-images.githubusercontent.com/2359621/30432333-ee5b4090-9926-11e7-9608-c12ea1dbb136.png"&gt;

</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34374</IssueID>
    <Title>Scrolling is very slow. Sometimes not recognising</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.1
tslint|eg2|1.0.4
beautify|Hoo|1.1.1
vscode-JS-CSS-HTML-formatter|lon|0.2.3
prettify-json|moh|0.0.3
debugger-for-chrome|msj|3.3.0
intelligence-change-case|zhe|1.1.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>15/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34372</IssueID>
    <Title>lag when using mouse pad scroll the editor </Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.16278
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.1
sublime-keybindings|ms-|2.9.1
vetur|oct|0.9.7
java|red|0.9.0
debug|web|0.21.2

(2 theme extensions excluded)


---

Steps to Reproduce:

1. use two fingers drag the mouse pad, quickly change the direction;
3. a several seconds delay to response

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>15/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34356</IssueID>
    <Title>Terminal doesn't handle switching between HDPI modes</Title>
    <Description>![image](https://user-images.githubusercontent.com/22350/30419400-7ac1e5c0-9936-11e7-84e1-eb3c75005f8c.png)
</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34343</IssueID>
    <Title>Code higlighter is broken after update to 1.16.0</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
rainbow-brackets|2gu|0.0.6
numbered-bookmarks|ale|0.10.0
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
bracketselection|guo|1.0.3
vue-snippets|hol|0.1.4
ftp-simple|hum|0.5.6
phpcs|ika|0.7.0
Hg|jak|0.0.4
format-indent|Kas|1.3.0
laravel-blade|KTa|0.0.1
vue|liu|0.1.5
ecdc|mit|0.10.3
prettify-json|moh|0.0.3
sublime-keybindings|ms-|2.9.1
php-docblocker|nei|1.2.0
vetur|oct|0.9.7
laravel-blade|one|1.9.0
seti-icons|qin|0.1.3
sass-indented|rob|1.4.1
text-marker|ryu|0.10.0
bracket-jumper|sas|1.1.8
vue|sea|0.4.2
stylelint|shi|0.29.0
wordpress-snippet|tun|1.1.2
highlight-matching-tag|vin|0.4.4
better-align|wwm|1.1.6

(4 theme extensions excluded)


---

Steps to Reproduce:

1. When open file .php contain PHP code and HTML (standard wordpress theme file)
2. the code higligher is so messy, I use default theme by VS code.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![capture](https://user-images.githubusercontent.com/924723/30410811-7b84bf5e-9937-11e7-9c25-61a74eed8f7e.JPG)
</Description>
    <CreatedDate>14/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34325</IssueID>
    <Title>Syntax highlight has stopped working when mixing php and html</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:  1.16.0
- OS Version: Windows 10 Home Single Language Version 1703

Steps to Reproduce:

1. Change the file extension to .php
2. Open the file.
[test.txt](https://github.com/Microsoft/vscode/files/1300902/test.txt)

![captura](https://user-images.githubusercontent.com/20713139/30400239-9ffa9f74-98ac-11e7-832d-10e7252d6b7f.PNG)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34318</IssueID>
    <Title>Program does not recognize php closing tag if there is an open bracket.</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ftp-sync|luk|0.3.3

---

Steps to Reproduce:

1.  Open and Save new PHP file
2.  Open php tag and open an if statement but do not close if statement bracket and then close the php tag `&lt;?php if(test){ ?&gt;`
3. VSCode will not recognize that the php tags are closed because of the open bracket. Before the most recent update, this was not an issue.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34310</IssueID>
    <Title>VSCode won't update after restarting</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:12:42.401Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
bracket-pair-colorizer|Coe|0.10.9
vscode-markdownlint|Dav|0.10.1
xml|Dot|1.9.2
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.16
lorem-ipsum|Tyr|1.0.0
Bookmarks|ale|0.16.0
project-manager|ale|0.21.1
vagrant|bbe|0.5.0
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
jshint|dba|0.10.15
vscode-eslint|dba|1.3.1
githistory|don|0.2.3
jquerysnippets|don|0.0.1
gitlens|eam|5.0.0
vscode-npm-script|eg2|0.2.1
prettier-vscode|esb|0.23.1
git-project-manager|fel|1.4.0
auto-close-tag|for|0.5.0
vscode-firefox-debug|hbe|0.16.0
openchrome|hua|0.0.3
rest-client|hum|0.15.2
docthis|joe|0.4.8
quickstart|lol|0.1.0
vs-cron|mkl|1.5.1
vs-deploy|mkl|9.32.3
vs-remote-debugger|mkl|1.9.9
vs-rest-api|mkl|1.18.2
vs-script-commands|mkl|4.14.0
vs-swiss-army-knife|mkl|1.0.3
atom-keybindings|ms-|3.0.1
debugger-for-chrome|msj|3.2.1
createGUID|nwa|0.0.2
vscode-icons|rob|7.12.0
open-in-browser|tec|1.1.0
bootstrap4-vscode|the|2.4.0
vscode-todo-highlight|way|0.5.11

(5 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>15/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34309</IssueID>
    <Title>HTML not recognized inside php conditional bracket</Title>
    <Description>- VSCode Version: 1.16 (I do not recall having this issue with version 1.15)
- OS Version: Windows 10

Steps to Reproduce:
1. Create a php file
2. Add conditional braces {} inside php tags and enclose HTML elements inside them
```
&lt;?php if ($some_var) { ?&gt;
&lt;div class="1"&gt;&lt;/div&gt;
&lt;?php } ?&gt;
&lt;div class="2"&gt;&lt;/div&gt;
```
(div.1 is not recognized as HTML and appears all white, regardless of tags and divs. div.2 appears as HTML) (see screenshots)
3. Issue does not reproduce with alternate syntax "&lt;?php if ($some_var) :"

![capture](https://user-images.githubusercontent.com/31932007/30389621-5571c35e-9881-11e7-9dec-38dd06632ea5.PNG)
![capture-2](https://user-images.githubusercontent.com/31932007/30389619-54d36e34-9881-11e7-969a-906832a42ffd.PNG)


Reproduces without extensions: YES</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34305</IssueID>
    <Title>VS Code crashes</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
tslint|eg2|1.0.4
rest-client|hum|0.15.2
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.2.1



---

Steps to Reproduce:

1. VS Code crashes after latest upgrade. It has crashed 2 times in 10 minutes. I'm working on a angularJs project. The workflow is as follow
 - in first terminal (powershell) start TS with watch : &gt;&gt;tsc -w
 - in second terminal (powershell) start live server: &gt;&gt;live-server

After a little while VS Code will crash.
**Work around**:  Launch external shells and run the commands there. After doing this I have not seen any crash.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Have not tried.

Edit: add versions

- node v6.11.1
- tsc v2.4.2
- live-server v1.2.0
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>16/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34302</IssueID>
    <Title>Blurred terminal fonts</Title>
    <Description>I see that the terminal fonts turned a bit blurry after the canvas adoption:

![image](https://user-images.githubusercontent.com/22350/30384923-e18c8fe4-98a5-11e7-812c-4001a025f366.png)

This is using native resolution, no hdpi:

![image](https://user-images.githubusercontent.com/22350/30384927-e36fb52a-98a5-11e7-8036-0bc2bf19af78.png)
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34297</IssueID>
    <Title>tab content coverd by debug panel</Title>
    <Description>- VSCode Version: 1.16.0
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. drag the tab which coverd by debug panel in debug mod, still coverd by the panel

![image](https://user-images.githubusercontent.com/5675408/30380971-adbd266a-98cd-11e7-9aad-2fb44b605314.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34294</IssueID>
    <Title>Integrated terminal font rendering doesn't look good in Insiders </Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (128a4e3640c5375f7b0bc1cfd37f626481b1386f, 2017-09-12T05:10:59.101Z)
- OS Version: Darwin x64 16.7.0
- Display: Thunderbolt display (non retina)

left: Stable, right: Insiders

![2017-09-13_15-30-49](https://user-images.githubusercontent.com/1898161/30380079-df58a062-9898-11e7-8cd8-9413fbe17f55.png)

I'm using these font related settings:

```
	"editor.fontFamily": "FiraCode-Retina",
	"editor.fontSize": 13,
	"editor.fontLigatures": true,
```
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34292</IssueID>
    <Title>incremental selection inside a string selects too much</Title>
    <Description>my issue is if I’m standing inside a string , first thing it will select is the whole string with the `'` 
so let’s say I’m in `'vscode'` , first thing that will get selected is `'vscode'` instead of just `vscode`</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34286</IssueID>
    <Title>Can't remove breakpoint</Title>
    <Description>- VSCode Version: 1.16.0
- OS Version: Win 10, up to date

Steps to Reproduce:
No idea how to reproduce it

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes!

No matter what I try I can't get rid of a specific breakpoint. VSCode restart didn't help either.
Video showing the issue that I can't remove the breakpoint: https://streamable.com/g7htk
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>18/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34281</IssueID>
    <Title>Changing tab clears the "Search keybindings" field and lists all shortcuts</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.1



---

1. Open the Keyboard Shortcuts tab
2. Enter text to search on
3. Change to a different tab
4. Return to Keyboard Shortcuts tab. Default listing of all keybindings is shown
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34279</IssueID>
    <Title>Wrong tag closing highlighted inside React component</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-file-templates|bam|1.1.0
npm-intellisense|chr|1.3.0
vscode-javascript-snippets|cod|1.0.0
vscode-svgviewer|css|1.4.2
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
vscode-babel-coloring|dza|0.0.4
vscode-html-css|ecm|0.1.8
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
RelativePath|jak|1.0.0
vs-color-picker|lih|0.6.0
Runner|mat|0.1.14
code-beautifier|mic|1.7.2
vscode-scss|mrm|0.6.2
vscode-icons|rob|7.12.0
git-merger|sha|0.3.6
react-redux-es6-snippets|tim|2.1.0
jsx|Twe|0.0.1
vscode-todo-highlight|way|0.5.11
JavaScriptSnippets|xab|1.4.1
ReactSnippets|xab|1.4.0
local-history|xyz|1.4.0



---

Steps to Reproduce:

1. Create a self closing React Component.
2. Inside one of properties write an arrow function.
3. Move cursor to the component's opening tag
4. the arrow is highlighted as closing tag instead of the real closing tag.

![image](https://user-images.githubusercontent.com/8408452/30368999-a61d44c8-987b-11e7-8a4e-070f6e48aae3.png)
</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34271</IssueID>
    <Title>Can't search GBK when autoGuessEncoding=true</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
code-gnu-global|aus|0.2.2
plsql|cas|0.0.3
xml|Dot|1.9.2
CppSnippets|har|0.0.12
prettify-json|moh|0.0.3
cpptools|ms-|0.12.4
vscode-sql-beautify|sen|0.0.4
change-case|wma|1.0.0



---

Steps to Reproduce:

1.set "files.autoGuessEncoding": true,
2.If my file is encode by GBK and not open 。Nothing was searched When I search Chinese characters。

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34253</IssueID>
    <Title>Need outline view like atom ide</Title>
    <Description>https://ide.atom.io
atom ide add features

Improved language integration

Get smarter context-aware auto-completion, code navigation features such as an outline view, go to definition and find all references. As well as hover-to-reveal information, diagnostics (errors and warnings) and document formatting.
</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34248</IssueID>
    <Title>Snippet fails when cursor is not followed by a space</Title>
    <Description>Is there any way to force the snippet to run when the cursor is followed by a non-whitespace character?

![sep-12-2017 17-16-51](https://user-images.githubusercontent.com/27538/30348698-4e8809d4-97de-11e7-889a-06ba898e0178.gif)
</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34242</IssueID>
    <Title>[BUG]Integrated Terminal font dramatically different</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (128a4e3640c5375f7b0bc1cfd37f626481b1386f, 2017-09-12T05:10:59.101Z)
- OS Version: Darwin x64 16.7.0
- Extensions: the listing length exceeds browsers' URL characters limit
---

# Description
**EDITED 09/13**:  Updated this morning and terminal looks beautiful again! 🥇  What changed?
I noticed after updating **yesterday** that the integrated terminal's font appears quite different than it used to.  Were there commits merged that are related to this part of VSCODE?

Unfortunately, I don't have a screen shot handy of how it used to look, but i've included how it currently looks.

Thank you in advance.

# Screenshot

### Added 09/13 (appears to be fixed 👍 )
![code - insiders011](https://user-images.githubusercontent.com/3654683/30378476-512a707c-9861-11e7-8835-b6e02afccd82.jpg)

### Undesirable rendering of terminal font
![code - insiders010](https://user-images.githubusercontent.com/3654683/30341360-c607ce9c-97c3-11e7-807d-358d9bb55499.jpg)
 

</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34225</IssueID>
    <Title>tasks</Title>
    <Description>When defining tasks it will work okay for the first folder.
Tasks will be stored in the tasks.json AND the workspace.
When working with tasks for the second folder tasks will be stored in tasks.json, but will not be added to the workspace. 
These task cannot be used because they will not be found.
You also cannot use them as a build task in your launch configuration because they will not be found.

- VSCode Version: Code - Insiders 1.17.0-insider (128a4e3640c5375f7b0bc1cfd37f626481b1386f, 2017-09-12T05:10:59.101Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
nativescript|Tel|0.7.2
docomment|k--|0.0.17
csharp|ms-|1.12.1
PowerShell|ms-|1.4.2
team|ms-|1.122.0
debugger-for-chrome|msj|3.2.1
vsc-angular-cli|web|1.0.0



---

Steps to Reproduce:

1. Open a workspace
2. Add tasks for the first folder
3. Add tasks for the second folder

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34222</IssueID>
    <Title>crash crash crash not enable extension</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-caniuse|aka|0.5.3
project-manager|ale|0.21.1
htmltagwrap|bra|0.0.3
python|don|0.7.0
autofilename|Jer|0.1.3
code-beautifier|mic|1.7.2
sublime-keybindings|ms-|2.9.1
vscode-css-peek|pra|1.3.1
vscode-icons|rob|7.12.0
code-settings-sync|Sha|2.8.3
python|tht|0.2.3
html-snippets|wge|0.1.5
change-case|wma|1.0.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

![qq 20170912185458](https://user-images.githubusercontent.com/644260/30322539-64578254-97ec-11e7-8109-9f69045214a7.png)
![qq 20170912185520](https://user-images.githubusercontent.com/644260/30322550-6a107f16-97ec-11e7-83cb-a6b0d8f1522e.png)

</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34220</IssueID>
    <Title>Sidebar file tree breaks on scrolling while entering a new file name</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:12:42.401Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.10.1
vscode-simple-icons|Lau|1.6.0
vscode-paste-and-indent|Rub|0.0.8
vscode-apache|mrm|1.1.1
debugger-for-chrome|msj|3.2.1
vetur|oct|0.9.7
vscode-template-literal-editor|pli|0.8.4

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Open a project with many folders (you should be able to scroll in the sidebar file explorer). Maybe expand some folders and have some colorful file icons enabled, it will help recognizing the effect described below.
2. In the sidebar file explorer, right-click any of the upper folders and click "New File" or "New Folder".
3. Now start scrolling down until the input for the new file name disappears from the viewport.
4. Scroll up again: The input is gone.

   Instead, all kinds of crazy stuff will happen to the file tree. Keep scrolling up and down, try different scrolling speeds. You will notice files and folders randomly disappearing and re-appearing, or changing order — never in your sight, only in parts of the file tree you're just about to scroll to.

   It even happened to me that I clicked on a `.gitignore` file but an `.editorconfig` file was opened instead. I scrolled down and up again, and there actually *was* an `.editorconfig` which must have been disappeared before.

I was able to reproduce this bug with and without extensions and on two different machines, both running macOS Sierra.

---

Reproduces without extensions: Yes</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34197</IssueID>
    <Title>Window failure</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.16
- OS Version:Windows 10.0.14393

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No Yes

It is in writing code that happens frequently:

![image](https://user-images.githubusercontent.com/12369444/30311245-f04c736c-97c6-11e7-99ae-42dfa1ec2b5a.png)
</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>16/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34195</IssueID>
    <Title>Terminal file path clickability when colour changes midway through file path</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.0
githistory|don|0.2.3
tslint|eg2|1.0.3
csharp|ms-|1.12.1
PowerShell|ms-|1.4.2



---

Steps to Reproduce:

1. Take the setup here: https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker
2. `npm install`
3. `npm start`
4. Observe lack of clickability on errors:

![screenshot 2017-09-12 06 12 25](https://user-images.githubusercontent.com/1010525/30310016-40e1325e-9786-11e7-858d-7f5579deae38.png)

The reason for this is the colour change that the [`fork-ts-checker-webpack-plugin`](https://github.com/Realytics/fork-ts-checker-webpack-plugin) produces between the path ("...fileWithError.ts") and the line number / column number ("(2:7)")

You can work around this by supplying a custom formatter to fork-ts-checker-webpack-plugin; see here: https://blog.johnnyreilly.com/2017/09/fork-ts-checker-webpack-plugin-code.html

However, I wonder if VS Code should be able to cope with these colour changes and preserve "clickability".  What do you think?
</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>14/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34194</IssueID>
    <Title>doc comment</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.3.0
tslint|eg2|1.0.3
rest-client|hum|0.15.2
mssql|ms-|1.1.0
csharp|ms-|1.12.1
typescript-hero|rbb|1.4.1



---

Steps to Reproduce:

1. Annotate a method with a doc comment containing markdown.

2. Hover the method to observe rendered markdown in a hover tip.
![image](https://user-images.githubusercontent.com/5498936/30309259-ae59275a-97cd-11e7-818a-6c8ef967fd46.png)

3. Write some code that invokes the method. When you open parentheses a hover tip will appear containing the same markdown _unrendered_.
![image](https://user-images.githubusercontent.com/5498936/30309263-b42e1d0c-97cd-11e7-926a-3e6aeb872b55.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34189</IssueID>
    <Title>It is desirable to be able to dynamically adjust the order of the prompts in the prompt list based on the user's choice</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0
- OS Version: 10.13 Beta

Steps to Reproduce:

1. Install plugin  `JavaScript Snippet Pack for Visual Studio Code`
2. Type `cl` to the pop-up prompt box


### I hope to be able to add according to the choice of dynamic adjustment prompt box list order, such as I often use `cl` to output `console.log`, but each time need to manually select the upper and lower keys, affecting efficiency.

![image](https://user-images.githubusercontent.com/12965330/30306079-e45d210e-973b-11e7-95f2-8be5ca2b4607.png)

### It is recommended to add dynamic adjustment options based on user input

![image](https://user-images.githubusercontent.com/12965330/30306540-60c705fa-973e-11e7-90e7-cb977d8cd27b.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34174</IssueID>
    <Title>Keyboard layout compatibility</Title>
    <Description>_From @pujiaxun on August 30, 2017 2:54_

- VSCode Version: 1.15.1 
- OS Version: macOS Sierra 10.12.6  


I am using an simplified Chinese input method. And this seems to change the keyboard layout, which makes a few keybindings failed.

For example:

When **ABC(English)** input method:

```json
[
    {
        "key": "cmd+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus &amp;&amp; !editorReadonly"
    },
  {
        "key": "cmd+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus &amp;&amp; !editorReadonly"
  }
]
```

When **Simplified Chinese** input method:
```json
[
    {
        "key": "cmd+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus &amp;&amp; !editorReadonly"
    }
]
```

**The `cmd+/` disappeared!**

Finally I find this:

```json
    {
        "key": "cmd+[Slash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus &amp;&amp; !editorReadonly"
    }
```

I wonder whether I can toggle a switch to change the keybindings from `/` to `[Slash]`, from `,` to `[Comma]`, and so on?

Thank you!

_Copied from original issue: Microsoft/vscode-docs#1148_</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34147</IssueID>
    <Title>extract method doesn't indent code correctly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
As you can see, the brand new `Extract Method` functionality is not indenting the code correctly.

![screenshot from 2017-09-11 16-09-01](https://user-images.githubusercontent.com/984628/30278834-dc7c8c3e-970b-11e7-983e-a7ac2b84895b.png)
![screenshot from 2017-09-11 16-09-13](https://user-images.githubusercontent.com/984628/30278835-dc7ee1aa-970b-11e7-962f-6b080085c646.png)
![screenshot from 2017-09-11 16-09-17](https://user-images.githubusercontent.com/984628/30278836-dc816b6e-970b-11e7-9bb4-70382c65c738.png)

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953)
- OS Version: Kali Linux (Rolling Release based on Debian Sid)

</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34139</IssueID>
    <Title>Visual studio code keep crashing on windows 10 after latest update to 1.16.0</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.0
- OS Version: windows 10

Steps to Reproduce:

1. i am runing node apllication with mongese and angular 4, my vs code automatically crash after some time while i am running mongose and node with webpack in it. 
2. here is screen shoot of error.
![image](https://user-images.githubusercontent.com/23094645/30272291-444ee39c-970d-11e7-9ac2-e4a761f79589.png)

below is version detail of vs code 
![image](https://user-images.githubusercontent.com/23094645/30272324-78493cb0-970d-11e7-9c01-6fdad942f460.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
I have disabled all extensions but still getting the same crashing issue.</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>26/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34135</IssueID>
    <Title>Multiple monitors: the VS Code window becomes invisible</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.14393
---

Steps to Reproduce:

1. In the display settings you should have two monitors in this order: 1, 2.
2. Set the 2nd monitor the main one.
3. "Restore" the window (make it not full-size) and place it on the 1st monitor.
4. Close VSCode.
5. Set the 1st monitor the main one.
6. Open VSCode.

In the taskbar there is an active element of VSCode, but clicking on it or Alt+Tab'ing does not make the VSCode visible. Clicking on the taskbar item prompts me with the animation that the window is to the left of the 1st monitor, beyond visibility.

The problem will not be reproduced if you perform the same actions with the 2nd monitor.

The problem will be fixed if you set back the 2nd monitor the main one and move the window to it. Of course, the problem will also be fixed if you clear the `%APPDATA%\Code` folder.

Reproduces without extensions: **Yes**</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34133</IssueID>
    <Title>TreeDataProvider: allow programmatically changing the selection</Title>
    <Description>The default explorer view highlights the current file when the active editor changes. It would be nice to be able to match this behavior with custom tree views.

Related: https://github.com/patrys/vscode-code-outline/issues/12</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34126</IssueID>
    <Title>crashing </Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-caniuse|aka|0.5.3
project-manager|ale|0.21.1
htmltagwrap|bra|0.0.3
python|don|0.7.0
autofilename|Jer|0.1.3
code-beautifier|mic|1.7.2
easy-less|mrc|1.4.5
sublime-keybindings|ms-|2.9.1
vscode-css-peek|pra|1.3.1
vscode-icons|rob|7.12.0
code-settings-sync|Sha|2.8.3
python|tht|0.2.3
html-snippets|wge|0.1.5
change-case|wma|1.0.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34102</IssueID>
    <Title>Expand select bugs with literals in a function call</Title>
    <Description>
- VSCode Version: 1.15.1
- OS Version: win10
I don't know if these 2 scenarios are 2 effects of the same bug, or 2 different bugs.

1. Javascript file, try to expand select on Math: ```funcCall(Math.PI, 3,4)``` The 2nd step will Not select "Math.Pi", but all the parameters. See the gif
![gif](https://i.imgur.com/QuSpi5V.gif)

2. Go files: ```func(var1, var2, 3, "s")```. Cursor on var1 or var2, expand will select "var1, var2" instead of just the var. See the gif
![gif](https://i.imgur.com/yezBuuW.gif)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34092</IssueID>
    <Title>Recent update crashes a lot in windows at random times.</Title>
    <Description>Just today using VS Code for 5 hours and it has already crashed 16 times. I do not think of any particular action that caused  VS Code to crash, it happens randomly.

## Please Fix!</Description>
    <CreatedDate>10/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34083</IssueID>
    <Title>VS Code Crashes after August 2017 update after saving file</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-javascript-snippet-pack|aka|0.1.5
angular1-code-snippets|ale|0.0.3
imagepreview|buz|0.5.1
npm-intellisense|chr|1.3.0
gitignore|cod|0.5.0
vscode-svgviewer|css|1.4.2
jshint|dba|0.10.15
vscode-eslint|dba|1.3.0
vscode-npm-script|eg2|0.2.1
vscode-great-icons|emm|2.1.15
react-native-react-redux|EQu|1.1.0
auto-close-tag|for|0.5.0
beautify|Hoo|1.1.1
gsap-code-snippets|iha|1.0.1
react-component|jer|1.0.1
postgresql|JPT|0.0.2
vscode-icon-theme|jtl|1.5.0
angular1-code-snippets-johnpapastyle|lpe|0.1.0
Angular-BeastCode|Mik|4.3.15
mssql|ms-|1.1.0
debugger-for-chrome|msj|3.2.1
view-in-browser|qin|0.0.5
vscode-gulp|tan|0.0.4
react-redux-es6-snippets|tim|2.1.0
vscode-angular-support|vis|0.1.4
cordova-tools|vsm|1.2.11
vscode-wakatime|Wak|1.1.13
JavaScriptSnippets|xab|1.4.1
ReactSnippets|xab|1.4.0

(8 theme extensions excluded)


---

Steps to Reproduce:

1.Save Project (while running nodemon and gulp) (crash occurs randomly, sometimes i save and it's fine, other times i save and it crashes.)
2.Window CRASHES completely. Work is saved when I return, but still a major interruption to my workflow.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>09/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34080</IssueID>
    <Title>根据文件类型配置文件编码</Title>
    <Description># 建议增加根据文件类型配置默认编码的功能
##  当前的VSCode仅支持所有语言使用同一种设置
![image](https://user-images.githubusercontent.com/15274374/30243016-4668d398-95d4-11e7-8422-64fd3d449226.png)
## 实际使用中，就可能出现
### 1. 用相同的编码打开所有文件
![image](https://user-images.githubusercontent.com/15274374/30243082-0981ffe4-95d5-11e7-879f-148f8eec1622.png)
### 2. 用错误猜测的编码打开文件
![image](https://user-images.githubusercontent.com/15274374/30243112-65cf09ea-95d5-11e7-80d7-3478a2bf0c76.png)

## 一般在编码代码时，`bat`文件使用windows默认的编码（`ANSI`）中文（`GB2312`/`GBK`/`GB18030`），而`Javascript`使用`utf8`，这样才方便使用。

### 建议增加对如下配置方式的支持
![image](https://user-images.githubusercontent.com/15274374/30243169-ab6d2404-95d6-11e7-8dfd-cf641260fea2.png)
# # # # # # # # # #</Description>
    <CreatedDate>09/09/2017</CreatedDate>
    <ClosedDate>10/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34077</IssueID>
    <Title>vscode doesn't notice typechange on files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Ubuntu 16.04.3 LTS

Steps to Reproduce:

1. Create symlink like `link -s libx--1.0.so.1 libx.so`
2. Commit the change
3. delete the symlink, replace it with a copy of the file (`rm libx.so &amp;&amp; cp libx-1.0.so.1 libx.so`)

`git status` shows `typechange: libx.so`

while vscode shows no changes.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes (shows no changes while git status does)</Description>
    <CreatedDate>09/09/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34071</IssueID>
    <Title>Option to keep documentContentProvider alive when tab is changed</Title>
    <Description>We have very bad feedback about VSCode + PIO Home (@platformio). PIO Home is React.JS based application which we load using `iframe`. It depends on a server backend and needs 1-2sec to be started.

See related issue with detailed description for this problem: https://github.com/platformio/platformio-vscode-ide/issues/32

I've already received a feedback from @Tyriar / @mjbvz that it's a normal behavior of VSCode.

We propose our extensions of PlatformIO IDE for Atom and VSCode. We don't have any problems with Atom, it allows us to decide what to do with an internal content provider.

------

So, how about to have an option for `vscode.workspace.registerTextDocumentContentProvider` where we can explain VSCode to don't kill our documentContentProvider when a tab is changed?</Description>
    <CreatedDate>09/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34064</IssueID>
    <Title>Custom Titlebar Should Not Be Focusable</Title>
    <Description>It is uncomfortable that we have to click on the editor to be able to type every time we drag the custom titlebar. A titlebar should have been non-focusable without doubt.</Description>
    <CreatedDate>09/09/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34056</IssueID>
    <Title>Go to bracket stopped working after update to 1.16</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

Go to Bracket "Ctrl + Shift + \ " stopped working after 1.16 update is installed. The cursor goes to the  matching bracket but the screen does not scroll to it.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16
- OS Version: Windows 10

Steps to Reproduce:

1. 
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34045</IssueID>
    <Title>Editor does not auto-scroll to keep the cursor visible</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:19:37.192Z)
- OS Version: Linux x64 4.4.0-93-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.16.0
python|don|0.7.0
Go|luk|0.6.65
cpptools|ms-|0.12.3
perforce|sle|2.1.1
---

I believe this is a recent regression:

Steps to Reproduce:
1. open any source file with matching brackets far away from each other so one of them is outside the visible lines
2. jump to the matching bracket (editor.action.jumpToBracket)
3. cursor moves to the matching bracket correctly, but it's not outside the visible lines (editor does not auto-scroll to keep cursor visible as expected)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34041</IssueID>
    <Title>HTML highlight not recognized after open an PHP if statement using braces</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16
- OS Version: ubuntu 17.04

Steps to Reproduce:

1. Editing a combine HTML/PHP view
2. Adding a PHP IF statement or a FOR loop using braces
3. After opening the statement brace "{" and closing PHP "?&gt;" in order to insert HTML, the PHP closing tag is not detected and all the following HTML acts like it continues in PHP mode, so HTML code is not highlighted and snippets stop working.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Extensions:
PHP Intelephense 0.7.2
HTML Snippets 0.1.0
![bug](https://user-images.githubusercontent.com/16110371/30223231-9367393c-948f-11e7-8b1a-2f3305f9e627.png)
</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34040</IssueID>
    <Title>HTML syntax highlighting problem in php file</Title>
    <Description>- VSCode Version: 1.16.0
- OS Version: Ubuntu 17.04 64-bit Gnome 3

Steps to Reproduce:

1. Open file .php whit html and php code

html highlighted is broken if the html code is between php

![screenshot from 2017-09-08 14-21-08](https://user-images.githubusercontent.com/6413893/30223370-fd3a5e8c-94a0-11e7-909d-b0d33b0d3ae5.png)
</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34037</IssueID>
    <Title>Working with md files preview cant split the screen with Drag&amp;Drop</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
project-manager|ale|0.21.0
ng-template|Ang|0.1.7
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-simpler-icons|dav|1.4.0
vscode-eslint|dba|1.3.0
angular-extension-pack|dog|0.7.7
git-extension-pack|don|0.1.3
githistory|don|0.2.3
vscode-generate-getter-setter|DSK|0.4.2
gitlens|eam|4.4.3
EditorConfig|Edi|0.10.1
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.1
auto-close-tag|for|0.5.0
auto-rename-tag|for|0.0.14
beautify|Hoo|1.1.1
rest-client|hum|0.15.2
output-colorizer|IBM|0.1.2
angular2-switcher|inf|0.1.4
search-node-modules|jas|1.1.1
docthis|joe|0.4.8
Angular2|joh|2.7.0
refactorix|kri|0.3.6
vs-color-picker|lih|0.6.0
json-to-ts|Mar|1.5.3
Angular-BeastCode|Mik|4.3.15
PowerShell|ms-|1.4.2
typescript-javascript-grammar|ms-|0.0.23
tsimporter|pmn|1.2.14
vscode-icons|rob|7.12.0
nodejs-extension-pack|wad|0.1.9
vscode-todo-highlight|way|0.5.11
JavaScriptSnippets|xab|1.4.1
markdown-all-in-one|yzh|0.8.3
vscode-open-in-github|ziy|1.2.7

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Open the markdown preview
2. Click and drag the tab of the preview
3. Try to find a place to drop and create a splitted view.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Doesn't happen when disabling extensions</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34023</IssueID>
    <Title>Color highlight problem with php since last version update</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: none
---

Just installed last update, and PHP code colors beacame strange with an unchanged file,
so i made a test editing a simple php file..
Steps to Reproduce:

1. Create a php file
2. insert following code
```
&lt;?php
// Yii::app()-&gt;clientScript-&gt;registerScriptFile(Yii::app()-&gt;baseUrl . '/js/index.js', CClientScript::POS_HEAD);
// Yii::app()-&gt;clientScript-&gt;registerCssFile(Yii::app()-&gt;baseUrl . '/css/index.css');
?&gt;
&lt;link rel="stylesheet" href="/css/index.css" /&gt;

&lt;?php

if ($this-&gt;user-&gt;type=='candidat') {
	?&gt;
	&lt;div class="row main-panel"&gt;

		&lt;div class="col-sm-12 col-md-4" id="profileBloc"&gt;
			&lt;h3&gt;&lt;i class="fa fa-address-card-o"&gt;&lt;/i&gt; Mon profil&lt;/h3&gt;
			&lt;a href="/profile"&gt;
			&lt;div class="panel"&gt;
				
				&lt;div class="picture"&gt;
					&lt;?php
					if (file_exists("file/pics/" . $this-&gt;user-&gt;primaryKey . ".jpg"))
						$url = '/thumb/get/id/' .$this-&gt;user-&gt;primaryKey . '?method=cut&amp;w=175&amp;h=225';
					else 
						$url = '/images/icone_compte_2.png';
					?&gt;
					&lt;img class="img-responsive" src="&lt;?= $url ?&gt;" id="thumb_1" &gt; 
				&lt;/div&gt;
				&lt;div class="info"&gt;
					&lt;?php 
					if (!$this-&gt;user-&gt;nom) {
						?&gt;
						&lt;div class="alert alert-warning"&gt;
							Les information de votre profil n'ont pas encore été complétées
						&lt;/div&gt;
						&lt;?php
					}
					?&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;?php
}
?&gt;
```

3. try to edit or play with code.... 

the code parser looks to have a problem for color highlight AND understand after the single quote</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34021</IssueID>
    <Title>MacOS: Cannot edit files that require root access to edit (EACCESS: permission denied)</Title>
    <Description>- VSCode Version: 1.16.0
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. $ code /etc/hosts
2. Make your changes
3. Try to save

Reproduces without extensions: Yes

How I would like it to behave:

1. $ code /etc/hosts
2. Make your changes
3. Try to save
4. Asks for authentication
5. Save successful

I have the same problem with NFS mounted directories etc. In Atom the app asks for my username and password to save, but VS Code just gives this error. Would it be possible to have the Atom's functionality in VS Code as well? Would be superb.

EDIT: Wanted to add that the reason I'd like to have this functionality is that I don't like (and its not recommended) to run VS Code as root. So the result is that any file that needs root access to edit is uneditable with VS Code.</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34017</IssueID>
    <Title>Nested PHP/HTML Syntax Highlighting broken in latest release.</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 10.0.15063
---

As of the latest update, Syntax Highlight breaks any time I have a `?&gt;` after a `{`.
Looks like VScode doesnt know to switch back to HTML highlighting.
This is with all plugins disabled.
PS: The issue is only with syntax highlighting. If I save the file, I don't get any "Problems".

Steps to Reproduce:

1. Create a new .php file.
2. Start typing some code.
3. Put a `?&gt;` tag after a `{`
4. Watch the colors disappear!

![capture](https://user-images.githubusercontent.com/29322304/30209059-be47b1b8-949e-11e7-93f4-2e384e16fda1.PNG)


Reproduces without extensions: **Yes**/No</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>34011</IssueID>
    <Title>Load/download extension using extensions.json adjacent to settings.json </Title>
    <Description>I think it makes sense to move extensions to extensions.json for following advantages.

- Easy to share and sync
- Workspace specific extensions
- Allow users to create extensions collection which user can enable or disable as collection
e.g csharp collection in extensions.json file will have on csharp related extensions and can be disabled in workspace extensions.json so unnecessary extensions are not loaded

Thx</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33996</IssueID>
    <Title>Ability to name folders in workspace tree.</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (c354fca44896da2c9cad82b9bd9126f6658cfae8, 2017-09-08T05:24:34.310Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-svn|eli|0.1.0
tortoise-svn|fan|0.1.1
php-debug|fel|1.11.1
php-intellisense|fel|1.5.1
composer|ika|0.5.0
smarty|imp|0.2.0
vscode-apache|mrm|1.1.1
wow-bundle|Sep|1.2.4
---

Steps to Reproduce:

1. Add a folder to workspace EG: C:\web\server\webroot
2. Add a second folder to workspace EG: C:\web\client\webroot

Without checking the content these two are now identical "wwwroot" folders in the navigator.

Please add something like this to workspace settings:

    {
    	"folders": [
    		{
    			"name": "Server",
    			"path": "C:\web\server\webroot"
    		},
    		{
    			"name": "Client"
    			"path": "C:\web\client\webroot"
    		}
    	]
    }

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33993</IssueID>
    <Title>PHP code highlighting broken in 1.16</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-great-icons|emm|2.1.15
ftp-sync|luk|0.3.3
nativescript|Tel|0.7.2

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Open any PHP file (using any theme)
2. Write something like this
`&lt;?php if(a==b) { ?&gt;`
`&lt;p&gt;some html with &lt;?='php'?&gt;&lt;/p&gt;`
`&lt;?php } ?&gt;`
3. HTML highlights and PHP tags highlights are wrong inside these brackets.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![example](https://user-images.githubusercontent.com/3955719/30199074-aeffee7a-9479-11e7-8d15-65b1b5f75fbb.png)
</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33989</IssueID>
    <Title>Replacing more than 999+ occurences does not work?</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:54:47.289Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
elm-format|aba|0.1.0
vscode-eslint|dba|1.2.11
python|don|0.7.0
terminal|for|0.0.10
elm|sbr|0.15.0



---

Steps to Reproduce:

1.Having file like this
```
13
00:03:39,761 --&gt; 00:03:42,179
You don't think he'll ask us how they died?
14
00:03:44,433 --&gt; 00:03:46,225
Get back on your horse.
15
00:03:50,939 --&gt; 00:03:53,441
Whatever did it to them
could do it to us.
16
00:03:53,567 --&gt; 00:03:55,151
They even killed the children.
17
00:03:56,111 --&gt; 00:03:58,112
It's a good thing we're not children.
```
2. CTRL+H with regex
`^[\d:,&gt; -]*$`
3. Got
`1of 999+`
4.Replace all with nothing
5.Does not work

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33980</IssueID>
    <Title>wana vscode can close file group</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16
- OS Version:macos 10.13


![image](https://user-images.githubusercontent.com/9606668/30192892-c88ab24a-940f-11e7-894d-12fe248975a0.png)
![image](https://user-images.githubusercontent.com/9606668/30192896-d2a8bc18-940f-11e7-9718-608393d0fa6e.png)</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33978</IssueID>
    <Title>Feature request - to save input text in keybindings</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.17.0-ins
- OS Version: win7x64

Not critical. But it would be better if text input field could save the text, that user has been typed.

_after switching to another tab:_
![keybindings - text input - 2](https://user-images.githubusercontent.com/24613274/30191870-8691b720-944c-11e7-8b34-642545b3166a.gif)

_after moving the "keybindings.json" tab to another group:_
![keybindings - text input](https://user-images.githubusercontent.com/24613274/30191632-c905dce6-944a-11e7-9fa3-5da69374749f.gif)
</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33976</IssueID>
    <Title>magnifier vscode can not work well like in vs ，in vscode can not Follow the text insertion point and not Follow keyboard focus</Title>
    <Description>- VSCode Version: Code 1.16.0 (787b31c0474e6165390b5a5989c9619e3e16f953, 2017-09-06T16:27:49.891Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.12.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/</Description>
    <CreatedDate>08/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33961</IssueID>
    <Title>Horizontal breakpoint like in Chrome DevTools</Title>
    <Description>- VSCode Version: 1.15.1
- OS Version: Linux

![peek 2017-09-07 23-29](https://user-images.githubusercontent.com/1832800/30183896-c6993c62-9424-11e7-82d8-4ab201786c97.gif)
</Description>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33941</IssueID>
    <Title>New install of VSC x64 on Windows hogs CPU renders machine unresponsive</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Windows Server 2012 R2 (2GB Ram - It's a VM)

Steps to Reproduce:

1. Install VSC x64 or x32
2. Open Task Manager
3. Launch
4. Watch machine grind to a halt

![image](https://user-images.githubusercontent.com/99895/30164748-71d3e2a8-93d5-11e7-8dd2-13d003557c28.png)

Image shows the issue.  The issue happens with or without the folder opened in VSC (it was an issue directly from first launch).

Can't even close VSC with X or File-&gt;Exit, have to end task.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
No extensions were installed, it was a clean install.  
Running with code --disable-extensions shows the same issue.

I uninstalled and installed the 32 bit version, and I get exactly the same problem.

Have now uninstalled completely.

</Description>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33934</IssueID>
    <Title>terminal line broken</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Microsoft Windows [Version 10.0.15063] language: ko

Steps to Reproduce:

1. If I input command "dir" on terminal (cmd.exe or powershell.exe)
2. Output line is broken.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33933</IssueID>
    <Title>Escaping \\ in snippet using \\\\ outputs only one backslash</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1, Commit 41abd2
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. Insert the following code snippet to `latex.json` (which is where user's tex snippet goes)
Or by clicking `File` -&gt; `Preferences`-&gt;`User Snippets` and search `tex`.
```
	"Input a multiline eqn": {
		"prefix": "eqnmultiline",
		"body": [
			"\\[",
			"\t\\begin{array}{lcl}",
			"\t\t ${1:foo} &amp; = &amp; ${2:foo} \\\\",
			"\t\t &amp; = &amp; ${3:foo} \\\\",
			"\t\t &amp; = &amp; ${4:foo} \\\\",
			"\t\\end{array}",
			"\\]",
			"$0"
		],
		"description": "Input a multiline eqn"
	}

```
2. In a demo.tex, type `eqnmultiline` which will insert a code snippet as follows:
```
   \[
        \begin{array}{lcl}
             foo &amp; = &amp; foo \
             &amp; = &amp; foo \
             &amp; = &amp; foo \
        \end{array}
    \]
```
And I'm expecting a `\\` at the end of the three foo lines, which I use `\\\\` to escape. But the result is one `\`  at each line. 
[Snippet Grammer](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_grammar) says using `\` to escape `\`. So I'm wondering if this is a bug.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: 
**Correct** Sorry for not testing using suggested `code --disable-extensions` before because I missed that line in comment . Tried it today and after disabling extensions, I cannot insert tex snippets even through Command Palette. It tells me `there are no entries to pick from`</Description>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>12/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33895</IssueID>
    <Title>Suggestion Lightbulb Icon Incorrectly positioned</Title>
    <Description>- VSCode Version: Code - Insiders 1.17.0-insider (be71eecef0bff8ad4a84ce06cd54b9185bc8c306, 2017-09-06T05:15:43.568Z)
- OS Version: Linux x64 4.10.0-33-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.7
erb|Cra|0.0.1
html-leaf|Fra|0.1.3
json-to-ts|Mar|1.5.3
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
angular2-snippets|dan|1.0.16
githistory|don|0.2.3
tslint|eg2|0.17.0
vscode-ember|emb|0.1.0
prettier-vscode|esb|0.23.1
auto-rename-tag|for|0.0.14
search-node-modules|jas|1.1.1
Angular2|joh|2.7.0
csharp|ms-|1.12.1
typescript-javascript-grammar|ms-|0.0.23
debugger-for-chrome|msj|3.2.1
EmberES6Snippets|pha|2.1.2
typescript-hero|rbb|1.4.0
vscode-icons|rob|7.12.0
git-merger|sha|0.3.6

(2 theme extensions excluded)


---

The lightbulb icon for suggested fixes is positioned incorrectly. It is not in the left margin - it is right against the test. And in some cases it is positioned on the wrong line.

![screenshot at 2017-09-06 09-47-56](https://user-images.githubusercontent.com/13488/30115406-9d59a946-92e8-11e7-9b5e-b026b28cebc8.png)


</Description>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>07/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33888</IssueID>
    <Title>MacOS VSCode and keypress to get accent print double character</Title>
    <Description>- VSCode Version: Version 1.15.1 (1.15.1)
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Use VSCode (latest version) on macOS with non accent keyboard layout. eg: US
2. Press key "e" and maintain to get OSx accentuated characters suggestion. Press the desired number to get accentuated letter.
3. The letter without accent is printed followed by the accentuated one instead of replacing the first one with accentuated.

**Please note** this behavior is not encountered in other editors or in browser for example. Nor encountered in slack app desktop. Just in VS Code.

**It's note encounted in the search input (CMD + F).**

**Please also note** this behavior is not new and was encountered before june.

Here is a gif:

![sep-06-2017 07-46-46](https://user-images.githubusercontent.com/11064123/30110461-2b513f22-92d8-11e7-9b7a-a53d6e636894.gif)

Reproduces without extensions: Yes</Description>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33885</IssueID>
    <Title>selectionHighlight still slow and blocking for long non-wrapped lines</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
---

## Steps to Reproduce:

1. Save `https://upload.wikimedia.org/wikipedia/commons/f/fd/Ghostscript_Tiger.svg` and open in VSC.
2. Ensure settings `"editor.selectionHighlight": true` &lt;ins datetime="2017-09-12T14:18:59+02"&gt;and `"editor.fontLigatures": true`&lt;/ins&gt;
3. Select entire document.
4. Invoke `&gt;Join Lines`.
5. If lines are wrapped, invoke `&gt;Toggle word wrap` .
6. Select `0` (zero, or any other digit).

## Actual behavior:

Editor **completely frozen** (i.e. does not react for any kind of input) **for circa 15 seconds**.
After highlights appear editor works normally again.

## Expected behavior: 

No freeze.
Would not mind missing or delayed highlights.

## Notes:

Quite OK with wrapped lines.
Older (closed) issues relevant to this "long lines" topic: #31425 #6885 #13515 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>22/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33880</IssueID>
    <Title>Terminal find: give some feedback when there are no results</Title>
    <Description>1. Terminal, find widget
2. Search for something which has no results
3. The find widget does not give any feedback to the user. Notice how the editor find widget says `no results` in red. I understand we are trying to save space in the terminal find widget but we could still do a red border in the input field</Description>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33869</IssueID>
    <Title>undefined window.activeTextEditor for binary files</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (aa42e6ef8184e8ab20ddaa5682b861bfb6f0b2ad, 2017-09-01T15:40:17.463Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

window.activeTextEditor and e from onDidChangeActiveTextEditor callbacks are null when selecting/ opening a binary file (ie .png or exe)

I cannot find any other accessor for non-text file/editors.  How do I get the uri for my own extension to operate on?  (ie, showing scm status)</Description>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33858</IssueID>
    <Title>Fast tasks cause the task output terminal to automatically clear &amp; close in tasks.json version 2.0.0</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
## System Information:
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Debian 9.1 (Stretch)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
 - Reproduces without extensions: Yes

**Note:** I've attempted to reproduce this issue on Windows, but have been unable to do so, I'm not sure if it's because executing the command takes longer on Windows or if its because the issue simply isn't present on Windows.

## Steps to Reproduce:

1. Create a new workspace
1. Create a tasks.json with the following contents (note that it's version 2.0.0)
	```
	{
		// See https://go.microsoft.com/fwlink/?LinkId=733558
		// for the documentation about the tasks.json format
		"version": "2.0.0",
		"tasks": [
			{
				"taskName": "test",
				"type": "shell",
				"command": "echo hello world; sleep 1",
				"group": {
					"kind": "test",
					"isDefault": true
				}
			}
		]
	}
	```
1. Run the test test several times, note how the terminal remains visible after the task has completed, and contains the following message: 
![image](https://user-images.githubusercontent.com/5873790/30079779-550467f6-924f-11e7-9531-64892f51878b.png)
1. Remove the sleep portion of the command so that the command line of tasks.json reads as follows:
`"command": "echo hello world"`
1. Run the test task several times, note that if you still had the terminal open from the previous step, that it gets automatically closed after the task completes. The terminal re-opens every time the new version of the command is run, and is automatically closed afterwards. The following is all that is printed (note that the "Terminal will be reused by tasks, press any key to close it" message is not displayed)
![image](https://user-images.githubusercontent.com/5873790/30079964-0cba22b4-9250-11e7-931e-7f90ab6d62c3.png)

## Additional Info
This is actually a combination of two parts of the same issue, the first being that in tasks.json version 2.0.0 a task which terminates too quickly will automatically clear and close the tasks output terminal. In tasks.json version 0.1.0, the expected behavior (of the task output terminal remaining open) occurs regardless of whether or not the task completes extremely quickly.

I have also included a [zip archive](https://github.com/Microsoft/vscode/files/1278719/example.zip) containing two versions of an example workspaces where this problem is present; the workspaces contain the source code for a basic "Hello World" program, a makefile to build it, and the appropriate tasks.json. The `tasks-new` workspace uses tasks.json version 2.0.0 whereas 'tasks-legacy' uses tasks.json version 0.1.0. The behavior I've experienced in these workspaces is as follows:

| Workspace 	| Build Command (In a clean workspace) 	| Build Command (When the program has already been compiled) 	| Test Command 	| Test Command (When the example program has been built with the sleep(1) line enabled) 	|
|--------------	|-------------------------------------------------------------------------------------------------------------------------------------------	|------------------------------------------------------------------------------------------------------	|----------------------------------------------------------------------------------	|--------------------------------------------------------------------------------------------------------------------------------------------------	|
| tasks-legacy 	| Build output is displayed, the terminal remains open 	| "make: Nothing to be done for 'build'." is displayed, the terminal remains open 	| "[0] './bin/a.out'" is displayed, the terminal remains open 	| "[0] './bin/a.out'" is displayed, the terminal remains open 	|
| tasks-new 	| Build output is displayed, the terminal remains open, "Terminal will be reused by tasks, press any key to close it." message is displayed 	| "make: Nothing to be done for 'build'." is displayed, the terminal is closed when the task completes 	| "[0] './bin/a.out'" is displayed, the terminal is closed when the task completes 	| "[0] './bin/a.out'" is displayed, the terminal remains open, "Terminal will be reused by tasks, press any key to close it." message is displayed 	|
|  	|  	|  	|  	|  	|

## Files
[example.zip](https://github.com/Microsoft/vscode/files/1278719/example.zip)
</Description>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33838</IssueID>
    <Title>The install tip will show again after reload window</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.9.4
vscode-docker|Pet|0.0.16
code-settings-sync|Sha|2.8.3
Angular2|UVB|0.4.1
string-converter|ada|0.0.9
Bookmarks|ale|0.16.0
markdown-preview-github-styles|bie|0.0.2
npm-intellisense|chr|1.3.0
open-html-in-browser|cod|0.1.21
gitignore|cod|0.5.0
vscode-eslint|dba|1.2.11
vscode-dash|dee|1.7.0
githistory|don|0.2.3
python|don|0.7.0
es7-react-js-snippets|dsz|1.1.0
gitlens|eam|4.4.3
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.1
vscode-great-icons|emm|2.1.15
prettier-vscode|esb|0.23.1
vsc-travis-ci-status|fel|1.1.0
vscode-npm|fkn|3.3.0
vscode-auto-open-markdown-preview|hnw|0.0.4
webpack|jer|2.0.2
sublime-babel-vscode|jos|0.2.8
Go|luk|0.6.63
sublime-keybindings|ms-|2.9.1
debugger-for-chrome|msj|3.2.1
vscode-icons|rob|7.12.0
markdown-preview-enhanced|shd|0.2.8
sync-rsync|vsc|0.18.0
vscode-todo-highlight|way|0.5.11
webpack-progress|wk-|0.0.8
JavaScriptSnippets|xab|1.4.1

(7 theme extensions excluded)


---

Steps to Reproduce:

1. click install button on the store page, like https://marketplace.visualstudio.com/items?itemName=joshpeng.theme-charcoal-oceanicnext
2. back to vscode will see the tip of install the plugin and the store page 
3. close the tips and the page, reload the window, or just click the install button then reload, the tip and the store page will show again

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33837</IssueID>
    <Title>Why dont you give login to save preferences?</Title>
    <Description>
    </Description>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33833</IssueID>
    <Title>Text is pasted into integrated terminal instead of search box</Title>
    <Description>- VSCode Version: 1.15.1 64-bit
- OS Version: Windows 10

Steps to Reproduce:

1. Copy some text to clipboard
2. Go to integrated terminal (powershell in my case)
3. Open search box (ctrl-f)
4. Paste copied text into search box.

Behavior:
![pasting-in-terminal](https://user-images.githubusercontent.com/9638275/30054875-dd9b3652-922d-11e7-824d-2d01177a28a7.gif)

Text is pasted into terminal instead of terminal search box, or in both places. Right-click on Find field in the box to paste from context menu also pastes the text into terminal, even without explicitly selecting Paste from context menu. This changes depending on focus, sometimes closing and opening search box changes behavior slightly, but it still appears in one or other way.
</Description>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33816</IssueID>
    <Title>Folders and files not available in Explorer</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. Try to load any folder into editor, either by dragging it to the window or by using Open Folder option

2. No folders and no files are displayed in the sidebar. No Open Editors panel is open even after a file is opened.

3. It only happens for folders that had been worked before. After RENAMING a given folder, I can load it successfully into editor.</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>07/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33812</IssueID>
    <Title>JS node deprecation error blocking extensions installation from command line</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1 x64
- OS Version: Windows 10

Steps to Reproduce:

1.  When executing the "code --install-extension &lt;any extension&gt;" command, does not allow to install any extension.
      
2. C:\Program Files\Microsoft VS Code\bin\code.cmd --install-extension ms-vsts.team
Found 'ms-vsts.team' in the marketplace.
Installing...
(node:13048) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: this._state.then is not a function
(node:13048) DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33811</IssueID>
    <Title>Snippet wont appear after restart</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:16:27.618Z)
- OS Version: Linux x64 4.4.0-93-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
php-formatter|Sop|0.2.4
jupyter|don|1.1.3
python|don|0.7.0
php-cs-fixer|jun|0.1.39
ci-snippets|sec|0.0.2
php-ci|sma|0.2.2



---

Steps to Reproduce:
I have an issues with Visual Studio Code, I add a new snippet to html, as below,
`	"php tags in html":{
		"prefix": "php",
		"body": ["&lt;?php $1;?&gt;"],
		"description": "print php tag in html"
	}`
When I test it it work perfectly, however when the app is restarted, it wont appear in editor when I enter php., however when the app restarted, it wont work. To make it work again I should open the html snippet, and make a change, anything like adding a space, and save it again, it work again, but when the app restart it wont work again.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33804</IssueID>
    <Title>VSCode File Tree Not Appearing On Load</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Windows 10 Latest Update (9/4/2017)

Steps to Reproduce:

1. Open Application
2. Start &gt; Open Folder &gt; Select Folder
3. No files appear in file tree except for the "Welcome" menu.
4. This appears to happen when I delete the main tree folder and then use a USB to copy + paste a new folder from the USB to same directory and rename it to the original main tree directory name.  

I've ignored this issue long enough - it's really hit and miss. I have to reload/switch folders in the application 5-10 times before it finally appears. I've uninstalled/disabled all extensions. I've went the route of setting restoreWindows to none and I'm still getting the same issue.

I've Googled this and can't find anything. I also have the same issue on a separate computer. Anyone have any suggestions?


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33800</IssueID>
    <Title>Terminal: find widget gives flaky results</Title>
    <Description>1. Terminal, open find widget, find something -&gt; works fine
2. Try to find some other term -&gt; sometimes fails
3. If there are multiple instances of a result, sometimes moving between them fails

I can repro this flaky behavior both on my OS X with zsh shell and Win10 with powershell.
If nobody reported this so far please let me know and I will try to find better repro steps.</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33797</IssueID>
    <Title>String formatting isn't applied on `TaskSystem.activeSame.{no}background` message</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.16
python|don|0.7.0
pgsql|dou|0.0.8
vscode-html-css|ecm|0.1.8
vscode-nuget-package-manager|jmr|1.1.4
vscode-rust|kal|0.4.2
Kotlin|mat|1.3.0
cpptools|ms-|0.12.3
csharp|ms-|1.12.1
shader|sle|0.2.3
vscode-lldb|vad|0.6.0
vim|vsc|0.10.0

(1 theme extensions excluded)

---

Steps to Reproduce:

1. Cmd+Shift+b (to trigger the `build` task)
2. Cmd+Shift+b while the previously-started task is still running

![screen shot 2017-09-04 at 7 50 11 am](https://user-images.githubusercontent.com/4861023/30027387-610a9b24-9146-11e7-9e75-4426e791b1b9.png)

Reproduces without extensions: Yes

---

https://github.com/Microsoft/vscode/blob/bef497ff82391f4f29ea52f532d896a6903f6ff6/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1254-L1256</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33780</IssueID>
    <Title>Certain folder won't show up.</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
unity3d-pack|dim|0.7.1
docomment|k--|0.0.17
csharpfixformat|Leo|0.0.32
unity-snippets-modified|lio|0.3.2
csharp|ms-|1.12.1
shader|sle|0.2.3
unity-tools|Tob|0.1.9
unity-debug|Uni|1.2.1
unity-snippets|Ycl|0.1.2
mono-snippets|zra|0.0.2

(1 theme extensions excluded)


---

Basically a certain folder won't show up on editor.

Steps to Reproduce:

1. Open folder either via vscode or file explorer

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without or without extensions.</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33779</IssueID>
    <Title>Same file opened twice</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
(Also using Arduino and C/C++  )
- OS Version: Windows 10 + shared disk on Cubestation cs407.
Steps to Reproduce: ??


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No Can't tell. 

Sometimes files opens both as they were named, like filename.h, and sometimes they **also** open as FILENAME.H in the tab. Having same file opened twice causes all types of issues. 
Most probably , this shows up sometimes/always when using "find in files" or "replace in files"
( I can't promise I've noticed all times it has happened. )

This on a project stored on a shared disk on the Cubestation.
</Description>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33761</IssueID>
    <Title>Snippets: final tab stop doesn't get added if there are no placeholders in the snippet</Title>
    <Description>Take the below 2 examples of html snippets. The first one has a placeholder, the second doesn't.
The Snippet parser adds a final tab stop for the first snippet, but not for the second.


```
{
	"Sample": {
		"prefix": "list1",
		"body": [
			"&lt;ul class=${1:hello}&gt;&lt;/ul&gt;"
		]
	},
	"Sample2": {
		"prefix": "list2",
		"body": [
			"&lt;ul class=${1}&gt;&lt;/ul&gt;"
		]
	}
}
```

This is due to : https://github.com/Microsoft/vscode/blob/c0018cf640c82ab12ec60c9052da8ea66e748549/src/vs/editor/contrib/snippet/browser/snippetParser.ts#L487

This provides inconsistencies when authoring snippets.
Emmet especially assumes the editor will add the final tab stop and so doesn't do it itself.

cc @jrieken </Description>
    <CreatedDate>03/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33754</IssueID>
    <Title>Unable to install extension via CLI</Title>
    <Description>Unable to install any extension using cli anymore. It stucks with following output:

```shell
$ code --install-extension Tyriar.sort-lines
Found 'Tyriar.sort-lines' in the marketplace.
Installing...
(node:659) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: this._state.then is not a function
(node:659) DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
```

&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: macOS 10.12.6
- Node.js Version: 8.4.0

Steps to Reproduce:

1. Uninstall plugin
2. Try to install it via `code --install-extension`. (i.e. `code --install-extension Tyriar.sort-lines`)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>03/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33728</IssueID>
    <Title>TextDocument.isClosed = true even when document is not closed</Title>
    <Description>- VSCode Version: 1.15.1
- OS Version: Windows 10 Pro x64

Steps to Reproduce:

1. Open some 2 documents within the same editor
2. Switch from one to another document

Explanation:

Both _**onDidChangeActiveTextEditor**_ and _**onDidCloseTextDocument**_ events are fired. On the latter one, document's property _**isClosed**_ is set to _**true**_, even if it is not closed (it just lost focus).

I need the information if some file is actually closed, not just if focus switched from it to some another file. </Description>
    <CreatedDate>02/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33717</IssueID>
    <Title>Delete a file from sidebar,the file cannot be opened again.</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.10240
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
jshint|dba|0.10.15
vscode-eslint|dba|1.2.11
jquerysnippets|don|0.0.1
vscode-html-css|ecm|0.1.8
beautify|Hoo|1.1.1
jquery-snippets|Hri|1.0.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.Delete a file from sidebar
![image](https://user-images.githubusercontent.com/25072780/29992002-36f3278a-8fc4-11e7-8b6e-ee17c831394d.png)
2.Then open this file again.
![image](https://user-images.githubusercontent.com/25072780/29992024-96843a22-8fc4-11e7-93e6-b5ef7385be60.png)
3.This file cannot be opened,there is nothing exhibit.
![image](https://user-images.githubusercontent.com/25072780/29992006-491be44c-8fc4-11e7-94b3-c534c85ac6ee.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>02/09/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33712</IssueID>
    <Title>URL escaping is changed when using "Loaded Scripts" viewlet</Title>
    <Description>chrome-debug sends ` {"seq":0,"type":"event","event":"script","body":{"reason":"new","script":{"id":11,"source":{"name":"test2.js","path":"http://localhost:8080/out/client%20with%20space/test2.js","sourceReference":1001}}}}` (with `%20` escaped spaces)

I open test2.js from "loaded scripts" and set a breakpoint in it. VS Code sends `setBreakpoints({"source":{"path":"http://localhost:8080/out/client with space/test2.js","name":"test2.js"},"lines":[3],"breakpoints":[{"line":3}],"sourceModified":false})` (with unescaped spaces)</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>16/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33702</IssueID>
    <Title>Can't expand HTML snippets/Emmet in JSX javascript file</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: Version 1.15.1 
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. write 'div' or any other HTML tag name on a js file and press tab to expand
</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33697</IssueID>
    <Title>Allow regular expression for CompletionItemProvider triggerCharacters</Title>
    <Description>**Problem**
For issues like #23962, we want to trigger suggestions when the user types the `'` in:

```js
import _ from '
```

Registering the TS completion provider with `'` as a trigger character currently results in the completion provider being shown too often and in unexpected placed

**Proposal**
Allow triggerCharacters to use regular expressions. This regular expression would be run against the proceeding text on the line. In the above case, the completion item provider would use a regular expression like `/from\s+['"]$/` and be run against: `import _ from '`


</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33674</IssueID>
    <Title>Add scope to typescript &amp; javascript settings</Title>
    <Description>Followup from #33048.

There are still many properties in the Typescript extension without a scope property.</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33672</IssueID>
    <Title>Shortkeys - Add a "when clause" for "focus is in panel"</Title>
    <Description>Hi all, I'm using vscode (1.15.1) for a few days and I've a very good impression about it ! 
However, I'm writing a simple extension and playing with interactive js shell (debug console) and I missed a keyboard shortcut to jump between text editor and panel.
The solution given in [this StackOverflow thread](https://stackoverflow.com/questions/42796887/switch-focus-between-editor-and-integrated-terminal-in-visual-studio-code) is great for swapping between **integrated terminal** and code editor, but here I'm not using terminal, but debug console.

So I tried something very similar (using `ctrl+e` (but no matters)) and tried to add 2 rules like that :


    {
        "key": "ctrl+e",
        "command": "workbench.action.focusPanel",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    }


But this doesn't work: I can focus from the text edition to the panel, but I can't focus back. I figured out after some tests that when the focus is in panel, `editorTextFocus` is still true (in contrary to `terminalFocus`).

So, to find a solution to my problem, I need a *when clause* that let me know whether the focus is on panel or not. As far as I can see in vscode'code, I can't find any `RawContextKey` that looks like that.

Did I missed something ? (I hope I didn't opened an issue for nothing)
Thanks !</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33665</IssueID>
    <Title>Open Workspace opens file not workspace</Title>
    <Description>See screen cast. The workspace file has the old format in case it matters.
![cast](https://user-images.githubusercontent.com/1931590/29965695-f6c744a8-8f0e-11e7-87a7-ea93fa14a4f2.gif)
</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33653</IssueID>
    <Title>Opening an old .code-workspace file provides no help to the user</Title>
    <Description>1. I am a user who used vscode insiders for MR workspace as soon as it came out, so I got the .code-workspace file in the old format
2. After a month I am coming back to VSCode -&gt; I use the "open workspace" action to load my workspace from 1.
3. The file is outputed as simple text and no help is shown

At the very least we could detect if a user just opened a .code-workspace file and if we can not parse it we could provide a nice info message so the user is not puzzled as to why his old .code-workspace is not working any more</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33651</IssueID>
    <Title>Visual Studio Insiders opens the code-workspace files instead of the actual workspace defined by the file</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
Visual Studio doesn't actually open the `code-workspace` files as a workspace, but rather as a raw file.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.16.0-insider (commit 8b942faafb2d1bee6fd6a346853548d528c7eb5a)
- OS Version: Windows 10 x64 Creator Update

Steps to Reproduce:

1. Launch VS Code
2. Open Files &gt; Open workspace

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33648</IssueID>
    <Title>Feature Request: Cursor should automatically jump to next line when "Comment line" shortcut key is held</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

This is a Feature Request.

Currently, Holding the shortcut key to "Comment Line" does nothing. So, If I want to comment multiple consecutive lines, I have to first select all those lines/add cursors and then comment them. This behaviour is different than most IDEs and text editors and a teensy bit annoying. 

As holding down "Comment Line" shortcut(Ctrl + "/")  currently does nothing. My suggestion is to add a system so if the shortcut is held for more than 2-3 seconds(Configurable) the cursor will jump to next line and comment it and keep doing that until you've released the shortcut keys. 

This behaviour is similar to other IDEs and editors making it easier for people coming from other IDEs/editors to adapt vscode and also makes better use of shortcut. 

If this sounds like a reasonable request, I would absolutely love to work on it. 
</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33636</IssueID>
    <Title>After remove folder from sidebar, then open the folder again, I am unable to see the folder in the sidebar</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-svgviewer|css|1.4.2
angular2-snippets|dan|1.0.16
tslint|eg2|0.17.0
live-html-previewer|hdg|0.2.0
beautify|Hoo|1.1.1
svg|joc|0.0.9
Angular2|joh|2.4.3
vs-color-picker|lih|0.6.0
code-beautifier|mic|1.7.2
debugger-for-chrome|msj|3.2.0
view-in-browser|qin|0.0.5
vscode-icons|rob|7.12.0



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33589</IssueID>
    <Title>The limit of Selection</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
vsc-material-theme|Equ|1.0.2
Go|luk|0.6.63
vscode-icons|rob|7.12.0



---

Steps to Reproduce:

1. a big file (&gt;2000 lines)
2. select some words
3. when the selections are larger than 1000, only the first 1000 can be highlight while others stay unchanged.
4. the scroll bar are also consistent with the selection, cannot highlight more selections.
![selection](https://user-images.githubusercontent.com/10704251/29922256-6b47b0ac-8e87-11e7-98b4-01095ba23b39.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>31/08/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33552</IssueID>
    <Title>Terminal panel stays maximized when editor is split horizontally</Title>
    <Description>- VSCode Version: 1.15.1 Portable (also 1.15.0)
- OS Version: Windows 10

After being maximized, the terminal panel does not restore to the previous size when the editor is split horizontally, when the editors are stacked on top of each other.

Steps to Reproduce:
1. Open two editors, split vertically (stacked on top of each other).
2. Maximize panel with the button or the command.
3. Click on the restore button. Nothing happens.

Reproduces without extensions: Yes</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33544</IssueID>
    <Title>Task output disappearing from integrated-terminal</Title>
    <Description>- VSCode Version: 2.0.0
- OS Version: Linux

Steps to Reproduce:

1. Create a helloWorld.c file in its own directory.  Code is as follows.

```
# include &lt;stdio.h&gt;

int main(){
    printf("\n hello world \n");
    return 0;
}
```

2. In the same directory as the helloWorld.c create the task.json file by going to the top ribbon and selecting Tasks -&gt; Configure Tasks and pasting the code below.

```
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        { 
            "taskName": "Compile hello world",
            "type": "shell",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            },
            "command": "gcc",
            "args": [
                "helloWorld.c"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "taskName": "Run compiled file",
            "command": "./a.out",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "panel": "new",
                "reveal": "always",
                "focus": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        }
    ]
}
```

3. Save the tasks.json file and press Ctrl+Shift+B.
4. Select Compile hello world
5. press Ctrl+Shift+B
6. Select Run compiled file
7. Observe that _hello world_ is briefly displayed in the integrated terminal and then disappears

Extensions:
C/C++
Code Runner
Python
vscode-icons

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33377</IssueID>
    <Title>Console panel display unidentifiable Chinese code</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
live-html-previewer|hdg|0.2.0
beautify|Hoo|1.1.1
vs-color-picker|lih|0.6.0
easy-less|mrc|1.4.5
cpptools|ms-|0.12.3
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.2.0
JavaScriptSnippets|xab|1.4.1



---

Steps to Reproduce:

1.http://xingzhihen.com/images/feedback-img/2017-08-29_195110.png
2.http://xingzhihen.com/images/feedback-img/2017-08-29_195123.png

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33355</IssueID>
    <Title>Debug breakpoint not showing as resolved nor hit in multi root workspace</Title>
    <Description>Steps to Reproduce (macOS):

1. generate an extension and open it as folder and debug a little bit (add breakpoints)
2. generate another extension and drop this folder into the explorer to create a multi root workspace
3. add a breakpoint into the second extension (it shows up as unresolved for me)
4. start the extension and make sure the breakpoint code is executed
5. the breakpoint now turns into a resolved breakpoint but only the second invocation makes it stop there

This seems multi-root workspace related?</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33311</IssueID>
    <Title>Automatically enable KeyRepeat on MacOS</Title>
    <Description>I am crossposting this issue from https://github.com/VSCodeVim/Vim/issues/1983 at the request of @jpoon.

&gt; I don't believe our extension will have the authority to change macos user defaults. Can you cross-post this issue to VSCode?

Following on from https://github.com/VSCodeVim/Vim/issues/1975.

The aim of this issue is to either enable key repeat by default on MacOS, or to more proactively notify MacOS users that they can set this option. This is an issue in the VSCode vim plugin as by default users cannot hold h/j/k/l to navigate.

As I said in https://github.com/VSCodeVim/Vim/issues/1975, even though this is well documented in the VSCode readme, not all users think to check the documentation, and instead assume this is a bug.

From the [README](https://github.com/VSCodeVim/Vim#mac-setup):

&gt; If key repeating isn't working for you, execute this in your Terminal. 
&gt;
&gt; defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false         # For VS Code
&gt; defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false # For VS Code Insider
&gt;
&gt; We also recommend going into System Preferences -&gt; Keyboard and cranking up the Key Repeat and Delay Until Repeat settings to improve your speed.

There are a few questions here:

 * Does this impact all MacOS users?
 * Can we programatically set this option on MacOS?
 * Would there be any downside to doing so?
 * If not, can we more proactively notify impacted users that they can easily fix this issue.

If anyone can answer any of those questions, please comment in here.

</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33310</IssueID>
    <Title>"Output" and "Debug Console" don't render UTF-8 symbols</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1 (x64)
- OS Version: Windows 10, 64-bit, ru-RU
- .NET Core Version: 2.0 (x64)

Steps to Reproduce:

1. Launch VSCode, open `dotnet new console` .NET Core project
2. F5
3. (see images below)

![image](https://user-images.githubusercontent.com/7114815/29795320-64d18aac-8c54-11e7-8f93-867ac8dc18b4.png)
![image](https://user-images.githubusercontent.com/7114815/29795361-9640c440-8c54-11e7-8fc3-ceae8aa09414.png)


Reproduces without extensions: Not applicable ([C# extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp) required)</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33135</IssueID>
    <Title>Display OutputEvent's source and line information in debug console</Title>
    <Description>Chrome dev tools:

![2017-08-25_10-56-31](https://user-images.githubusercontent.com/1898161/29707021-1a5fdf64-8984-11e7-945d-2df598b6e00b.png)


related DAP feature: https://github.com/Microsoft/vscode-debugadapter-node/issues/94</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33030</IssueID>
    <Title>Prompt to install extension from external link re-appears after reloading editor window</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.9.4
vscode-es-beautifier|dai|1.0.0
gitlens|eam|4.4.0
tslint|eg2|0.17.0
vscode-angular2-emmet|jak|2.0.3
vscode-text-pastry|jkj|1.1.1
debugger-for-chrome|msj|3.1.8
autoimport|ste|1.2.2



---

Steps to Reproduce:

1. Open VS Code
2. Go to marketplace.visualstudio.com, navigate to an extension, and click "Install". VS Code should come into focus with "Would you like to install XX extension?" prompt showing
3. Install the extension
4. Click the "Reload" button to reload the VS Code window and enable the extension.
5. When VS Code re-loads the "Would you like to install...." prompt re-appears. Expected behavior is that it would not re-appear.

Additionally, when you go through this process for multiple extensions, when VS Code reloads the prompts stack, showing multiple outdated prompts.

![image](https://user-images.githubusercontent.com/813192/29617425-d4769080-87e2-11e7-8152-fefe501e42a1.png)
</Description>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32903</IssueID>
    <Title>Suggestion configure encoding by file type</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Win10

Steps to Reproduce:

1.  Bug encoding file csharp and javascript, I always have to adjust manually.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;

I have a great difficulty when I need to work with .js and .cs files, Ideally, separate the encoding settings.

"[csharp]": {
  "files.encoding": "windows1252"
},
"[javascript]": {
  "files.encoding": "utf8"    
}
</Description>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32829</IssueID>
    <Title>Code helper spawning "find processes" and making the OS unresponsive</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1 (1.15.1)
- OS Version: Sierra 10.12.3

Steps to Reproduce:

Im working with NativeScript and while trying to run the project vscode starts to spawn "find" processes 

![image](https://user-images.githubusercontent.com/3790782/29488178-35622792-850e-11e7-996f-d254fd81b85b.png)


![image](https://user-images.githubusercontent.com/3790782/29488169-18fa4d5a-850e-11e7-84ee-284fd8b2540f.png)




1. Launch vscode through terminal
2. Run `tns run ios`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>19/08/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32423</IssueID>
    <Title>php: Emmet abbreviations with class operator dont show up in suggestions unless php.suggest.basic is disabled</Title>
    <Description>In a php file, below abbreviations that have the class operator dont show up in suggestions unless `php.suggest.basic` is disabled

- .hello
- ul.hello


</Description>
    <CreatedDate>13/08/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32339</IssueID>
    <Title>Adding accented character with keyboard popup should not keep the original un-accented character (macOS)</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
output-colorizer|IBM|0.1.2
path-intellisense|chr|1.4.2
FreeMarker|dco|0.0.9
rest-client|hum|0.15.1
debugger-for-chrome|msj|3.1.7
vscode-icons|rob|7.12.0
partial-diff|ryu|0.3.1
guides|spy|0.8.4



---

Steps to Reproduce:

1. type
1. holder letter down on keyboard
1. select accented character

Both characters will remain.

![screen shot 2017-08-11 at 1 48 18 pm](https://user-images.githubusercontent.com/1994838/29225490-7e130768-7e9c-11e7-8f66-506d824efdcc.png)
![screen shot 2017-08-11 at 1 48 39 pm](https://user-images.githubusercontent.com/1994838/29225494-83fe7b12-7e9c-11e7-9428-81d7983bdc61.png)
![screen shot 2017-08-11 at 1 48 48 pm](https://user-images.githubusercontent.com/1994838/29225498-87f2b4c2-7e9c-11e7-9392-132325a70e9e.png)
</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32037</IssueID>
    <Title>VS Code no longer respects remapped escape key using xmodmap</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:26:08.116Z)
- OS Version: Linux x64 4.9.6-gentoo-r1
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
head-file-guard|bjr|0.0.2
python|don|0.7.0
vscode-rust|kal|0.4.2
cpptools|ms-|0.12.2
final-newline|sam|0.3.2
change-case|wma|1.0.0
---

I use xmodmap to swap the meaning of the Esc and Caps Lock keys. In other words, I press the physical Esc key to enable caps lock (very rare) and the physical Caps Lock for escape (very common). This used to work fine in VS Code 1.8.1 but misbehaves in 1.14.2. VS Code is the only software I have used that does this.

Swapping Esc and Caps Lock is common among Vim users, who frequently use the Esc key. See e.g. http://vim.wikia.com/wiki/Map_caps_lock_to_escape_in_XWindows.

Steps to Reproduce:

1. Make a file swap_escape with the following content:
```
remove Lock = Caps_Lock  
keysym Escape = Caps_Lock
keysym Caps_Lock = Escape
add Lock = Caps_Lock
```

2. Use xmodmap to remap the keys
```
xmodmap swap_escape
```

3. Caps Lock should now perform the function typically assigned to Esc, and vice versa.

4. Select some text in VS Code. Press the Caps Lock key. Expected: text is unselected (because the key means escape to the OS). Observed: nothing happens.

5. Select some text in VS Code. Press the Esc key. Expected: selection remains, caps lock is enabled in the OS. Observed: Text is unselected _and_ caps lock is enabled in the OS.


Reproduces without extensions: Yes</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31775</IssueID>
    <Title>Being able to set a specific encoding to an file extension</Title>
    <Description> VSCode Version: Code - Insiders 1.15.0-insider (0e7546c978fa1b62dbf36f07a77d1b9a4241d6f7, 2017-07-28T11:23:06.089Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
regex|chr|0.1.0
gitignore|cod|0.5.0
vscode-dash|dee|1.7.0
css-minify|Die|0.0.4
vscode-npm-source|dku|1.0.0
python|don|0.6.9
gitlens|eam|4.3.3
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.0
LogFileHighlighter|emi|1.1.1
vscode-reveal|evi|0.0.9
php-debug|fel|1.11.1
php-intellisense|fel|1.5.0
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
gc-excelviewer|Gra|1.1.15
composer|ika|0.5.0
smarty|imp|0.2.0
code-guid|jam|1.0.1
StretchTimer|jpa|0.0.1
json-to-ts|Mar|1.5.2
Runner|mat|0.1.14
vscode-apache|mrm|1.1.1
cpptools|ms-|0.12.1
github-issues-prs|ms-|0.3.1
php-docblocker|nei|1.2.0
emoji|Per|0.0.3
vscode-versionlens|pfl|0.19.1
datetime|rid|1.0.5
vscode-icons|rob|7.12.0
sharecode|Rol|0.4.1
todotasks|san|0.5.0
code-settings-sync|Sha|2.8.2
vscode-spotify|shy|2.0.0
packagelinker|sin|0.0.3
code-spell-checker|str|1.3.2
pdf|tom|0.2.0
lorem-ipsum|Tyr|1.0.0
vscode-arduino|vsc|0.2.4
vscode-todo-highlight|way|0.5.8
highlight-trailing-white-spaces|yba|0.0.2

(2 theme extensions excluded)


---

When I'm creating php files, I need to set the file encoding to `UTF-8 with BOM` to obey to the rules and make my code working properly, while `vscode` is using `UTF-8` by default, and I need this encoding for any other file, except for php.</Description>
    <CreatedDate>31/07/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31547</IssueID>
    <Title>Finish editing of CLI specified file should end --wait</Title>
    <Description>testing #30717:

I would expect that the "--wait" ends when the file specified as a CLI argument is closed in the editor. The current model of when "--wait" ends appears to me less intuitive.

In the following cases "--wait" did not end (but I was expecting that it would end):
- launch "code --wait foo.txt" and open a second file "abc.txt" in the same window. Close the editor with "foo.txt". Now I would expect the "--wait" to end but VS Code to stay open.
- launch "code --wait foo.txt" and load a folder in the same window. Now foo.txt is definitively not open any more but  "--wait" does not return.




</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30943</IssueID>
    <Title> Cannot read property 'uri' of null</Title>
    <Description>Issue Id: &lt;b&gt;a1c1500d-69bb-ed7d-65d5-f041025e32df&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.14.1&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'uri' of null&lt;br /&gt;[/vs/platform/extensionManagement/node/extensionGalleryService.ts#L515:57 (uri)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/platform/extensionManagement/node/extensionGalleryService.ts#L515:57 (uri))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/platform/extensionManagement/node/extensionGalleryService.ts#L511:32 (then)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/platform/extensionManagement/node/extensionGalleryService.ts#L511:32 (then))&lt;br /&gt;[/vs/platform/extensionManagement/node/extensionGalleryService.ts#L408:14 (getAsset)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/platform/extensionManagement/node/extensionGalleryService.ts#L408:14 (getAsset))&lt;br /&gt;[/vs/workbench/parts/extensions/node/extensionsWorkbenchService.ts#L175:30 (getManifest)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/extensions/node/extensionsWorkbenchService.ts#L175:30 (getManifest))&lt;br /&gt;[/vs/workbench/parts/extensions/browser/extensionEditor.ts#L250:53 (getManifest)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/extensions/browser/extensionEditor.ts#L250:53 (getManifest))&lt;br /&gt;[/vs/base/common/cache.ts#L20:23 (task)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/base/common/cache.ts#L20:23 (task))&lt;br /&gt;[/vs/workbench/parts/extensions/browser/extensionEditor.ts#L372:56 (get)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/extensions/browser/extensionEditor.ts#L372:56 (get))&lt;br /&gt;[/vs/workbench/parts/extensions/browser/extensionEditor.ts#L747:16 (loadingTask)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/extensions/browser/extensionEditor.ts#L747:16 (loadingTask))&lt;br /&gt;[/vs/workbench/parts/extensions/browser/extensionEditor.ts#L372:14 (loadContents)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/extensions/browser/extensionEditor.ts#L372:14 (loadContents))&lt;br /&gt;</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>20/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30894</IssueID>
    <Title>failed to open new window after sleep and wakeup on mac</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:08:57.197Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
quokka-vscode|Wal|1.0.40
vscode-clang|mit|0.2.2
atom-keybindings|ms-|2.9.1
cpptools|ms-|0.12.0
sublime-keybindings|ms-|2.9.1
advanced-new-file|pat|0.5.0
java|red|0.7.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Leave a vscode window open for a long time, 
2. put mac sleep and wake it up,
3. open a dir with `code dir_path`, the new opened window is blank, and there's some error in developer tools console
```
path.js:1142 Uncaught Error: ENOENT: no such file or directory, uv_cwd
    at Object.resolve (path.js:1142:25)
    at Function.Module._resolveLookupPaths (module.js:391:17)
    at Function.Module._resolveFilename (module.js:461:31)
    at Function.Module._load (module.js:418:25)
    at Module.require (module.js:498:17)
    at require (internal/module.js:20:19)
    at Object.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/electron.asar/renderer/init.js:13:1)
    at Object.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/electron.asar/renderer/init.js:151:3)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
index.js:17Uncaught ReferenceError: require is not defined
    at index.js:17
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30557</IssueID>
    <Title>Support "window.titleBarStyle": "custom-inset" setting</Title>
    <Description>Electron supports another titlebar style called `hiddenInset` ([more about it)](https://github.com/electron/electron/blob/master/docs/api/frameless-window.md#hiddeninset).

We currently use the `hidden` style when setting `"window.titleBarStyle": "custom"`, therefor I think we should map `"window.titleBarStyle": "custom-inset"` to `hiddenInset`.

The only use case I can think for this is that it enables to hack the interface into those mockups seen in #12377 (notice the semaphore perfectly lined up with the tabs) without needing to patch vsc itself, just with some CSS using [this extension](https://marketplace.visualstudio.com/items?itemName=be5invis.vscode-custom-css).

It should be trivial enough to implement, if you want I can help with that.</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>10/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30224</IssueID>
    <Title>Search globs should be case insensitive</Title>
    <Description>Update ripgrep and use --iglob

https://github.com/BurntSushi/ripgrep/commit/4047d9db710026b7f003243032f52d7c99c41ded</Description>
    <CreatedDate>07/07/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29932</IssueID>
    <Title>Feature request: Show file paths in inactive panes</Title>
    <Description>It'd be great to have a way to show file paths in inactive editor panes. I have tabs turned off, so a lot of empty screen space is wasted in inactive tabs that aren't showing paths.

In the below screenshot the active pane showing the file's path is the on the right. My proposal is to introduce a setting to enable showing file paths in all panes regardless of focus.

![image](https://user-images.githubusercontent.com/1255926/27731666-9618e870-5dc0-11e7-8926-91c1fe363192.png)
</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29752</IssueID>
    <Title>'Screen Reader detected' notification permanently on bottom bar</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|fresh-material|2ndshift|2.2.2|
|Bookmarks|alefragnani|0.15.2|
|project-manager|alefragnani|0.18.1|
|htmltagwrap|bradgashler|0.0.3|
|gotemplate|casualjim|0.1.1|
|bracket-pair-colorizer|CoenraadS|0.10.7|
|mustache|dawhite|1.0.0|
|gitlens|eamodio|4.2.0|
|vscode-html-css|ecmel|0.1.7|
|json-tools|eriklynd|1.0.2|
|beautify|HookyQR|1.1.1|
|automagic-code|jairzjunior|0.0.2|
|theme-material-dark-soda|jbw91|1.2.0|
|theme-atomic-dark|kimkwanka|0.2.0|
|git-indicators|lamartire|1.2.1|
|vs-color-picker|lihui|0.6.0|
|start-git-bash|McCarter|1.2.1|
|code-beautifier|michelemelluso|1.7.2|
|prettify-json|mohsen1|0.0.3|
|vscode-scss|mrmlnc|0.6.2|
|atom-keybindings|ms-vscode|2.9.0|
|debugger-for-chrome|msjsdiag|3.1.6|
|subtle-brackets|rafamel|2.0.0|
|vscode-icons|robertohuertasm|7.10.1|
|vscode-theme-superonedark|seansassenrath|0.0.15|
|code-settings-sync|Shan|2.8.1|
|vscode-todo-highlight|wayou|0.5.5|
|vscode-material-syntax-dark|woodywoodsta|0.1.1|
|Material-theme|zhuangtongfa|2.8.9|;


---

Steps to Reproduce:

1. Launched NVDA on Windows (10) yesterday afternoon
2. Ever since that moment, the screen reader notification is permanently on the bottom bar, even after quitting the screen reader and restarting my PC several times
3. In addition, my issues with lines not wrapping and the mini-map disappearing (which I only just noticed) seem to be related to this. 

![image](https://user-images.githubusercontent.com/14346320/27638012-a4f5b6ce-5c09-11e7-95ea-a503a214d647.png)


:(</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29209</IssueID>
    <Title>Focus next search result (kb: F4) position in the result set is reset whenever the selected contents of the active editor are modified</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Open Find in Files and do a search that will bring up multiple results, for example, search for 'document'
2. Press F4 (focus next search result) a couple of times
3. Suppose that you are focused on the 4th file from the result, replace the selection 'document' with 'activeDocument' (it also matches the original search term) or with 'window' (it doesn't match the original search term); both will trigger this issue
4. Press F4 - the focus is now in the first file of the result set

I suspect this is somehow the expected behavior, considering that the files in the result set are being watched and the search is rerun automatically, but if you change some other text in the active editor that is not selected by the 'focus next search result', the focus will jump to the 5th result in the example from the steps above.

If this is the default behavior, would it be possible to add a setting for this so that whenever I press F4, the focus will always jump forward?
</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>06/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28976</IssueID>
    <Title>editor appears off-screen after rearranging desktops in "display settings"</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. drag the visual studio code editor to the left desktop on a two-monitor system with the leftmost desktop as "desktop 2" as labeled under "settings"-&gt;"display settings"
2. close visual studio code
2. go to "settings"-&gt;"display settings" and click-drag "desktop 2" to be on the right of desktop 1
3. open visual studio code. it appears off-screen where desktop 2 used to be. to get it on-screen, window-tab + right-click editor + snap-right works, but is obviously not ideal.</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21627</IssueID>
    <Title>PHP with HTML problem</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: latest
- OS Version: win 10 latest

The problem:

Why when i use php and use html outside php codes there is not autocomplete for html??
</Description>
    <CreatedDate>01/03/2017</CreatedDate>
    <ClosedDate>07/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20263</IssueID>
    <Title>Add ability to exclude files using files.exclude ignoring case</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10 Insider
- OS Version: Windows 7

Steps to Reproduce:

1. Create a folder, for example: someCamelCaseTestFolder;
2. Add files.exlude rule: "somecamelcasetestfolder": true;

Actual result: Folder is still visible in the VS Code Explorer.
Expected result: Folder should be hidden, ignoring the case (like in .gitignore for example).

As far as in Windows there is no ability to create two different folders "AAA" and "aaa" in the same parent folder I don't see any reason to make exclude pattern case sensitive.

![files exclude](https://cloud.githubusercontent.com/assets/5469718/22776382/7d295d50-eec0-11e6-93a2-39e08798d634.png)
</Description>
    <CreatedDate>09/02/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19890</IssueID>
    <Title>Langauge Specific file encoding setting</Title>
    <Description>- VSCode Version: 1.9 stable release
- OS Version: Windows 10

Ability to set default file encoding on a per-language basis.

I have files for older programming languages that I need to open with Codepage 852 or 437 but I can't set the default file encoding on a per language basis.  These files are not in self-contained repositories so setting a workspace-wide setting doesn't work, and for the most part everything else is UTF. I'd like to be able to add a setting in the language configuration to open a file with specific encoding by default and override the workspace   ##default.
</Description>
    <CreatedDate>04/02/2017</CreatedDate>
    <ClosedDate>11/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17492</IssueID>
    <Title>File search - navigate history with arrow keys, and fields with tabs?</Title>
    <Description>Sublime gives us the ability to cycle through the previous search queries using the arrow keys, the same way as when using a terminal.

Would be cool to have this features also in VSC.</Description>
    <CreatedDate>18/12/2016</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11973</IssueID>
    <Title>Keyboard shortcut editor.action.selectHighlights selects only first 999 matches</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10

Steps to Reproduce:
1. Create a file with more than 999 examples of a text string (e.g. 2,000 lines containing "This is a line").
2. Highlight a word or phrase, and to highlight all matches, press ctrl+shift+l (or whatever editor.action.selectHighlights has been mapped to).

Only the first 999 matches will be selected. This is a problem when working with large files.
</Description>
    <CreatedDate>13/09/2016</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11532</IssueID>
    <Title>Word selection is weird around non-word characters</Title>
    <Description>![word-selection](https://cloud.githubusercontent.com/assets/5047891/18242862/a857f146-7358-11e6-88c7-7a6871d4b068.gif)
</Description>
    <CreatedDate>05/09/2016</CreatedDate>
    <ClosedDate>27/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10057</IssueID>
    <Title>Window gets off screen when switching monitors</Title>
    <Description>- VSCode Version: 1.3.1 (But occurred in earlier versions)
- OS Version: Windows 10.0.10586

Steps to Reproduce:
1. Start with the laptop like Surface 3 Pro, and connect a large size monitor. Keep the laptop screen as the Main Screen
2. Launch VS Code. Use the VS Code on the second monitor
3. Use it for a bit, then close it cleanly by exiting the app.
4. Make the attached monitor as "Make this my main display" from the Display settings (right click on the desktop).
5. Launch VS Code again.

You will sometimes see that the new window VS code generates is completely off screen.

Expected Behavior:

Make sure that the new  window will not go off-screen, but at least the top of the window to be visible on the visible area on either of the monitors so that I can click it and move it to the place I would like. 

Workaround:

Make the laptop screen the main screen, then re-launch the VS Code, or temporarily disconnect the other monitor.
</Description>
    <CreatedDate>03/08/2016</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9093</IssueID>
    <Title>Debug toolbar custom positioning</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10

Happy that I can now move the debug toolbar in the the 1.3 update! However, I think it is better suited for the sidebar, as it is often/constantly in the way.

![image](https://cloud.githubusercontent.com/assets/4859660/16744322/919c5236-477e-11e6-8e6e-876e0234dee9.png)

Alternately, it could be attached to the debug console.

![image](https://cloud.githubusercontent.com/assets/4859660/16744360/c09c6fda-477e-11e6-9fce-e6f766b0749b.png)
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>20/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7929</IssueID>
    <Title>Support `-r` flag when combined with `-w`</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: OS X 10.11.5

Steps to Reproduce:
1. Have an existing VSCode window open
2. Run `code -w -r file.js`
3. Only the `-w` flag gets honored, but not `-r`. (So file opens in a separate window)

In that circumstance `-w` should probably wait for the _editor_ to be closed (and not the window, since that's reused)
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7201</IssueID>
    <Title>"Select All Occurrences" is not selecting all of matches in large files (stops at 1000)</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: 10.11.4

Steps to Reproduce:
1. Open a 3MB file with some repeating text at each line (`The quick brown fox jumps over the lazy dog`
2. Highlight a word such as `quick`
3. Do a multi-cursor select (CMD+SHIFT+L)
4. Edit `quick` to say `slow`
5. Notice that not all lines were changed :( (stops at line 999 of a 35,397 line file)
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6912</IssueID>
    <Title>Mac OS dock menu does not clear and can contain stale entries</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: 10.11.5 (15F34)

Steps to Reproduce:
1.  right click vscode icon in the dock

On version 1.1.0 i was able to see the "open recent" values and open a new vscode from it (it was equal to click on File=&gt;open recent=&gt; click a link)
Not anymore :(
Could someone revert that or explain why it s not here anymore?
Thanks
</Description>
    <CreatedDate>26/05/2016</CreatedDate>
    <ClosedDate>28/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6746</IssueID>
    <Title>Feature: add jump to file and line number to debug console output</Title>
    <Description>In Chrome (&amp; Edge) console, when something is printed, the file + line number where it occured is printed, and clicking on it opens up the corresponding file at the correct position.

![consolechromefile](https://cloud.githubusercontent.com/assets/199648/15499063/842fe33a-21a2-11e6-91b7-6165b3b4f95e.png)

In VSCode you get no such information: the log is printed without any information.
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>29/09/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33539</IssueID>
    <Title>Latest insiders crashing while typing in WSL bash terminal</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (34cc9f2209be766d5be30a6ecdbb41f5e81fd56b, 2017-08-30T05:23:44.557Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
regex|chr|0.1.0
bracket-pair-colorizer|Coe|0.10.8
vscode-markdownlint|Dav|0.10.0
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
python|don|0.7.0
EditorConfig|Edi|0.9.4
tslint|eg2|0.17.0
vscode-auto-open-markdown-preview|hnw|0.0.4
beautify|Hoo|1.1.1
docthis|joe|0.4.8
Angular2|joh|2.4.3
vscode-codemetrics|kis|1.9.3
typescript-hero|rbb|1.4.0
autoimport|ste|1.2.2
language-stylus|sys|1.7.3
vim|vsc|0.9.0



---

Steps to Reproduce:
1. Be typing in the VS Code terminal connected to WSL bash
2. Get the crash at the bottom

This is an intermittent bug, and I haven't figured out exactly the trigger yet.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: IDK

![image](https://user-images.githubusercontent.com/2086176/29884882-0eb5d7c6-8d72-11e7-9b20-0e74fbc1d562.png)
</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33517</IssueID>
    <Title>Alt menu shortcuts do not work when focus is in terminal</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-mocha|Com|0.1.1
vscode-mocha-test-runner|cst|0.2.2
githistory|don|0.2.3
python|don|0.7.0
tslint|eg2|0.17.0
phpunit|ema|1.1.0
vscode-great-icons|emm|2.1.15
php-debug|fel|1.11.1
vscode-npm|fkn|3.3.0
auto-close-tag|for|0.4.3
auto-complete-tag|for|0.0.2
auto-rename-tag|for|0.0.14
phpcs|ika|0.7.0
vsclassic-icon-theme|jez|1.0.3
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.2.0
Chef|Pen|0.6.3
material-icon-theme|PKi|2.2.0



---

Steps to Reproduce:

1. Open integrated terminal
2. Press Ctrl+F
Expected: File menu should drop down
Actual: Shortcut letters are underlined in menu but menu doesn't drop down

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33483</IssueID>
    <Title>[Feature request] Extend the default search functionality</Title>
    <Description>Currently for me, the search is one of the most functionality which can / should be extended.
For example, please look how the search look in another editors, like:

PHPStorm (ideal)
![phpstorm](http://i.imgur.com/29yg2yt.png)

SublimeText
![sublimetext](http://i.imgur.com/ZGTEFaY.png)

I mean the preview file / search result should be bigger than display only 1 line (without context of rest code)
</Description>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33468</IssueID>
    <Title>Make Popups less annoying</Title>
    <Description>&lt;img width="903" alt="bildschirmfoto 2017-08-30 um 01 33 44" src="https://user-images.githubusercontent.com/19249828/29848817-4a2f8b8e-8d23-11e7-80c1-656a5d558d37.png"&gt;

Why is it so big and I have to click close so it disapears? Often this popups are used in cases where a small info text in the button bar would fit better.
</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33430</IssueID>
    <Title>ConfigurationTarget constants in extension host do not match values in core</Title>
    <Description>Those in the extension host start at 1, those in the core start at 0.</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33424</IssueID>
    <Title>Markdown preview link lost when new file is saved</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: macOS Sierra 10.12.6

Steps to Reproduce:

1. Create a new, unsaved editor pane
2. Type some Markdown
3. Change language mode to Markdown
4. Click preview button to open the preview pane
5. Click back to the edit pane and save it as a file
6. Observe that the Markdown preview pane continues to show "Preview 'Untitled-1'" and will not reflect further edits to the file.

May be related to #12033

Screenshot:
![image](https://user-images.githubusercontent.com/8230981/29832384-e732df30-8c9c-11e7-9e69-bb031dc7fe57.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: **Yes**</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33423</IssueID>
    <Title>Mime Extension Install: Reload Window Re-installs Extension</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
---

Steps to Reproduce:

1. Open VS Code via a web link to install an extension
2. You are prompted to install
3. Extension is installed
4. Reload the window to activate
5. You will be prompted to install the same extension again
6. Assuming you opened VS Code for the first time this way every window reload will prompt for install until you close and restart VS Code

Expected - once installed you are not prompted to install again.</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33421</IssueID>
    <Title>Mime Extension Install: Prompts event when already installed</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
---

Steps to Reproduce:

1. Click on a web link to install an already installed extension
2. You will be prompted to install the extension again

Expected - we check if the extension is already installed and display the extension details page vs the 'install extension' notification.</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33411</IssueID>
    <Title>Ability to search in open files only</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (d0d00e882437092f521d2d7893cc56ee296d278f, 2017-08-29T07:05:40.998Z)
- OS Version: Windows_NT x64 10.0.15063

It would be quite helpful to (optionally) limit the search to the open files only, even when a project/folder is open.

For example, I am working on some feature, adding TODOs here and there, and all files that I edited are naturally open. I'd like to search for all TODOs, but not in the entire project (there are thousands of TODOs in the big project), I'd like to limit the searches only to the currently opened files.

Currently, the UI in the Search tab provides a couple of buttons in "files to ignore" field ("Use Ignore Files" and "Use exclude settings").

I'd like to see a button in the "files to include" field, with similar styles as the two buttons above and named "Use Opened Files" or something like that.

Naturally, both ways should be possible, searching the entire project and searching only in the open files.</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33409</IssueID>
    <Title>Extension Recommendation: close event not fired</Title>
    <Description>Testing: #33298 

- Section Testing Telemetry for the Recommendation Pop up
- item 5: close the pop up

I didn't receive any event.  Verified by setting a break point in TelemetryService#publicLog.</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33408</IssueID>
    <Title>Zen Mode is hard to use on modern wide screen monitors</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (d0d00e882437092f521d2d7893cc56ee296d278f, 2017-08-29T07:05:40.998Z)
- OS Version: Windows_NT x64 10.0.15063

Basically, I can't use the Zen Mode on my wide screen 32-inch monitor, since all the code is on the very left side of the screen, while I (and I assume any other sane person working on computer) am usually positioned at the center of the screen, not on the far left.

It would be great if Zen Mode could support some kind of "centered" view, wen the text/code is centered in the middle, not on the very left.

</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33404</IssueID>
    <Title>Code should validate relative path in workspace file and behave more gracefully</Title>
    <Description>Testing: #33278 

- create a workspace file with only relative paths
- copy the file using OS means (file explorer) where the folder don't make any sense
- open the file

Observe:

- you see the folder structure also not existing on disk
- clicking on a folder shows an error message:

&lt;img width="556" alt="capture" src="https://user-images.githubusercontent.com/1931590/29823761-e3d27aa2-8ccf-11e7-9640-f791c0595015.png"&gt;

I would have expected that the folders are rendered gray / disabled and that clicking on them shows me a better error message
</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33398</IssueID>
    <Title>new VS Code icon doesn't look right in Windows Open dialog</Title>
    <Description>ref #33272:

When double clicking on workspace file on Windows I get this dialog:

![2017-08-29_12-58-22](https://user-images.githubusercontent.com/1898161/29822432-b84cb874-8ccb-11e7-889e-46745c6e5a07.png)

The icon doesn't look right in this context.
</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33390</IssueID>
    <Title>Do not show invalid or not existing folders </Title>
    <Description>Testing #33278

- Open a multi root workspace with relative URIs
```
"folders": [
		{
			"path": "gotypes"
		},
		{
			"path": "hello"
		},
		{
			"path": "outyet"
		},
		{
			"path": "stringutil"
		}
	]
```
- Change the first URI to not existing location
```
"path": "/gotypes"
```
-  Open the first folder in the explorer

An error is shown 

![image](https://user-images.githubusercontent.com/10746682/29821624-e4f3188a-8cc8-11e7-8c65-5d094abf20c8.png)

</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33386</IssueID>
    <Title>Git viewlet not reacting on creation / deletion of git folder</Title>
    <Description>Refs: #33267

1. Have two folders in your MR workspace
2. First folder should have a git folder, second not
3. Outside of vscode initialize a git repository in the second folder
4. VSCode is not picking this up. Deleting the .git folder is also not being picked up</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33375</IssueID>
    <Title>EH Debugging: breakpoints not hit in JavaScript</Title>
    <Description>testing #33305 on Windows:

- create **JavaScript** hello world extension
- set breakpoints in lines 3, 11, 16, 20, 25
- press "F5" and wait until EH windows appears and is ready
- run "Hello" action

Observe: 
sometimes no breakpoint is hit, or only breakpoint on line 20 is hit.
I was never able to break on any other breakpoint.
</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33352</IssueID>
    <Title>I want to develop a form for submitting information about the current page。Is there any solution？</Title>
    <Description>&lt;!--? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33283</IssueID>
    <Title>Can no longer press escape in terminal (or ctrl-f)</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (d30825f323a7f77e17d25b212fef6440e73fdc14, 2017-08-28T05:16:41.243Z)
- OS Version: Linux x64 4.10.0-32-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.2.11



---

Steps to Reproduce:

1. Open vscode and open the terminal
1. Open file or create new file with `vi`
1. Hit  `i` to enter insert mode, hit `ESC` to attempt to exit insert mode

What happens:
* No effect, cursor stays in insert mode

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33271</IssueID>
    <Title>Doesn't open Onedrive folders under W10 Preview Build 16273</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.16273
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
armsnippet|art|0.7.0
arm|dan|0.1.2
python|don|0.7.0
xml|Dot|1.9.2
json-tools|eri|1.0.2
MagicPython|mag|1.0.12
prettify-json|moh|0.0.3
csharp|ms-|1.12.1
mono-debug|ms-|0.15.7
azurerm-vscode-tools|msa|0.3.6
java|red|0.8.0
python|tht|0.2.3



---

Steps to Reproduce:

1. Open VS Code
2. Navigate to a folder (in OneDrive) and open it
3. You get "Path does not exist" for all folders

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33269</IssueID>
    <Title>Emmet --&gt; w100p doesn't appear in the snippets list</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: win7x64

**w100p** and **h100p** (and everything with "p" at the end) don't want to appear in the snippets list.
So, we cannot use "Enter" to expand it.
We can only force it to expand, using Tab.
Not good.

![w100p](https://user-images.githubusercontent.com/24613274/29780550-e4b6c5f6-8c1e-11e7-9daf-d43a0125af8e.gif)
</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33260</IssueID>
    <Title>add setting import and export feature</Title>
    <Description>hello:
     Can vsCode add a feature than let me export vsCode Settings and extensions, that when I use another computer , I can import settings from original export.
     Or can vsCode support account login, save settings and extensions in account . When I use another computer , I can login my account , sync setting from clound.
thanks.
</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33242</IssueID>
    <Title>Error: ENOENT: no such file or directory, open windowsShellHelper.js</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: d30825f323a7f77e17d25b212fef6440e73fdc14
- OS Version: windows 10 64x

```
Uncaught (in promise) Object
detail: Error: ENOENT: no such file or directory, open 'f:\Program Files\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\terminal\electron-browser\windowsShellHelper.js'
code: "ENOENT"
errno: -4058
path: "f:\Program Files\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\terminal\electron-browser\windowsShellHelper.js"
syscall: "open"
message: "ENOENT: no such file or directory, open 'f:\Program Files\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\terminal\electron-browser\windowsShellHelper.js'"
stack: "
Error: ENOENT: no such file or directory, open 'f:\Program Files\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\terminal\electron-browser\windowsShellHelper.js'"
errorCode: "load"
moduleId: "vs/workbench/parts/terminal/electron-browser/windowsShellHelper"
neededBy: Array(1)
0: "===anonymous8==="
```

![image](https://user-images.githubusercontent.com/461084/29765335-2b3f1794-8bb1-11e7-8c7a-e5bdc9a4063a.png)


Steps to Reproduce:

1. Updated VSCode
2. Started the editor

Reproduces without extensions: Yes</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33227</IssueID>
    <Title>Code blocks are collapsing incorrectly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: latest
- OS Version: Win 10

Wrong:
![1](https://user-images.githubusercontent.com/6645911/29755379-8f9d9a90-8bb0-11e7-9e4b-dc647cb84a73.PNG)

Correctly:
![2](https://user-images.githubusercontent.com/6645911/29755371-58fe561e-8bb0-11e7-982e-8757497cb6c6.PNG)

How to fix?</Description>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33211</IssueID>
    <Title>code --workspace option</Title>
    <Description>It's currently possible to execute something like `code ~/path1 ~/path2` and two different windows will be opened.

With the advent of multi-root I find it appropriate to have a `--workspace` option that will cause those paths to be opened in a single window.

This option would also be useful for extensions:
- [Projects+](https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-projects-plus): it might be interesting to have the option to open all the projects under a group in a new workspace, without messing around with `Add Folder to Workspace...` commands and `.code-workspace` files.</Description>
    <CreatedDate>27/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33194</IssueID>
    <Title>feature-request: Sync my extensions between to systems (Mac &lt;--&gt; Windows)</Title>
    <Description>Hi,

I am using Mac and Windows at Work/Home. I have VS code in both. 
If we have a feature to sync all extensions between both systems. That will be very good. 

Something like Visual Studio theme sync. 

And give the option to install button in the Web site to push extensions to all systems, the user logged in. (Like Android/WP store)

Thank you,
Naga Harish.</Description>
    <CreatedDate>26/08/2017</CreatedDate>
    <ClosedDate>27/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33193</IssueID>
    <Title>"Deleted from disk" showing when file is restored</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
html-snippets|abu|0.1.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
javadebugger|don|0.1.3
python|don|0.7.0
code-runner|for|0.7.1
vscode-javac|geo|0.0.46
Go|luk|0.6.63
mssql|ms-|1.1.0
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.1.8
java|red|0.8.0
vscode-icons|rob|7.12.0
standard|shi|0.2.3



---

Steps to Reproduce:

1. Create a file (⌘N)
2. Type some content in this file and save it (⌘S)
3. Edit the file and do not save it
4. Delete the file you just opened using Finder (⌘delete) and note that 'deleted from disk' shows up in the tab that the file is open in VS Code.
5. Restore the deleted file using Finder (⌘Z)
6. The 'deleted from disk' label still visible even if you edit the file and save it again.
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>26/08/2017</CreatedDate>
    <ClosedDate>27/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33177</IssueID>
    <Title>Folder Tree Hidden</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:16:27.618Z)
- OS Version: Linux x64 4.10.0-32-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-intelephense-client|bme|0.7.2
php-intellisense|fel|1.5.1
Go|luk|0.6.63
laravel-blade|one|1.8.1
laravel5-snippets|one|1.3.4
vscode-proto3|zxh|0.1.2

(2 theme extensions excluded)


---

Steps to Reproduce:

1. File &gt; Open Folder &gt; /var/www/targetFolder
2. Title is opened but folder tree is not visible

I have tried:

1. Open via command line inside the folder, same result.
2. `sudo chown -R $USER:www-data /var/www/targetFolder` no changes.
3. Disable all extensions &amp; open again, same.
4. Current permission is 755, tried 777 &amp; still the same.

Dev tools:
![devtools](https://user-images.githubusercontent.com/28424158/29739103-3e0a3342-8a60-11e7-9a71-e680d0d1d1b8.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33162</IssueID>
    <Title>TM_FILENAME can't be use with regex in snippets</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Ubuntu 17.04

Can't use this regex in my snippet:
```
export default class ${TM_FILENAME/(\w+)\.js/\1/g}
```

It actually prints `${TM_FILENAME/(\w+)\.js/\1/g}`

</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33142</IssueID>
    <Title>vscode question （there hava a picture）</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.
2.
![image](https://user-images.githubusercontent.com/24708291/29710337-628f548e-89c2-11e7-90b2-bca0d25d9f47.png)
</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33137</IssueID>
    <Title>".vscode/settings.json" inside a workspace folder will render the editor inoperable</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider  b9ac10234f86f145fdbcf066758934e0857d7592, 2017-08-25T05:24:57.523Z 
- OS Version: Windows 10
- Reproduces without extensions: Yes (note: extensions' .vscode/*.json doesn't seem to be affected)

Steps to reproduce:
- Place (an empty is enough) .vscode/settings.json file under a workspace folder,
- Open the workspace,
- Every file will now display "Place your folder settings here to overwrite those from the Workspace Settings." and merge some of the parsed .json contents with the editor, thus rendering the editor pretty much inoperable as it breaks e.g. syntax hilighting.

In my case, the .vscode/settings.json was a leftover file from an older version. Don't think it should break the VSCode anyway? A day older or so build was working just fine, so this is likely due to some very recent change. Tried with and without extensions.</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33122</IssueID>
    <Title>How i can split terminal tabs in two, for using another sessions side by side </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

Well, i don'n know if exist this options, but if exist, how I can do?
Thanks

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33100</IssueID>
    <Title>allow unix sockets to be created outside the --user-data-dir folder</Title>
    <Description>- VSCode Version: all
- OS Version: GNU/Linux docker containers

this is a follow up of #28126. 

The core issue at play here is understanding that containers are not persistent. So, if I run vscode inside a docker container and user configurations are to be persistent, I need to mount the `--user-data-dir` folder into an user disk like `D:\`. This is fine in mac and linux, but not in windows using docker for windows. Example: 

```sh
$ docker run -i -t -v /d/vscode/config:/root/.vscode ninrod/vscode:latest bash
```

Sadly, I cannot do this because `/d/vscode/config` is a NTFS filesystem structure which does not understand unix sockets so `vscode` crashes on startup. 

Please, allow the user to tell vscode to create these sockets that are created on `--user-data-dir` elsewhere. Example: `/var/run/vscode` or something:

```sh
.vscode $ w
 ~/.vscode at root@container using -zsh $
.vscode $ l *.sock
srwxr-xr-x 1 root root 0 Aug 24 14:16 1.14.2-main.sock
srwxr-xr-x 1 root root 0 Aug 24 14:16 1.14.2-shared.sock
.vscode $
```

thanks in advance.</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33088</IssueID>
    <Title>Objects that can trigger commands can't pass arguments to them</Title>
    <Description>There are many objects that are able to trigger commands, like [StatusBarItem](https://code.visualstudio.com/docs/extensionAPI/vscode-api#StatusBarItem), but not all of them (probably none of them) support a complementary `arguments` field defining the arguments that will be passed to that command's handler.

The point is that it's not even impossible to make `StatusBarItem`s pass arbitrary arguments to arbitrary commands, but it requires some [tinkering](https://github.com/fabiospampinato/vscode-commands/blob/master/src/utils.ts#L89).

Why isn't this supported by default?</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33080</IssueID>
    <Title>New icon looks bad / scaled in Windows installer.</Title>
    <Description>&lt;img width="72" alt="capture" src="https://user-images.githubusercontent.com/1931590/29668606-1c5a8ff6-88e1-11e7-8d71-4388c52d520a.png"&gt;
</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33076</IssueID>
    <Title>Seeing the output of multiple terminals at the same time</Title>
    <Description>It would be really helpful is the output from multiple terminals could be redirected to appear interleaved in one place.

The terminal extension add Terminal as a drop drop in the output tab, will a message about limited future support. And not output appear here.

I haven't found anything else that looks like it could support this.

Would be really nice whilst doing micro-services development.
Any ideas?</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33070</IssueID>
    <Title>Remove file dir from side bar</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
language-haskell|jus|2.3.1
cpptools|ms-|0.12.3
vim|vsc|0.9.0



---

Steps to Reproduce:

1. open file dir
2. remove file from side bar
I can not find a way to add the file and see it in the explorer. Refresh the window and try to open the recent file won't work. Is there any hiding workspace file?

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33060</IssueID>
    <Title>Integrated Terminal as New Tab</Title>
    <Description>In Visual Code, can we have 'Integrated Terminal' (Ctrl + ~) as New tab ?

We should be able to open it as normal tabs.</Description>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33046</IssueID>
    <Title>Extension Dev: Opening files without triggering an onDidOpen event for other extensions</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
In reference to this thread: https://github.com/Microsoft/vscode/issues/15723

I'd like to implement a "Scan all" command in my extension, that scans all of the relevant files in the workspace.  The easiest way to do this is to call workspace.OpenTextDocument, but doing so triggers an onDidOpen event that a lot of extensions listen for.  The result is that the "Problems" window doesn't just get the output of the analysis my own extension produces, but the output for every extension that generates problems and listens to the onDidOpen event.  Ideally I wouldn't inundate my users with output for other extensions when running a command for my own extension.  

I don't need the onDidOpen event myself (I can just do a client.sendRequest in the "then" of openTextDocument to trigger my own analysis).  Is there any chance @dbaeumer that you changed your stance from the previous thread and there is now some mechanism to open a file without triggered an onDidOpen? I would argue that there is a difference between the user opening a file in the UI, and an extension opening a file that is never displayed in the UI.  In the latter case, probably doesn't make sense for anyone but that extension to know it opened (i.e. be able to suppress sending onDidOpen to any other extensions).

thanks
</Description>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>33029</IssueID>
    <Title>Error "A system error occurred (EINVAL: invalid argument, stat 'c:\Users\carlos.fonseca\OneDrive\Documentos')" saving file</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.16257
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
json-tools|eri|1.0.2
vscode-clang|mit|0.2.2
prettify-json|moh|0.0.3
mssql|ms-|1.1.0
cpptools|ms-|0.12.3
json-schema-validator|tbe|0.1.0



---

Steps to Reproduce:

1. Create a file
2. Attempt to save it

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32991</IssueID>
    <Title>File tab bar queues mouse middle clicks while modal dialog is active</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T17:15:57.756Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0



---

Steps to Reproduce:

1. Open new Code window
2. Create one new document and add any content to it, without saving
3. Create another new document and also add any content to it
4. Middle-mouse-click either document. A modal dialog appears asking if you want to close without saving. Do not dismiss it.
5. Middle-mouse-click the other document while the modal dialog is visible.
6. Dismiss the modal dialog using "Don't save" or "Cancel" (save probably works too, but I haven't tried it).

Expected behavior: while the modal dialog is active, events to the blocked window are discarded. When the modal dialog is dismissed, the second document to be middle-clicked is still alive and well.

Actual result: immediately after the modal dialog is dismissed, another one appears asking what to do with the second document that was middle-clicked, confirming that events are queued instead of discarded. This seems to work with an arbitrary number of documents. I have not tested other interactions (like double-clicking the tab bar to create a new document).

Other UI elements, like the file panel of the left bar, are blocked.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Probably? Don't think the Python extension impacts this.</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32982</IssueID>
    <Title>On the latest public Windows Insider Fast Ring build (16257) VS Code can't open OneDrive files</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:07:25.676Z)
- OS Version: Windows_NT x64 10.0.16257
- Extensions: none
---

Steps to Reproduce:

1. Upgrade your PC to the latest available Windows 10 Insider Fast Ring build (16257)
2. The new OneDrive client has the option to let you see like if they're local also files that are on the cloud.
3. Try to maintain a local copy of a text file or a folder from OneDrive but right clicking on it and choosing "Always keep on this device"
4. Right click on it and choose "Edit with Code"
5. Notice that an empty file is opened
6. Manually open Code and try to open the same file from File -&gt; Open file.
7. You'll see an error claiming that the file doesn't exist.

If you try to do the same with any other editor (like notepad) the file is properly opened.</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32978</IssueID>
    <Title>Receive error Opening file on local OneDrive folder</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.16257
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0
xml|Dot|1.9.2
beautify|Hoo|1.1.1
csharp|ms-|1.12.1

When trying to open a file in my local synced onedrive folder, I get the error message:

Path Does Not Exist
The path 'C:\Users\Paul\OneDrive\Documents\FileName.txt' does not seem to exist anymore on disk.

I can open the file with Notepad, Wordpad and visual studio with no issue.
---

Steps to Reproduce:

1. Select File Open
2. Select file in onedrive documents folder on my local machine

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/2349276/29582212-d91b939a-8749-11e7-94cf-dd182a1f385d.png)
</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32970</IssueID>
    <Title>API to create custom Activity Bar items and Panels with Extensions</Title>
    <Description>I have been unable to find any information on whether or not vs code has any plans to support the functionality to allow extensions to create new activity bar items and/or side bar panels. 

Would be useful for creating many types of extensions (team chat, project/time management, sql explorers, cli tool integration (docker, npm, composer, webpack, vagrant, etc...), even less obvious things like music players and documentation). I'm aware that a lot of these extensions exist, but they aren't easily accessible (open command palette, search for extension, select option, enter command...). 

This type of functionality would potentially allow myself and many other developers to work in vs code without ever having to open another tool or leave the editor. 

If this is something that would be considered, I would be willing to work on it. Thanks! </Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32959</IssueID>
    <Title>Extension Host Terminated</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (0626479859787fa87c7c57ba19195b939050a843, 2017-08-21T07:17:17.874Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.4
path-intellisense|chr|1.4.2
vscode-svgviewer|css|1.4.2
githistory|don|0.2.3
ts-tslint|eg2|0.0.4
tslint|eg2|0.17.0
vscode-great-icons|emm|2.1.14
vsc-ember-cli|fel|0.3.3
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
output-colorizer|IBM|0.1.2
Angular2|joh|2.4.2
vscode-codemetrics|kis|1.9.0
markdown-shortcuts|mdi|0.8.1
code-beautifier|mic|1.7.2
prettify-json|moh|0.0.3
csharp|ms-|1.12.1
typescript-javascript-grammar|ms-|0.0.23
debugger-for-chrome|msj|3.1.8
view-in-browser|qin|0.0.5
typescript-hero|rbb|1.4.0
vscode-icons|rob|7.12.0
sass-indented|rob|1.4.1
autoimport|ste|1.2.2
JasmineSnippets|xab|1.0.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Launched VC Code, received message. Console contains:
```
/C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28 Extension host terminated unexpectedly. Code:  3221225477  Signal:  null
e._onExtensionHostCrashed @ /C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28
/C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28 Extension host terminated unexpectedly.
e.doShow @ /C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28
```</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32957</IssueID>
    <Title>Freezes on Search with "one line file" in result (typically map files)</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Windows 7 professional

Steps to Reproduce:
In a JS project using webpack for example
1. Search for a String
2.If the result as a "one line" file to show, the search tab freezes during several seconds.
3. Scroll so the file disappear "Search" behaving correctly
4. Scroll back until the file appears again, it freezes

File example :  0.chunk.js.map

From my point of view seems like it's creating a tooltip with the whole file inside.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32940</IssueID>
    <Title>when will the menu can support switch theme or customizable ?</Title>
    <Description>like idea,subline text.change all the menu black or other.
now It looks incongruous.
Tks.</Description>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32912</IssueID>
    <Title>Launch configuration is changed when debugging is started</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
open-html-in-browser|cod|0.1.21
EditorConfig|Edi|0.9.4
vscode-nuget-package-manager|jmr|1.1.4
csharp|ms-|1.12.1
debugger-for-chrome|msj|3.1.8
debugger-for-edge|msj|0.4.1
marko|pca|0.2.2
vim|vsc|0.9.0
---

A compound configuration may reference multiple launch configurations.
When such a compound configuration is selected for launch, (debug toolbar, DEBUG list) and the debugging session is started (F5) the selected configuration is changed to the last referenced launch configuration.

Subsequently, to restart the compound configuration one must first manually select the compound configuration in the DEBUG dropdown list.

The expected behavior is to retain the selected compound configuration after debugging is terminated.

Steps to Reproduce:

1. Create a node launch configuration - "Launch Program"
2. Create a chrome launch configuration - "Launch Chrome"
3. Create a compound configuration consisting of the above - "Launch &amp; Debug"
4. Select the compound - "Launch &amp; Debug"
5. Start debugging - F5
6. Stop debugging - Shift-F5, Shift-F5

The selected configuration is now "Launch Program"
The expected behavior is for the selected configuration to be "Launch &amp; Debug"

launch.json:
{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "Launch Program",
      "program": "${workspaceRoot}\\app.js",
      "protocol": "inspector"
    },
    {
        "name": "Launch Chrome",
        "type": "chrome",
        "runtimeArgs": [
          "--incognito"
        ],
        "request": "launch",
        "port": 9222,
        "url": "http://localhost:3000/",
        "sourceMaps": true,
        "webRoot": "${workspaceRoot}"
    }
  ],
  "compounds": [
      {
          "name": "Launch &amp; Debug",
          "configurations": [ "Launch Program", "Launch Chrome" ]
      }
  ]
}

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No (not applicable)</Description>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32906</IssueID>
    <Title>Can emmet tsx/jsx be a little smarter?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.1
- OS Version: Windows 10

Steps to Reproduce:

1. Make a typescript extending `React.Component` class with props
2. Start typing `this.props` or `this.state` in any method in your class and see emmet intellisense get all optimistic
![image](https://user-images.githubusercontent.com/2003142/29534777-7bcbe76a-8674-11e7-85e4-f4137a0431f2.png)

I'm mostly just wondering if it emmet can be a little smarter about when it makes it's suggestions? I really want to use it, but right now it's getting in my way 80% of the time.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32897</IssueID>
    <Title>Extension host terminated unexpectedly.</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (0626479859787fa87c7c57ba19195b939050a843, 2017-08-21T07:17:17.874Z)
- OS Version: Windows_NT x64 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
Bookmarks|ale|0.15.2
ng-template|Ang|0.1.4
vscode-node-readme|ben|1.1.0
git-easy|bib|1.9.1
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
jshint|dba|0.10.15
vscode-eslint|dba|1.2.11
vscode-material2-snippets|dee|2.0.0
githistory|don|0.2.3
gitlens|eam|4.4.0
vscode-html-css|ecm|0.1.8
tslint|eg2|0.17.0
vscode-npm-script|eg2|0.2.0
vscode-great-icons|emm|2.1.14
vscode-npm|fkn|3.3.0
auto-close-tag|for|0.4.3
code-runner|for|0.7.0
beautify|Hoo|1.1.1
rest-client|hum|0.15.1
Angular2|joh|2.4.0
vscode-icon-theme|jtl|1.5.0
vscode-jade-snippets|mrm|1.0.1
vscode-scss|mrm|0.6.2
mssql|ms-|1.1.0
csharp|ms-|1.12.1
vs-keybindings|ms-|0.1.7
team|ms-|1.122.0
debugger-for-chrome|msj|3.1.8
vscode-docker|Pet|0.0.16
material-icon-theme|PKi|2.1.0
angular-cli|pko|1.0.1
vscode-icons|rob|7.12.0
sass-indented|rob|1.4.1
todotasks|san|0.5.0
code-settings-sync|Sha|2.8.3
stylelint|shi|0.28.0
vscode-autohotkey|sle|0.2.1
nativescript|Tel|0.7.2
Angular2|UVB|0.4.1
cordova-tools|vsm|1.2.10
vscode-todo-highlight|way|0.5.8
html2jade|wma|0.2.0
nativescript-ng2-snippets|www|2.0.1
maple|yjt|1.1.6

(33 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32846</IssueID>
    <Title>no new line when pressing CTRL+C in terminal</Title>
    <Description>- VSCode Version: 1.14.2
- OS Version: Windows 10

Steps to Reproduce:

1.  open integrated terminal
2.  run long running operation
3.  press ctrl + c
4.  `Terminate batch job (Y/N)?` Shows up
5.  press ctrl + c again

Expected to jump to a new cleared line, but actually just a ^C shows up:

`Terminate batch job (Y/N)? ^C`

Another variation of this issue is to just:
1.  open integrated terminal
2.  either enter some text or not.
3.  press ctrl + c

In a normal cmd this would jump to a new cleared line, but actually nothing happens

This happens only in windows and not in mac.
This happens both with cmd &amp; powershell.</Description>
    <CreatedDate>20/08/2017</CreatedDate>
    <ClosedDate>20/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32769</IssueID>
    <Title>VSCode 1.15.1 Output default coding is not utf-8</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:1.15.1
- OS Version:MacOS 10.12.4

Steps to Reproduce:

1. I use Code-Runner plugin or Python plugin to run python codes

2. if I print some Chinese Char(encoded in utf-8)  in output window, it show below error:
UnicodeEncodeError: 'charmap' codec can't encode character
This is caused by the output window's default coding is not utf-8 but ascii. 

Please also refer to this issue: https://stackoverflow.com/questions/44724461/task-output-encoding-in-vscode

Sublime Text3 and Atom don't have this issue on Mac.

I changed python cmd as below for a workround:
 "python": "export PYTHONIOENCODING=utf-8 &amp;&amp; cd $dir &amp;&amp; python $fileName",

please fix this bug .
Thanks.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32744</IssueID>
    <Title>indentation error on the line with color code</Title>
    <Description>- VSCode Version: Code 1.15.1 (41abd21afdf7424c89319ee7cb0445cc6f376959, 2017-08-16T18:05:38.342Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
path-intellisense|chr|1.4.2
regex|chr|0.1.0
vscode-html-css|ecm|0.1.7
vscode-great-icons|emm|2.1.14
vsc-material-theme|Equ|1.0.2
json-tools|eri|1.0.2
php-debug|fel|1.11.1
php-intellisense|fel|1.5.0
auto-rename-tag|for|0.0.14
mdhelper|jos|0.0.11
debugger-for-chrome|msj|3.1.8
material-icon-theme|PKi|2.1.0
vscode-css-peek|pra|1.3.1
markdown-preview-enhanced|shd|0.2.5
html5-boilerplate|sid|1.0.1
quokka-vscode|Wal|1.0.50
wallaby-vscode|Wal|1.0.56
html-css-class-completion|Zig|1.8.0

(3 theme extensions excluded)


---

Steps to Reproduce:

![2017-08-17_113210](https://user-images.githubusercontent.com/12824616/29394883-e0bc084a-833f-11e7-948e-c0bbaa30a2a2.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32706</IssueID>
    <Title>VS Code Windows 64 Bit - Copy on right click in terminal does not work</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:18.034Z)
- OS Version: Windows_NT x64 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.2.11
auto-close-tag|for|0.4.3
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.16
vscode-icons|rob|7.12.0
---
I have "terminal.integrated.rightClickCopyPaste" set to true. Still when I right click in embedded terminal it opens a context menu instead of copy/paste selected text in the terminal.

Steps to Reproduce:

1. Open embedded terminal (Ctrl + `)
2. Select any text in the terminal
3. Right click in the terminal
4. Expected behavior: It should copy the selected text
5. Actual behavior: It shows context menu 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/08/2017</CreatedDate>
    <ClosedDate>17/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32704</IssueID>
    <Title>Ctrl + Shift + B can't find default typescript build task</Title>
    <Description>Version 1.16.0-insider
Commit 9e7441df9f609500a13e8651bd01eccf1613f386
Date 2017-08-17T05:23:58.225Z
Shell 1.7.4
Renderer 58.0.3029.110
Node 7.9.0
Architecture x64

Steps to Reproduce:

1. Have this `.vscode/tasks.json` file

```json
{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "typescript",
      "isBackground": true,
      "tsconfig": "tsconfig.json",
      "problemMatcher": "$tsc-watch",
      "group": {
        "kind": "build",
        "isDefault": true
      }
    }
  ]
}
```

2. Press Ctrl + Shift + B

Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/461084/29405848-8c83d1e2-8315-11e7-88db-2afa2c0843de.png)
</Description>
    <CreatedDate>17/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32644</IssueID>
    <Title>Can we please just dock the running debugger, floaty thing?</Title>
    <Description>- VSCode Version:
![image](https://user-images.githubusercontent.com/1113496/29368956-2d549fb8-826f-11e7-8bca-83dfaf886adf.png)
- OS Version: Windows 10 x64

Steps to Reproduce:
1. Launch your project

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: (shouldn't matter)

Can we please make it so that, 
![image](https://user-images.githubusercontent.com/1113496/29369089-97176732-826f-11e7-9e42-f0c8d5466b91.png)
thing can be docked to just sit above this area: 
![image](https://user-images.githubusercontent.com/1113496/29369116-a86ca8ee-826f-11e7-8d61-7c4e5a6d5074.png)
it gets REALLY annoying having to move it back and forth, because it just loves to sit on top of the one tab that I am actively using, then I go to launch my attach to chrome task, and then it gets in the way of that, since I just moved it out of the way of my tabs! </Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32642</IssueID>
    <Title>Exclusion rules don't work in SEARCH function</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-simpler-icons|dav|1.3.0
jshint|dba|0.10.15



---

Steps to Reproduce:

1. Click on the Magnifying Glass on the Activity Bar 
2. Insert some word in the search input text
3. Click on the "three dots" under the search input text 
4. Insert some complex rule with star characters (\*) in the file to exclude input text (for example "**/*.min.js" )
5. Click the enter button to begin the search

RESULT --&gt; **Visual Code gives search results also for exclusion files**

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32638</IssueID>
    <Title>Go to File doesn't find my JS files</Title>
    <Description>**UPDATE:** this might be related to JavaScript files and my `files.exclude` settings, see https://github.com/Microsoft/vscode/issues/32638#issuecomment-322768797.

I've got a folder open which has many sub-folders, many of them containing `gulpfile.js`. However, when I do Ctrl+P (Go to File), they are not listed.

In the screenshot, I've executed a search alongside Ctrl+P to demonstrate this:

![image](https://user-images.githubusercontent.com/101152/29364664-8d7abe5c-8294-11e7-9cb8-2e80386d136c.png)

This is the first time I see this issue, Ctrl+P has always been working reliably. I've tried restarting VSCode to no avail.

VSCode version: 1.15.0
OS: Windows 10</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32637</IssueID>
    <Title>Extension Host terminated unexpectedly</Title>
    <Description>- VSCode Version: Code - Insiders 1.16.0-insider (baa6fbece9035e3d20cbcb776d73ebc6c4ddde26, 2017-08-15T05:08:02.380Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.4
code-settings-sync|Sha|2.8.2
sort-lines|Tyr|1.3.0
html-snippets|abu|0.1.0
Bookmarks|ale|0.15.2
project-manager|ale|0.19.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
tslint|eg2|0.17.0
auto-rename-tag|for|0.0.14
Angular2|joh|2.4.0
ecdc|mit|0.10.3
HTMLHint|mka|0.3.3
vscode-autoprefixer|mrm|2.1.2
vscode-stylefmt|mrm|2.5.0
angular2-inline|nat|0.0.17
stylelint|shi|0.28.0
ayu|tea|0.5.0
change-case|wma|1.0.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1. Not sure wha happened. I had just fetched and pulled from our Git repo (using Tower), and when I switched back to Code I saw this:

&lt;img width="1218" alt="screen shot 2017-08-16 at 8 46 50 am" src="https://user-images.githubusercontent.com/835148/29363903-adca0a4e-825f-11e7-8e70-59b181ce2da8.png"&gt;

Clicking "developer tools", I see this:

&lt;img width="1055" alt="screen shot 2017-08-16 at 8 46 42 am" src="https://user-images.githubusercontent.com/835148/29363919-bb221ed4-825f-11e7-987f-d4bccdac1738.png"&gt;

I reloaded the window and now it seems fine.  Never saw that before.
</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>19/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32624</IssueID>
    <Title>PHP 5.6 @return keyword in function documentation upsets the code highlighting</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0 (1.15.0)
- OS Version: Mac OSX 10.12.6

Steps to Reproduce:
1. Add @return (boolean) keyword to a method documentation
2. @return boolean does not produce this error

It takes return (boolean) as valid code keywords and the rest of the code after that is highlighted like comments or text.

If @return is replaced with @retur or something not @return, the documentation highlight works just 
fine.

In my case the methods are static.</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32615</IssueID>
    <Title>'Extension host terminated unexpectedly' when resuming work </Title>
    <Description>This morning, when starting to work again, I bring back the VSCode window to the front. It shows the message: 'Extension host terminated unexpectedly', but all seems to work well.

Can it be that the timer expired while my machine was in sleep mode?</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>19/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32608</IssueID>
    <Title>Unable to open an untitled document with large size content (approximate &gt; 5MB)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0
- OS Version: macOS 10.12.2

Steps to Reproduce:

1. Call the API `workspace.openTextDocument({ 'language': language, 'content': content })` to open a new untitled document. If `content` is larger than 5MB, our code receives following error __expected URI untitled:Untitled-1 to have come to LIFE__
2. 
![image](https://user-images.githubusercontent.com/2796177/29347528-d9105684-827f-11e7-98d5-4584b2ecea4c.png)

</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>19/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32606</IssueID>
    <Title>search function with files to include only show results from currently opened files instead of the whole folder</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
githistory|don|0.2.3
vscode-html-css|ecm|0.1.7
prettier-vscode|esb|0.22.1
php-intellisense|fel|1.5.0
vscode-JS-CSS-HTML-formatter|lon|0.2.3



---

Steps to Reproduce:

1. open a folder in vscode
2. open file1.php, file2.php
2. search for 'sometext'
3. put '**/*.php' in files to include
4. only get search results from file1.php and file2.php although 'sometext' exists in file3.php

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32605</IssueID>
    <Title>Pasting specific text into terminal freezes VSCode</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0
- OS Version: OSX

Steps to Reproduce:

1.  Open terminal
2. paste the following text into the terminal:

"\xff\x8c\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\xbb\x73x1e\x3c\xd3\x0f\xf0\x4a\xb5\x27\xc1\x20"

The way I originally triggered this was doing a diff of some encoded binary data.  This was a tiny piece of a 1000 character string.  Originally I thought it was a long line problem, but evidently not.

Note this happens with the default terminal and with iTerm2 .  Not sure about other OSes.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

Yes</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32601</IssueID>
    <Title>vscode occur error when i save 973M txt file</Title>
    <Description>- VSCode Version: 1.15.0 64bit
- OS Version: windows 10 1703 64bit

Steps to Reproduce:

1.open 973m txt file
2.del last empty line and save
3.occur error:Invalid string length</Description>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>19/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32584</IssueID>
    <Title>TypeScript snippets should show up in TypeScript React</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-generate-getter-setter|DSK|0.4.2
bazel-code|Dev|0.1.8
path-intellisense|chr|1.4.2
vscode-svgviewer|css|1.4.2
vscode-eslint|dba|1.2.11
gitlens|eam|4.3.3
tslint|eg2|0.17.0
git-project-manager|fel|1.3.2
auto-rename-tag|for|0.0.14
docthis|joe|0.4.7
contextualduplicate|laf|0.2.0
debugger-for-chrome|msj|3.1.7
vscode-subword-navigation|ow|1.1.5
Align|ste|0.2.0
rewrap|stk|1.4.2
clang-format|xav|1.5.0
vscode-proto3|zxh|0.1.2

(3 theme extensions excluded)


---

**Steps to Reproduce:**

1. Try to make a User Snippet
2. Get prompted to choose a language
3. Choose TypeScript
4. Try to use the snippet in a `.tsx` file

**Expected Results:**

You can share a single snippet across languages.

**Actual Results:**

It appears you need to copy/paste them (which is gross for all the normal reasons that maintaining copy/pasted code is gross).</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>17/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32575</IssueID>
    <Title>Extension host terminated unexpectedly. Please reload the window to recover.</Title>
    <Description>_From @jacobrillema on August 15, 2017 15:35_

Latest insiders build 1.16.0-insider date of 8/15 is crashing. I could not find the offending extension right away but found this extension was causing the issue. Not sure how much this is helpful from the developer tools. Maybe something with the util.js file?

```
index.js:5 Error: write EOF
    at exports._errnoException (util.js:1050:11)
    at WriteWrap.afterWrite [as oncomplete] (net.js:813:14)
onError @ index.js:5
events.js:163 Uncaught Error: write EOF
    at exports._errnoException (util.js:1050:11)
    at WriteWrap.afterWrite [as oncomplete] (net.js:813:14)
/C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28 Extension host terminated unexpectedly. Please reload the window to recover.
e.doShow @ /C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:28
/C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:29 Extension host terminated unexpectedly. Code:  3221225477  Signal:  null
t.onExit @ /C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/workbench.main.js:29
```

_Copied from original issue: Microsoft/vscode-github-issues-prs#19_</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32571</IssueID>
    <Title> Cannot read property 'properties' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;9a3a98fb-db12-54cf-cea6-16b200c4be99&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.15.0&lt;br /&gt;-  6feff11ed03402cf77e04e74e13c55529fdb4d09&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'properties' of undefined&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1149:31 (properties)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1149:31 (properties))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1384:41 (from)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1384:41 (from))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1733:23 (from)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1733:23 (from))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1692:29 (createTaskRunnerConfiguration)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1692:29 (createTaskRunnerConfiguration))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1780:52 (run)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1780:52 (run))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1462:33 (parse)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1462:33 (parse))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1457:43 (then)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1457:43 (then))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1456:23 (then)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1456:23 (then))&lt;br /&gt;</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32567</IssueID>
    <Title> Running the contributed command:'emmet.expandAbbreviation' failed.</Title>
    <Description>Issue Id: &lt;b&gt;aa9793d7-6da9-7f9a-616d-d4a3251c2de4&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.15.0&lt;br /&gt;-  6feff11ed03402cf77e04e74e13c55529fdb4d09&lt;br /&gt;-  1af52c0470d6f445966b5c8a3065233b34303d9a&lt;br /&gt;*Stack* &lt;br /&gt;Error: Running the contributed command:'emmet.expandAbbreviation' failed.&lt;br /&gt;[/vs/workbench/api/node/extHostCommands.ts#L134:32](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/api/node/extHostCommands.ts#L134:32)&lt;br /&gt;[/vs/workbench/services/thread/common/abstractThreadService.ts#L34:16 (apply)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/services/thread/common/abstractThreadService.ts#L34:16 (apply))&lt;br /&gt;[/vs/platform/extensions/common/ipcRemoteCom.ts#L275:39 (handle)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/platform/extensions/common/ipcRemoteCom.ts#L275:39 (handle))&lt;br /&gt;[/vs/platform/extensions/common/ipcRemoteCom.ts#L231:25 (invokeHandler)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/platform/extensions/common/ipcRemoteCom.ts#L231:25 (invokeHandler))&lt;br /&gt;    at _combinedTickCallback (internal/process/next_tick.js:67:7) &lt;no sourcemaps&gt;&lt;br /&gt;    at process._tickDomainCallback (internal/process/next_tick.js:122:9) &lt;no sourcemaps&gt;&lt;br /&gt;</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32563</IssueID>
    <Title>Hitting Run on compound debugger changes the selected debugger</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:18.034Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Select a compound debugger (in my case C# and Chrome)
2. Hit F5
3. Drop down changes to the first debugger in the compound list.
4. Next run uses that instead of the compound debugger.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32561</IssueID>
    <Title> Path must be a string. Received { Error: spawn wmic.exe ENOENT</Title>
    <Description>Issue Id: &lt;b&gt;3cc4c2c1-96cf-4394-a3ce-8f83d5e6026e&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.15.0&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Path must be a string. Received { Error: spawn wmic.exe ENOENT&lt;br /&gt;    at exports._errnoException (util.js:1022:11)&lt;br /&gt;    at Process.__dirname.ChildProcess._handle.onexit (internal/child_process.js:193:32) &lt;no sourcemaps&gt;&lt;br /&gt;    at onErrorNT (internal/child_process.js:359:16) &lt;no sourcemaps&gt;&lt;br /&gt;    at _combinedTickCallback (internal/process/next_tick.js:74:11) &lt;no sourcemaps&gt;&lt;br /&gt;    at process._tickCallback (internal/process/next_tick.js:98:9) &lt;no sourcemaps&gt;&lt;br /&gt;  code: 'ENOENT',&lt;br /&gt;  errno: 'ENOENT',&lt;br /&gt;  syscall: 'spawn wmic.exe',&lt;br /&gt;  path: 'wmic.exe',&lt;br /&gt;  spawnargs: &lt;br /&gt;   [ 'process',&lt;br /&gt;     'where',&lt;br /&gt;     'parentProcessId=5132',&lt;br /&gt;     'get',&lt;br /&gt;     'ExecutablePath,ProcessId' ],&lt;br /&gt;  cmd: 'wmic.exe process where parentProcessId=5132 get ExecutablePath,ProcessId' }&lt;br /&gt;    at assertPath (path.js:7:11)&lt;br /&gt;    at Object.basename (path.js:799:5)&lt;br /&gt;[/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L894:16 (basename)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L894:16 (basename))&lt;br /&gt;[/vs/workbench/parts/terminal/electron-browser/windowsShellHelper.ts#L49:28 (setTitle)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/terminal/electron-browser/windowsShellHelper.ts#L49:28 (setTitle))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L901:0 (_notify)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/winjs.base.raw.js#L901:0 (_notify))&lt;br /&gt;    at&lt;br /&gt;</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32560</IssueID>
    <Title> Path must be a string. Received { Error: Command failed: wmic.exe process where parentProcessId=6220 get ExecutablePath,ProcessId</Title>
    <Description>Issue Id: &lt;b&gt;b5402855-71b7-e67e-d7de-652e8588ad90&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.15.0&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Path must be a string. Received { Error: Command failed: wmic.exe process where parentProcessId=6220 get ExecutablePath,ProcessId&lt;br /&gt;ERROR:&lt;br /&gt;Description = The service cannot be started, either because it is disabled or because it has no enabled devices associated with it.&lt;br /&gt;&lt;br /&gt;    at ChildProcess.exithandler (child_process.js:223:12)&lt;br /&gt;    at emitTwo (events.js:106:13)&lt;br /&gt;    at ChildProcess.emit (events.js:191:7)&lt;br /&gt;    at maybeClose (internal/child_process.js:885:16) &lt;no sourcemaps&gt;&lt;br /&gt;    at Process.__dirname.ChildProcess._handle.onexit (internal/child_process.js:226:5) &lt;no sourcemaps&gt;&lt;br /&gt;  killed: false,&lt;br /&gt;  code: 2147943458,&lt;br /&gt;  signal: null,&lt;br /&gt;  cmd: 'wmic.exe process where parentProcessId=6220 get ExecutablePath,ProcessId' }&lt;br /&gt;    at assertPath (path.js:7:11)&lt;br /&gt;    at Object.basename (path.js:799:5)&lt;br /&gt;[/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L894:16 (basename)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L894:16 (basename))&lt;br /&gt;[/vs/workbench/parts/terminal/electron-browser/windowsShellHelper.ts#L49:28 (setTitle)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/workbench/parts/terminal/electron-browser/windowsShellHelper.ts#L49:28 (setTitle))&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;[/vs/base/common/stopwatch.ts#L5:0](https://github.com/microsoft/vscode/blob/8b95971d8cccd3afd86b35d4a0e098c189294ff2/src/vs/base/common/stopwatch.ts#L5:0)&lt;br /&gt;</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32542</IssueID>
    <Title>Errormessages on Javascript Comments inside HTML Docs in Output-Console</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:18.034Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
aessoft-class-autocomplete|AES|0.1.0
vscode-caniuse|aka|0.5.3
vscode-javascript-snippet-pack|aka|0.1.5
numbered-bookmarks|ale|0.10.0
project-manager|ale|0.19.0
copy-relative-path|ale|0.0.1
workbench|and|0.1.6
imagepreview|buz|0.5.1
jshint|dba|0.10.15
stuck-overflow|dge|0.1.9
vscode-new-file|dku|3.1.1
json-tools|eri|1.0.2
auto-close-tag|for|0.4.3
live-html-previewer|hdg|0.2.0
minify|Hoo|0.3.0
rest-client|hum|0.15.1
crane|Hvy|0.3.8
autofilename|Jer|0.1.3
diff-tool|jin|0.0.1
format-indent|Kas|1.3.0
vscode-JS-CSS-HTML-formatter|lon|0.2.3
VBScript|lug|0.0.2
vscode-fileheader|mik|0.0.2
HTMLHint|mka|0.3.3
vscode-apache|mrm|1.1.1
PowerShell|ms-|1.4.1
wordcount|ms-|0.1.0
smartpaste|reb|0.0.3
vscode-filter-json|ric|1.0.0
vscode-icons|rob|7.12.0
whitespace|san|0.0.4
todotasks|san|0.5.0
stylelint|shi|0.28.0



---

Steps to Reproduce:

1. just make a &lt;script&gt;&lt;/script&gt; Tag inside any html document
2. just start to make 'comments' in there aka // or /**/
3. click in one of those commented lines:

each time an errormessages will be triggered in Output-Console:
[Error - 14:02:02] Request textDocument/documentHighlight failed.
  Message: Request textDocument/documentHighlight failed with message: Cannot read property 'kind' of undefined
  Code: -32603 

4. this won't happen if it is a .js file.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32529</IssueID>
    <Title>DeprecationWarning: `node --inspect --debug-brk` is deprecated</Title>
    <Description>Since VSCode version 1.15.0 F5 (starting debug) prints out the following message:
```
(node:31245) [DEP0062] DeprecationWarning: `node --inspect --debug-brk` is deprecated. Please use `node --inspect-brk` instead.
```
Any ideas how to prevent this warning?

---------------------------------------------------
Project/System details:
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2)
- OS Version: Ubuntu 16.04.3 LTS
- node Version: v8.3.0

Steps to Reproduce:

1. see [https://github.com/ManfredSteiner/typescript/tree/master/console](https://github.com/ManfredSteiner/typescript/tree/master/console)
2. start in debugging mode (F5)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes



</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32510</IssueID>
    <Title>Explorer view scroll broken when adding a new file</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-docker|Pet|0.0.16
vscode-eslint|dba|1.2.11
python|don|0.7.0
gitlens|eam|4.3.3
tslint|eg2|0.17.0
Go|luk|0.6.63
debugger-for-chrome|msj|3.1.7
sourcegraph|sou|1.0.9
vim|vsc|0.9.0

---

Steps to reproduce:

1. Open a project with enough files to scroll in the explorer view (e.g. Microsoft/vscode)
2. In the explorer viewlet, right click on src/vs/editor/common/services and select "New file"
3. Do not type anything in; instead, scroll down until it is out of view.
4. Start scrolling up.

Expected: You should be able to scroll the input field back into view.

Actual: lots of visual artifacts.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes


![screen recording 2017-08-14 at 05 42 pm](https://user-images.githubusercontent.com/754768/29297806-53d4c058-8118-11e7-824c-84312a4fc8d8.gif)</Description>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32504</IssueID>
    <Title>Find on big files does not highlight every match</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0
- OS Version: Linux Mint 18.1

Steps to Reproduce:

1. Open "very big" dataset (mine have 50625 lines, and sorry, can't distribute)
2. Perform a search on this very big dataset.

The find window will show "1 of 999+" instead of highlighting every match. The minimap also show only a few results, although there's at least one match every single line.

![image](https://user-images.githubusercontent.com/5909442/29290708-7cd41630-8117-11e7-948e-5bcac3c71903.png)

Reproduces without extensions: Yes

Observations:
If I click to navigate to the previous match, it will show `? of 999+` but it work perfectly, setting the cursor on the correct position on the last line of the "very big" file, but still don't highligthing the match.

![image](https://user-images.githubusercontent.com/5909442/29290806-c9ff3dc2-8117-11e7-8d16-b774d2a8bfe7.png)
</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32493</IssueID>
    <Title>JSX syntax highlighting breaks when using default values for destructred parameter</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:06:21.685Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
sort-lines|Tyr|1.3.0
project-manager|ale|0.19.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
RelativePath|jak|1.0.0
cpptools|ms-|0.12.2
final-newline|sam|0.3.2
highlight-matching-tag|vin|0.4.4

(2 theme extensions excluded)


---

Steps to Reproduce:

1. Create a new file and set the language mode to "JavaScript React"
2. Add the following code:
```
const button = ({
  className
}) =&gt; (
  &lt;div className={className}&gt;
    Click me!
  &lt;/div&gt;
);
```
3. Add a default value for `className` in the destructured object parameter:
```
const button = ({
  className = 'button'
}) =&gt; (
  &lt;div className={className}&gt;
    Click me!
  &lt;/div&gt;
);
```
4. After this change, observe that JSX syntax highlighting is broken.
![jsx-syntax-broken](https://user-images.githubusercontent.com/7561061/29282042-51328700-80ef-11e7-9714-0e04b056fe49.gif)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32490</IssueID>
    <Title>Correlate unhandled extension host exceptions with extensions</Title>
    <Description>TBD: what the UX should be</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32468</IssueID>
    <Title>Trying to install ms-vscode.csharp extension from command line fires exception</Title>
    <Description>C:\Users\WIN-PRO-TEST&gt;code --install-extension ms-vscode.csharp
Found 'ms-vscode.csharp' in the marketplace.
Installing...
(node:3108) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejec
tion id: 1): TypeError: this._state.then is not a function
(node:3108) DeprecationWarning: Unhandled promise rejections are deprecated. In
the future, promise rejections that are not handled will terminate the Node.js p
rocess with a non-zero exit code.


- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
docomment|k--|0.0.17
csharp|ms-|1.12.0
team|ms-|1.121.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32463</IssueID>
    <Title>Installation from source</Title>
    <Description>Hey there,
I took on the challenge to install vscode on void linux from source. The installation doesn't list all dependencies I needed. These were pkg-config, libXScrnSaver, gconfmm. Now its working, with the only exception being the integrated terminal. Would be neat if you could update the installation notes. 

</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32450</IssueID>
    <Title>Output window shows tofu characters </Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-color|ans|0.4.5
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
python|don|0.7.0
prettier-vscode|esb|0.22.1
auto-close-tag|for|0.4.3
auto-complete-tag|for|0.0.2
auto-rename-tag|for|0.0.14
code-runner|for|0.6.33
beautify|Hoo|1.1.1
rest-client|hum|0.15.1
docthis|joe|0.4.7
vscode-insertdatestring|jsy|2.1.0
perl-debug|mor|0.2.3
mssql|ms-|1.1.0
csharp|ms-|1.12.0
team|ms-|1.121.1
debugger-for-chrome|msj|3.1.7
code-settings-sync|Sha|2.8.2
stylelint|shi|0.28.0
autoimport|ste|1.2.2
vscode-react-native|vsm|0.4.1
vscode-todo-highlight|way|0.5.8
JavaScriptSnippets|xab|1.4.1
ReactSnippets|xab|1.4.0



---

Steps to Reproduce:

1. Through .net core build configuration i added webpack build step. and when webpack is printing its progress it is showing tofu characters

![image](https://user-images.githubusercontent.com/4639147/29261669-67a9459c-80ee-11e7-911c-e535a7d27b5b.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32439</IssueID>
    <Title>Debug picker switches away from compound launch config</Title>
    <Description>- Select the "Debug VS Code Main and Renderer" compound launch config
- Click debug
- See it switch to one of the configs, so I have to fix it next time I want to debug

![aug-13-2017 20-19-25](https://user-images.githubusercontent.com/323878/29257181-bcbd88fc-8064-11e7-87b1-059abc7e0f8d.gif)
</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32434</IssueID>
    <Title>Is it possible to edit files on remote server?</Title>
    <Description>It's really nice if vscode can edit files on remote servers or vm, like develop a website in python on vm, get snippets from vm, etc. Is this possible in practise? (For best, this vscode on Win with linux server combination can provide same experience as vscode on local linux desktop.)</Description>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32428</IssueID>
    <Title>Opening of snippet doesn't absorb auto-closing parenthesis</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15
- OS Version: win7x64

First I type (F) and the snippet opens without problem.
But if I too lazy to type (F) and type just (F - opening of snippet will not absorb the second parenthesis.
I think it should.

![f](https://user-images.githubusercontent.com/24613274/29252770-11a9b064-8076-11e7-9a72-a645f834f5b3.gif)

</Description>
    <CreatedDate>13/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32427</IssueID>
    <Title>Custom snippets - prefixes made of symbols</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15
- OS Version: win7x64

My snippet in "javascript.json" file:

```
"(function() {...})()": {
  "prefix": "()()",
  "body": [
    "(function() {",
    "\t",
    "})()"
  ],
  "description": "(function() {...})()"
}
```

So, the prefix is just made of symbols - ()()
It will show snippet for "f()()", and it will show snippet for "()()f", but not just ()()
Has it been made like this for a reason, or is it a bug?</Description>
    <CreatedDate>13/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32398</IssueID>
    <Title>VSC on Windows 10 (only) with OneDrive gets EBUSY error when saving</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
vscode-markdownlint|Dav|0.10.0
platformio|for|0.2.2
vscode-clang|mit|0.2.2
cpptools|ms-|0.12.2
platformio-ide|pla|0.6.0
debug|web|0.21.2

(3 theme extensions excluded)


---

Steps to Reproduce:

1. OneDrive installed on Windows 10, VSC latest version installed. I have Onedrive installed on other PC's and MAC syncing the same folders. [Note: same issue experience with Dropbox and Google Backup&amp;Sync clients]
2.Open file in onedrive e.g. *.ino or *.cpp and edit it
3. Save file - on what seems to be random occasions I get the following error from VSC.
4. **Note: I have reproduced problem using both Google Backup&amp;Sync cliend and DropBox.**
5. **Note: This error does not occur on my MAC version of VSC, only Windows 10**

![bug report screen capture](https://user-images.githubusercontent.com/19469711/29244986-604dcdc2-800d-11e7-88fc-13622d12ebcc.JPG)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32376</IssueID>
    <Title>Color Picker: hex color format settings</Title>
    <Description>Currently, Color Picker can only output colors in uppercase 6-digit format. This may be in conflict with linting rules for a project.
I think this should be configurable through settings:
- uppercase/lowercase;
- short/long format for colors like `#ccc`.</Description>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32373</IssueID>
    <Title>Editor Foreground Faded Yellow</Title>
    <Description>Hi everyone I'm using Vs code on ubuntu an os x. At os x everything is normal but at ubuntu when I'm opening vs code foreground color is faded yellow could you please help me how can ı increase color vividness 

Here how is my editor looks like

![image](https://user-images.githubusercontent.com/25878632/29240694-1342961a-7f73-11e7-8873-7cae82b849be.png)
</Description>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32368</IssueID>
    <Title>Workspace folder paths should be relative to workspace file location</Title>
    <Description>When you save a workspace file, the path to each folder is currently absolute.

Working in a team where it has practical value to check the workspace file into source control, that won't work.

So when the workspace is saved to a file, each folder path should be converted to a relative path.</Description>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>13/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32350</IssueID>
    <Title>Search on searched results.</Title>
    <Description>feature-request
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: all
- OS Version: all
- Languages: all

1. I want to search a phrase only in the files that contains the results of the last search.
2. Then the searched result is more specific.

Steps to Reproduce:

Example:
file1.css:
//THE HOUSES ARE RED 

file2.php:
//THE HOUSE IS BLACK AND WHITE 

file3.py:
//THE CAR IS BLACK

file4.js:
//THE HOUSE IS WHITE AND THE CAR IS YELLOW

I'm looking for a file that contains the phrases: "THE HOUSE", "WHITE", "BLACK".

Search 1 "THE HOUSE": results: file1.css, file2.php, file4.js
Search 2 in the last files: "WHITE" results: file2.php, file4.js
Search 3 in the last files: "BLACK" result: file2.php

Thank you.</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32349</IssueID>
    <Title>Unable to run grep in shell task</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 6.1.7601
- Reproduces without extensions: Yes

## Steps to Reproduce:

I made a `task.json` in my project's workspace. Apparently there is a problem with the way command arguments are being parsed.

1. make the following `task.json` in `.vscode` directory in the workspace.

```js
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "taskName": "myTask",
            "command": "grep \"HELLO\" \"${file}\"",
            "type": "shell",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
```
2. Since this is the default task now, hit `CTRL+SHIFT+B`

## Output
```
&gt; Executing task: grep "HELLO" "c:\Users\rteshnizi\project\.vscode\tasks.json" &lt;

Usage: grep [OPTION]... PATTERN [FILE]...
Try 'grep --help' for more information.

Terminal will be reused by tasks, press any key to close it.
```
## Expected Behavior
Output from Git Bash in vscode terminal
```
            "command": "grep \"HELLO\" \"${file}\"",
warning: LF will be replaced by CRLF in .vscode/settings.json.
The file will have its original line endings in your working directory.
```
Output from cmd in vscode terminal
```
            "command": "grep \"HELLO\" \"${file}\"",
```</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32348</IssueID>
    <Title>VSCode could list multiple projects on Explorer</Title>
    <Description>Hi

Would be nice if VSCode could list multiple projects in Explorer but making it able to open just a single one as workspace.

I hope this feature could be developed in the future.</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32322</IssueID>
    <Title>Add JS object completion / Intellisense for prototype accessors</Title>
    <Description>- VSCode Version: 1.15.0
- OS Version: Windows 10

When creating a JS object and defining some accessors, I found that I couldn't get the intellisense after `this.`

Example code :

```js
function Obj(foo) {
    this.foo = foo;
}

Obj.prototype = {
    get bar() {
        return this.// No intellisense here
    },
    set bar(val) {
        this.foo = val
    }
};
```
But creating a method with `Obj.prototype.test = function () {...}` will get me the intellisense.

Also after [asking on StackOverflow](https://stackoverflow.com/questions/45634999/is-it-possible-to-enable-js-object-intellisense-in-prototype-accessors-in-visual) if it was possible to enable it by tweaking the user settings, someone pointed out that Visual Studio 2015 would give the intellisense.

Would it be possible to replicate the same lexical analysis for this case ?</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32316</IssueID>
    <Title>Feature Request: Is it possible to get a search feature in Debug Console and Terminal?</Title>
    <Description>Hi Team,

I am a fan of VS Code and it the only IDE that I use for web and server development. however I always miss a feature which is a basic search in terminal window and debug console.

It is possible to expect such a feature in future?

Your Fan,
Vikas Bansal</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32315</IssueID>
    <Title>emmet the script tag only once </Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-css-formatter|aes|0.0.2
jshintrc-generator|ben|1.0.0
path-intellisense|chr|1.4.2
jshint|dba|0.10.15
fileheadercomment|doi|0.0.3
jquerysnippets|don|0.0.1
vscode-html-css|ecm|0.1.7
webpack-snippets|gog|0.0.3
canvas-snippets|hol|0.3.2
vue|jcb|0.1.5
webpack|jer|2.0.0
docthis|joe|0.4.7
ftp-sync|luk|0.3.3
vscode-scss|mrm|0.6.2
open-in-browser|tec|1.1.0
vim|vsc|0.9.0
bootstrap-3-snippets|wcw|0.1.0
JavaScriptSnippets|xab|1.4.1
html-css-class-completion|Zig|1.8.0



---

Steps to Reproduce:

1. use the emmet to generate the html5 template
2. use the emmet to generate the script tag
3. when i want to use emmet to generate the script tag again, it doesn't work. and i try 
  it many times , only the first time i use emmet to generate script tag useful,
  and i found i can only use emmet to generate the script tag once among  my all files,
  my english is poor, i hope this issue helpful.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32304</IssueID>
    <Title>Multi root search: allow to remove all results from one root folder</Title>
    <Description>It would be useful if I could remove all results from a root folder by having the X action next to it:

![image](https://user-images.githubusercontent.com/900690/29208673-53597388-7e8b-11e7-819c-bb3866d6fc89.png)
</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32283</IssueID>
    <Title>Typo modifiedStart &lt; modifiedStart</Title>
    <Description>https://github.com/Microsoft/vscode/blob/90b6859f375e2b4d6707181cbe8bcf78b6289919/src/vs/base/common/diff/diff.ts#L863

</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32274</IssueID>
    <Title>autoGuessEncoding Cannot recognize Chinese code automatically</Title>
    <Description>- VSCode Version: Code 1.15.0 (8b95971d8cccd3afd86b35d4a0e098c189294ff2, 2017-08-09T20:16:06.988Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
project-manager|ale|0.19.0
copy-markdown-as-html|jer|1.0.0
cpptools|ms-|0.12.2



---

Steps to Reproduce:

autoGuessEncoding  cann't recognize GBK /GB2312/GB18030, i only can modify it manually

1. change file.autoGuessEncoding to true. 
2. open a gbk file, but it opened iwth utf-8, not gbk.
</Description>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32250</IssueID>
    <Title>Files disappear when scrolling on left sidebar sometimes</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: 10.12.5
Steps to Reproduce:
No very sure how this happens. It happens frequently but not every time when I (more frequently after open a directory and) scroll up or down, like in the gif.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes
![aug-10-2017 15-13-06](https://user-images.githubusercontent.com/14250009/29187665-8c42fd34-7dde-11e7-8400-5eb6f51fdb27.gif)
</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32231</IssueID>
    <Title>Some user snippets don't want to appear in the snippets list</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: win7x64

Steps to Reproduce:

Here is my snippet for **getElementsByClassName** in **javascript.json** file:

```
"getElementsByClassName": {
  "prefix": "cla",
  "body": [
    "getElementsByClassName(\"$1\");$0"
  ],
  "description": "getElementsByClassName"
}
```
So, as you can see in GIF, VS Code doesn't want to include my snippet right after typing, for example, **document.body.**, and it appears only after removing 1 or more letters from "cla" and starting again.

Should be fixed.



GIF:

![snippets list _ 2](https://user-images.githubusercontent.com/24613274/29177592-bf112f6a-7df7-11e7-8129-1f13ff6e0e80.gif)
</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32220</IssueID>
    <Title>Crash on specific console output</Title>
    <Description>VSCode crashes / stops responding when the following string is outputted to the bash console:
"b'\\x80\\x03]q\\x00(}q\\x01(X\\x04\\x00\\x00\\x00fromq\\x02K\\x01X\\x02\\x00\\x00\\x00toq\\x03K\\x02X\\x05\\x00\\x00\\x00valueq\\x04K\\x03u}q\\x05(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03u}q\\x06(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03ue.'"

To reproduce type the following in the vscode console:
bash -&gt; echo "b'\\x80\\x03]q\\x00(}q\\x01(X\\x04\\x00\\x00\\x00fromq\\x02K\\x01X\\x02\\x00\\x00\\x00toq\\x03K\\x02X\\x05\\x00\\x00\\x00valueq\\x04K\\x03u}q\\x05(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03u}q\\x06(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03ue.'"

python -&gt; a = "b'\\x80\\x03]q\\x00(}q\\x01(X\\x04\\x00\\x00\\x00fromq\\x02K\\x01X\\x02\\x00\\x00\\x00toq\\x03K\\x02X\\x05\\x00\\x00\\x00valueq\\x04K\\x03u}q\\x05(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03u}q\\x06(h\\x02K\\x01h\\x03K\\x02h\\x04K\\x03ue.'"

The string was a result of a pickled python dictionary

OS: Arch linux
Installed from: visual-studio-code package in AUR
version: 1.14.2-1

edit: The crash doesn't happen in gnome-terminal, most likely not a linux terminal issue</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32212</IssueID>
    <Title>User Snippets Error</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
vscode-color|ans|0.4.5
theme-verdandi|be5|1.5.0
color-info|bie|0.5.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
vsc-material-theme|Equ|1.0.2
beautify|Hoo|1.1.1
vscode-gutter-preview|kis|0.10.0
HTMLHint|mka|0.3.3
color-highlight|nau|2.3.0
material-icon-theme|PKi|2.1.0
vscode-icons|rob|7.12.0
code-settings-sync|Sha|2.8.2
stylelint|shi|0.28.0
ayu|tea|0.4.0

(16 theme extensions excluded)


---

I have created some snippets for JavaScript, I am a beginner, and I have followed the guide in the documentation for creating snippets. These are the snippets: 
`	"Case": {
		"prefix": "case",
		"body": [
			"case ${1:expression}:",
			"\t$2",
			"\tbreak;",
			"$0"
		],
		"description": "A case statement"
	},
    "Switch Statement": {
		"prefix": "switch",
		"body": [
			"switch(${1:expression}) {",
			"\tcase ${3:expression}:",
			"\t\t$4",
			"\t\tbreak;",
			"\t$5",
			"default:",
			"\t$2",
			"}$0"
		],
		"description": "A switch statement"
	},
     "Print to console": {
		"prefix": "log",
		"body": "console.log(\"$1\");$0",
		"description": "Log input to console"
	}
`

Steps to reproduce:
1. Use the new switch snippet.
2. Create a new case statement with the new snippet.
3. Use the log snippet inside the new case statement.
4. When writing inside console.log() parentheses, it also writes in the new line created by the case snippet.

![js_snippets_bug](https://user-images.githubusercontent.com/29575744/29154677-25209780-7d64-11e7-922c-c80d07af3861.gif)

Expected behaviour: edit only inside the parentheses.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>10/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32194</IssueID>
    <Title>[ Feature Request ] Previous and Next buttons / Tabs to switch terminals</Title>
    <Description>Hi ! It would be more easy for us to switch between terms via two buttons instead of a selector list
Even better, we could wave a tab for each term and the ability to switch between them by click &amp; prev/next shortcuts

Thanks team !</Description>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32188</IssueID>
    <Title>Open in Terminal for folder does not work with Ubuntu</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (2c3e2c291c515619f64e7c9cddf14c565b7f3d92, 2017-08-08T21:31:44.273Z)
- OS Version: Windows_NT x64 10.0.16251
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.2.11
coldfusion|ili|0.0.10
wordcount|ms-|0.1.0
htmlescape-vscode-extension|ray|0.0.4
spellchecker|swy|1.2.13



---

Steps to Reproduce:

1. Right click on a folder and select open in terminal
2. Opens in /home/ray

I would expect it to be /mnt/c/projects/foo (or some such, the location of my folder)

</Description>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32181</IssueID>
    <Title>Feature request: show the last part of the working directory in terminal title</Title>
    <Description>A new feature was just added that shows the current process name inside the terminal name, like `node` instead of simply `cmd.exe`.

While it's a good thing, I think it could be improved even more by adding the current terminal working directory, or at least the *last part* of the working directory.

Right now, if you start two webpack watches, in a two different directories `c:\dev\project1` &amp; `c:\dev\project2`, you will end up with this:

```
1: node
2: node
```

If there was a way to get the last part of the current working directory, it could look like:

```
1: node &lt;projet1&gt;
2: node &lt;project2&gt;
```

Which I find a lot better. This may not be that easy to do on Windows though.</Description>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32157</IssueID>
    <Title>Visual Code terminal takes too long to abort nodemon with CTRL+C</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
When you press `CTRL + C` when running `nodemon your-file.js`, Visual Code takes several seconds to show prompt again.

Not sure if this is related to mongodb open connection while running the server. Packages used: 

```
{
...
  "engines": {
    "node": "8.2.1"
  },
  "dependencies": {
    "body-parser": "^1.17.2",
    "express": "^4.15.3",
    "lodash": "^4.17.4",
    "mongodb": "^2.2.30",
    "mongoose": "^4.11.5"
  },
  "devDependencies": {
    "expect": "^1.20.2",
    "mocha": "^3.5.0",
    "nodemon": "^1.11.0",
    "supertest": "^3.0.0"
  }
}

```

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Microsoft Windows [Version 10.0.15063]

![image](https://user-images.githubusercontent.com/205577/29091510-97217a4a-7c59-11e7-8111-69336a980db0.png)


Steps to Reproduce:

1. Run `nodemon your-file.js`
2. node app will be running (on a port such as 3000)
3.  click on terminal and press `CTRL+C`
4. Visual Code takes too long to cancel nodemon execution
5. There is no UI info showing if terminal (bash.exe) is processing this cancel request
6. The prompt will be shown after a big delay `youruser@YourPC MINGW64 ~/YourFolder/your-node-rest-api (master)`

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32153</IssueID>
    <Title>Highlighting for PHP breaks when using a namespaced trait</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:22:50.650Z)
- OS Version: Darwin x64 16.6.0
- Extensions: N/A

Steps to Reproduce:

1. Open/Create PHP file with content as follows:

```php
&lt;?php

class ExampleClass {
     // Referencing a trait without namespace works as expected:
    use ExampleTrait;
    $foo = "SUCCESS: This line will highlight properly.";

    // Referencing a trait with a namespace will break highlighting:
    use ExampleNamespace\ExampleTrait;
    $bar = "ERROR: This line will NOT highlight properly.";

    /* Highlighting remains broken across multiple lines,
        and will color ignore things like keywords, comments or quotation marks.
        However, highlighting appears to reset the moment it scans a closing brace, as such: }

        Note that while highlighting has been reset, this line is still broken because VS code did not register the start of this comment block. */

    $baz = "SUCCESS: This line, and subsequent lines, will highlight properly again.";
}

```
2. Compare VS Code highlighting to Markdown highlighting as presented above. After referencing a namespaced trait, syntax highlighting remains broken until the first brace, even if additional content is inserted before or after the $bar.

The issue might be caused by highlighting rules set up for the "use" keyword for importing/aliases or the "use" keyword for delegates, which are two different syntaxes.

Reproduces without extensions: Yes</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32152</IssueID>
    <Title>Mac: click-through from other app should focus on the editor area that was clicked</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:22:50.650Z)
- OS Version: Darwin x64 16.5.0
- Extensions:

Extension|Author (truncated)|Version
---|---|---
python|don|0.7.0



---

Steps to Reproduce:

1. Open Terminal area
2. In Code, click the code area to focus it
3. Switch to another app
4. Click terminal area in Code through another app

The expected behavior for click-through on macOS is that focus goes to the area that you've clicked. For instance, if I have a (standard) Terminal window with two tabs open and the Finder is the foreground program, clicking on a tab on that terminal window will both bring the Terminal app in focus and switch to the tab that I've clicked.

With Code, the actual behavior is that the program goes to the foreground but the focus within the app stays with whatever was focused at the time Code was put to the background.

This frequently causes me to start typing commands in my editor view.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32151</IssueID>
    <Title>Request for new feature</Title>
    <Description>
Request for drag and drop images into markdown docs.

&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32139</IssueID>
    <Title>Vscode doesn't see git repo in nested folder</Title>
    <Description>I've got a situation, where i open folder in vscode, which is not actually a root folder of a project, but an upper folder. It obviously contains nested folder with git repo, but I can't work with this repo in vscode, because it simply can't detect it</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32136</IssueID>
    <Title>Notifications tab</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: 10.12.5 (16F73)

Steps to Reproduce:

1. Close annoying notification to see your open file tabs.
2. Wonder what that notification was about.
3. Notice a lot of unused space next to the Terminal tab.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32133</IssueID>
    <Title>Automated Smoketest failed in "Debugging JavaScript autodetects program attribute for launch.json"</Title>
    <Description>The automated smoke test failed after this commit: 

```
2017-08-07T07:19:07.5367300Z &#x1B;[0m  1) Smoke Test Suite Debugging JavaScript autodetects program attribute for launch.json:
2017-08-07T07:19:07.5394730Z &#x1B;[0m&#x1B;[31m     SyntaxError: Unexpected token } in JSON at position 385&#x1B;[0m&#x1B;[90m
2017-08-07T07:19:07.5419360Z       at JSON.parse (&lt;anonymous&gt;)
2017-08-07T07:19:07.5439110Z       at JavaScriptDebug.&lt;anonymous&gt; (out/areas/javascript-debug.js:41:31)
2017-08-07T07:19:07.5454090Z       at Generator.next (&lt;anonymous&gt;)
2017-08-07T07:19:07.5467850Z       at fulfilled (out/areas/javascript-debug.js:8:58)
2017-08-07T07:19:07.5481780Z       at process._tickDomainCallback (internal/process/next_tick.js:135:7)
```


indexOf error after selecting a debug environment</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32126</IssueID>
    <Title>Broken JavaScript syntax highlighting</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:26:08.116Z)
- OS Version: Linux x64 4.10.0-30-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.10.0
Nix|bbe|1.0.1
path-intellisense|chr|1.4.2
vscode-svgviewer|css|1.4.2
vscode-eslint|dba|1.2.11
python|don|0.7.0
LogFileHighlighter|emi|1.1.1
vscode-nginx-conf-hint|han|0.0.4
docthis|joe|0.4.7
hg|mrc|1.1.5
debugger-for-chrome|msj|3.1.7
vscode-icons|rob|7.12.0
vscode-nginx|sha|0.3.1
change-case|wma|1.0.0



---
Steps to Reproduce:

1. Create an empty `.js` file
2. Add code

```
describe("Test", function() {
    const options = {
        "condition": "&lt;"
    };

    // Comment

    function initialize() { /* Empty */ }
});
```

3. Syntax is broken [(screenshot)](https://drive.google.com/open?id=0B4l6ZVUiBYzbay1CUmRabXNvZTQ)
4. Delete `&lt;` symbol
5. All good now [(screenshot)](https://drive.google.com/open?id=0B4l6ZVUiBYzba21HVUt0RTcxTWM)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32115</IssueID>
    <Title>Remove or support toggle off option for this multiple versions of same file rubbish</Title>
    <Description>Feature request.

This feature you have added (I'm not sure when, I've come back to using VSCode after several months off) where it is now possible to have two versions of the same file in the editor (one is the same name but all lower case) is the worst design decision I have ever encountered for a source code editor app. It is a disaster. It causes me constant doubt, confusion and frustration, even losing code changes on occasion. 

It will likely mean the end of me using VSCode. It's a game breaker for me.
Unless I can turn it off.</Description>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32070</IssueID>
    <Title>HTML Comments not aligned properly after uncommenting</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:22:50.650Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vsc-material-theme|Equ|1.0.2
beautify|Hoo|1.1.1
code-settings-sync|Sha|2.8.2
quokka-vscode|Wal|1.0.46
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.2.11
githistory|don|0.2.3
vscode-html-css|ecm|0.1.7
vscode-npm-script|eg2|0.2.0
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
code-runner|for|0.6.32
docthis|joe|0.4.7
vue|liu|0.1.5
ecdc|mit|0.10.3
vscode-autoprefixer|mrm|2.1.1
vscode-csscomb|mrm|4.0.1
vscode-scss|mrm|0.6.2
debugger-for-chrome|msj|3.1.7
vetur|oct|0.9.3
rewrap|stk|1.4.2
code-spell-checker|str|1.3.4
vscode-todo-highlight|way|0.5.8
better-align|wwm|1.1.6

---

Steps to Reproduce:

1. Add HTML
   ```html
   &lt;div&gt;
     &lt;p&gt;Line 1&lt;/p&gt;
     &lt;p&gt;Line 2&lt;/p&gt;
   &lt;div&gt;
   ```

2. Comment a line
   ```html
   &lt;div&gt;
     &lt;p&gt;Line 1&lt;/p&gt;
     &lt;!-- &lt;p&gt;Line 2&lt;/p&gt; --&gt;
   &lt;div&gt;
   ```

3. Toggle the comment. Notice that toggled line is not properly aligned (there is an unwanted space before the opening `&lt;p&gt;` tag and after the closing `&lt;/p&gt;` tag).

   ```html
   &lt;div&gt;
     &lt;p&gt;Line 1&lt;/p&gt;
      &lt;p&gt;Line 2&lt;/p&gt; 
   &lt;div&gt;
   ```

   To further demonstrate the issue, repeatedly toggle the line comment on/off. Below is the result of toggling the same line on/off ten times.

   ```html
   &lt;div&gt;
     &lt;p&gt;Line 1&lt;/p&gt;
              &lt;!-- &lt;p&gt;Line 2&lt;/p&gt;          --&gt;
   &lt;div&gt;
   ```

   Multi-line comments are also affected. Below is the result of toggling the entire block of HTML on/off ten times:

   ```html
            &lt;!-- &lt;div&gt;
     &lt;p&gt;Line 1&lt;/p&gt;
     &lt;p&gt;Line 2&lt;/p&gt;
   &lt;div&gt;          --&gt;   ```

I believe the expected behavior is for a toggled comment to restore the line's original alignment much like other toggled comments do. It appears that the issue is caused by space characters that are added when commenting (`&lt;!--[SPACE]` and `[SPACE]--&gt;`) which are not removed when uncommenting (only `&lt;!--` and `--&gt;` are removed).

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Thanks!
</Description>
    <CreatedDate>06/08/2017</CreatedDate>
    <ClosedDate>07/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32054</IssueID>
    <Title>"Go to Symbol in Workspace" doesn't find typescript symbols if no .ts file is open</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.11.0



---

Steps to Reproduce:

1. open a folder containing .ts files
2. open a .ts file
3. "Go to Symbol in Workspace"..  for some existing symbol eg. "#a" - it works.
4. close all '.ts' files.
5. repeat step 3. nothing found.


Reproduces without extensions: Yes</Description>
    <CreatedDate>05/08/2017</CreatedDate>
    <ClosedDate>07/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32052</IssueID>
    <Title>怎样调整代码折叠的风格?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

希望的风格
[查看图片](https://raw.githubusercontent.com/jstcodes/source/60603aada06ba4750a5849d00cbddcb11454b6bb/img2.png)

实际的风格
[查看图片](https://raw.githubusercontent.com/jstcodes/source/master/img1.png)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>05/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32045</IssueID>
    <Title>  Message: Request textDocument/documentHighlight failed with message: Cannot read property 'kind' of undefined   Code: -32603 </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>05/08/2017</CreatedDate>
    <ClosedDate>07/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32040</IssueID>
    <Title>Exception if file is missing.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

Steps to Reproduce:
In a definition provider extension;

1. Call `let newDocument = vscode.workspace.openTextDocument(newUri);` with a non existent file.
2. Handle the promise with `.then(resolve, reject)`

In the console, the extension throws;

`[uncaught exception]: [object Object]`

Also see [this](https://github.com/anacierdem/vscode-requirejs/pull/34)</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32039</IssueID>
    <Title>files.include setting OR a [^] "not" character class in files.exclude setting</Title>
    <Description>My use case is that VS Code is great for markdown. I want to be able to open a root folder and *only* show markdown or image files, but ignore everything else. 

Currently, with project settings, you can exclude certain files, but I essentially want the opposite: a setting that will only show files that matter for editing w/in VS Code (in this case, the markdown files). 

As an example, imagine wanting to document your 'My Documents' folders, or your Dropbox folder, etc. with markdown, but not actually wanting to open all files at the root of 'My Documents' in the context of VS Code. You just want to see the overlayed markdown  as use it as a "local wiki", which may or may not contain links to those files. </Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32038</IssueID>
    <Title>Clicking on LR / CRLF on the bottom brings up the menu at the top</Title>
    <Description>When clicking on LF or CRLF on the bottom of the screen in the blue line, the menu to change it to the other line end type comes up all the way at the top of the screen.  That doesn't make any sense if I'm clicking on the bottom and looking at the bottom, the menu should come up next to the area I clicked on, not in a completely different area of the screen.</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32030</IssueID>
    <Title>Integrated Terminal Processes Not Stopped on VSCode Close or Reload</Title>
    <Description>- VSCode Version: 1.14.2
- OS Version: Windows 10 Ent

Steps to Reproduce:

1. Using Vue.js CLI, create a new project
2. Open project with VSCode
3. Open integrated terminal
4. execute command:  npm run dev  (this will start up the auto reload feature of the Vue.js CLI and will launch the browser.)
5. Use the extensions tab and reload an extension or close VSCode.

Easy to follow steps for creating project and launching are here:  [https://vuejs.org/v2/guide/installation.html](https://vuejs.org/v2/guide/installation.html)

**Expected**:  VSCode would gracefully terminate the process running in the integrated command terminal. 

**Actual:** VSCode closes, but leaves the process started by the now closed integrated terminal running.  The only way to terminate the process is to use task manager.  This issue is very difficult to figure out the first time it happens.  In my case, I reloaded VSCode after starting up a terminal process.  When VSCode reopened, I tried re-running:  npm run dev.  I got a bizarre error about having the wrong version of Node.js installed on my machine.  An hour later I figured out what happened, but it was painful.

Please add a feature for VSCode to gracefully terminate any integrated terminal processes before it closes or reloads.

Thank you!!

Karl Shifflett
Microsoft MVP.


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32028</IssueID>
    <Title>Alt button for Menu intermittently working</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. Launch Visual Studio Code
2. Press Alt+F (or any other Alt+ menu combo)

Expected Outcome: File menu would open.

Actual Outcome: nothing happens.

Note: This issue appears to be intermittent.  When I first installed VSCode, the Alt button did not work.  Yesterday, it worked fine for me all day.  Today it is not working again.  I have not been able to identify a pattern yet.</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32014</IssueID>
    <Title>[Feature request] Auto-hide to terminal on focus lost</Title>
    <Description>Feature request to enable auto-hide terminal (or technically, the bottom window that has the terminal) feature similar to regular Visual Studio.

Bottom window has a few states it seems:
- minimized
- visible
- expanded (almost filling the main view)

This is a feature request to add a bit that indicates whether that bottom window goes back to the minimized state whenever focus is lost (clicked in some other part of vscode or something)
</Description>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>32000</IssueID>
    <Title>Include root folder name in other usages of the launch config name</Title>
    <Description>Picker
![image](https://user-images.githubusercontent.com/323878/28943909-5c4f9b66-7855-11e7-82dc-b2d5aec31970.png)

and callstack

![image](https://user-images.githubusercontent.com/323878/28943919-645c35f8-7855-11e7-99ea-04fff09f9a0c.png)
</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31998</IssueID>
    <Title>task not run with integrated shell args</Title>
    <Description>- VSCode Version: 1.14.2
- OS Version: Windows 10

Shell commands in tasks does not get run if there's a startup call linked to the integrated terminal.

shell.bat
`echo Test`

Steps to Reproduce:
1. Use these settings :
```
    "terminal.integrated.shell.windows": "C:\\Windows\\system32\\cmd.exe",
    "terminal.integrated.shellArgs.windows": [
         "/k .\\shell.bat"
    ],
```
with this task :
```
"version": "2.0.0",
"tasks": [{
    "taskName": "Hello World!",
    "command": "echo Hello World!",
    "type": "shell",
    "presentation": {
      "echo": true,
      "reveal": "always",
      "focus": false,
      "panel": "shared"
    }
  }
```
2. Run task.
3. See that "Test" is printed out, but not "Hello World!"

Reproduces without extensions: Yes</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31996</IssueID>
    <Title>JSDoc wrapping long strings not working. Possible to concatenate or have a special format for it to concatenate</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: Windows 10 (64-bit)

Steps to Reproduce:

```
/**
 * GrafConfig is the configuration class that is to be injected into the Graf class
 *      it does not do anything special!
 * 
 * @class GrafConfig
 * @param {Point []} points the (x,y) array of positions for the current graph
 * @param {string} xDescription the title for the x axis to be displayed
 * @param {string} yDescription the title for the y axis to be displayed
 * @param {string} title the title for the graph that will be displayed at the top
 * @param { }
 */
let GrafConfig = function (points, xDescription, yDescription, title) {}

/* this line here you can press ctrl+. after new GrafConfig */
var grafConf = new GrafConfig(graphBucket, "Years old", "daily Income", "age vs income chart");
```

1. you can copy my code from above to start, simply use the function and on the definition press ctrl+. two times to get the JSDoc information
[
![vscode jsdoc bug](https://user-images.githubusercontent.com/10443153/28941234-6287852e-7865-11e7-8b88-acd88044a76c.PNG)
](url)

my question is, if you get a really really long description can we get the wrapping to work nicer? currently it will just break it off in the middle rather then expanding out and wrap in horrible places. if you view my image where the red line is, it should concat

I think I've seen similar issues open but I haven't seen this exact problem open yet.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>03/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31992</IssueID>
    <Title>Changing the theme on an extension readme breaks the font</Title>
    <Description>![aug-03-2017 12-01-49](https://user-images.githubusercontent.com/323878/28938654-8fe8801c-7843-11e7-8241-1f21e08aeec5.gif)
- Click on some extension to view the readme
- Change the theme
- See that the font changes to Times New Roman or something
- Changing the theme again doesn't fix it but reopening the extension readme does.

Assigning to @mjbvz but it doesn't repro on other markdown preview pages.</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>03/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31980</IssueID>
    <Title>PHP use trait with namespace highlight break</Title>
    <Description>The highlighting of a PHP file is broken for this case:

```php
&lt;?php

namespace Foo;

class Bar
{
    use \Foo\Bar\Baz;

    public function baz()
    {
    }
}
```

It produces the following highlight:

&lt;img width="271" alt="capture d ecran 2017-08-03 a 16 50 37" src="https://user-images.githubusercontent.com/419078/28927857-ed50988e-786b-11e7-9ca0-02170e025377.png"&gt;


- VSCode Version: 1.14.2
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Use class with fully qualified namespace like `use \Foo\Bar\Baz`;

Reproduces without extensions: Yes

The issue has been resolved in https://github.com/atom/language-php/pull/249 so I wonder when the PHP grammar will be synced.

Thanks!</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>03/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31969</IssueID>
    <Title>CodeHelper CPU占用率很高 in my MACBookPro 中 ，CPU 很高，不知道什么原因</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: 10.12.5

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31965</IssueID>
    <Title>Terminal hides real exit code</Title>
    <Description>Steps:

- create a terminal using the internal API (e.g. like tasks does)
- register an onExit listener on the terminal instance
- execute a command in a terminal that returns an exit code !== 0 using the -c or /C option to exit the shell after the command has complete

Observe: the exit code passed to the listener is always 0. The underlying reason is that the exit code is the one of the node process we start to start the real terminal. And the node process always returns zero.
</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31963</IssueID>
    <Title>Navigation/Cursor Position with High Surrogate Pairs</Title>
    <Description>- VSCode Version: 1.14.2
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Have a file with a high surrogate pair character in it
2. Keyboard navigate and notice that there are _two_ positions for the cursor before the cursor moves, which affects copying and other positional items, including the `Col` number in the IDE

For example, this text will exhibit the problem:

```
|✔️|
```

Which contains the codepoint `U+2714`.

Reproduces without extensions: **Yes**</Description>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31913</IssueID>
    <Title>Scrollbar and text selection no longer working after reseting powershell integrated terminal</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
PowerShell|ms-|1.4.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31880</IssueID>
    <Title>"Run Task" does not load tsconfig from subfolder the first time</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (f39385b8326671dc6389f21f8c2e2f6afdb352a1, 2017-08-01T05:10:12.703Z)
- OS Version: Linux x64 4.4.0-59-generic
- Extensions: none
---

Testing #31232

Steps to Reproduce:

1. Open new window and add folder containing one subfolder
2. Run Task: only one tsconfig appears when there should be two
![image](https://user-images.githubusercontent.com/7109548/28851919-7e921324-76da-11e7-99bd-e7ac90a8d50d.png)
3. Run Task a second time: both tsconfigs appear
![image](https://user-images.githubusercontent.com/7109548/28852745-645c0aea-76e0-11e7-82b7-5d27906116b7.png)

This is also true for Run Build Task
![image](https://user-images.githubusercontent.com/7109548/28852784-a65ad160-76e0-11e7-88b5-7dc16b1d09bb.png)

</Description>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31879</IssueID>
    <Title>Git clone dialog: right arrow doesn't deselect text</Title>
    <Description>- "Git: Clone" command
- Enter some git url, press enter
- Another quickopen is opened with the text prepopulated with my home dir. The text is selected.
- Press right arrow key
- Nothing happens
- I expect it to deselect text and put the cursor on the right

- If I press the left arrow key, it deselects and puts the cursor on the left

I'm guessing this is related to the feature in quickopen where it opens the selected file in the background when you press the right arrow key. But that isn't relevant here, so it seems like it should be disabled, since it makes it hard to add a subfolder to that text. Also reproes in command palette.</Description>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31855</IssueID>
    <Title>files.exclude does not exclude tsconfig.json tasks from being picked up</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (f39385b8326671dc6389f21f8c2e2f6afdb352a1, 2017-08-01T05:07:59.267Z)
- OS Version: Darwin x64 16.7.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.9.4
lorem-ipsum|Tyr|1.0.0
shell-launcher|Tyr|0.1.1
sort-lines|Tyr|1.3.0
emojisense|bie|0.2.3
vscode-svgviewer|css|1.4.2
python|don|0.6.9
git-project-manager|fel|1.3.2
vscode-scss|mrm|0.6.2
seti-icons|qin|0.1.3
ayu|tea|0.4.0

(2 theme extensions excluded)


---

Testing #31232

This may only be true in a multi-root workspace context.

&lt;img width="820" alt="screen shot 2017-08-01 at 1 28 13 pm" src="https://user-images.githubusercontent.com/2193314/28845571-5f288d50-76bd-11e7-842b-69ee60b24f9a.png"&gt;
</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>01/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31830</IssueID>
    <Title>Keybindings editor retains selection across instantiations</Title>
    <Description>While testing #31784.

- VSCode Version: Code - Insiders 1.15.0-insider (f39385b8326671dc6389f21f8c2e2f6afdb352a1, 2017-08-01T05:07:59.267Z)
- OS Version: Darwin x64 16.7.0

---

Steps to Reproduce:

1. Select `Preferences: Open Keyboard Shortcuts` from the command palette
-&gt; search box has the keyboard focus
2. Type `switch `
3. &lt;kbd&gt;ArrowDown&lt;/kbd&gt; to `Switch Terminal`
4. &lt;kbd&gt;Enter&lt;/kbd&gt; to set keyboard focus in this row
5. &lt;kdb&gt;Cmd+W&lt;/kbd&gt; to close the editor
6. Select `Preferences: Open Keyboard Shortcuts` from the command palette
-&gt; the first row has the keyboard focus instead of the search field
</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31815</IssueID>
    <Title>Cannot read error message because error popup too small.</Title>
    <Description>When building code that might fail for any number of reasons I am commonly unable to even read the error message that pops up because the window only shows part of the first line. The error does not appears in the Problems, Output or Debug panes.

Here I am attempting to execute a Typescript project.

![unreadableerror](https://user-images.githubusercontent.com/18445931/28834685-e28451ee-76da-11e7-8765-5f4d869c36c0.png)

Here's how I created the project:

Create a directory and open VSCode there.

Press F1, enter "Debug: Open launch.json" and when prompted select environment node.js. This will generate a launch.json file configured for node.js.

Press CTRL+' to open the command prompt. Enter "tsc --init" this will generate a tsconfig.json file.
NOTE: tsc must be version 1.6 or greater. Check with "tsc -v", upgrade with "npm install -g typescript".

In tsconfig.json uncomment "sourcemap": "true"
In tsconfig.json uncomment "outdir" and set to "./output".

Press CTRL+SHIFT+B to build, select nodejs build environment.

Press F5 to execute. Error message appears that cannot be read.


- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
path-intellisense|chr|1.4.2
EditorConfig|Edi|0.9.3
vscode-great-icons|emm|2.1.7
auto-close-tag|for|0.4.2
csharp|ms-|1.10.0
debugger-for-chrome|msj|3.1.4
vscode-css-peek|pra|1.2.4
html-css-class-completion|Zig|1.7.0

(1 theme extensions excluded)
</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>03/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31809</IssueID>
    <Title>Code editor does not scroll horizontally when using multiple carets</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.2.11
pgsql|dou|0.0.8
EditorConfig|Edi|0.9.4
JSDocTagComplete|Hoo|0.0.2
vscode-esformatter|how|1.5.2
output-colorizer|IBM|0.1.2
vscode-puglint|mrm|2.3.0
code-spell-checker|str|1.3.2



---

Steps to Reproduce:

1. Open a code editor where the width of the tab is smaller than the longest line of code.
2. Place multiple carets (2 is enough), one being on the longest line of code.
3. Mark to the end of the line, either by dragging horizontally or using keyboard shortcuts.

![image](https://user-images.githubusercontent.com/1658949/28823553-6891e8cc-76be-11e7-9173-163df2082e0c.gif)
</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31796</IssueID>
    <Title>flickering when fullscreen on Ubuntu Zesty + nvidia drivers</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
```
$ code --version
1.14.2
cb82febafda0c8c199b9201ad274e25d9a76874e
```
- OS Version:
```
$ lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 17.04
Release:	17.04
Codename:	zesty
```

- nVidia driver version:
```
$ cat /proc/driver/nvidia/version 
NVRM version: NVIDIA UNIX x86_64 Kernel Module  375.66  Mon May  1 15:29:16 PDT 2017
GCC version:  gcc version 6.3.0 20170406 (Ubuntu 6.3.0-12ubuntu2)
```

Steps to Reproduce:

0. Use nVidia graphics 
1. Launch code
2. Enter fullscreen (press f11)
3. Notice lots of flickering, especially when alt-tabbing between other programs with vscode running visibly in the background

Fortunately there is a perfect workaround, which is to launch with `--force-gpu-rasterization`

gnome users can edit the icon launcher
Edit `/usr/share/applications/code.desktop` and modify the two `Exec` lines to include the new flag:
```
[Desktop Entry]
Exec=/usr/share/code/code --force-gpu-rasterization --unity-launch %U
```
and
```
[Desktop Action new-window]
Exec=/usr/share/code/code --force-gpu-rasterization --new-window %U
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>18/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31792</IssueID>
    <Title>Error opening when upgrading to VSCode 64-bits.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2 x64
- OS Version: Windows 10 14393.953

Steps to Reproduce:

1. Update to VSCode 64 bits.
2. Open VSCode instance.
3. Open integrated terminal.

Error code: 

```No se pudo iniciar el comando de proceso terminal "C:\WINDOWS\sysnative\WindowsPowerShell\v1.0\powershell.exe" (código de salida: 3221225477)```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/1179744/28804119-5684bfea-762f-11e7-94d6-22dfcdaecbe9.png)
</Description>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>01/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31770</IssueID>
    <Title>Terminal launch errors are not reported properly on Windows</Title>
    <Description>Repro:

1. Add settings `"terminal.integrated.shell.windows": "C:\\windows\\Sysnative\\"`
2. Launch terminal

There should be an error message like on Linux/macOS. terminalProcess does not seem to notice that winpty exited.

![image](https://user-images.githubusercontent.com/2193314/28791702-1dd20308-75e2-11e7-9769-8a7d5fb58be5.png)
</Description>
    <CreatedDate>31/07/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31748</IssueID>
    <Title>Can't navigate by call stack in same file if exception thrown when attached to chrome</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:09.706Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated

[vscode_bug.zip](https://github.com/Microsoft/vscode/files/1186656/vscode_bug.zip)

)|Version
---|---|---
project-manager|ale|0.18.1
gitignore|cod|0.5.0
git-extension-pack|don|0.1.2
githistory|don|0.2.2
gitlens|eam|4.3.3
vscode-npm-script|eg2|0.2.0
sublime-babel-vscode|jos|0.2.6
csharp|ms-|1.11.0
debugger-for-chrome|msj|3.1.6
react-redux-es6-snippets|tim|2.1.0
vscode-open-in-github|ziy|1.2.7



---

Steps to Reproduce:

1. Open vscode
2. attach to chrome
3. catch unhandled exception 
4. try to navigate in call stack in same file where exception thrown
video is attached(open in chrome)
&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>31/07/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31718</IssueID>
    <Title>Scrollbar slider on minimap isn't active after click on the track place</Title>
    <Description>Scrollbar slider on minimap doesn't become dragged by the click on the free track place like it does on simple slider [with disabled minimap].

- VSCode Version: 1.14.2
- OS Version: Microsoft Windows [Version 10.0.15063]

Steps to Reproduce:



1. Open any document large enough to have free track place on the scrollbar
2. Enable minimap
3. Mousedown on the free track space of the scrollbar
4. Try to drag mouse (not releasing the button from the previous item)\
Result: slider should be dragged on simple scrollbar, but it isn't. It's not dragged until you release the mouse and grab it again. On the normal scrollbar slider becomes dragged during the first click on free track space.

Reproduces without extensions: Yes</Description>
    <CreatedDate>29/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31662</IssueID>
    <Title>Feature request: vscode extensions in json file</Title>
    <Description> # Feature request
## Feature
It would be nice to have a JSON file with all installed extensions and their versions, like package.json for node modules.

## Example
`extensions.json`
```json
 {
  "akamud.vscode-theme-onedark": "2.0.3",
  "ms-vscode.js-atom-grammar": "0.1.13",
  "...": "...",
}
```

## Use case
For those of us who switches often  between devices it would be easier to manage extensions.</Description>
    <CreatedDate>28/07/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31621</IssueID>
    <Title>Prompt to reopen and save file in admin mode on save of protected file</Title>
    <Description>When attempting to save a file in Windows while not in administrator mode where the file is [protected|read-only|system] pops up a message that the save failed with options like save-as, retry, cancel.  
Add an option to restart visual studio code in admin mode and save.

Try this in notepad++ for an example.</Description>
    <CreatedDate>28/07/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31554</IssueID>
    <Title>Find occurrence show ? in find widget in large file</Title>
    <Description>Testing #30243

File has around 370K lines

![image](https://user-images.githubusercontent.com/10746682/28668061-cc0b9e42-72eb-11e7-8ed9-2e8dbf94abc0.png)
</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31549</IssueID>
    <Title>'End' key does not work in large file</Title>
    <Description>Testing #30243.

1. Generate file as in #31545.
2. Click on the first line somewhere to see a cursor, press 'End' key on the keyboard.

Expectation: navigating to the end of the line.
Ctrl+End does not navigate to the end of the document also.</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31527</IssueID>
    <Title>"Configure Default Build Task" (Typescript) does not work as expected</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Windows 10 Pro 1703 15063.483

Steps to Reproduce:

1. Install typescript:
`npm install typescript --save-dev`.

2. Create `tsconfig.json ` in the project's root directory:
```
{
    "compilerOptions": {
        "target": "es5",
        "module": "commonjs",
        "sourceMap": true,
        "outDir": "./bld",
        "rootDir": "./",
        "strict": true,
        "alwaysStrict": true,
        "moduleResolution": "node"
    }
}
```
3. Create `tasks.json` in `./.vscode`:
```
{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "typescript",
            "tsconfig": "tsconfig.json",
            "presentation": {
                "echo": true,
                "reveal": "never",
                "focus": false,
                "panel": "shared"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
```
4. Create `test.ts` in the project's root directory:
`console.log("Hello, world!");`

5. Open `test.ts` in VS Code editor tab. Press `Ctrl+Shift+B`. Despite isDefault is set to true and 'tsconfig.json' is explicitly specified in `tasks.json`, VS Code still asks to choose default build task: `tsc: build tsconfig.json recently used tasks`. When I press `Ctrl+Shift+B` in the context of other editor tabs, e. g. `tsconfig.json`,  confirmation is not required.

npm tasks work as expected, i. e. I get no additional confirmations if `isDefault: true`.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>03/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31489</IssueID>
    <Title>Minimap noise artifact after resume from suspend on Linux with NVIDIA GPU.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 
Version 1.15.0-insider
Commit f21c311e8db9eff11a605b517525aa6c4dd0f09b
Date 2017-07-25T05:10:14.622Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0
Architecture x64
- OS Version:
Ubuntu 17.04 (Zesty) w/ Kubuntu backported Plasma Desktop 15.10.4 (Should be irrelevant, but noted just in case.)
- NVIDIA Info:
GeForce GTX 750
Driver Version 381.22

Steps to Reproduce:

1. Have document open in vscode.
2. Suspend machine to RAM.
3. Resume from suspend

![minimap-noise](https://user-images.githubusercontent.com/2549985/28651270-d817e6c6-72bb-11e7-8e7d-a492c71060e8.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Extra Notes:

KWin had this problem with several applications, too, but they fixed it here: https://bugs.kde.org/show_bug.cgi?id=344326
Perhaps you can reference their fix when addressing this.</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31451</IssueID>
    <Title>Remapped f4 to 5, and shift-f4 to % in Ubuntu. VS Code doesn't recognize it and opens a "search/repalce" dialog.</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.4.8-040408-generic
- Extensions: the listing exceeds the lower minimum of browsers' URL characters limit
---
I spilled coffee on my keyboard and some of my keys aren't working. I remapped them to function keys. I changed `/usr/share/X11/xkb/symbols/us`  and added:

        key &lt;FK04&gt; {	[	  5,	percent		]	};

I logged out and logged in again and now F4 works as my 5 everywhere. I have tried it in gnome-terminal, vim, gvim, emacs, chrome etc. But VS Code doesn't respect it and opens the "search/replace" dialogue when I press it. 

I have tried it in vs code with all extensions disabled(`code --disable-extensions`) and it didn't work. 

Steps to Reproduce:

1. Remap f4 to 5 as described above. Log out and log in again. f4 should be 5 everywhere.

2. Open vs code and press f4. It opens "search/replace".

</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31393</IssueID>
    <Title>[Feature request] Scroll offset/cursor margin parameter</Title>
    <Description>I'd love to see a similar feature to vims scroll offset: parameter that controls how many columns/rows from the window edge can the cursor be at minimum. Right now it seems to be set to 2 for rows at bottom, 1 for rows at the top, 2 for columns on the right and about 5 for columns on the left.

[Vim wikia page](http://vim.wikia.com/wiki/Keep_your_cursor_centered_vertically_on_the_screen) for reference.</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31384</IssueID>
    <Title>Show root folder name in tabs when same file name is opened in different group</Title>
    <Description>If I have two files with the same name from different root folders open, the root folder is displayed in the tab in grey, as well (there was an issue for this, but didn't found it):
![image](https://user-images.githubusercontent.com/5795847/28571918-464c71ac-7145-11e7-9524-caa327f8b9c0.png)

Viewing one of this files on the side, the root folders are not displayed but should as well:
![image](https://user-images.githubusercontent.com/5795847/28572244-6fbe8e2a-7146-11e7-9092-91c0a25ead10.png)

cc #28344 </Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>17/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31250</IssueID>
    <Title>Error message no Build Task found, when there is a build task defined in the task.json</Title>
    <Description>I've added an attribute to the taskDefinition of the npm task provider:

```json
    "taskDefinitions": [
      {
        "type": "npm",
        "required": ["script"],
        "properties": {
          "script": {
            "type": "string",
            "description": "The npm script to customize"
          },
          "path": {
            "type": "string",
            "description": "The path to the folder of the package.json file that provides the script. Can be ommitted."
          }
        }
      }
    ]
```

Notice that the property `path` is not defined as a required property.

This is the code to create the task definition:

```typescript
	let kind: NpmTaskDefinition = {
		type: 'npm',
		script: script,
		path: rootPath
	};
```

In our [smoke test repository](https://github.com/Microsoft/vscode-smoketest-express.git) we have a setup with an existing task.json file with this contents, that defines a build task:

```json
{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "npm",
            "script": "eslint",
            "problemMatcher": {
                "base": "$eslint-stylish",
                "fileLocation": "absolute"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
```

Running Tasks&gt;Run Build Task... results in:

![image](https://user-images.githubusercontent.com/172399/28462595-27b62728-6e1c-11e7-810c-f5306c126919.png)

The error message should be more specific and tell that the build task was found but that the definition has issues. However, since the property  `path` is not required property, I would have expected that the task the existing build task still works. 

So there appear to be two issues:
- the non-required property in the task definition is not properly handled
- the error message is misleading.
</Description>
    <CreatedDate>22/07/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31213</IssueID>
    <Title>Comments messing up with spaces on HTML/CSS files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: macOS 10.12.6

Steps to Reproduce:

1. Create a new (or open a) HTML/CSS file;
2. Write some text;
3. Keep toggling comment on the line, it will add one space before and one after for every toggle.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Here's a demo: https://streamable.com/rdoze
The only installed extension is Python (0.6.8) by DonJayamanne.
And it was happening on 1.14.1 too.</Description>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>07/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31160</IssueID>
    <Title>Editor rulers disappear at lower zoom levels</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (6afdf303bb8f70d840c12a43c036e98a9da50d41, 2017-07-05T09:01:45.828Z)
- OS Version: Darwin x64 16.6.0

Steps to Reproduce:

1. Zoom out the text editor one step (Cm + -)
2. Toggle the side bar so that it is visible then slowly resize it. At certain positions, the ruler dissapears.

I'm _guessing_ that this is happening because scaling is handled using a cheap algorithm that's throwing away the one-pixel ruler at certain widths. In which case it might be handy to have an `editor.rulerWidth` property so that I can set the ruler to be 2 or 3 pixels wide, etc.

Reproduces without extensions: Yes</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30947</IssueID>
    <Title> Cannot read property 'properties' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;99348f52-f7f8-598c-e45e-8e6cd5fc8a8b&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.14.1&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'properties' of undefined&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1149:31 (properties)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1149:31 (properties))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1384:41 (from)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1384:41 (from))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1733:23 (from)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1733:23 (from))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1692:29 (createTaskRunnerConfiguration)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1692:29 (createTaskRunnerConfiguration))&lt;br /&gt;[/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1780:52 (run)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/node/taskConfiguration.ts#L1780:52 (run))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1366:33 (parse)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1366:33 (parse))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1361:43 (then)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1361:43 (then))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1360:23 (then)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L1360:23 (then))&lt;br /&gt;</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30842</IssueID>
    <Title>No longer seeing console output</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-eslint|dba|1.2.11
pgsql|dou|0.0.8
EditorConfig|Edi|0.9.4
JSDocTagComplete|Hoo|0.0.2
vscode-esformatter|how|1.5.2
output-colorizer|IBM|0.1.2
vscode-puglint|mrm|2.3.0



---

Steps to Reproduce:

1. Start a program that uses bunyan for logging.
2. To make the bunyan output readable, pipe the output through bunyan-cli.
To do so, create a `pipe-bunyan.cmd` with the following content:
```
@ECHO OFF
node %* | bunyan -o short
```
3. Specify the script as a `runtimeExecutable`, like so:
```
"runtimeExecutable": "${workspaceRoot}\\.scripts\\pipe-bunyan.cmd",
```

There is no output in the debug console. This used to work fine before.</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30809</IssueID>
    <Title>Enhance brackets features</Title>
    <Description>I'm migrating from Atom to vscode and one of the few features that I constantly use is `Select Inside Brackets`, I'd like to ask if there's any planning to implement this feature.
Vscode already has `Go to Bracket`, but I can't go to any wrapping bracket when the cursor is in any line inside the wrapping brackets, it would be a helpful enhancement being able to do that (I'm used to this in Atom).
By the way, I am really enjoying vscode and at the same time expecting it to get even better.</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30771</IssueID>
    <Title>Menu keybinding labels are not translated according to locale</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.11.0

---

The menu "Los" is not understandable. Is it a fate, or a lot, or a batch, or does it mean "Let's go!" Go … where? Was that "Go" in English? That would be "gehen" in German. Probably just a stupid as in English. It might be helpful to use the translation for "Go to" which would be "Gehe zu". Some commands in that menu are actually called "Gehe zu (…)".

The second command in that menu is "Weiterleiten" which means forwarding something to somebody. An e-mail message for example, that can be forwarded. From the surrounding commands I guess that you did not mean "to forward" but "the direction forward" which is "vorwärts" in German. The opposite of "zurück" ("back").

Also, the hotkeys are highly inconsistent. Some are positioned at the right end of the menu popup, in grey colour, but completely in English. Others are appended to the command text, left-aligned, in black colour, and partially translated ("Ctrl" was translated to "STRG" (correct would be "Strg") and arrow key names are still in English). These have brackets around them. Why does it look like somebody threw a bomb in there?</Description>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>13/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30634</IssueID>
    <Title>Tasks execution adds a '&lt;' in the line's end, renders it useless. </Title>
    <Description>Note: I'm using Bash as my default terminal
{
    "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    "editor.wordWrap": "off",
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 5000,
    "editor.formatOnSave": true,
    "window.zoomLevel": 0
}

---

- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-angular2-component-generator|dba|0.0.3
githistory|don|0.2.1
vscode-generate-getter-setter|DSK|0.4.2
auto-close-tag|for|0.4.3
beautify|Hoo|1.1.1
JSDocTagComplete|Hoo|0.0.2
Angular2|joh|2.3.3
node-module-intellisense|lei|1.3.0
dotenv|mik|1.0.0
prettify-json|moh|0.0.3
debugger-for-chrome|msj|3.1.6
vscode-docker|Pet|0.0.16
higlight-matching-tag|vin|0.1.1



---

Steps to Reproduce:

1.Run any Task, e.g. npm: run start
2.In the terminal see:
&gt; Executing task: npm run start &lt;


Usage: npm &lt;command&gt;

where &lt;command&gt; is one of:
    access, adduser, bin, bugs, c, cache, completion, config,
    ddp, dedupe, deprecate, dist-tag, docs, doctor, edit,
    explore, get, help, help-search, i, init, install,
    install-test, it, link, list, ln, login, logout, ls,
    outdated, owner, pack, ping, prefix, prune, publish, rb,
    rebuild, repo, restart, root, run, run-script, s, se,
    search, set, shrinkwrap, star, stars, start, stop, t, team,
    test, tst, un, uninstall, unpublish, unstar, up, update, v,
    version, view, whoami

npm &lt;cmd&gt; -h     quick help on &lt;cmd&gt;
npm -l           display full usage info
npm help &lt;term&gt;  search for help on &lt;term&gt;
npm help npm     involved overview

Specify configs in the ini-formatted file:
    C:\Users\Nuke\.npmrc
or on the command line via: npm &lt;command&gt; --key value
Config info can be viewed via: npm help config

npm@4.2.0 C:\Users\Nuke\AppData\Roaming\npm\node_modules\npm

Terminal will be reused by tasks, press any key to close it.



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30550</IssueID>
    <Title>Problem matchers can't match correctlly if output line is longer than width of Integrated Terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: Windows7 and 8.1
- Extensions: C/C++ 0.12.0

Steps to Reproduce:

1. Narrow down the width of Integrated Terminal.
2. Run build task with problem matchers.

VSCode 1.14.0 with tasks.json 2.0.0 executes tasks in Integrated Terminal and compiler's outputs are wrapped to match with terminal width. This causes issue on problem matchers.

Here is example.
![image](https://user-images.githubusercontent.com/30130109/28141491-9f9a5974-6711-11e7-8c24-953938a7efe1.png)
![image](https://user-images.githubusercontent.com/30130109/28141497-a72e140a-6711-11e7-9245-f2e425f70e60.png)

![image](https://user-images.githubusercontent.com/30130109/28141504-ae865866-6711-11e7-9963-ba5939df0448.png)
![image](https://user-images.githubusercontent.com/30130109/28141507-b2055e2e-6711-11e7-8271-8ff855616e28.png)


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30477</IssueID>
    <Title>macOS: Select all does not work in file picker</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: macOS Sierra 10.12.5

Steps to Reproduce:

1. Open a new File, Save As... (file picker appears)
2. Click at the end of the filename or use cursor (selection of "Untitled-1" gone)
3. Cmd+A or to select all characters does not work in the filepicker</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30456</IssueID>
    <Title>Add duplicate Current line or current selection by shortcut </Title>
    <Description>In notepad++ I can duplicate current line or selection Text by pressing Ctrl+D. It's similar to Copy and Paste  right after caret position. Hope that, I can do the same in Vscode</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30331</IssueID>
    <Title>Missing editorGroupHeader colorization option</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Ubuntu 16.04

![sc_vs_code](https://user-images.githubusercontent.com/2027300/28017876-3b535014-65a5-11e7-8f7f-b2bf6bfba076.png)

There seems to be no editable foreground color properties for **editorGroupHeader** in the **workbench.colorCustomizations** option. What I want to do is to change the color of the icons on the top right corner of the editor. Options that are available: editorGroupHeader.tabsBackground, editorGroupHeader.noTabsBackground, and editorGroupHeader.tabsBorder.

Reproduces without extensions: Yes</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30159</IssueID>
    <Title>Scrolling extremely slow using precision touchpad </Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.4|
|cake-vscode|cake-build|0.6.0|
|npm-intellisense|christian-kohler|1.3.0|
|vscode-svgviewer|cssho|1.4.2|
|vscode-eslint|dbaeumer|1.2.11|
|xml|DotJoshJohnson|1.9.2|
|EditorConfig|EditorConfig|0.9.3|
|tslint|eg2|0.16.0|
|vscode-npm-script|eg2|0.2.0|
|beautify|HookyQR|1.1.1|
|Angular2|johnpapa|2.3.3|
|csharp|ms-vscode|1.11.0|
|PowerShell|ms-vscode|1.4.1|
|debugger-for-chrome|msjsdiag|3.1.6|
|vscode-docker|PeterJausovec|0.0.16|
|autoimport|steoates|1.2.2|
|cucumber|stevejpurves|0.9.6|;


---

Steps to Reproduce:

1. Use two finger gesture to scroll a document
2. Take 1-3 seconds to actually scroll

However, if I use a mouse (exactly on the same document) I can scroll without any issues.
Not sure if it's worth mentioning, but I'm using a Dell XPS 15 with a 4K display.</Description>
    <CreatedDate>05/07/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30022</IssueID>
    <Title>Using the Find Widget (CTRL+f) adds padding/margin/something above first line of code</Title>
    <Description>So I noticed that whilst using the Find widget (CTRL+f), padding/margin/something is added above the first line of code.
![Issue in action](http://i.imgur.com/I44S4jz.png)

It seems to be about the same height as the find widget's height. So I'm guessing it's responsible. Actually if you close the widget the spacing disappears along with it.

Honestly, I don't even know if this is a bug.

- VSCode Version: 1.13.1
- OS Version: Windows 10

Steps to Reproduce:

1. Open a file
2. Press CTRL+f
3. Scroll up (if you don't see a chasm above the first line of code), otherwise you should already be seeing it.

Reproduces without extensions: Yes

P.S. Sorry for adding another issue onto your issue list 😆 </Description>
    <CreatedDate>02/07/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29965</IssueID>
    <Title>Visual Studio Code 1.13.1 only highlights for up to 2079 lines</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Windows 10
- Reproduces without extensions: Yes
extensions installed:
ms-vscode.cpptools,
lukehoban.go

- Steps to Reproduce

1. Open or create a text file with more than 2079 lines, eg: Untitled-1.txt.
2. Make sure there is one word, eg: hello, repeats in more than 2079 lines.
3. Put cursor caret on that repeated word: hello
4. Use Ctrl-F to find the repeated word: hello
5. Check for the repeated word (ubuntu in my screenshots) repeates at line: 2081 

![visual studio 1 13 1 code highlights 1](https://user-images.githubusercontent.com/9011764/27748660-d620f90c-5e02-11e7-8ec6-a2bf8673a723.png)
![visual studio 1 13 1 code highlights 2](https://user-images.githubusercontent.com/9011764/27748661-d64bd3c0-5e02-11e7-9542-fe0e5b7b0326.png)
</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29846</IssueID>
    <Title>VS Code forgets previous shortcut filters</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: any
- OS Version: mac os

Steps to Reproduce:

1. Select menu code/preferences/shortcuts
2. enter something to filter shortcuts. Example: duplicate lnes
3. change tabs
4. VS code forgets previous filters

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

Expected: keep previous data and filter entered by the user.</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29322</IssueID>
    <Title>Update badge won't be shown everytime</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (779a7dfa682e31d870680caea572a11d009ab447, 2017-06-23T05:59:57.891Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
path-intellisense|chr|1.4.2
gitlens|eam|4.1.3
tslint|eg2|0.15.0
LogFileHighlighter|emi|1.1.1
vscode-reveal|evi|0.0.9
php-debug|fel|1.10.1
php-intellisense|fel|1.4.1
auto-close-tag|for|0.4.2
gc-excelviewer|Gra|1.1.15
GitHubIssues|Hoo|0.1.2
composer|ika|0.5.0
smarty|imp|0.2.0
json-to-ts|Mar|1.4.3
vscode-apache|mrm|1.1.1
cpptools|ms-|0.11.4
php-docblocker|nei|1.2.0
vscode-versionlens|pfl|0.19.1
vscode-icons|rob|7.9.0
sharecode|Rol|0.4.1
code-spell-checker|str|1.2.0
vscode-todo-highlight|way|0.5.5
highlight-trailing-white-spaces|yba|0.0.2

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Wait for a new insiders release (for days)
2. Get nervous and click on the update wheel and see, it says I need to restart to update (but there is no update badge that says that there is an update)
3. WHY DOESN'T IT TELL ME THAT THERE IS AN UPDATE????????

(sorry for the rant, I was waiting for 4 days...)</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28332</IssueID>
    <Title>.gitignore files are not respected in the project search and ctrl+p</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:41:25.571Z)
- OS Version: Linux x64 4.4.0-78-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.1.1|
|vscode-docker|PeterJausovec|0.0.15|
|ReactSnippetsStandard|TimonVS|1.1.0|
|jsx|TwentyChung|0.0.1|
|html-css-class-completion|Zignd|1.7.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-eslint|dbaeumer|1.2.11|
|auto-close-tag|formulahendry|0.4.2|
|vue-snippets|hollowtree|0.1.1|
|spacegray-vscode|ionutvmi|1.2.3|
|theme-chromodynamics|lei|1.0.8|
|vue|liuji-jim|0.1.5|
|Go|lukehoban|0.6.61|
|ruby-rubocop|misogi|0.3.5|
|HTMLHint|mkaufman|0.3.3|
|atom-keybindings|ms-vscode|2.0.1|
|latex|ms-vscode|0.1.3|
|Ruby|rebornix|0.12.1|
|guides|spywhere|0.7.0|
|code-spell-checker|streetsidesoftware|1.1.0|
|vscode-todo-highlight|wayou|0.5.5|
|change-case|wmaurer|1.0.0|
|JasmineSnippets|xabikos|0.2.1|
|JavaScriptSnippets|xabikos|1.4.0|
|ReactSnippets|xabikos|1.3.0|;


---
The files I have excluded using my .gitignore are coming up in project search and ctrl+p but they are not shown in the diff. This causes my system to slow down when searching and also show unwanted results.

Can some please tell me how to fix this. I can provide more details as required.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28036</IssueID>
    <Title>Args not working in tasks.json using - "_runner":"terminal"</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows 10
- Terminal: Bash for Windows
```
{
    "version": "0.1.0",
    "options": {
        "cwd": "${workspaceRoot}"
    },
    "_runner": "terminal",
    "tasks": [
        {
            "taskName": "Install Pip Dependancies",
            "command": ".env/bin/python",
            "isShellCommand": true,
            "args": ["-m", "pip", "install", "-r", "requirements/dev.txt"],
            "showOutput": "always"
        }
    ]
}
```
Running this task does not act as expected, it opens the terminal as it should, then it opens a python interpreter, ignoring all my nice args. Have I done something wrong or is it a bug? I've deleted all my other tasks for legibility.
</Description>
    <CreatedDate>05/06/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27850</IssueID>
    <Title>Reveal selected launch config when selecting configure</Title>
    <Description>* have a complex `launch.json`-file (like ours)
* have one entry select, like "Attach To Main process"
* select the configure gear icon
* the file opens but reveal my last edit location and I have to hunt for the current config. I'd say usability can be improved by revealing the source of "Attach to Main process"
</Description>
    <CreatedDate>01/06/2017</CreatedDate>
    <ClosedDate>04/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27395</IssueID>
    <Title>Opened search adds extra-lines</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (770206ab9c6357943a2145bd3ea49b667f3ff539, 2017-05-26T05:14:23.944Z)
- OS Version: Windows_NT ia32 10.0.16199
- Extensions: the listing length exceeds browsers' URL characters limit
---

Steps to Reproduce:

1. Open search
2. Switch to another file
3. Switch back
4. Scroll

![image](https://cloud.githubusercontent.com/assets/10401817/26527596/491d7478-43c1-11e7-959d-93abc699628c.png)
</Description>
    <CreatedDate>28/05/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27068</IssueID>
    <Title>windows set terminal to bash cause workspaceRoot incorrect</Title>
    <Description>My question is similar to issue [20097](https://github.com/Microsoft/vscode/issues/20097)，it was closed
in Feb 8,but i still face this problem,my vscode version:1.12.2

"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
 launch.json:
```
{
    "type": "node",
    "request": "launch",
    "name": "Nodemon",
    "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/nodemon",
    "args": ["--config", "nodemon.json"],
    "protocol": "inspector",
    "runtimeArgs": [
      "--inspect=5858"
    ],
    "port": 5858,
    "console": "integratedTerminal"
  }
```
console error:"bash: e:fda_hch/node_modules/.bin/nodemon: No such file or directory"
i think it lose '/' in my workspaceRoot.
swith:'protocol': 'legacy',and "--inspect=5858" to "debug=5858" not solve my problem,timeout and suggest
me to use inspector.</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26497</IssueID>
    <Title>Can you make it potarble？</Title>
    <Description>Everything is in the only  one folder.just like this:    https://github.com/garethflowers/vscode-portable</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25944</IssueID>
    <Title>Code Commenting Doesn't Uncomment Block Comments</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:10:14.237Z)
- OS Version: Darwin x64 16.5.0
- Extensions: none
---

Steps to Reproduce:

1. New Javascript React file

2. Seems to only try to do block commenting on jsx components like:
```
class App extends Component {
  render() {
    return (
      &lt;div className="App"&gt;
        &lt;div className="App-header"&gt;
          &lt;h1&gt;Test App&lt;/h1&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    );
  }
}
```

3. Hit Cmd( or Ctrl)+/ to comment the whole code and it will put /* */ around it

4. Hit Cmd( or Ctrl)+/ and you expect it to uncomment, but it just puts line comments // on the selection 

![snip20170505_1](https://cloud.githubusercontent.com/assets/437566/25728429/5844827c-3172-11e7-8f6f-18f7ca7028c3.png)
</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>13/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25686</IssueID>
    <Title>how to go to definition with react className attribute</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version:macos 10.12.1

how to locate to scss file when I use go to definition with className in *.jsx or *.tsx file
  `render() {
        return (
            &lt;div className="app" &gt;
            &lt;/div&gt;  
        )
    }`</Description>
    <CreatedDate>30/04/2017</CreatedDate>
    <ClosedDate>22/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25684</IssueID>
    <Title>highlight newlines decorationOptions</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Arch Linux

It seems that when you set decorations, the decoration isn't applied to newlines. In this case, the decoration is being applied across three lines, but as you can see, the newline is not decorated.

Would be nice for this issue: https://github.com/VSCodeVim/Vim/issues/1575
![](http://i.imgur.com/4iInV7q.jpg)</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25329</IssueID>
    <Title>Feature request: Ability to open the integrated terminal drawer from the right side of editor</Title>
    <Description>It would be fantastic if the drawer that the integrated terminal lives in could be opened from the right side of the editor window like a vertical split. 

I end up running into this situation from time to time:

![screen shot 2017-04-25 at 2 03 58 pm](https://cloud.githubusercontent.com/assets/2437424/25402943/1b64d88e-29c0-11e7-805e-2b27af483764.png)

I have ton of empty space on the right side of my editor, I'd like to have my editor and terminal open at the same time, and I have to scroll up and down in my editor to see everything or close the terminal. 

It's not a problem, def don't mind doing it, but it would be cool if I could change what side of the editor the drawer opens on. 

It would be _super great_ if that configuration could be bound to a hot key or updated from the command palette so that the direction could be changed on the fly. 

Thanks for considering the request!
</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>21/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24072</IssueID>
    <Title>workspaceRoot invalid on Git Bash and WSL</Title>
    <Description>- VSCode Version: 1.11.0
- OS Version: Windows 10

Steps to Reproduce:

1. Set default shell to Git Bash or WSL (CTRL+SHIFT+P - "shell")
2. Run a launch task using `${workspaceRoot}`

Here's an example launch config:

```json
{
  "name": "Debug All (node2)",
  "type": "node2",
  "request": "launch",
  "protocol": "inspector",
  "stopOnEntry": false,
  "args": [
    "--nolazy",
    "${workspaceRoot}/debugall.js"
  ],
  "cwd": "${workspaceRoot}/",
  "preLaunchTask": null,
  "runtimeExecutable": null,
  "env": {
    "NODE_ENV": "development"
  },
  "sourceMaps": false,
  "outDir": null,
  "console": "integratedTerminal",
  "skipFiles": [
    "&lt;node_internals&gt;/**",
    "**/node_modules/**"
  ]
},
```

Running this with the Powershell terminal works just fine. When running in WSL or Git Bash, the `${workspaceRoot}` uses backslashes in the path and fails:

```sh
$ cd c:\dev\projectname/ ; env NODE_ENV=development node --inspect=32931
 --debug-brk --nolazy c:\dev\projectname/debugall.js
bash: cd: c:projectname/: No such file or directory
Debugger listening on port 32931.
Warning: This is an experimental feature and could change at any time.
To start debugging, open the following URL in Chrome:
    chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&amp;v8only=true&amp;ws=localhost:32931/afb2c
73f-e645-4693-91bf-fc4b5a6364f8
Debugger attached.
module.js:471
    throw err;
    ^

Error: Cannot find module 'c:\dev\projectname\devprojectname\debugall.js'
    at Function.Module._resolveFilename (module.js:469:15)
    at Function.Module._load (module.js:417:25)
    at Timeout.Module.runMain [as _onTimeout] (module.js:604:10)
    at ontimeout (timers.js:365:14)
    at tryOnTimeout (timers.js:237:5)
    at Timer.listOnTimeout (timers.js:207:5)
Waiting for the debugger to disconnect...
```

Note that these commands will work in Git Bash if the backslashes are converted to the proper forward-slashes:

```sh
$ cd c:\dev\projectname
bash: cd: c:devprojectname: No such file or directory
$ cd c:/dev/projectname
[no error]
$ node c:/dev/projectname/debugall.js
[runs without error]
```

Converting the slashes doesn't fix WSL, though. In Git Bash the drives are mounted like `/c/` for `c:\`. In WSL they're mounted at `/mnt/c/`, so it may require changing the drive part of `${workspaceRoot}` depending on the shell you have selected. We could hard-code the workspace root, but that forces everyone to use a *nix based shell and have the project in the same path on their different machines.</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23656</IssueID>
    <Title>Implement overflow design for the panel title</Title>
    <Description>* open terminal
* make editor narrow
&gt; 🐛 the actions get cropped instead of scrolling the tab which is what happens to editor tabs

&lt;img width="503" alt="screen shot 2017-03-30 at 11 04 58" src="https://cloud.githubusercontent.com/assets/1794099/24496637/0f60d632-1539-11e7-9db2-743b7be598b8.png"&gt;
</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22955</IssueID>
    <Title>Windows : Opens in wrong RDP Session</Title>
    <Description>- VSCode Version: 1.10.2
- OS Version: Windows 2012 R2 Server

Steps to Reproduce:

1. Connect to server using RDP as Administrator (Session 1)
2. Open VS Code
3. Have another person connect to server using RDP as Administrator (Session 2)

If the user in Session 2 tries to open VS Code it creates a new window in Session 1. likewise if they double click an associated file it opens in VS Code in Session 1.
</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>13/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22653</IssueID>
    <Title>Support to Auto hide panels</Title>
    <Description>
# Please add auto hide feature for panels such  output, terminal, ...
</Description>
    <CreatedDate>15/03/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22360</IssueID>
    <Title>Provide command to toggle minimap in the menu</Title>
    <Description>From twitter:

![image](https://cloud.githubusercontent.com/assets/172399/23786830/6bdd70ac-056f-11e7-9d09-9ebe8fef8147.png)

It is a valid request given that we have toggles for all the other UI elements
![image](https://cloud.githubusercontent.com/assets/172399/23786907/b9a19980-056f-11e7-9def-d48e5ae65fed.png)


// fyi @alexandrudima 

</Description>
    <CreatedDate>10/03/2017</CreatedDate>
    <ClosedDate>30/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22067</IssueID>
    <Title>Allow extensions to participate in tasks using commands</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

Currently the task framework can only trigger external commands (programs or shell scripts). Since Ctrl+Shift+B is taken by the task framework we should allow extension to participate in 'build' and 'test' (and any other composite task) by executing a command in the extension itself.
</Description>
    <CreatedDate>06/03/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19334</IssueID>
    <Title>Debug console using integrated terminal should not run under the user defined shell</Title>
    <Description>Testing #19039

The command should be launched using `bash -c` or `cmd /c` (I think), which will run it under a consistent shell and exit upon completion. You can also now tell the terminal to wait on exit using the `waitOnExit` arg on `TerminalInstance`.

Starting debug under git bash:

![image](https://cloud.githubusercontent.com/assets/2193314/22276962/8ef11ec0-e26c-11e6-8bf2-e56a5dda55d8.png)

Support for reusing terminals is also on the way which could be useful.</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18322</IssueID>
    <Title>Feature request: Make "Go to Bracket" work with selections</Title>
    <Description>- VSCode Version: Version 1.8.1 (1.8.1)
- OS Version: OS X 10.11.4 (15E65)

With some code like this:

```
{
   blah
}
```

1. Move the cursor after the closing brace.
1. Hit &lt;kbd&gt;cmd&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;\\&lt;/kbd&gt; to bounce to the matching open brace.
1. Now _select_ the closing brace.
1. Hitting &lt;kbd&gt;cmd&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;\\&lt;/kbd&gt; does nothing.

It should select the braces and everything in between them. I use this in vim (with `v%`) all the time to copy/paste code blocks.</Description>
    <CreatedDate>09/01/2017</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17410</IssueID>
    <Title>Markdown preview mode, doesn't show(update) modifies images.</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:38:28.425Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.6.0|
|EditorConfig|EditorConfig|0.3.4|
|jslint|ajhyndman|1.2.1|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.2|
|tslint|eg2|0.7.1|
|cpptools|ms-vscode|0.9.3|
|debugger-for-chrome|msjsdiag|2.4.0|
|Spell|seanmcbreen|0.9.1|
|vim|vscodevim|0.4.9|

---

Steps to Reproduce:

1. Open markdown file with an image
2. Open preview
3. Go to split view (or not) one side with markdown file, the other in preview mode
4. Edit a image file referenced by the markdown.

* Expect to see the updated image in Preview.
* Also there is no way to manually refresh Preview.

![screen shot 2016-12-16 at 1 56 50 pm](https://cloud.githubusercontent.com/assets/439226/21274716/8ffc3df2-c397-11e6-93d2-c12d636e7e8c.png)
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15962</IssueID>
    <Title>Zombie extension host</Title>
    <Description>Write an extension that does `while(true);` and run it. Restart VS Code and notice you have zombie extension host process running forever on your system.</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14089</IssueID>
    <Title>Missing Sublime Text command - Expand selection to brackets</Title>
    <Description>While building this [extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.sublime-keybindings) to map Sublime Text default keyboard shortcuts to VS Code, I found that this feature is missing. 

The feature is expand to brackets. 

**Default Sublime Text keybindings**
Windows / Linux: &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;m&lt;/kbd&gt;
Mac: &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;m&lt;/kbd&gt;

![expand_selection_by_brackets](https://cloud.githubusercontent.com/assets/2449568/19564915/f31df09a-9699-11e6-9a6c-65b481c2f80d.gif)

Today an [extension](https://marketplace.visualstudio.com/items?itemName=guosong.bracketselection) exists with this functionality. I believe we should bring this feature into the product. 
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>11/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9657</IssueID>
    <Title>Markdown extension enhancement (update on css change)</Title>
    <Description>In addition to rerendering the markdown preview of a markdown file when the contents of the document change, it should also rerender when any of the associated styles (from `"markdown.styles"`) are modified. If I get time, I will attempt to take a stab at this.
</Description>
    <CreatedDate>23/07/2016</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31654</IssueID>
    <Title>Color picker has selector in the wrong position?</Title>
    <Description>testing #31457

* hover on color blue
* picker comes up
* :bug: the little selector-circle isn't on a color that is anywhere blue, now when I start dragging it I pick a very different color which is unexpected

&lt;img width="368" alt="screen shot 2017-07-28 at 12 12 09" src="https://user-images.githubusercontent.com/1794099/28713124-1daef800-738e-11e7-9dd9-77d74102fd91.png"&gt;</Description>
    <CreatedDate>28/07/2017</CreatedDate>
    <ClosedDate>28/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31625</IssueID>
    <Title>Feature request for easier terminals switching</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Windows 10

It is very difficult to open the next terminal with the select box. It is very good if we have a next level of tab to open different terminals as shown below. Now i am finding very difficult to switch between terminals.

Steps to Reproduce:

1. Open multiple terminals


**Current screen -** 
![cr](https://user-images.githubusercontent.com/2102862/28705531-deda4f26-738d-11e7-93f5-75d58ac6ab5b.PNG)

--------------------------------------------------------





**Suggestion for some more easily usable multi terminals view**
![easily-usable](https://user-images.githubusercontent.com/2102862/28705568-051af2c6-738e-11e7-84be-881e1b0dc7ca.png)




&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>28/07/2017</CreatedDate>
    <ClosedDate>28/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31579</IssueID>
    <Title>Not able to run debug configurations named the same</Title>
    <Description>Testing #31396

1. Have a workspace with `css` and `html` extensions.
2. Run `Launch Extension (css)` configuration -&gt; Debug starts
3. Run `Launch Extension (html)` configuration

Observe that no new debug session is started.</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31572</IssueID>
    <Title>Settings: gray out decoration comes too late</Title>
    <Description>Refs: #31448

1. Multi root workspace, open folder settings
2. Add some forbiden setting like workbench.colorTheme, notice that it does not get greyed out. So now me as a user am puzzled why it is not being applied
3. If i press enter it gets greyed out or if I open the file again

I think you should update all decorations on every save event in the settings file</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31570</IssueID>
    <Title>Weird selection color of setting on margin hover</Title>
    <Description>Refs: #31448

Hover over the margin in the settings, notice we use a weird color to decorate the settings line.
In light theme it is banana yellow and in dark it is gray.
I do not think we use these colors in other places. Could we instead use a well known color?

Maybe the debug top stack frame decoration color?

![screen shot 2017-07-27 at 15 10 49](https://user-images.githubusercontent.com/1926584/28671749-0ec70ffe-72de-11e7-9e48-6440b9566439.png)
</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31538</IssueID>
    <Title>Give a name to a Terminal session</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: Windows 10

It would be awesome to be able to give a name to a Terminal session. I oftenly have 5 or 6 Terminals opened.

![image](https://user-images.githubusercontent.com/5808108/28663801-b02a31d4-72be-11e7-819c-63b7c4e6e15c.png)
</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31514</IssueID>
    <Title>Custom snippet file should have a schema</Title>
    <Description>Refs: #31324

Currently editing a javascript.json when editing custom snipets for javascript is a bit tricky because there is no schema.
Having a shema would make the user experience nicer and would make it easier to discover fields, defaults values and so on</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31486</IssueID>
    <Title>"Configure or fix launch.json" button doesnt create or open launch.json file</Title>
    <Description>Using Insiders dated 26th July 2017

Clicking on the "gear" in the debug viewlet that usually opens the launch.json file (or creates it if it doesnt exist) doesnt work.

![image](https://user-images.githubusercontent.com/16890566/28648751-df9b0a1e-7224-11e7-9ff1-8f29c38fe3e0.png)
</Description>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31470</IssueID>
    <Title>Generalize `TextEditor`-related APIs</Title>
    <Description>As far as I know there is no API for working with "non-text editors", for instance if we open an unsupported binary file it would be useful to be able to get it's path, so that we can provide some "Open in %APP%" commands for it.

What do you think?</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31467</IssueID>
    <Title>Unable to debug node.js app</Title>
    <Description>- VSCode Version: Version 1.15.0-insider (1.15.0-insider)
- OS Version: Mac OS Sierra

Steps to Reproduce:

Out of the sudden an existing node js project does no longer debug. On start debugging I'm getting a request to choose the environment from a list. Choosing node.js gives an error:


```
Attribute 'program' is not absolute ('${workspaceRoot}/index.js'); consider adding '${workspaceRoot}/' as a prefix to make it absolute.

```

Launch.json was fine for the versions before and is like this:


```
{
	// Use IntelliSense to learn about possible Node.js debug attributes.
	// Hover to view descriptions of existing attributes.
	// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
	"version": "0.2.0",
	"configurations": [
		
		{
			"type": "node",
			"request": "launch",
			"name": "Programm starten",
			"program": "${workspaceRoot}/index.js",
			"cwd": "${workspaceRoot}"
		},
		{
			"type": "node",
			"request": "attach",
			"name": "An den Prozess anfügen",
			"port": 5858
		}
	]
}


```

Trying to add a new debug config to no avail. 

Same does work with ordinary VSCode.
</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31459</IssueID>
    <Title>regression: find-in-files not excluding files.exclude folders</Title>
    <Description>- VSCode Version:1.14.2
- OS Version:WIn 10

```Find-in-files``` is not excluding folders in workspace settings ```files.exclude``` .  Was working in 1.13

&lt;img width="872" alt="capture" src="https://user-images.githubusercontent.com/3818866/28631121-cb83dc46-71f1-11e7-9888-4ebfffc3eaae.PNG"&gt;
</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31456</IssueID>
    <Title>Cannot read property 'openConfigFile' of undefined</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (ae73f8ee6f8ddb87b5e30d31655d9f55a53f4a95, 2017-07-26T07:47:53.848Z)
- OS Version: Windows_NT x64 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
project-manager|ale|0.18.1
cpptools|ms-|0.12.1



---

Steps to Reproduce:

1.点击调试添加配置，提示Cannot read property 'openConfigFile' of undefined
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31438</IssueID>
    <Title>Smoke test: Failed to create autodetected launch.json</Title>
    <Description>See TFS build id 30914 for details.

**Failed test:**
 3) Smoke Test Suite Debugging JavaScript autodetects program attribute for launch.json
**Other tests impacted by this failure:**
 4) Smoke Test Suite Git verifies current changes are picked up by Git viewlet

Seems like Node.js debug environment configuration failed to create launch.json file. I've tried to manually perform test steps, and I wasn't able to get even to debug environment selection on Windows (pressing 'Configure' gear button in Debug viewlet did not give any result with the following error in Chromium console:
`TypeError: Cannot read property 'openConfigFile' of undefined`.</Description>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31407</IssueID>
    <Title>Make "This workspace has extension recommendations." more useful</Title>
    <Description>Right now this message shows even if I have already all the suggested extensions installed. 
It should show only if someone from the team add a new extension to the json file. 

</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31390</IssueID>
    <Title>Scrolling left side of preview mode doesn't scroll right side</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.11.0
mono-debug|ms-|0.15.6



---

Steps to Reproduce:

1. Open a MD file
2. Click the preview mode so that the doc is left source/right preview
3. Scroll the right preview doc
OBSERVE: left source doc scrolls
4. Scroll the left source doc
EXPECT: right preview doc scrolls
ACTUAL: right preview doc does not scroll in sync

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31383</IssueID>
    <Title>Allow Customization for Intellisense Icons</Title>
    <Description>Right now it doesn't seem possible to change the Intellisense icon set,
would be **GREAT** if we could.

![intellisense](https://user-images.githubusercontent.com/22671061/28570837-43540ea6-7140-11e7-9405-27adedee2acf.PNG)
</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31350</IssueID>
    <Title>Cannot read property 'roots' of null, after closing folder</Title>
    <Description>**Version**: 58332b486e7e5196f4b21edc93081686c0509e55
**OS**: Mac 10.12.5

**Repo**
1. Open a folder using the file menu
1. Close the folder using the file menu

**Bug**
```
Cannot read property 'roots' of null: TypeError: Cannot read property 'roots' of null
    at ConfigurationManager.initLaunches (file:///Users/matb/projects/vscode/out/vs/workbench/parts/debug/electron-browser/debugConfigurationManager.js:258:63)
    at new ConfigurationManager (file:///Users/matb/projects/vscode/out/vs/workbench/parts/debug/electron-browser/debugConfigurationManager.js:201:18)
    at create (file:///Users/matb/projects/vscode/out/vs/base/common/types.js:164:14)
    at InstantiationService._createInstance (file:///Users/matb/projects/vscode/out/vs/platform/instantiation/common/instantiationService.js:143:43)
    at InstantiationService.createInstance (file:///Users/matb/projects/vscode/out/vs/platform/instantiation/common/instantiationService.js:71:29)
    at new DebugService (file:///Users/matb/projects/vscode/out/vs/workbench/parts/debug/electron-browser/debugService.js:53:67)
    at create (file:///Users/matb/projects/vscode/out/vs/base/common/types.js:164:14)
    at InstantiationService._createInstance (file:///Users/matb/projects/vscode/out/vs/platform/instantiation/common/instantiationService.js:143:43)
    at InstantiationService._createAndCacheServiceInstance (file:///Users/matb/projects/vscode/out/vs/platform/instantiation/common/instantiationService.js:202:41)
    at InstantiationService._getOrCreateServiceInstance (file:///Users/matb/projects/vscode/out/vs/platform/instantiation/common/instantiationService.js:150:29)
```</Description>
    <CreatedDate>25/07/2017</CreatedDate>
    <ClosedDate>25/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31348</IssueID>
    <Title>Cannot read property 'offset' of undefined, when updating configuration</Title>
    <Description>For the following extension code:

```ts
const tsConfig = workspace.getConfiguration('typescript');
await tsConfig.update('tsdk', 'abc', false);
```

I'm seeing this error when the users has only opened a folder instead of a workspace:

```
TypeError: Cannot read property 'offset' of undefined
    at ConfigurationEditingService.applyEditsToBuffer (file:///Users/matb/projects/vscode/out/vs/workbench/services/configuration/node/configurationEditingService.js:59:57)
    at ConfigurationEditingService.writeToBuffer (file:///Users/matb/projects/vscode/out/vs/workbench/services/configuration/node/configurationEditingService.js:52:22)
    at file:///Users/matb/projects/vscode/out/vs/workbench/services/configuration/node/configurationEditingService.js:47:59
    at Object.notifySuccess [as _notify] (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1170:59)
    at Object.enter (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:852:30)
    at _Base.Class.derive._creator._run (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1068:29)
    at _Base.Class.derive._creator._completed (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1036:18)
    at CompletePromise_ctor.CompletePromise_then [as then] (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1566:49)
    at Object.enter (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:747:28)
    at _Base.Class.derive._creator._run (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1068:29)
    at _Base.Class.derive._creator._setCompleteValue (file:///Users/matb/projects/vscode/out/vs/base/common/winjs.base.raw.js:1052:18)
```

When a workspace is opened, I do not see this </Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31340</IssueID>
    <Title>Terminal is not working</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (81e812c06540d1bd2636cf70ff7d0edd1bb0e866, 2017-07-21T13:15:10.775Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-twig-pack|baj|1.0.0
jshint|dba|0.10.15
vscode-eslint|dba|1.2.11
vscode-babel-coloring|dza|0.0.4
EditorConfig|Edi|0.9.4
tslint|eg2|0.17.0
Angular2|joh|2.4.0
debugger-for-chrome|msj|3.1.6
vscode-docker|Pet|0.0.16
vscode-gulp|tan|0.0.4
vscode-react-native|vsm|0.3.2

(1 theme extensions excluded)
---

Steps to Reproduce:

1. Just open the terminal inside the editor

It shows up "undefined" option on combo box that I select the terminal panel.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31335</IssueID>
    <Title>Terminal doesn't show with VSCode 64bit</Title>
    <Description>- VSCode Version: 1.14.2 64bit
- OS Version: Windows 10 Creator Update

Steps to Reproduce:

1. Open VSCode 64bit
2. Toggle Terminal

![image](https://user-images.githubusercontent.com/27698189/28534825-39d363e6-70cc-11e7-98b0-eaae1e5f8397.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31332</IssueID>
    <Title>Allow configuration for location of integrated terminal</Title>
    <Description>I usually prefer to work with my terminal to the right of the editor. It would be nice to have an option to set where the terminal shows. Thanks for all your great work!</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31329</IssueID>
    <Title>Feature request , option to open Files externally</Title>
    <Description>I am working with a python as well as excel sheet generation ,it would be great if there is an **option to open excel sheet externally** from vscode **_because excel sheet is not supported in vscode_**</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31323</IssueID>
    <Title>feat(): Multiple Command Keybindings</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

I would like to see VS Code have a feature for running commands in succession from a single keybinding. This is especially useful when formatting code, so we can run formatting commands in succession. For example: FORMAT, Sort Imports, Align, Align Comments.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.2
- OS Version: macOS 10.12.5
</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31307</IssueID>
    <Title>Should shrinkwrap files be ignored?</Title>
    <Description>pulled in latest from master, ran `./scripts/npm install` and I see a bunch of shrinkwrap files that got modified. 

I am not sure what to do with them when sending a PR. Should those be ignored?
```
        modified:   ../../configuration-editing/npm-shrinkwrap.json
	modified:   ../npm-shrinkwrap.json
	modified:   npm-shrinkwrap.json
	modified:   package.json
	modified:   ../../emmet/npm-shrinkwrap.json
	modified:   ../../emmet/package.json
	modified:   ../../extension-editing/npm-shrinkwrap.json
	modified:   ../../git/npm-shrinkwrap.json
	modified:   ../../git/package.json
	modified:   ../../grunt/npm-shrinkwrap.json
	modified:   ../../grunt/package.json
	modified:   ../../gulp/npm-shrinkwrap.json
	modified:   ../../gulp/package.json
	modified:   ../../html/npm-shrinkwrap.json
	modified:   ../../html/package.json
	modified:   ../../html/server/npm-shrinkwrap.json
	modified:   ../../jake/npm-shrinkwrap.json
	modified:   ../../jake/package.json
	modified:   ../../javascript/npm-shrinkwrap.json
	modified:   ../../javascript/package.json
	modified:   ../../json/npm-shrinkwrap.json
	modified:   ../../json/package.json
	modified:   ../../json/server/npm-shrinkwrap.json
	modified:   ../../markdown/npm-shrinkwrap.json
	modified:   ../../merge-conflict/npm-shrinkwrap.json
	modified:   ../../merge-conflict/package.json
	modified:   ../../npm-shrinkwrap.json
	modified:   ../../npm/npm-shrinkwrap.json
	modified:   ../../npm/package.json
	modified:   ../../php/npm-shrinkwrap.json
	modified:   ../../php/package.json
	modified:   ../../typescript/npm-shrinkwrap.json
	modified:   ../../typescript/package.json
	modified:   ../../vscode-api-tests/package.json
	modified:   ../../vscode-colorize-tests/package.json
	modified:   ../../../npm-shrinkwrap.json
	modified:   ../../../package.json
```</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31302</IssueID>
    <Title>Cannot navigate through Menus using right/left arrow keys on the keyboard</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Gradle|caz|1.1.2
csharp|ms-|1.11.0
java|red|0.7.0

---

Steps to Reproduce:

1. Open File Menu using the keyboard (Alt + F)
2. Press the right arrow on the keyboard.

Expected Outcome : 
Edit Menu is selected/displayed/opened.

Actual Outcome : 
Selection doesn't change from File Menu.

Note : 
1. This is applicable for all the Menu items
2. This is only with reference to the right and left arrows.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>24/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31284</IssueID>
    <Title>Open With shows blank file in the place of the original file</Title>
    <Description># Issue

The issue seems to be to do with the .desktop file distributed with 'code' requesting that 'code' be launched with file URIs which it can't handle. It should have an Exec argument of %F not %U

- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:26:08.116Z)
- OS Version: Linux x64 4.4.0-83-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
xml|Dot|1.9.2
python|don|0.6.9
cpptools|ms-|0.12.1

---

Steps to Reproduce:
1. Navigate to a folder on an LXDE Ubuntu Desktop
2. Use right-click menu to choose 'Open With' Visual Studio Code
3. Code editing window opens showing no code at all, even when file contains 1k of code
4. Turns out that it has opened a file called like /home/user/file:/home/user/folder/source.py since its .desktop file incorrectly requests a file:// URI which it can't handle

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;

I edited the /usr/share/applications/code.desktop to add the --disable-extensions flag, then shut down and relaunched from the finder. The same problem presents.

Reproduces without extensions: Yes 


# Workaround

I modified the /usr/share/applications/code.desktop file to fix the issue by changing the Exec line to read as follows...

```
Exec=/usr/share/code/code %F
``` 

...instead of the original which read...

```
Exec=/usr/share/code/code --unity-launch %U
```

After this, the issue went away.</Description>
    <CreatedDate>23/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31280</IssueID>
    <Title>terminal in python does not support rtl languages</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:34:19.566Z)
- OS Version: Windows_NT x64 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
python|don|0.6.9
vscode-html-css|ecm|0.1.7
mssql|ms-|1.1.0
csharp|ms-|1.11.0
vscode-icons|rob|7.10.1



---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>23/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31272</IssueID>
    <Title>Tabs &amp; Spaces before braces in control flow statements?</Title>
    <Description>Enter after typing a control flow statement puts spaces or tab.

![Fucked up control flow](https://i.imgur.com/D9lomEa.png "Fucked up control flow")

Typing  an if statement
causes code to look like this:

```javascript
if(true)
    {
// Why is there a tab?
    }
```

Note the tabs before the braces?


It should work like this
```javascript
if(true)
{
 // No tab before the braces!
}
```
I have no idea if this is an option or not, but if this is an option i'd recommend to remove it immidiately because that is just "jesus what the hell is that?". I have no idea what happened it started to act this weird after updating to the latest version.

More here:

![Fucked up braces]( https://i.imgur.com/60d0GUL.png "Fucked up braces")
</Description>
    <CreatedDate>23/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31243</IssueID>
    <Title> Files panel to manage, transfer, and synchronize files and folders between local and remotes sites</Title>
    <Description>Need a  Files panel to manage, transfer, and synchronize files and folders between local and remotes sites like Dreamwear. Sync local and Remote Files.
 Toggle between the FTP View and the Git View in Files panel, to manage the files using an FTP server or Git repositories</Description>
    <CreatedDate>22/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31231</IssueID>
    <Title>Error message box doesn't show complete message</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0 Insider
- OS Version: MacOS 10.12.5

Steps to Reproduce:

1. Try to check for updates
2. Get error message

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

I get the same error as in #27928. But I don't want to report that issue. What I want to submit is that it's not possible to read the full error message.
&lt;img width="1299" alt="screen shot 2017-07-21 at 13 27 31" src="https://user-images.githubusercontent.com/1493018/28484877-a7bb669a-6e3a-11e7-82e1-03821ccf1c9f.png"&gt;

It would be better if the message box would show multiple lines.
</Description>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31230</IssueID>
    <Title>Incorrect JavaScript syntax highlighting</Title>
    <Description>- VSCode Version: Code 1.14.2 (cb82febafda0c8c199b9201ad274e25d9a76874e, 2017-07-19T23:22:50.650Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ansible|haa|0.2.5



---

Steps to Reproduce:

1. Create new file
2. Select "JavaScript" Language Mode
3. Enter the following into the file:

```javascript
var foo = {
    'anything quoted': '(anything starting with an left parenthesis or angle bracket'
};

// comment highlighted incorrectly "highlighted like a string literal (incorrect)"
var highlightedIncorrectly;
```

Reproduces without extensions: Yes

---

### Problem

Creating an object that has a value that is a single-quoted string that starts with a left parenthesis `(` or left angle bracket `&lt;`, causes all following code to highlight incorrectly.

I thought this was related to #30425, but 1.14.2 didn't fix it.

---

### Base case

Starting with the following base case that highlights all following code incorrectly:

```javascript
var foo = {
    'hello': '(world'
};
```

Certain changes will fix or not fix the subsequent syntax highlighting problem, as detailed here:

### Cases that will highlight correctly

```javascript
// double-quoting the object value
var foo = {
    'hello': "(world"
};

// un-quoting or double-quoting the object key
var foo = {
    hello: '(world'
};
// or
var foo = {
    "hello": '(world'
};

// not starting the value with the left parenthesis
var foo = {
    'hello': 'world('
};

// using a left curly bracket or left square bracket instead
var foo = {
    'hello': '{world'
};
// or
var foo = {
    'hello': '[world'
};
```

### Cases that will *not* highlight correctly

```javascript
// using a left angle bracket instead
var foo = {
    'hello': '&lt;world'
};

// closing the paren in the object value
var foo = {
    'hello': '(world)'
};

// adding properties to the object
var foo = {
    one: 1,
    'hello': '(world',
    "stuff": 'things'
};

// using an expression instead of an assignment statement
foo = {
    'hello': '(world'
};
// or
({
    'hello': '(world'
});

```

All of these register as valid code (no errors reported), but do not highlight the following code correctly.

---

For what it's worth, the use case that provoked this was a lookup map for brackets:

```javascript
var pairs = {
    ')': '(',
    '}': '{',
    ']': '['
};
```</Description>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31209</IssueID>
    <Title>[Feature request] Setting Syncronization</Title>
    <Description>Dear VS Code Dev Team

I always use many different PCs, and each time I want to add/change some settings/snippets/extensions/keyboard shortcuts/etc,  I have to do the same thing in all the PCs. It's kinda unfavorable. 
So I hope you, The VS Code Dev Team will make things easier for me (And everyone else of course) &lt;3 

From VN with hope  ɛɝ
Gấu</Description>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31150</IssueID>
    <Title>Debugger: Call Stack frame duplicate display </Title>
    <Description>_From @qian6 on July 20, 2017 9:25_

## Environment data
 dotnet --info  output:

- OS Name: Windows
- OS Version: 10.0.15063
- OS Platform: Windows
- RID: win10-x64
- Base Path: C:\Program Files\dotnet\sdk\1.0.4

VS Code version: 1.14.1
 C# Extension version: https://github.com/OmniSharp/omnisharpvscode/releases/download/v1.12.0-beta3

## Steps to reproduce

1. Run command to create dotnet project as following:

   dotnet new console -o hwapp
   cd hwapp
   dotnet restore
   dotnet run

2. Open hwapp project in vscode.

3. Press F5 to start debugging.

5. Observer Call Stack window.

## Expected  behavior
It can display normally.

## Actual behavior
![capture](https://user-images.githubusercontent.com/20922638/28410314-dcd16648-6d6f-11e7-9ffd-7bdffdb1f902.PNG)

_Copied from original issue: OmniSharp/omnisharp-vscode#1653_</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31128</IssueID>
    <Title>There is now way to create submenus for "commandPalette" , both static and dynamically [ Extension Dev ]</Title>
    <Description>It would be good if there is option to create a submenu static or dynamically from the extension for extension development</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31114</IssueID>
    <Title>Move debug mini-toolbar closer to debug console</Title>
    <Description>I can't pull that toolbar from the top, I'd like to be able to snap it into the debug console on the bottom left of the window</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31112</IssueID>
    <Title>Git viewlet stages incorrect file</Title>
    <Description>pls see the attached video.

I stage main.ts using the '+' action, but package.json is staged.

![staging](https://user-images.githubusercontent.com/172399/28408788-e66eb552-6d38-11e7-8edb-889f3de353c5.gif)
</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31098</IssueID>
    <Title>Word Wrap not Working</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
unique-lines|bib|1.0.0
python|don|0.6.7
ftp-simple|hum|0.5.4
csharpfixformat|Leo|0.0.30
prettify-json|moh|0.0.3
csharp|ms-|1.11.0
python|tht|0.2.3
change-case|wma|1.0.0



---

Steps to Reproduce:

1. Toggling word wrap via View &gt; Toggle Word Wrap doesn't work
2. ALT + Z doesn't work either

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>20/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31083</IssueID>
    <Title>MRW: Cannot debug any folder except first</Title>
    <Description>testing https://github.com/Microsoft/vscode/issues/30722, specifically "debugging (node.js and extension host debugging) work as before".

Insiders 1.15.0 9a308d11

I've created a workspace with all of my extensions and the idea is that I could do a lot of copy/paste between folders and then run/debug any of the individual extensions.  

However, it appears I can only debug the first folder of my multi-root workspace, there is no way for me to pick which one I wish to launch.

On backlog? 

</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31073</IssueID>
    <Title>Launch VSCODE Application in WSL without XServer</Title>
    <Description>I have installed windows 10 (b.1703) creators update recently and I am using ubuntu subsystem(WSL).There I have installed Visual Studio Code successfully(Node.js everything installed).

I followed this link too - [support](https://code.visualstudio.com/docs/setup/linux)

Problem is that any GUI elements required application can be launch but not working(no GUI will be elements displayed reason may be WSL has no direct Graphic driver support).

![VSCOE Launch](https://user-images.githubusercontent.com/3683121/28388703-38ee16e4-6cf1-11e7-95ae-15afa1362140.PNG)

As image shown above.after I command to execute vscode thorough 

&gt; macxfadz@BC-LPTP:~$ code

 the WSL BASH take few seconds and nothing display during that time and print second line with empty respond.

I wanted to know How to provide graphic driver support to WSL in order to facilitate GUI applications(in this case VSCODE)? without installing 3rd party software such as XMing-Xserver,putty etc.

Else do we have any other mechanism to achieve it ? only modifying Ubuntu(Linux subsystem) side? other than switching to Windows 10 Insider preview builds?

**Please note that** I don't want to launch VSCODE installed in windows 10 launch via WSL ubuntu bash.</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31056</IssueID>
    <Title>Intellisense not working, stops working after a couple of seconds</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: macOS Sierra 0.12.5 (16F73)

Steps to Reproduce:

1. Uninstall all VSCode instances and all extensions
2. Install VS Code stable
3. Open a new .js-file
4. Intellisense doesn't work. Developer tools throws errors.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No

This looks like being the error message:
```
activating extension `vscode.typescript` failed: [vscode.typescript]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api vscode.typescript.
t.$localShowMessage @ /Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:28
```

Error normal start:
![normalstart](https://user-images.githubusercontent.com/1493018/28377893-ec5920ee-6c73-11e7-8801-30584e81df2c.png)

Error `code --disable-extensions`
![noextensions](https://user-images.githubusercontent.com/1493018/28377894-ed5d0906-6c73-11e7-8a93-679a9693b6d0.png)


</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31044</IssueID>
    <Title>Emmet 2.0: Gives inappropriate suggestions</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (9a308d1128df9af90e84b2988bce4f57f885b1c3, 2017-07-19T06:31:43.209Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
ng-template|Ang|0.1.4
code-settings-sync|Sha|2.8.2
sort-lines|Tyr|1.3.0
Bookmarks|ale|0.15.2
project-manager|ale|0.18.1
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
vscode-html-css|ecm|0.1.7
tslint|eg2|0.16.0
auto-rename-tag|for|0.0.14
Angular2|joh|2.4.0
ecdc|mit|0.10.3
HTMLHint|mka|0.3.3
vscode-autoprefixer|mrm|2.0.0
vscode-stylefmt|mrm|2.4.1
angular2-inline|nat|0.0.17
stylelint|shi|0.27.0
change-case|wma|1.0.0

(4 theme extensions excluded)


---

Steps to Reproduce:

1. type `p` for a `&lt;p&gt;&lt;/p&gt;` in an html file
2. Emmet suggests `param` instead.  I don't even know what that tag is.  It doesn't even offer the default paragraph tag.

![jul-19-2017 09-39-55](https://user-images.githubusercontent.com/835148/28369761-85c83fd4-6c66-11e7-8aa5-ec843db7c466.gif)
</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31043</IssueID>
    <Title>Brand new storage for workspaces can be frustrating</Title>
    <Description>Refs: #30722

I am working on vscode all the time and now I started working on multi root with also vscode-docs. Everything is great except I get pestered by a lot of ux things which I have dismissed already in the past. These include:

1. Welcome page
2. Workspace recommendations
3. TS check

Probably many others.
I do not have a suggestion on how to improve this, but we should be aware that this can be frustrating. Maybe some transition strategy for the storage would be useful.</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31028</IssueID>
    <Title>Word Wrap not working in ubuntu 14.04 - 32 bit os </Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:11:38.274Z)
- OS Version: Linux ia32 3.13.0-63-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
format-php|Kas|1.1.2
php-formatter|Sop|0.2.4
better-comments|aar|0.1.3
html-snippets|abu|0.1.0
githistory|don|0.2.1
php-debug|fel|1.11.1
sublime-keybindings|ms-|2.9.1
vscode-icons|rob|7.10.1
react-beautify|tai|0.3.0
wordpress-snippet|tun|1.1.2

(3 theme extensions excluded)


---

Steps to Reproduce:

1.
2.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31027</IssueID>
    <Title>Auto indent doesn't work with code blocks JavaScript</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---
Language: Javascript:

When creating first code block "{" and pressing enter the auto fill and indent doesn't quite work as it used to, it creates the closing block and creates new lines, but does not indent them back to where they should be

a for loop looks like:
```
for(var key in object)
    {

    }
```

instead of:
```
for(var key in object)
{

}
```

the other way of doing it works fine when it looks like:
```
for(var key in object){

}
```

The same happens with if statements too, but it doesn't happen with switch statements
Steps to Reproduce:

1. create one side of code block "{" 
2. press enter to auto fill the rest</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>31010</IssueID>
    <Title>Wokspace folder was removed requires restart -&gt; cancel leaves in strange state</Title>
    <Description>Refs: #30722

1. Remove the first root folder
2. Get the Ben vacation dialog -&gt; say cancel
3. The folder still gets removed and me as the user I am puzzled why was the reload even needed.

Expected -&gt; if I press cancel the folder does not get removed</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30986</IssueID>
    <Title>View/Toogle Word Wrap not working in lasted version 1.14.1</Title>
    <Description>Please check this issue, I'm using win 10 Pro. Tks</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30980</IssueID>
    <Title>Toggle block comment add extra single space </Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
vscode-simpler-icons|dav|1.3.0
csharp|ms-|1.11.0
debugger-for-chrome|msj|3.1.6
vscode-icons|rob|7.10.1
html-css-class-completion|Zig|1.7.0

(3 theme extensions excluded)


---

Steps to Reproduce:

Toggle block comment **(shift + alt + a)** add extra single space at the start and end of the block.  
If remove comment again by pressing shift + alt + a , the white space added previously should remove. 

Please do the needful. 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30950</IssueID>
    <Title>Snippet JSON scope attribute</Title>
    <Description>In order to allow snippets to only be used when relevant allow snippets to declare what scope they are usable in.  

This could also use scope selectors like https://manual.macromates.com/en/scope_selectors</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30945</IssueID>
    <Title> Cannot read property '_placeholderDecorations' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;3b906ae1-1a39-7baa-6d3e-de89f39492dc&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.14.1&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property '_placeholderDecorations' of undefined&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L169:27 (_placeholderDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L169:27 (_placeholderDecorations))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L237:12 (callback)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/textModelWithDecorations.ts#L237:12 (callback))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L210:15 (_changeDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/textModelWithDecorations.ts#L210:15 (_changeDecorations))&lt;br /&gt;[/vs/editor/common/commonCodeEditor.ts#L770:20 (changeDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/commonCodeEditor.ts#L770:20 (changeDecorations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L161:15 (changeDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L161:15 (changeDecorations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L346:12 (merge)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L346:12 (merge))&lt;br /&gt;[/vs/editor/common/model/editStack.ts#L77:73 (cursorStateComputer)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editStack.ts#L77:73 (cursorStateComputer))&lt;br /&gt;[/vs/editor/common/model/editableTextModel.ts#L181:30 (pushEditOperation)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editableTextModel.ts#L181:30 (pushEditOperation))&lt;br /&gt;[/vs/editor/common/model/editableTextModel.ts#L96:15 (_pushEditOperations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editableTextModel.ts#L96:15 (_pushEditOperations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L343:53 (pushEditOperations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L343:53 (pushEditOperations))&lt;br /&gt;</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30944</IssueID>
    <Title> Cannot read property 'startLineNumber' of null</Title>
    <Description>Issue Id: &lt;b&gt;f923dc5e-d4bb-3121-c8f5-e8d366e9d751&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.14.1&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'startLineNumber' of null&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L108:40 (startLineNumber)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L108:40 (startLineNumber))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L237:12 (callback)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/textModelWithDecorations.ts#L237:12 (callback))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L210:15 (_changeDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/textModelWithDecorations.ts#L210:15 (_changeDecorations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L95:33 (changeDecorations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L95:33 (changeDecorations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L371:32 (move)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L371:32 (move))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L351:16 (_move)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L351:16 (_move))&lt;br /&gt;[/vs/editor/common/model/editStack.ts#L77:73 (cursorStateComputer)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editStack.ts#L77:73 (cursorStateComputer))&lt;br /&gt;[/vs/editor/common/model/editableTextModel.ts#L181:30 (pushEditOperation)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editableTextModel.ts#L181:30 (pushEditOperation))&lt;br /&gt;[/vs/editor/common/model/editableTextModel.ts#L96:15 (_pushEditOperations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/common/model/editableTextModel.ts#L96:15 (_pushEditOperations))&lt;br /&gt;[/vs/editor/contrib/snippet/browser/snippetSession.ts#L343:53 (pushEditOperations)](https://github.com/microsoft/vscode/blob/2648980a697a4c8fb5777dcfb2ab110cec8a2f58/src/vs/editor/contrib/snippet/browser/snippetSession.ts#L343:53 (pushEditOperations))&lt;br /&gt;</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30935</IssueID>
    <Title>Cannot select/copy from readonly portion in diff editor inline view</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:08:57.197Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
githistory|don|0.2.1



---

Steps to Reproduce:

1. Compare any two files.
2. Make the diff view inline.
3. Try to select/copy from the readonly portion with which the file is being compared. Does not work.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Could not check</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30926</IssueID>
    <Title>Can't open extension view</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0-insider (1.15.0-insider), 2017-07-18T05:03:32.965Z
- OS Version: macOS 10.12

Steps to Reproduce:

1. try to open extension view, empty:
&lt;img width="656" alt="2017-07-18 7 44 23" src="https://user-images.githubusercontent.com/620733/28315766-863cfa50-6bf2-11e7-9ec7-71fff251575b.png"&gt;

2. try to back to explorer view, an error message appears:
&lt;img width="897" alt="2" src="https://user-images.githubusercontent.com/620733/28316036-9e97ab30-6bf3-11e7-8428-55bac0e3df73.png"&gt;

3. try to open extension view again:
&lt;img width="887" alt="3" src="https://user-images.githubusercontent.com/620733/28316044-a9f3ef34-6bf3-11e7-9d55-9ae91505be91.png"&gt;

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30922</IssueID>
    <Title>Extension view not visible after click on Extensions and problem with Activity Bar after second click on Extensions</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
Extension view not visible after click on Extensions and problem with Activity Bar after second click on Extensions

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.15.0-insider
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Click on Extensions 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

## Extension view not visible
![step1](https://user-images.githubusercontent.com/18235355/28312199-4e837156-6b80-11e7-8ebb-7f7ac262f4d2.png)
## After second click on Extensions
![step2](https://user-images.githubusercontent.com/18235355/28312200-4eb6b714-6b80-11e7-8fe7-aa2bbbb2d55f.png)
![step3](https://user-images.githubusercontent.com/18235355/28312201-4ee716f2-6b80-11e7-8aba-280d9262ef31.png)


</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30917</IssueID>
    <Title>Color theme does not recognize all the keywords as it used to</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
* VSCode Version:
** Version 1.14.1
** Commit 2648980a697a4c8fb5777dcfb2ab110cec8a2f58
** Date 2017-07-13T19:12:01.887Z
** Shell 1.6.6
** Renderer 56.0.2924.87
** Node 7.4.0
- OS Version: Linux Mint XFCE 18.1

It looks like some keyword in PHP are missing making the color theme not being applied to all of them.
You will find below a screenshot comparing the current VS Code PHP keyword and how it uses to be:

**_Now_**
![image](https://user-images.githubusercontent.com/17257969/28310543-1cce172e-6bad-11e7-8cf4-2e7795002d27.png)

**_Before_**
![image](https://user-images.githubusercontent.com/17257969/28310582-31981722-6bad-11e7-96f1-f8b175969323.png)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30904</IssueID>
    <Title>can not debug cluster.fork code</Title>
    <Description>can not debug cluster.fork code

- VSCode Version: 1.14.1 (
- OS Version: 10.11.2 (

```js
var cluster = require('cluster');  
var http = require('http');  
var numCPUs = require('os').cpus().length;  
process.execArgv[1] = process.execArgv[1].replace('-brk', '');
if (cluster.isMaster) {  
  console.log("master start...");  
  for (var i = 0; i &lt; numCPUs; i++) {
    cluster.fork();
  }  

  cluster.on('listening',function(worker,address){  
      console.log('listening: worker ' + worker.process.pid +', Address: '+address.address+":"+address.port);  
  });  

  cluster.on('exit', function(worker, code, signal) {  
      console.log('worker ' + worker.process.pid + ' died');  
  });  
} else {
  http.createServer(function(req, res) {
    console.log(11);
      res.writeHead(200);  
      res.end("hello world\n");  
  }).listen(8878);  
} 
 ```</Description>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30886</IssueID>
    <Title>File browser enhancement </Title>
    <Description>Hi guys,

There are few things I miss from [Nerdtree](https://github.com/scrooloose/nerdtree).

Most notably:

1. Ability within the file browser to search filenames and dirnames so I can easily jump / navigate within very large file structures
2. Add more commands like the one provided by [File utils](https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils)

&lt;img width="550" alt="screen shot 2017-07-17 at 2 44 11 pm" src="https://user-images.githubusercontent.com/6537/28291501-9238753a-6aff-11e7-9188-46c646a5e1eb.png"&gt;
&lt;img width="307" alt="screen shot 2017-07-17 at 2 43 58 pm" src="https://user-images.githubusercontent.com/6537/28291502-92398eca-6aff-11e7-8d56-be0c4487254c.png"&gt;
</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30881</IssueID>
    <Title>Feature Request: Propose undefined method names as autocomplete suggestions</Title>
    <Description>Especially during UI coding, I repeatedly find myself in the following situation:

    ....
    &lt;button onClick={this.handleClick} /&gt;

and `this.handleClick` is undefined. Next, I place the cursor in the class, and type...

    private handleClick(e: MouseEvent) {
    }

It would be super useful if `handleClick` would be offered as auto-complete suggestion by VSCode in this situation. In general, any undefined symbol name could be offered as a completion option when typing a new method. There's a pretty good chance in general that the name of a method-under-construction already appears as an undefined symbol somewhere else in the class. I don't know how technically challenging this feature would be, but it sure would come in handy.</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>20/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30867</IssueID>
    <Title>IntelliSense and auto completion not working in Ubuntu</Title>
    <Description>It looks like the auto completion and intelliSense  is broken. It is working fine in vscode 1.13. Just installed that old version everything work fine.

VSCode Version: 1.14.1
OS Version: Ubuntu 16

Steps to Reproduce:

1. Open any project
1. Try to do a ctrl+mouse arrow to see the definition. It is not working.
1. Also auto completion is not working.
1. I am working node JS and react based projects</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30861</IssueID>
    <Title>Terminal windows don't show after reloading window, but tasks still keep running</Title>
    <Description>- VSCode Version: 1.14.1
- OS Version: Windows 10 Pro

Steps to Reproduce:

1.  Start a server with npm in an integrated terminal window.
2.  Install an extension, then reload window.

The server still keeps working. I've tried closing vscode and then opening it but the server still keeps running.

Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/3410227/28271386-bdb6bc74-6ade-11e7-95c6-b1ac79b99633.png)

</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30840</IssueID>
    <Title>Terminal sometimes loses the ability to scroll</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:18:47.188Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:  none

---

Steps to Reproduce:

1. Launch code.
2. Run build task.

At the time, there was a compiler error in my project, so the standard npm error stuff got output to the console, but I was unable to scroll up to see what tsc had output. Restarting vscode had no effect.

This is the error I get on the developer console when I click on the terminal window to give it focus:
```
Uncaught TypeError: Cannot read property 'NaN' of undefined
    at SelectionManager._onSingleClick (C:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\xterm\lib\SelectionManager.js:228:71)
    at SelectionManager._onMouseDown (C:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\xterm\lib\SelectionManager.js:192:22)
    at HTMLDivElement.SelectionManager._initListeners._mouseDownListener (C:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\xterm\lib\SelectionManager.js:53:67)
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30827</IssueID>
    <Title>Expose document.hidden</Title>
    <Description>It would be helpful if VSC exposed `document.hidden` via an API, so that extensions could take advantage of it in order to skip some work.

Just to provide a concrete use case: I've made an [extension](https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-github-notifications-bell) that calls a GitHub API endpoint every X seconds, the problem is that if I have N workspaces the extension will make N requests instead of 1, it would be better if it could avoid making requests for hidden workspaces.

What do you think?</Description>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30822</IssueID>
    <Title> Request textDocument/documentHighlight failed</Title>
    <Description>
![screenshot from 2017-07-16 22-08-38](https://user-images.githubusercontent.com/30219898/28251960-8e33ed5a-6aa2-11e7-8465-acad7b40be05.png)
&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: Ubuntu 14.04 or Windows 7 (the same bug in different OS)

Steps to Reproduce:

1.  Create html document
2.  even without any html tags or with all standard html tags
3. add script tag and type any script
4. comment this script
5. select string with commented script 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30805</IssueID>
    <Title>ittellisense crashes when jest is installed in node_modules</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T20:36:40.018Z)
- OS Version: Linux x64 4.8.0-51-generic (Linux Mint MATE 18.2)
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.16
sort-lines|Tyr|1.3.0
vscode-color|ans|0.4.1
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
gitignore|cod|0.5.0
vscode-eslint|dba|1.2.11
githistory|don|0.2.1
python|don|0.6.7
gitlens|eam|4.3.1
tslint|eg2|0.16.0
prettier-vscode|esb|0.21.0
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
sass-lint|gle|0.0.4
vscode-remark|mrm|1.1.0
sublime-keybindings|ms-|2.9.1
debugger-for-chrome|msj|3.1.6
gitlink|qez|0.2.2
Ruby|reb|0.12.1
vscode-icons|rob|7.10.1
stylelint|shi|0.27.0
autoimport|ste|1.2.2
code-spell-checker|str|1.3.0
vscode-react-native|vsm|0.3.2
JavaScriptSnippets|xab|1.4.1
ReactSnippets|xab|1.4.0

Steps to Reproduce:
```
git clone https://github.com/abumalick/vscode-jsconfig.git
yarn
```
go into src/test.js put the cursor after `Lib.` and press Ctrl+space to see suggestions, I see it one time and after that I don't see suggestions anymore, it seems intellisense crashed.

In output/Typescript I have the following logs:
```
[Error  - 3:16:04 PM] 'completions' request failed with error.
Error processing request. Project '/home/abumalick/ws/prj/vscodeBug/jsconfig.json' does not contain document '/home/abumalick/.cache/typescript/2.4/node_modules/parse5/node_modules/@types/node/index.d.ts'
Error: Project '/home/abumalick/ws/prj/vscodeBug/jsconfig.json' does not contain document '/home/abumalick/.cache/typescript/2.4/node_modules/parse5/node_modules/@types/node/index.d.ts'
    at Object.ThrowProjectDoesNotContainDocument (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:75718:23)
    at ConfiguredProject.Project.getScriptInfoForNormalizedPath (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:77238:42)
    at ConfiguredProject.Project.getScriptInfo (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:77243:29)
    at ModuleBuilder.AbstractBuilder.getOrCreateFileInfo (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76551:51)
    at /usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76679:84
    at Object.map (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:1483:29)
    at ModuleBuilder.getReferencedFileInfos (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76679:31)
    at ModuleBuilder.updateFileReferences (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76708:42)
    at ModuleBuilder.ensureProjectDependencyGraphUpToDate (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76693:30)
    at ModuleBuilder.onProjectUpdateGraph (/usr/share/code/resources/app/extensions/node_modules/typescript/lib/tsserver.js:76684:22)
```

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30804</IssueID>
    <Title>Commenting and uncommenting codes using shortcut key (ctrl+/) adds spaces around the syntax</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:12:01.887Z)
- OS Version: Linux x64 4.8.0-58-generic (Ubuntu 16.04.2 LTS)
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
compulim-vscode-closetag|Com|1.1.0
html-snippets|abu|0.1.0
vscode-html-css|ecm|0.1.7
highlight-matching-tag|vin|0.3.0



---

Steps to Reproduce:

1. comment code (press ctrl+/)
2. uncomment code (press ctrl+/)

Reproduces without extensions: Yes</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30802</IssueID>
    <Title>Autocomplete/Intellisense not working</Title>
    <Description>- VSCode Version: `1.14.1`
- OS Version: `Windows 10 Pro 64-Bit`

VScode stops showing suggestions after a few seconds. When VScode just starts everything works but after a few seconds its stops showing suggestions.

For example, when importing a module VScode used to show the available methods in that module or it would show the available methods for a function when `ctrl + space` was pressed but now it doesn't. Now it just shows the variables that I have used in that file.

I only use VScode for `React, React-Native` so this behavior is seen in JS files don't know about others.

Steps to Reproduce:

1. Maybe upgrade to latest version
2. Try to import some methods from a module or try to check available methods on a function

tried this `code --disable-extensions` to check but still getting that issue.
Reproduces without extensions: Yes</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30801</IssueID>
    <Title>WorkspaceEdit doesn't support creating new files</Title>
    <Description>Not sure if this is a bug or just a missing feature!

I'm using `WorkspaceEdit` in my Code Actions provider but noticed that when a code action requires a new file (eg. creating a file from an import statement) it crashes because it can't find the file to modify (for both `insert` and `replace`).

I can't see anything on the API for allowing creation of new files, nor an easy way to detect if a file exists. I could obviously us node's `fs` class for this, but it seems a little weird to start doing that separate from the nice `WorkspaceEdit` class.

Is it valid to have `WorkspaceEdit` support creation of new files were required or is creating the files "manually" the expected way? I had a quick look at some other extensions (like TypeScript) but it seems like they don't handle it either (presumably none of their code actions need to create new files yet?).</Description>
    <CreatedDate>16/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30764</IssueID>
    <Title>Open folder in new terminal window</Title>
    <Description>You can open cmd now for particular folder. but it would be nice if you could also open it in new integrated terminal tab</Description>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30763</IssueID>
    <Title>TypeScript types autocomplete stopped working</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;
Autocomplete on types doesn't work in typescript files.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. Open typescript file
2. Declare the type of a variable

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30755</IssueID>
    <Title>Ubuntu Unity: VSCode doesn't restore windows after Quit from Launcher</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:12:01.887Z)
- OS Version: Ubuntu 17.04 Unity, Linux x64 4.10.0-26-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
codeception-snippets|die|0.0.4
githistory|don|0.2.1
php-debug|fel|1.11.1
php-intellisense|fel|1.4.3
AWK|lug|0.0.2
ftp-sync|luk|0.3.3
code-beautifier|mic|1.7.2
mads|mir|0.0.5
HTMLHint|mka|0.3.3
vscode-icons|rob|7.10.1
code-spell-checker|str|1.2.1



---

**Steps to Reproduce:**

1. Open VSCode using shortcut in Unity Launcher
2. Set `"window.restoreWindows": "folders"` or `"window.restoreWindows": "all"` in your user settings
3. Open folder A
4. Open folder B
5. Close VSCode using the action Quit in Launcher:
![fayngjtens](https://user-images.githubusercontent.com/12584138/28238088-98fc37da-694c-11e7-9bd6-09740329e2ea.png)
6. Open VScode again using shortcut in Unity Launcher

**Expected result:**
- the windows with the folders A and B are restored

**Actual result**
- no window is restored, you get only an empty window

**Note:** If you close VSCode using the shortcut `Ctrl + Q`, the windows are restored well.</Description>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30742</IssueID>
    <Title>[xterm] `CTRL+C` not work in Terminal</Title>
    <Description>
- VSCode Version: 1.14 (no issue in 1.13)
- OS Version: Windows 10

Steps to Reproduce:

1. Install [Docker Explorer](https://marketplace.visualstudio.com/items?itemName=formulahendry.docker-explorer) (It is just for repro, the issue should not be related to this extension)
2. In 'Docker Images' tree explorer, Select one Docker image (e.g. jekyll/jekyll:pages) and click 'Run'
3. When it is running, try to use `CTRL+C` to stop it

Actual:
There is error as below:
![image](https://user-images.githubusercontent.com/1050213/28234520-018a28d0-6933-11e7-8b12-7ffd8cbe76f5.png)


Reproduces without extensions: Disable all other extensions, except 'Docker Explorer', just for repro</Description>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30739</IssueID>
    <Title>Unexpected folder and filename case sensitivity in search</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
githistory|don|0.2.1
gitlens|eam|4.3.1
cpptools|ms-|0.12.0
csharp|ms-|1.11.0
PowerShell|ms-|1.4.1
code-spell-checker|str|1.2.1
gitblame|wad|1.11.3



---

Steps to Reproduce:
*  Windows OS
*  Make sure you have a file under a folder named Abc. With an uppercase A at the beginning
*  Search for a word that file contains but in the files to include field, specify `**/abc/*.*`
* It won't find it! To find it you have to look for `**/Abc/*.*`

This is unexpected and annoying to say the least: folders and files names are case insensitive on Windows.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: **Don't know**</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>15/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30738</IssueID>
    <Title>Integrated Terminal Not Launching</Title>
    <Description>
&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: Windows 10

Opening Integrated Terminal stopped working after the recent update to VSCode. Still working fine on my Mac and Windows VMs with same, updated version.

I did change from the default C:\WINDOWS\Sysnative\cmd.exe, but neither that nor powershell nor git bash will work. It just won't open. No Error message or warning. Clicking the + to add another instance does nothing.

Steps to Reproduce:

1. Open VS Code
2. Attempt to open Integrated Terminal (ctrl + `)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No idea

![image](https://user-images.githubusercontent.com/25672852/28233289-9e9dbe0e-68aa-11e7-9b25-80f9f8e2ffa5.png)
</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>15/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30735</IssueID>
    <Title>Negative look-ahead regexp doesn't work in search</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.1
- OS Version: Windows 7

Steps to Reproduce:

1. &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;F&lt;/kbd&gt;
2. Type in `Studio(?! Code)`. Press &lt;kbd&gt;Enter&lt;/kbd&gt;
3. Error tooltip: `Error parsing regex near '(?!' at character offset 2: Unrecognized flag: '!'. (Allowed flags: i, m, s, U, u, x.)` 
4. Sometimes the search will actually work regardless 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>15/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30729</IssueID>
    <Title>Whitespace added after Commenting and Uncommenting in HTML, CSS</Title>
    <Description>- VSCode Version: 10.14.1
- OS Version: macOS 10.12.5

Steps to Reproduce:

1. I have only tried it HTML and CSS. Probably for other file types, too.
2. Comment a line by CMD+/, then uncomment using the same key combination.
3. You will notice a white space added to start and end of the part commented.
4. Checked with disabling all extensions, too.</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30718</IssueID>
    <Title>.config/Code/ dir gets large</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T20:36:40.018Z)
- OS Version: Linux x64 3.16.0-4-amd64
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
python|don|0.6.7
cpptools|ms-|0.12.0
---

Problem:
VSCode consumes 600 MB of my home dir. In .config/Code/ User/, CachedData/ and Cache/ use about 200 MB each. Our home dirs are on a network drive and are limited by a quota. I have no say about it's size.

Some suggestions to mitigate this:

- In Linux caches should be stored in ~/.cache/ which I can symlink to local storage.
- Setting to change location of addons or large storage.
- Perhaps advertise how much space addons require
</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30710</IssueID>
    <Title>Right click file options dissappear after selecting a first file for compare</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:24:22.120Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
xml|Dot|1.9.2
html-snippets|abu|0.1.0
javadebugger|don|0.1.2
python|don|0.6.7
mssql|ms-|1.0.0
vscode-icons|rob|7.10.1
vscode-sql-beautify|sen|0.0.4
bootstrap-3-snippets|wcw|0.1.0



---

Steps to Reproduce:

1. Open two files and view them in the Explorer &gt; Open Editors pane
2. Right click on a file and "select for compare"
3. Right click on another file and no options will appear</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30707</IssueID>
    <Title>Missing autocomplete for TypeScript</Title>
    <Description>- VSCode Version: 1.14.1 (1.14.1)
- OS Version: macOS 10.12.5 (16F2104)

When editing *.ts files, code autocomplete misses many hints like datatypes, const, let, etc.
 
Steps to Reproduce:
1. In a TypeScript file, type some code.
2. like below:
&lt;img width="827" alt="2017-07-14 9 34 11" src="https://user-images.githubusercontent.com/3023607/28214284-362cdee0-68dc-11e7-866a-924b10bfb286.png"&gt;
There should be const instead of ctor(constructor)



&lt;img width="355" alt="2017-07-14 9 35 09" src="https://user-images.githubusercontent.com/3023607/28214308-54355548-68dc-11e7-9fc0-8fe2626630f2.png"&gt;
No hint for boolean, or number, or string.

In 1.13, everything is fine.


Plus, when I refer to developer tools, there are errors:

&gt; [Extension Host] Activating extension `vscode.typescript` failed:  [vscode.typescript]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api vscode.typescript
&gt; h.logExtensionHostMessage @ extensionHost.ts:320

&lt;img width="912" alt="2017-07-14 10 29 09" src="https://user-images.githubusercontent.com/3023607/28216337-df90f0be-68e3-11e7-9814-87ccbd7c122a.png"&gt;



Reproduces without extensions: Yes</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30681</IssueID>
    <Title>VS Code Dark+ theme PHP syntax highlighting broken on certain code</Title>
    <Description>- VSCode Version: 1.14.0
- VSCode Version: 1.14.1
- VSCode Version: 1.15.0-Insiders

This code worked with 1.13
```php
&lt;?php 
return array("Template", function ($id) { 
    ?&gt;
    &lt;div class="&lt;?php echo $id ?&gt;"&gt;
        &lt;span&gt;&lt;/span&gt;
    &lt;/div&gt;
&lt;?php });
```

Minimal repro:

```php
&lt;?php 
return array(function () { 
    ?&gt;&lt;img /&gt;&lt;?php 
});
```

Now with 1.14.1 it renders as mostly white:

![image](https://user-images.githubusercontent.com/64731/28203561-fa78302e-6882-11e7-8692-932c42d26c34.png)

It looks like it goes awry when function is passed to array and then `?&gt;`</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30678</IssueID>
    <Title>Go to function definition (Ctrl+Click) does not work in Javascript code (version 1.14)</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14
- OS Version: Windows 7

Steps to Reproduce:
In version 1.13 go to function definition (Ctrl+Click) worked. 
In new version - it does not. F12 does not work too. I've checked on simple file (named test.js):

```js
function testFunction(params) {
    alert("test");
}

testFunction();
```

To be sure I've removed old version and installed the new one - result was the same.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30669</IssueID>
    <Title>Typo on deployment panel "applciation"</Title>
    <Description>- VSCode Version: Code - Insiders 1.15.0-insider (56a5bf1724f3b882e149a3e7a24e6105a7b837c2, 2017-07-13T06:21:15.951Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 



---

Steps to Reproduce:

1. Go to Source Control
2. Expand Deployment

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

![image](https://user-images.githubusercontent.com/3129504/28199715-254836aa-68ab-11e7-8110-72084aa8ddaa.png)
</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30667</IssueID>
    <Title>Format Document option is broken in 1.14.1.</Title>
    <Description>- VSCode Version: Code 1.14.1 (2648980a697a4c8fb5777dcfb2ab110cec8a2f58, 2017-07-13T19:08:57.197Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
html-snippets|abu|0.1.0
jshint|dba|0.10.15
backbone-js-snippets|ioa|0.0.1
JavaScriptSnippets|xab|1.4.1

(1 theme extensions excluded)


---

Steps to Reproduce:

1. Make a new file, write some code in javascript in unformatted manner.
2. Use shortcut keys to 'option + shift + F' not working, even format document option missing in context menu.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30643</IssueID>
    <Title>Add Global Undo and Redo</Title>
    <Description>It would be nice if VS Code could support global undo and redo like in Visual Studio:

&gt;In addition to the typical undo and redo functionality that affects only individual files, the Visual Studio editor includes commands to undo or redo global actions that affect multiple files.

&gt;Global actions include renaming a class or namespace, performing a find-and-replace operation across a solution, refactoring a database, or any other action that changes multiple files.

https://msdn.microsoft.com/en-us/library/ee839600(v=vs.100).aspx

Right now it's difficult to undo a search and replace or refactoring because you have to go through every file.

See also: atom/find-and-replace#331</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30632</IssueID>
    <Title>No import autocomplete with Typescript </Title>
    <Description>In new release, there's no path autocomplete on modules like it used to be on September 2016 release.

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: Windows 10 

Steps to Reproduce:

1. Create a Typescript project with `"baseUrl": "./"` in compiler options
2. Create some basic module
3. Try `import Foo from "folder/module"`. There's no autocomplete

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: No</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30612</IssueID>
    <Title>`Use ignore files` option combined with `files to include` set seems to be broken in 1.14 (works fine in 1.13.1)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 
1.14.0 final and
Code - Insiders 1.15.0-insider (74f5073c54f1139d2fb0eccb251cae5ed6e8215b, 2017-07-12T05:07:15.561Z)
- OS Version: Darwin x64 16.6.0

Steps to Reproduce:

1. Open project with some `.gitignore`d files
2. Search with `Use ignore files` option enabled and `files to include` set to some subfolder (like `./back` that belongs to the project root).
3. 1.13.1 does not include ignored files within `./back`, 1.14.0 final and 1.15.0-insiders do include
4. If `files to include` is empty - everything work as expected.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30607</IssueID>
    <Title>Why the programme not responding after last update!!</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: Windows 8.1


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No
![capture](https://user-images.githubusercontent.com/22766655/28164640-977d53d0-67d0-11e7-851e-2c46cbe33860.PNG)
</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30604</IssueID>
    <Title>Why vscode jump to a .d.ts file when I command click a module</Title>
    <Description>import { Provider } from 'react-redux';

When I command click the 'react-redux' I wanna see the source code which is a .js file, but the  vscode jump to a .d.ts file instead. How can I fix this?</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30584</IssueID>
    <Title>Can't preview MarkDown file in vscode.</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
code-gnu-global|aus|0.2.2
python|don|0.6.7
vscode-great-icons|emm|2.1.9
vscode-JS-CSS-HTML-formatter|lon|0.2.3
cpptools|ms-|0.12.0
csharp|ms-|1.11.0
debugger-for-chrome|msj|3.1.6



---

Steps to Reproduce:

1. open vscode and create a .md file
2. write content "## My Title " and open preview window, and it's show nothing!

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30575</IssueID>
    <Title>Add setting to show cross project find results in a tab like Sublime</Title>
    <Description>VSCode shows the find results squished into a narrow sidebar which makes them very hard to use if your window and sidebar isn't huge. You also can't have the find results and the file view at the same time, since the actions sidebar only lets you see one thing at a time.

Instead have a mode where the find results are a regular tab. Then you could tear it off, or toggle back and forth from code windows while the file view is still open and also have lots more room to see the find results. Also provide control over the number of context lines shown there.</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30565</IssueID>
    <Title>V1.14.0 Does not work correctly (MacOS Sierra)</Title>
    <Description>VS code must be re-opened a lot of times, it just freezes when is opened.

&lt;img width="475" alt="screen shot 2017-07-12 at 11 14 34 pm" src="https://user-images.githubusercontent.com/17013303/28150173-83a34806-6758-11e7-8ebd-d98944a9ae59.png"&gt;
</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30560</IssueID>
    <Title>macOS Sierra 10.12.5 Update to 1.14.0 and crash</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: macOS Sierra 10.12.5

Steps to Reproduce:

1. update to 1.14.0 (auto)
2. click restart vscode
3. code can't response anything (click/cmd+q/cmd+p....)
4. Os show me app not response and waitting or quit ..

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No

YES

![error images](https://github.com/azhao1981/my-notes/raw/master/images/vccod_error.jpeg)</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30559</IssueID>
    <Title>Problem Matcher dynamic fileLocation setting</Title>
    <Description>I have the following output from my build:

make[1]: Entering directory '/vagrant/nuttx/sched'
make[1]: 'libsched.a' is up to date.
make[1]: Leaving directory '/vagrant/nuttx/sched'
make[1]: Entering directory '/vagrant/nuttx/drivers'
CC:  wireless/ieee802154/mrf24j40/mrf24j40_regops.c
wireless/ieee802154/mrf24j40/mrf24j40_regops.c: In function 'mrf24j40_getreg':
wireless/ieee802154/mrf24j40/mrf24j40_regops.c:130:2: error: 'dev' undeclared (first use in this function)

The issue is that the path needs to be /nuttx/drivers/wireless/ieee802154/mrf24j40/mrf24j40_regops.c

As you can see, that means when the "Entering directory" line is printed, I need to somehow change the path mapping so that the path on the line with the error/warning is linked.

I realize I could fix it for this one case using the fileLocation setting, but that won't work if it's any of the other directories in the project.  Regex could solve it if there were some clever way of combining them.

I am hoping someone here has a clever solution in mind for this, or if maybe there is an easy-enough workaround.  I'd be awesome to be able to get the problem matcher working with this setup!</Description>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30553</IssueID>
    <Title>VS Code freezes on launch</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

Pls help.  VS code freezes on launch.  Cannot click on anything in window.  Totally unresponsive. Works fine with extensions disabled (command below).  

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: latest stable 1.14.0
- OS Version: OSX 10.12.5

Steps to Reproduce:

1. Download latest version of VS Code from code.visualstudio.com
2. open program with 'code' command in terminal or clicking on icon in dock. Watch it freeze instantly upon opening.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No   NO</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30524</IssueID>
    <Title>want the Windows UWP app</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version: Win 10



&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30500</IssueID>
    <Title>Monokai PHP Syntax Highlighting Broken on New Release</Title>
    <Description>Syntax highlighting of method names, `$this` variable, `::class` constant for PHP language in Monokai theme is broken. See screenshot:

![monokai-php-syntax](https://user-images.githubusercontent.com/1418898/28114320-a3bbbba8-6700-11e7-8315-4b73482b1d78.png)

- VSCode Version: 1.14
- OS Version: Ubuntu 16.04

Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30494</IssueID>
    <Title>Explorer drag and drop stopped working</Title>
    <Description>Version: todays Insiders (74f5073)
OS: Windows

Select a file in explorer and drag it to any folder -&gt; file is not moved to the folder.</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30493</IssueID>
    <Title>Global search: shows in results when excluded</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
regex|chr|0.1.0
vscode-eslint|dba|1.2.11
python|don|0.6.7
pgsql|dou|0.0.8
vscode-scss|mrm|0.6.2
mssql|ms-|1.0.0
csharp|ms-|1.11.0
debugger-for-chrome|msj|3.1.6
dust|nem|0.0.1
vscode-docker|Pet|0.0.16
material-icon-theme|PKi|2.0.10
java|red|0.7.0
sass-indented|rob|1.4.1
code-settings-sync|Sha|2.8.2

(1 theme extensions excluded)


---

Steps to Reproduce:

1. add folder name to excludes list within search
2. have a file open that's within that folder
3. search something you want to find in other files within other non-excluded folders, but could also match the open, excluded file
4. revel in the marvelous results

screenshot:

![screenshot](http://i.imgur.com/xdmXywR.png)</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30491</IssueID>
    <Title>Make update process faster on Windows</Title>
    <Description>I'm in a corp environment where we have a policy-driven on-demand virus scanner. This painfully slows down the update process of VS Code due to the scanning of every individual .js file.

I'm using a HP Z620 with SSDs... I can't imagine how slow it is for the average user with the same virus scanner.

Is there a way to 'bundle' the installation files together to increase speed during installation, or even maybe  update VS Code in the background and ask me for confirmation before the update-enabling relaunch?</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30490</IssueID>
    <Title>Debug Active Bar - usability feature-request</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

I like to use Debug Action Bar but it's somewhat inconvenient - it covers open tabs and I must move it around constantly (see image):
![vsc-old](https://user-images.githubusercontent.com/30110941/28110505-555e579a-66fb-11e7-99ac-e0e41e0695fb.jpg)

Suggestion:
Please, add a config file option "debug.actionBarPosition": "default" || "workbench".
"default" or not specified - classic behavior
"workbench" - debug controls are moved to workbench (see image):
![vsc-debug](https://user-images.githubusercontent.com/30110941/28111212-6bcac1b0-66fd-11e7-8c1d-8b9c9463501e.jpg)

For colored controls you can add third option if you like "workbenchColor" (see image):
![vsc-debug-color](https://user-images.githubusercontent.com/30110941/28111385-f5e01d0a-66fd-11e7-8d65-6f51c98c08d9.jpg)

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14
- OS Version: Windows 7

Steps to Reproduce:

1. Remove ["debug.hideActionBar": true] from VSC configuration (if any) or set it to "false".
2. Press [F5] to launch debugging session.
3. Debug Action Bar opens and covers open tabs.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30471</IssueID>
    <Title>There is no Find text option in CSV preview</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
- OS Version:

Steps to Reproduce:

1.install Excel preview plugin(Powered by Wijmo)
2. Click on preview button in right hand side while opening a csv file.
3. CSV file opens in Grid view fashion. But  press Ctrl+F button  
4. You can observe that Find dialog box never appear. 
Result is  could not able to scroll to right cell . 

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30460</IssueID>
    <Title>Regression June 2017: Flickering when resizing window or resizing terminal panel</Title>
    <Description>On the latest June release there is some severe lagging and flickering on the main window on resizing the editor. That wasn't the case before the last update.

- VSCode Version: June 2017 (1.14)
- OS Version: macOS 10.12.5
- Macbook Pro with Retina screen

Steps to Reproduce:

1. open any file
2. resize window or the terminal split panel

Reproduces without extensions: Yes

I made some screen recordings to visualize the problem:

![flicker](https://user-images.githubusercontent.com/873717/28103407-da37f096-66d5-11e7-98c9-8f021a92f366.gif)
![scale-lag](https://user-images.githubusercontent.com/873717/28103408-da615422-66d5-11e7-8a33-a8ed333acb09.gif)
</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30451</IssueID>
    <Title>vscode stuck</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:    1.14.0 (1.14.0)
- OS Version:  macos 10.12.5 (16F73)

Steps to Reproduce:

1.Jammed tip: window can no longer response to open or close the window, or keep waiting.
2.Choose to wait.
3.Restart or failure has no effect


&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes/No</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30446</IssueID>
    <Title>Emmet (HTML) not honoring grouping syntax</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 10.0.16237
- Extensions: (tested with all extensions disabled)

Extension|Author (truncated)|Version
---|---|---
npm-intellisense|chr|1.3.0
path-intellisense|chr|1.4.2
vscode-eslint|dba|1.2.11
vscode-npm-script|eg2|0.2.0
LogFileHighlighter|emi|1.1.1
auto-close-tag|for|0.4.3
auto-rename-tag|for|0.0.14
search-node-modules|jas|1.1.1
PowerShell|ms-|1.4.1
debugger-for-chrome|msj|3.1.6
vuejs-extension-pack|mub|0.1.7
vetur|oct|0.9.0
vuehelper|oys|0.1.0
Align|ste|0.2.0
JavaScriptSnippets|xab|1.4.1



---

**Steps to Reproduce:**

`div#app&gt;(div&gt;p#test*2)` correctly expands to:
````html
&lt;div id="app"&gt;
  &lt;div&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
````

while `div#app&gt;(div&gt;p#test*2)*2` incorrectly expands to:
````html
&lt;div id="app"&gt;
&lt;/div&gt;
````
it should expand to:
````html
&lt;div id="app"&gt;
  &lt;div&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
    &lt;p id="test"&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
````

The same abbreviation expands correctly in Atom with the official Emmet plugin. (Tested just in case I was typing emmet jibberish!)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30443</IssueID>
    <Title>Syntax Highlighting Broken on New Release</Title>
    <Description>Syntax highlighting for object properties and JSX is broken.

- VSCode Version: 1.14
- OS Version: OSX El Capitan 10.11.6

Reproduces without extensions: Yes</Description>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30438</IssueID>
    <Title>1.14 Window Hangs Upon Opening</Title>
    <Description>![image](https://user-images.githubusercontent.com/15745278/28094826-e54cf8be-6653-11e7-8c29-919e91d90d36.png)


- VSCode Version: 1.14.0
- OS Version: Mac OS Sierra 10.12.5
Steps to Reproduce:

1. Upgrade to 1.14
2. Use the editor for a few minutes

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

At the moment I am gathering more data as to what extensions it might be colliding with, when I run
it with `code --disable-extensions` it starts, but when I open a project it still crashes. The bug only affects the window, I can still interact with the running process by successfully getting the about window to display.
</Description>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30427</IssueID>
    <Title>I'm going to have to downgrade from 1.14 - Hangs every 10 - 15 minutes.</Title>
    <Description>Upgraded to 1.14 when it available today. Since then I get about 10 - 15 to work and then I get the message (attached).

Going to figure out how to downgrade to the previous version.

- VSCode Version: 1.14
- OS Version: Windows 10 Pro 1703 / Build 15063.413

![screenshot](https://user-images.githubusercontent.com/1828232/28090463-328b5f20-6641-11e7-9b34-6d646fd679ff.png)

Steps to Reproduce:

1. Upgrade to 1.14
2. Use the editor for a few minutes
</Description>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30426</IssueID>
    <Title>Context menu for files in Search section</Title>
    <Description>Right now there is no context menu for files in Search section. It would be very convenient to have the same context menu as in Explorer section.</Description>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30409</IssueID>
    <Title>Autocomplete advanced snippet sorting</Title>
    <Description>- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:36:31.751Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
javadebugger|don|0.1.2
java|red|0.7.0
vscode-lua|tri|0.5.0

---

Steps to Reproduce:

1. create several custom custom snippets (Examples down)

```
"playerPos": {
		"prefix": "playerPos",
		"body": "local playerPos = player:getPosition()",
		"description": "playerPos"
	},
	"objectID 1": {
		"prefix": "playerID",
		"body": "local ${1:player}ID = ${1:player}:getId()",
		"description": "objectID"
	},
```
2. when snippets created and I write on new file: player
I get over 10 suggestions as to be expected.
So first time I write out the full word playerPos to get the snippet.

Next time when I start writing: player
First 3 suggestions should be last 3 used
Then next 3 suggestions for most used snippets (don't overlap)
Rest of suggestions param/func/snippets which used above lines
If suggestion bar not filled up by now then can continue as it is right now

(of course all suggestions should start or be similar with prefix)

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30383</IssueID>
    <Title>Microsoft Visual Code - Suggestion</Title>
    <Description>_Hello sir, really i love this Project its amazing and it 'd be much better if you added a feature which alerts us when our Opened files is edited/opened with any kind of another Editors... and then shows a Dialog with 2 optians to tell us to reload opened file (edited one)'s content or just keep current content as its..._ 

</Description>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30356</IssueID>
    <Title>Smoke test autoupdates on MacOS</Title>
    <Description>- Run smoke test on 1.14
- If a test takes long enough, it will "update" and regress to the released stable version

It should set the update channel to "none" before running tests.</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>11/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30355</IssueID>
    <Title>Command+Click on line in OUTPUT console should go to line in already open file</Title>
    <Description>_From @tylerb on July 10, 2017 18:34_

Repro:

1. Use two code views
2. Left view open an unrelated file
3. Right view open a test file with a failing test
4. Run test to generate output in the OUTPUT pane
5. Click on the left view to select it
6. command+click the failing line in OUTPUT

Expected result: the right view jumps to the line that was just command+clicked
Actual result: the file is opened, again, in the left view and then jumps to the line

I'd really like it if this process would first search to see if any view has the file open already.

Thanks!

_Copied from original issue: Microsoft/vscode-go#1080_</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30344</IssueID>
    <Title>Does the javascript inside HTML cannot include typings?</Title>
    <Description>I try to install typings and get it work on js file. But the same type that got registered in intellisense of js file was not shown in javascript inside HTML

![image](https://user-images.githubusercontent.com/1042507/28032078-7c788234-65d3-11e7-887e-6571e1f96755.png)
</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30340</IssueID>
    <Title>Feature request: 'New project' API</Title>
    <Description>I would like to suggest an API for extensions to hook into for starting new projects of a certain type.

My motivation is creating a user-friendly way of creating a new project, similar to an experience found in Big Brother Visual Studio, but better. [CMake Tools](https://marketplace.visualstudio.com/items?itemName=vector-of-bool.cmake-tools) provides a command `CMake: Quick Start` which creates a stub project with a single CMakeLists.txt file and a "Hello, World" level main.cpp. This is great way to skip some of the boilerplate associated by just getting a text editor with a compiler hooked up to it locally. (Something like godbolt, but locally, just to test something or get going on a new project.)

[Windows Template Studio](https://marketplace.visualstudio.com/items?itemName=WASTeamAccount.WindowsTemplateStudio) is awesome and it were nice if a similar API could come integrated into VS Code where extensions could register their own quick start templates, or even more convoluted ones, as found in WTS.

If such a feature existed, I would gladly take the time and contribute to CMake Tools to create composable CMake script stubs. Something like:

I need a library that will:
- depend on clFFT and clBLAS
- have unit tests
- have docs created by doxygen

Plus I will need an executable:
- that links to the library
- which depends on Boost program options
- have docs created by doxygen

So something similar to WTS, but for CMake and baked into VS Code for seamless integration. Because this feature I believe is of general interest, it could be worth the effort to create an API for.

Ideas?
</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30332</IssueID>
    <Title>Unable to Debug Jest tests with Typescript</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|npm-intellisense|christian-kohler|1.3.0|
|tslint|eg2|0.16.0|
|path-autocomplete|ionutvmi|1.5.1|
|graphql-for-vscode|kumar-harsh|1.4.2|
|debugger-for-chrome|msjsdiag|3.1.6|
|vim|vscodevim|0.9.0|;


---

Steps to Reproduce:

1. Clone the reproduction case here: https://github.com/blargity/vscode-ts-jest-debugger
2. Run `yarn`
3. Try to run the `Tests` configuration in VSCode

---

Note: this is not the only configuration we've tried. Even setting inline source maps doesn't seem to do anything:

```
$ node --version
v8.1.2
$ npm --version
5.0.3
$ yarn --version
0.27.5
$ tsc --version
Version 2.4.1
```

I'd really appreciate any help I can get debugging this and figuring out how we can run our tests using the debugger. Once you get used to using the VSCode debugger you want to use it for everything!</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30325</IssueID>
    <Title>Some terminal text invisible with the default Solarized Dark theme</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.9.2|
|pegjs-language|SirTobi|0.1.0|
|python|donjayamanne|0.6.7|
|Theme-Solarized-dark|gerane|0.0.2|
|ftp-simple|humy2833|0.5.1|
|cpptools|ms-vscode|0.12.0|
|csharp|ms-vscode|1.11.0|
|latex|ms-vscode|0.1.3|
|debugger-for-chrome|msjsdiag|3.1.6|
|java|redhat|0.7.0|
|vscode-icons|robertohuertasm|7.10.1|
|sass-indented|robinbentley|1.4.1|;


---

I encountered this when using the *default* Solarized Dark theme (not to be confused with the `Solarized-Dark` theme module, which works fine.) and mocha 3.0.2.

Steps to Reproduce:

1. Install mocha (my version is 3.0.2)
2. Write a simple test script, save as `test.js`, for example:

        describe("test", () =&gt; {
            it("test 1", () =&gt; { });
            it("test 2", () =&gt; { });
        });

3. Use the default "Solarized Dark" theme
4. Open the VSCode Terminal, type "mocha `test.js`"

The test names such as `test 1` and `test 2` are missing because the background color is the same as the text colors for them.

&lt;img width="301" alt="issue" src="https://user-images.githubusercontent.com/1595237/28006863-fd5403f2-6505-11e7-90ad-e5f95d417ba3.png"&gt;</Description>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30296</IssueID>
    <Title>Terminal freeze, scroll bar disappears </Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|empty-indent|DmitryDorofeev|0.2.0|
|jquerysnippets|donjayamanne|0.0.1|
|python|donjayamanne|0.6.7|
|gitlens|eamodio|4.1.3|
|vscode-html-css|ecmel|0.1.7|
|theme-atom-one-dark|freebroccolo|0.0.1|
|theme-material-theme|jprestidge|1.0.1|
|TypeScriptImport|kevinmcgowan|1.17.0|
|indent-rainbow|oderwat|0.6.1|
|vscode-icons|robertohuertasm|7.9.0|
|ActiveFileInStatusBar|RoscoP|1.0.2|
|code-settings-sync|Shan|2.8.1|
![vs code terminal scroll bar issue](https://user-images.githubusercontent.com/22821555/27989326-0a4af288-642e-11e7-93fc-de89eee47cb0.jpg)

|indenticator|SirTori|0.4.2|
|vscode-djaneiro|thebarkman|1.2.1|
|bootstrap4-vscode|thekalinga|2.3.3|
|html-css-class-completion|Zignd|1.7.0|;


---

Steps to Reproduce:

1.  If I run a .py file in the built-in Terminal with shortcut key assigned to "command": "python.execInTerminal"
2. I get the results fine. 
3. I kill the terminal
4. I run the same file again.
5.  I get the results fine. But I can't scroll the results with the mouse or keys, also the scroll bar is not visible. The terminal window is frozen.
6. I have to grab the terminal or the main window and resize it up or down, then the terminal and the scrollbar will be scrollable/visible again. I have this issue since the beginning approx. 5 months.</Description>
    <CreatedDate>08/07/2017</CreatedDate>
    <ClosedDate>09/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30283</IssueID>
    <Title>[Feature Request] : Display multiple terminals using tabs, instead of drop down list</Title>
    <Description>Currently, when i want to switch between terminals in visual studio code, i need to change them via the drop down list near the top right corner. Is it possible to display terminals in tabbed format, so that developer can easily and quickly switch between them using tabs</Description>
    <CreatedDate>08/07/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30277</IssueID>
    <Title>Emmet places HTML tags around the last word when entering text in between HTML tags.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.31.1
- OS Version: Win 10

Steps to Reproduce:

1. Have emmet/new emmet.
2.Type within html tags, then press tab.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes

When trying to enter a tag quickly, say 

&gt; `&lt;h1&gt;words words words&lt;/h1&gt;`

 I expect the behavior to be like:

&gt; h1 -&gt; tab -&gt; enter contents of h1 tag -&gt; tab to end of tag to continue writing.

and you should get this. with the cursor at the end of the closing tag.

&gt; `&lt;h1&gt;words words words&lt;/h1&gt;|`



 

Instead I get something like this with the last word wrapped in a random tag, and the cursor and the end of the newly created tags.

&gt; `&lt;h1&gt;words words &lt;words&gt;&lt;/words&gt;|&lt;/h1&gt;.`

Yet if I hit space at the end of the word, so that there is nothing to put inside of tags, hitting tab goes to the end of the closing tag as I want it to.

The only plugin I have for the editor is "indent-rainbow" and my settings look like this:



&gt;     "editor.tabSize": 2,
&gt;     "editor.wordBasedSuggestions": false,
&gt;     "workbench.colorTheme": "Atom One Dark",
&gt;     "editor.rulers": [80,100],
&gt;     "editor.wordWrap": "off",
&gt;     "editor.cursorStyle": "line",
&gt;     "editor.renderWhitespace": "all",
&gt;     "emmet.useNewEmmet": true
&gt; 

Here is a video showing my issue. https://streamable.com/ofkbv

I have also been able to reproduce this in Atom by installing the Emmet plugin, so it must have something to do with that, but I cannot find a setting to make it only put tags around emmet shortcuts, instead of around every word when pressing tab.</Description>
    <CreatedDate>08/07/2017</CreatedDate>
    <ClosedDate>09/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30264</IssueID>
    <Title>When already open `--wait` forces you to close all windows.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: macOS Sierra 10.12.5

Steps to Reproduce:

1. Open a directory `code ~/src/somedir`
2. Open a file with `code ~/src/otherdir/somefile --wait`

There doesn't seem to be a way to close just the wait window and have that return without closing vscode out completely.

It would be nice to be able to use this as my git editor/difftool, but can't do that with how it currently works.  I would expect that closing the only tab, or the CMD+Q would exit the current editor in the waiting state, not have to close down code completely.</Description>
    <CreatedDate>07/07/2017</CreatedDate>
    <ClosedDate>08/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30253</IssueID>
    <Title>Add right-click menu to files in Search and Call Stack file listings</Title>
    <Description>- VSCode Version: 1.13.1 (1.13.1)
- OS Version: OS X 10.10.5

Both the Search Results and the Debug/Call Stack panes include listings of the found/involved files. However, I often finding myself wondering where the heck one of the listed files is. Is it in my code? Is it something in Node? Is it in an extension? The only way I've found is to open the file and then right-click on the file header, choosing "Reveal in Sidebar". It took me a while to find this (months, really), and is more indirect than it needs to be.

Feature request: add a right-click menu to each file name in the Search Results and Debug/Call Stack file listings. The menu would include everything relevant from the right-click menu on open file headers, which currently includes:

- Copy Path
- Reveal in Finder
- Reveal in Sidebar

Even better would be a way to view the path in situ, without having to switch contexts. Perhaps there could be a disabled "Path" menu item which shows the file path, or a hierarchical "Show Path" menu whose contents is just the file path (disabled). This could be added both to the file listings and to the current file header menu.
</Description>
    <CreatedDate>07/07/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30251</IssueID>
    <Title>Add ability to rename terminals</Title>
    <Description>It would be great to be able to change the name displayed in the terminals dropdown for each terminal.

This is a pretty common situation for me (which `bash` was the right one?):

&lt;img width="221" alt="screen shot 2017-07-07 at 15 37 35" src="https://user-images.githubusercontent.com/1812093/27960122-642797b6-632a-11e7-8162-4e40a5c66b52.png"&gt;

It would be nice to have an `edit` button next to this select element, even a plain input reachable via an entry in the command palette would do it.

I believe it's possible to do this using the API, but I think it would be better to also have a more easily accessible option at hand.

What do you think?</Description>
    <CreatedDate>07/07/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30212</IssueID>
    <Title>Arrow function - Could not determine references via CodeLens</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: Windows 10 Pro x64

Steps to Reproduce:

1. Set typescript.referencesCodeLens.enabled to true in User Settings
2. Open a typescript file and add the following:
```
export function helloWorld1(someNum: number): number{
  return 1;
}
export const helloWorld2 = (someNum: number): number =&gt; (1);
```
3. First function will show the number of references while second function will show "Could not determine references"

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>06/07/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30194</IssueID>
    <Title>Running in WSL (yes I know it's not official)</Title>
    <Description>I'm aware this is not supported yet but obviously a lot of work has been done around it so I thought I'd raise this as it's SOOOO close now! With dbus and various other issues out of the way, the only remaining fatal issue seems to be the check failed issue shown below.

- VSCode Version:  1-14-0.insider
- OS Version: Windows 10 with creators update. (I'll try again with the preview build this evening)

Steps to Reproduce:

1. Install VcXsrv and configure to use single screen using XLaunch.
2. Open "Bash on Ubuntu on Windows"
3.  execute `LIBGL_ALWAYS_INDIRECT=1 DISPLAY=:0 code-insiders --verbose`

Reproduces without extensions: Yes

Stack: 
```
[4533:0706/153512.810904:WARNING:audio_manager.cc(317)] Multiple instances of AudioManager detected
[4533:0706/153512.810991:WARNING:audio_manager.cc(278)] Multiple instances of AudioManager detected
[4533:0706/153512.815020:FATAL:udev_linux.cc(20)] Check failed: monitor_.
#0 0x000001af7a0e &lt;unknown&gt;
#1 0x000001adccab &lt;unknown&gt;
#2 0x00000277b426 &lt;unknown&gt;
#3 0x000001a4118b &lt;unknown&gt;
#4 0x000001ae010e &lt;unknown&gt;
#5 0x000001b332ac &lt;unknown&gt;
#6 0x000001b33558 &lt;unknown&gt;
#7 0x000001b338bb &lt;unknown&gt;
#8 0x000001ae2469 &lt;unknown&gt;
#9 0x000001b33047 &lt;unknown&gt;
#10 0x000001b15460 &lt;unknown&gt;
#11 0x000002561126 &lt;unknown&gt;
#12 0x0000025612d9 &lt;unknown&gt;
#13 0x000001b4b165 &lt;unknown&gt;
#14 0x000001b25693 &lt;unknown&gt;
#15 0x7f36524576ba start_thread
#16 0x7f364b9673dd clone
```</Description>
    <CreatedDate>06/07/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30192</IssueID>
    <Title>Windows 64bits install - error launching terminal</Title>
    <Description>- install the 64 bits install for Windows
- start VS Code and open the terminal 
- error below appears:

![image](https://user-images.githubusercontent.com/172399/27915953-02d1a2b2-6268-11e7-8ea1-74be6764746d.png)

My terminal setting is:
```
	"terminal.integrated.shell.windows": "C:\\Windows\\sysnative\\cmd.exe",
```

Using the default powershell works fine.</Description>
    <CreatedDate>06/07/2017</CreatedDate>
    <ClosedDate>06/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30139</IssueID>
    <Title>Change position to select when we click on the status bar options</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0 - Insiders (6afdf30 - Date 2017-07-05T08:33:33.146Z )
- OS Version: Windows 10

-- Sorry for the English, I used Google Translator --

One suggestion would be that when we click on the options that exist in the status bar, it will appear next to it.

![lines](https://user-images.githubusercontent.com/19866231/27873457-95082458-6182-11e7-94b5-98f42c909e97.PNG)
![indent](https://user-images.githubusercontent.com/19866231/27873460-99c06eec-6182-11e7-9563-fe4316b0c865.PNG)
![encoding2](https://user-images.githubusercontent.com/19866231/27873530-d44f1d42-6182-11e7-8329-b35ff3472064.png)
![sequence](https://user-images.githubusercontent.com/19866231/27873545-dd502d28-6182-11e7-95ec-06002f7128e0.PNG)
![language](https://user-images.githubusercontent.com/19866231/27873552-e275a1f2-6182-11e7-9392-73b832ae8778.PNG)





That would be only when we clicked there. If we used the Command Palette it would work the way the current form does.



As for the search bar I would vote for being at the bottom (different from how the images are) next to the own status bar.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>05/07/2017</CreatedDate>
    <ClosedDate>06/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30132</IssueID>
    <Title>Option to save all dirty files on build</Title>
    <Description>This is a feature request for an optional capability to save all open dirty files in the editor upon build of the project.

This is something that I've evidently become very used to in my Visual Studio workflow. So when working in VS Code and the behavior is different and not configurable I frequently end up building with unsaved changes.</Description>
    <CreatedDate>05/07/2017</CreatedDate>
    <ClosedDate>06/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30121</IssueID>
    <Title>Webview font becomes Times New Roman when switching themes</Title>
    <Description>![kapture 2017-07-05 at 10 49 18](https://user-images.githubusercontent.com/22350/27856844-b3e66c30-616f-11e7-9123-90859938d0df.gif)
</Description>
    <CreatedDate>05/07/2017</CreatedDate>
    <ClosedDate>05/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30104</IssueID>
    <Title>Move search panel to the bottom</Title>
    <Description>Or at least make it configurable.

Maybe it's because I'm coming from Atom, but I feel like I need more horizontal space in search results.</Description>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>06/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30103</IssueID>
    <Title>Console output referencing root directory files don't get ctrl+click link</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: macOS Sierra

Steps to Reproduce:

Assuming you have an already working TypeScript project.
1. Create a faulty typescript file "file.ts" containing garbage in the root directory of your project
2. Run tsc -p in the same directory.

Actual Result:
You'll get some console logs like
```
37     faulty code
          ~~~~~~~~
file.ts(37,18): error XXXX: YYYY
```
The problem resides that normally you'd be getting a relative path (e.g. to the file causing the error), but that's not the case if the file is located in the root directory.</Description>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>05/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30088</IssueID>
    <Title>Use `originalEditable` when comparing two files on disk</Title>
    <Description>* in the explorer,
* right click on a file A, choose "Select for compare"
* right click on another file, choose "Compare with A"
* observe: left hand side of the diff is not editable

Fix: use `originalEditable` when the diff editor models are both editable files.</Description>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>04/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30082</IssueID>
    <Title>Request: Option for "Highlight selected word" across editor groups.</Title>
    <Description>Couldn't find a request like this already, so...

I'd like to be able to double-click a word in my left editor group, and have it highlighted in my right one (or however many I have) as well as in the left one. To differentiate between the currently highlighted word I might already have in the right group, I'd like them to be highlighted in different colors.

Notepad++ has this in Settings -&gt; Preferences -&gt; Highlighting -&gt; Highlight another view</Description>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>04/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30076</IssueID>
    <Title>Select All Occurrences of Find Match limited to 999 matches</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.31.1
- OS Version: 10.12.5

Steps to Reproduce:

1. Open a file with more than 1k occurrences 
2. Choose `Select All Occurrences of Find Match` from the menu
3. It will max out at 999 selections
4. Pressing Cmd-D continues above 999, so it isn't a problem with the match, just the `Select All` feature</Description>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>04/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30063</IssueID>
    <Title>Debug target combobox is truncated while you open a new folder for the first time.</Title>
    <Description>_From @Serena01 on July 3, 2017 9:22_

## Environment data
`dotnet --info` output:
Runtime Environment:
 OS Name:     Windows
 OS Version:  6.3.9600
 OS Platform: Windows
 RID:         win81-x64
 Base Path:   C:\Program Files\dotnet\sdk\1.0.4
VS Code version:1.13.1
C# Extension version:v1.12.0-beta1
machine to reproduce:TEN16183 [IP:10.159.129.92]

## Steps to reproduce
1.Execute the following command to create a console project
  dotnet new console -o hwapp
  dotnet restore
 dotnet run
2.Open console project in vscode.
3.Open a .cs file, and wait for the C# extension to finish activating
4.Click 'Yes' at -- ![Info: Required assets to build and debug are missing from your project. Add them? Yes | Close](https://raw.githubusercontent.com/wiki/OmniSharp/omnisharp-vscode/images/info-bar-add-required-assets.png)
5.Click debug target combobox.
6.The issue just reproduce while you open a new folder for the first time .

## Expected  behavior
![expected](https://user-images.githubusercontent.com/20184641/27786201-d0687a78-6012-11e7-99ab-fd05a2f37f61.PNG)


## Actual behavior
![actual](https://user-images.githubusercontent.com/20184641/27786208-d67100de-6012-11e7-93a7-f0654e00e6b4.PNG)


_Copied from original issue: OmniSharp/omnisharp-vscode#1618_</Description>
    <CreatedDate>03/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30037</IssueID>
    <Title>NPM install fails as long as VSCode is open</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|Bookmarks|alefragnani|0.15.2|
|ng-template|Angular|0.1.4|
|vscode-svgviewer|cssho|1.4.2|
|vscode-markdownlint|DavidAnson|0.9.1|
|xml|DotJoshJohnson|1.9.2|
|vscode-style-formatter|dweber019|1.0.0|
|gitlens|eamodio|4.3.0|
|tslint|eg2|0.16.0|
|vsc-material-theme|Equinusocio|1.0.0|
|vscode-guid|heaths|1.0.0|
|vscode-icon-theme|jtlowe|1.5.0|
|docomment|k--kato|0.0.17|
|mssql|ms-mssql|1.0.0|
|cpptools|ms-vscode|0.12.0|
|csharp|ms-vscode|1.11.0|
|PowerShell|ms-vscode|1.4.1|
|debugger-for-chrome|msjsdiag|3.1.6|
|view-in-browser|qinjia|0.0.5|
|sass-indented|robinbentley|1.4.1|
|yo|samverschueren|0.9.3|
|MDTools|seanmcbreen|1.0.1|
|change-case|wmaurer|1.0.0|
|vscode-material-syntax-dark|woodywoodsta|0.1.1|;


---

Steps to Reproduce:

1. Open or create an angular2 project
2. Open integrated terminal (Powershell) 
3. run npm i

I receive an error from npm 
`EPERM: operation not permitted, rename`

This happens as long as VSCode is open. When I close it, it works. Seems that VSCode or TypeScript is blocking something. See attached npm log 

[2017-07-03T07_36_18_871Z-debug.txt](https://github.com/Microsoft/vscode/files/1118817/2017-07-03T07_36_18_871Z-debug.txt)



</Description>
    <CreatedDate>03/07/2017</CreatedDate>
    <ClosedDate>03/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30015</IssueID>
    <Title>Re-arranging folders order is not available in explorer panel</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.14.0
- OS Version: Windows 10

Re-arranging folders order is not available in explorer panel.

Steps to Reproduce:

1. Open new folder in vscode explorer. (File -&gt; Open Folder)
2. Add another folder to workspace. (file -&gt; Add Folder To Workspace...)

Folders order can't be changed unless removing the folders from workspace and adding them one-by-one in desired order.
</Description>
    <CreatedDate>02/07/2017</CreatedDate>
    <ClosedDate>02/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30012</IssueID>
    <Title>Is there any way to get the css.colorDecorators to work with Less/Sass Variables recursively?</Title>
    <Description>Is there any way to get the css.colorDecorators square icons that represent the hex code colors to work with @import statements across files?  I currently have a "_colors.scss" file that I import into my master.scss for compiling.  The _colors.scss files shows all the icon colors as expected next to the hex codes, but in the master.scss if I use a color variable the icon to represent the color is not shown.

Example in _colors.scss
`$my-purple: (ICON SHOWS HERE) #332D7B;`

![screen shot 2017-07-02 at 8 47 04 am](https://user-images.githubusercontent.com/2436728/27769916-258a0abe-5f03-11e7-9246-31468ce2ab29.png)

Example in master.scss
```
@import 'colors';
#hd1 {background: (ICON IS MISSING) $my-purple;}
```

![screen shot 2017-07-02 at 8 47 29 am](https://user-images.githubusercontent.com/2436728/27769917-323a3428-5f03-11e7-8341-64199e4d5bb9.png)

Am I missing something or is there no way to display the icons recursively across files with Less/Sass Variables?</Description>
    <CreatedDate>02/07/2017</CreatedDate>
    <ClosedDate>03/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>30004</IssueID>
    <Title>Integrated terminal doesn't autoscroll on select (Mac)</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: MacOS 10.12.5

**Steps to Reproduce:**

1. Issue some commands in the integrated terminal such that the output is partially scrolled out of view.
2. Click and drag to try to select more than what is visible.

**Expected behaviour:**

Scrolls up and continues to select.

**Actual behaviour:**

Selects the text below the initial select point.

</Description>
    <CreatedDate>02/07/2017</CreatedDate>
    <ClosedDate>05/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29984</IssueID>
    <Title>Feature request: save open terminals with project</Title>
    <Description>It would be helpful if open inline terminals could be saved with project.
Example: I often have one terminal for the Bin directory, one for the Build directory, and several at various places in the source tree. Presently I have to always re-open the terminals after restarting Code.

Thanks!</Description>
    <CreatedDate>01/07/2017</CreatedDate>
    <ClosedDate>01/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29942</IssueID>
    <Title>Open Editors fails to update folder labels as folders are added/removed to/from workspace</Title>
    <Description>Found during smoke test.

Notice how the folder name of `style.css` doesn't change when the `stylesheets` folder is removed from the workspace:

![kapture 2017-06-30 at 15 23 21](https://user-images.githubusercontent.com/22350/27737349-1bcdb9dc-5da8-11e7-9690-a7d24e1ebfc6.gif)
</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29845</IssueID>
    <Title>Editor minimap is often disappearing.</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.4.0-81-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|language-x86-64-assembly|13xforever|2.2.11|
|armsnippet|artofshell|0.7.0|
|code-gnu-global|austin|0.2.2|
|arm|dan-c-underwood|0.1.2|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.5|
|gitlens|eamodio|4.2.0|
|clangcomplete|kube|0.0.6|
|MagicPython|magicstack|1.0.10|
|cpptools|ms-vscode|0.12.0|
|csharp|ms-vscode|1.11.0|
|vscode-icons|robertohuertasm|7.10.1|
|python|tht13|0.2.3|;
---

Steps to Reproduce:

1. Enable minimap: Settings -&gt; "editor.minimap.enabled": true
2. Use the editor. (I use for larger cpp files (~1000 rows)</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>04/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29780</IssueID>
    <Title>"Remove root folder" option available but not working for initial root </Title>
    <Description>Testing #29176 

- Open folder A
- Add root folder B
- Right click folder A: I would expect "remove root folder" to remove the folder I've selected, but it does nothing
- Right click folder B: "remove root folder" works as expected

&lt;img width="314" alt="screen shot 2017-06-28 at 10 15 26 am" src="https://user-images.githubusercontent.com/7109548/27650803-f525f5b0-5bea-11e7-970e-14785b56f3db.png"&gt;
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>02/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29582</IssueID>
    <Title>Feature Request: $TM_FILENAME variable without file extension in snippets</Title>
    <Description>&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: OSX Sierra

I want to use only file name without file extension in my snippet.   
For sublime the solution was like this:  
`${TM_FILENAME/(.+)\..+|.*/$1/:name}` </Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29515</IssueID>
    <Title>Ryby User Path</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version: 1.13.1
- OS Version: Manjaro 17.0.2

Steps to Reproduce:

/usr/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:in require': cannot load such file -- telegram/bot (LoadError) from /usr/lib/ruby/2.4.0/rubygems/core_ext/kernel_require.rb:55:inrequire'

`$ env`

MY_RUBY_HOME=/home/user/.rvm/rubies/ruby-2.4.1
GEM_PATH=/home/user/.rvm/gems/ruby-2.4.1:/home/user/.rvm/gems/ruby-2.4.1@global
GEM_HOME=/home/user/.rvm/gems/ruby-2.4.1

Visual Studio Code how to configure to use this path?
</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>11/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29430</IssueID>
    <Title>Icon change</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Windows 7 SP1

Can we change the icon so that the middle of the symbol is not filled with white, and is instead see-through? I've attached some files I drew up of the new icon. One is actually a PNG the other is a .ico file disguised as a PNG because GitHub doesn't allow for the uploading of ICO files. Just change the extension and it should be fine. 
![vs icon](https://user-images.githubusercontent.com/29654835/27530003-e78876b8-5a13-11e7-8863-83fbdb900f72.png)
![vs icon - ico format](https://user-images.githubusercontent.com/29654835/27530004-e789a11e-5a13-11e7-8a34-870da7e678ac.PNG)

</Description>
    <CreatedDate>26/06/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29381</IssueID>
    <Title>Expanded entry inside collapsed entry only shows children after collapsing &amp; expanding (custom tree views)</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Win 10

Steps to Reproduce:

1. Create an extension with a custom tree provider
2. Have a tree where the top-level node is collapsed, and it has one children which is expanded and has itself a couple of children
3. Observe that when you click on the top-level node to expand it, then the little arrow on the child is in the "expanded" state, but no children are display. After collapsing and re-expanding, the children appear.
</Description>
    <CreatedDate>24/06/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29204</IssueID>
    <Title>VS Code acquires lock in node_modules/.staging, making NPM freeze for about 30 seconds</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|project-manager|alefragnani|0.18.1|
|better-toml|bungcip|0.2.0|
|vsc-rustfmt|Connorcpu|0.1.0|
|vscode-eslint|dbaeumer|1.2.11|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.5|
|EditorConfig|EditorConfig|0.9.3|
|tslint|eg2|0.15.0|
|vscode-rust|kalitaalexey|0.4.0|
|PowerShell|ms-vscode|1.4.0|
|debugger-for-chrome|msjsdiag|3.1.4|
|vscode-docker|PeterJausovec|0.0.16|
|java|redhat|0.6.0|
|vscode-icons|robertohuertasm|7.9.0|
|vscode-lldb|vadimcn|0.5.1|
|JavaScriptSnippets|xabikos|1.4.0|
|Material-theme|zhuangtongfa|2.8.8|;


---

Steps to Reproduce:

1. Open VS Code, edit TSX file
2. leave editor open, run "node install" in project
3. npm install takes over a minute longer than when not running VS Code,

NPM often hangs on a line such as this:

```
[       ...........] - extract:fsevents: verb lock using C:\Users\alshain\AppData\Roaming\npm-cache\_locks\staging-3d5cc763a76e1aa2.lock for c:\Users\alshain\Documents\typescript\node_modules\.staging
```

After a long wait time, npm will output something like (always EPERM, rename):

```
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: Error: EPERM: operation not permitted, rename 'c:\Users\alshain\Documents\typescript\.staging\fsevents-ca317142\node_modules\boom' -&gt; 'c:\Users\alshain\Documents\typescript\node_modules\.staging\boom-1ae2831a'
```

I'm not sure whether this is random, but VS Code seems not to acquire a lock in .staging very often when editing the settings for instance.

I was also able to confirm VS Code having a handle in .staging using process explorer a few times.

Once, I also got some kind of info popup in VS Code about it not being able to load completions or type definitions or whatever and it also mentioned a file inside the node_modules/.staging directory.

The problem *always* goes away when closing VS Code.

**Apparent fix**: adding this to my user settings:
```json
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
       // Note the dot before the asterisk
        "**/node_modules/.*/**": true
    }
```
------------
workspace settings
```json
{
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "node_modules/": true
    }
}
```

user settings
```json
{
    "workbench.iconTheme": "vscode-icons",
    "window.zoomLevel": 0,
    "terminal.integrated.shell.windows": "C:\\WINDOWS\\Sysnative\\WindowsPowerShell\\v1.0\\powershell.exe"
}
```

my package.json
```json
{
  "name": "typescript",
  "version": "0.1.0",
  "private": true,
  "homepage": ".",
  "dependencies": {
    "@blueprintjs/core": "^1.20.0",
    "@blueprintjs/datetime": "^1.17.0",
    "@types/classnames": "^2.2.0",
    "@types/jest": "^19.2.4",
    "@types/node": "^7.0.27",
    "@types/react": "^15.0.27",
    "@types/react-dom": "^15.5.0",
    "classnames": "^2.2.5",
    "es6-shim": "^0.35.3",
    "mobx": "^3.1.15",
    "mobx-react": "^4.2.1",
    "react": "^15.6.0",
    "react-addons-css-transition-group": "^15.6.0",
    "react-dom": "^15.6.0",
    "reflect-metadata": "^0.1.10"
  },
  "devDependencies": {
    "react-scripts-ts": "2.2.0"
  },
  "scripts": {
    "start": "react-scripts-ts start",
    "build": "react-scripts-ts build",
    "test": "react-scripts-ts test --env=jsdom",
    "eject": "react-scripts-ts eject",
    "tsc": "tsc"
  }
}
```</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>05/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28255</IssueID>
    <Title>Task runner fails on Windows if integrated shell path has a space</Title>
    <Description>- VSCode Version: 1.13.0-insider
- OS Version: Windows 10

Steps to Reproduce:

1. Install PowerShell to a directory with a space in the path (I'm using PowerShell 6.0-beta.2, which by default installs to `C:/Program Files/PowerShell`).
2. Change `"terminal.integrated.shell.windows"` to point to this path (e.g. `C:/Program Files/PowerShell/powershell.exe`)
3. Try to run a task, either with `"isShellComand": true` or `"type": "shell"`. You should get an error message like the following:

```
Files/PowerShell/powershell.exe : The term 'Files/PowerShell/powershell.exe' is not recognized as the name of a cmdlet, function, script file, or operable
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ Files/PowerShell/powershell.exe -NoLogo -Command yarn start
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Files/PowerShell/powershell.exe:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
```

Opening a terminal manually still works; the PowerShell extension also has no problems starting a session or opening its integrated console. It appears to only be an issue for the task runner.

Generic path-wrangling strategies (like escaping the space or double-wrapping the path in different flavors of quotemarks) either don't affect the behavior or break all of vscode's terminal operations (not just from the task runner).

Poking around the code, it looks to me like it might be an issue with [TerminalTaskSystem#resolveVariable](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/tasks/electron-browser/terminalTaskSystem.ts#L585) (which itself points indirectly to [ConfigurationResolverService#resolveString](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/configurationResolver/node/configurationResolverService.ts#L134)), since the path appears to be passed as a command to TerminalTaskSystem's internally created terminal. Take that with a grain of salt as I'm not very familiar with the codebase &amp; at the moment I don't have time to investigate further.

As a temporary (though less-than-ideal) workaround, I'm cloning the PS install up a level to C:/ and pointing the integrated terminal to that.

Thanks in advance!</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28013</IssueID>
    <Title>meteor occurs 'npm install error' while vscode insiders running</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0-insider
- OS Version: windows 10

I'm using meteor and rocket.chat open source.

Steps to Reproduce:

1. Run vscode and editing files in meteor project
2. Do 'meter reset' on cm in meteor project  (I'm not sure it is necessary as sometimes error occured when doing just 'meteor run')
3. Put 'meteor run' on cmd in meteor proejct.
4. Meteor will occur 'error: couldn't install npm package @google-cloud/language@0.8.0: Command failed'. 

Before using vscode. It had been never appeared.
If I close vsocde and run meteor, it will work without error.

Thanks</Description>
    <CreatedDate>05/06/2017</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27313</IssueID>
    <Title>Running the contributed command:'extension.node-debug.startSession' failed.</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|javadebugger|donjayamanne|0.1.0|
|cpptools|ms-vscode|0.11.2|
|vsc-nwjs|ruakr|1.0.7|;


---

Steps to Reproduce:
how can i solve it？</Description>
    <CreatedDate>26/05/2017</CreatedDate>
    <ClosedDate>28/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26669</IssueID>
    <Title>Autocomplete inserts newline when it should not</Title>
    <Description>- VSCode Version: Version 1.12.1 (1.12.1)
- OS Version: macOS Sierra 10.12.4

Steps to Reproduce:

1. Create an identifier
2. Type the whole word of that identifier
3. Press return to dismiss the autocomplete box
4. A newline is inserted instead of the box simply being dismissed

![screen recording 2017-05-15 at 12 38 pm](https://cloud.githubusercontent.com/assets/70804/26073202/5ba55d78-396b-11e7-9afb-d9dcd20b378d.gif)

</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25241</IssueID>
    <Title>Support projects (workspaces)</Title>
    <Description>It looks very strange that VS Code doesn't support ability to create and use projects. Workspace settings is a project settings. It's projects support already in this editor. But requires some polishing...

I found it uncomfortable for me to create new `.vscode` folder inside the source code directory. Some extensions put there own cache files. I don't like it (because if I work vis sshfs, then it means that each change of this cache file will be transferred, that I don't like to do).

It's why I propose to tune-up current workspace ideology and enable out-of-the-box projects support. All what you need - to create for each new project new folder in the `~/.vscode/` with appropriate local workspace `settings.json` file.

In the end, it will look like this:
```bash
~/.vscode/
    settings.json
    project1/
        settings.json
        cache_file_for_some_plugin
    project2/
        settings.json
```

This structure will work fine, because you have the same global setting for all projects, and local settings per project (workspace).

It will be good if you will make this change, and it will make life much easier out-of-the box.</Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24784</IssueID>
    <Title>Create a tab with custom DOM</Title>
    <Description>**It is a feature request.**

I want to insert iframe inside a tab and get access to its `contentWindow` property to `postMessage` to it.
Maybe the better solution is provided a possibility to build own UI inside a tab through DOM-access (like in Atom) where I'll insert any DOM element (including iframe).
Something like `DOMContentProvider` or like that...</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>24/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16904</IssueID>
    <Title>Bracket write igrone</Title>
    <Description>- VSCode Version: Any
- OS Version: Win7

Steps to Reproduce:

1. Copy&amp;Past this to new document: [[]
2. If you write ] after 2'nd sym - ] will not be writed

I suggest check count of brackets for add or not to add 2'nd bracket pair
[[]] - don't add ] after 2'nd sym
[[] - add ] after 2'nd sym

I think count brackets only on selected line is enough</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15664</IssueID>
    <Title>The white border of Code’s icon is too thin, inconsistent with Visual Studio</Title>
    <Description>Compare:
![](https://pbs.twimg.com/media/Cxal5FQUkAAuwzh.jpg:large)
(cc @rebornix)</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15200</IssueID>
    <Title>Copy (cmd+C) in panel removes selection after copy</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: macOS 10.12.1

Steps to Reproduce:

1. Select text in a panel (e.g. terminal)
2. cmd+C.
3. Text is copied, but selection disappears.

This is surprising and inconsistent with every UI widget ever made.
</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12629</IssueID>
    <Title>Braces, Parens, Brackets do not autocomplete in HTML when next to an opening or closing tag. </Title>
    <Description>- VSCode Version: 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27)
- OS Version: OSX El Capitan 10.11.6

Steps to Reproduce:
1. put your cursor to the immediate left or right of an html tag: &lt;sometag&gt; or &lt;/sometag&gt;
2. type { or ( or [, and it will not autoclose. 

Expect the { to give {}

This makes coding in angular or any other templating language hard. 
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9482</IssueID>
    <Title>Closing brackets between tags</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10

Steps to Reproduce:
1. Typing `&lt;div&gt;&lt;/div&gt;` and places the cursor in between. 
2. Insert a { no closing curly brace is inserted and it looks like this `&lt;div&gt;{&lt;/div&gt;`. However, if i add a space after and then move the cursor back one step the closing curly brace gets inserted correctly and the result looks like this `&lt;div&gt;{} &lt;/div&gt;`
</Description>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4142</IssueID>
    <Title>`--wait` doesn't return when opening a new window and closing the first one</Title>
    <Description>Related to #4006

OS X
1. Close all Code instances
2. Run `code-alpha --wait monkey.txt`, do some changes, save
3. Open a new Window
4. Close the first one

I'd expect the command line to return after step 4.
</Description>
    <CreatedDate>14/03/2016</CreatedDate>
    <ClosedDate>03/07/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29935</IssueID>
    <Title>Set Custom Defaults for all Users</Title>
    <Description>I would like to be able to override the default settings for all users on install.
My students need to have the ' "http.proxyStrictSSL": false,' set for them instead of having them do it on every login to there computers. We have a SSL inspection transparent proxy and this is the only way i have been able to get the extensions to install.

All i really want is something like vscodeinstall.exe /s /setdefaults = new defaults.json</Description>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>30/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29894</IssueID>
    <Title>Debugging extensions stops when changing folder</Title>
    <Description>Debug any extension using VS Code Insiders
In the extension host window that opens up, change the folder
Observe that the debugging session in the main vs code window closes</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>30/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29869</IssueID>
    <Title>Explorer: should maybe not show "Folders" in title?</Title>
    <Description>I am not sure about showing "Explorer: Folders" in the title when sections are disabled:

![image](https://user-images.githubusercontent.com/900690/27693857-c3c94c5a-5cea-11e7-9da2-32df6cc3ddf3.png)

Maybe just show "Explorer" in that case, or do you not control that label?</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29838</IssueID>
    <Title>File search giving insane results</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-theme-onedark|akamud|2.0.2|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-eslint|dbaeumer|1.2.11|
|python|donjayamanne|0.6.5|
|pgsql|doublefint|0.0.8|
|vscode-scss|mrmlnc|0.6.2|
|mssql|ms-mssql|1.0.0|
|csharp|ms-vscode|1.11.0|
|debugger-for-chrome|msjsdiag|3.1.6|
|dust|nemesarial|0.0.1|
|vscode-docker|PeterJausovec|0.0.16|
|material-icon-theme|PKief|2.0.9|
|java|redhat|0.6.0|
|sass-indented|robinbentley|1.4.1|
|sonarlint-vscode|SonarSource|1.0.0|;


---

Steps to Reproduce:

1. ctrl-p
2. search file that has similar names
3. order of the search may come back in an insane order

I have checked this with my colleague who is also using VS Code, but his search gives sane results. I have tried running VS Code with `--disable-extensions` but the results are still borked. Is there a way to clear the indexing of the search?

Screenshot:
![search](http://i.imgur.com/VU7vD3C.png)</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29818</IssueID>
    <Title>"editor.wordWrap": "on" doesn't work at Git "open changes"</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.8.0-54-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-settings-sync|Shan|2.8.1|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|4.2.0|
|phpunit|emallin|1.0.0|
|php-debug|felixfbecker|1.10.1|
|php-intellisense|felixfbecker|1.4.1|
|code-runner|formulahendry|0.6.24|
|Angular2|johnpapa|2.3.3|
|goto-last-edit-location|krizzdewizz|0.2.1|
|cpptools|ms-vscode|0.12.0|
|java|redhat|0.6.0|
|code-spell-checker|streetsidesoftware|1.2.0|
|vim|vscodevim|0.9.0|
|local-history|xyz|1.2.1|;


---

Steps to Reproduce:

1. set "editor.wordWrap": "on" in user settings
2. click  "open changes"</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29817</IssueID>
    <Title>Add a postLaunchTask attribute to launch.json</Title>
    <Description>launch.json needs a postLaunchTask attribute similar to preLaunchTask.  It would be very helpful for launching any other processes needed to debug the application, like a web browser or other client application.</Description>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29796</IssueID>
    <Title>Have to reload the vscode windows after changing emmet extensions</Title>
    <Description>Testing #28465

I have `syntaxProfiles.json` like

```
{
    "html": {
        "tag_case": "upper"
    }
}
```

when I change it to `"lower"`, the change doesn't take effect until I restart vscode.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29790</IssueID>
    <Title>Terminal find does not update on subsequent presses of enter</Title>
    <Description>Testing #29479

**Steps to Reproduce:**

1. Open integrated terminal
2. Run `ls`
3. Search for the start of a term such as `tsf` in the vscode project directory. Press enter
4. Enter more of the search term, such as `tsfmt`. Press enter again.

**Bug**
Highlight of the found text is not updated


![jun-28-2017 12-55-28](https://user-images.githubusercontent.com/12821956/27657325-27eed852-5c01-11e7-93bd-f8ea80c19f34.gif)
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29784</IssueID>
    <Title>Make it possible to disable mouseover tooltips</Title>
    <Description>When I mouseover a variable or something in the code there's a tooltip that pops up that displays some information about the variable. I'd like to disable this but there's no property in the settings for doing so. The closest was `editor.disableParameterHints` but that doesn't work for variables and object properties for example.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29782</IssueID>
    <Title>Cannot copy/paste files between root folders</Title>
    <Description>Testing #29176 

I'd expect to be able to copy a file from root folder A and paste it to root folder B. 
- The keyboard shortcuts (cmd+c cmd+v) work, but only within one folder. 
- After copying a file, right clicking the folder name and selecting paste works in its own root folder, but the paste option is grayed out for a different root folder.

&lt;img width="287" alt="screen shot 2017-06-28 at 10 52 29 am" src="https://user-images.githubusercontent.com/7109548/27652253-e95f8106-5bef-11e7-87e0-8476e1b96198.png"&gt;
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29773</IssueID>
    <Title>Ctrl-C doesn't break in terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

&lt;!-- Use Help &gt; Report Issues to prefill these. --&gt;
- VSCode Version:
Version 1.14.0-insider
Commit 73015a5e052e6de8ecd60eed2670bea81fad8cac
Date 2017-06-16T05:13:31.107Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0

- OS Version: Windows 10 Pro
10.0.15063

Steps to Reproduce:

1. Open a long-running terminal application in the integrated terminal
2. Press Ctrl-C

The terminal does not get a break signal; instead, a copy is attempted (and failed because there is not selection). I saw a message displayed once that the copy failed but I didn't screenshot it in time and I haven't seen it again.

I've checked my `keybindings.json` and there is nothing relevant there. The only relevant binding is the default binding:

    { "key": "ctrl+c",                "command": "workbench.action.terminal.copySelection",
                                      "when": "terminalFocus &amp;&amp; terminalTextSelected" },

Which shouldn't happen when `!terminalTextSelected` but appears to still happen instead of passing the binding through.

&lt;!-- Launch with `code --disable-extensions` to check. --&gt;
Reproduces without extensions: Yes</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29747</IssueID>
    <Title>Explorer: Title gets out of sync with shown root folders</Title>
    <Description>In the screenshot below the explorer title shows 3 folders tslint-server, tslint-test, tslint, but only a single one is open.

- Start with single root workspace
- Add 2 more root folders
- Remove these 2 folders

-&gt; you end up in the state in the screenshot.

![image](https://user-images.githubusercontent.com/172399/27636755-48f679f4-5c0d-11e7-980c-22ed216caca3.png)
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29740</IssueID>
    <Title>No longer possible to compare 2 files from the explorer</Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/29176

* have more than one folder in the explorer (multi root)
* right click on a file "Select for compare"
* right click on another file
=&gt; no "Compare with..."

Stable:

![image](https://user-images.githubusercontent.com/900690/27633036-ee2787fc-5bfd-11e7-94d6-d0cafabae5d9.png)
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29737</IssueID>
    <Title>Copy on multi root folder is a no-op</Title>
    <Description>Refs: https://github.com/Microsoft/vscode/issues/29176

The copy action on a root folder does not seem to do anything. Maybe we should disable it.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29734</IssueID>
    <Title>Prelaunch task does not terminate</Title>
    <Description>testing #29447

Created an extension and upgraded the task.json to version 2.0.
After doing that the debugger waits for ever until the preLaunch task terminates.
When I terminate the task manually, then the target extension is launched properly.

When I change the compile script in package.json to not be watching, then the extension target launches correctly.

```
        "compile": "tsc -p ./",
```

my changes to the tasks.json

![image](https://user-images.githubusercontent.com/172399/27631907-72f8f154-5bfa-11e7-99f0-697590496321.png)

tasks.json
```
{
    "version": "2.0.0",

    // we want to run npm
    "command": "npm",

    // the command is a shell script
    "type": "shell",
    
    // show the output window only if unrecognized errors occur.
    "showOutput": "silent",

    // we run the custom script "compile" as defined in package.json
    "args": ["run", "compile", "--loglevel", "silent"],

    // The tsc compiler is started in watching mode
    "isBackground": true,

    // use the standard tsc in watch mode problem matcher to find compile problems in the output.
    "problemMatcher": "$tsc-watch"
}
```

Actually the preLaunch task does terminate as is shown in the console:

![image](https://user-images.githubusercontent.com/172399/27630996-76366cbe-5bf7-11e7-8474-7370230c4b5c.png)
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29730</IssueID>
    <Title>Spelling errors (diagnostics) prevent debugging</Title>
    <Description>When debugging, if there are errors (diagnostics), vscode will say

![image](https://user-images.githubusercontent.com/7588612/27628964-476add9e-5c23-11e7-83a2-3340dea4e1f9.png)

The problem is that, most of the spell check extensions will show spell errors as diagnostics in the Problems panel

![image](https://user-images.githubusercontent.com/7588612/27629298-78436a98-5c24-11e7-80bb-95e89a0eb97f.png)

But these 'spelling errors' are not 'build errors'. It's not good to have one more `debug anyway` click just because those 'spelling errors'.</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29726</IssueID>
    <Title>Side by side terminals</Title>
    <Description>On a high resolution monitor the amount of wasted space is huge. 

Please add an option for side by side.

- VSCode Version: any
- OS Version: osx
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29710</IssueID>
    <Title>Find: No feedback when there is no match</Title>
    <Description>Testing #29479

There is no feedback shown to the user when there is no match of the search string. The find widget in the editor shows 'no results'

![image](https://user-images.githubusercontent.com/172399/27625743-e4bd7130-5be5-11e7-9dc8-ee54ff9b97c9.png)
</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29699</IssueID>
    <Title>feature request: migrate VSCode to another computer with ease</Title>
    <Description>I hope I am able to migrate VSCode with ease so that I can use it on my laptop for work. Is there already a way to do that?</Description>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29676</IssueID>
    <Title>Emmet expand abbreviation doesn't work in .jsx files</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (15b579d13dbf6817bb493feff6f36cec87577929, 2017-06-27T05:11:33.154Z)
- OS Version: Linux x64 4.10.0-24-generic
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
EditorConfig|Edi|0.9.3
lorem-ipsum|Tyr|1.0.0
sort-lines|Tyr|1.3.0
vscode-svgviewer|css|1.4.2
tslint|eg2|0.15.0
git-project-manager|fel|1.3.2
md-navigate|jri|0.0.1
vscode-scss|mrm|0.6.2
seti-icons|qin|0.1.3
vim|vsc|0.9.0

(1 theme extensions excluded)


---

#29500

![image](https://user-images.githubusercontent.com/2193314/27610069-cf6e6a22-5b41-11e7-9afb-72f6503bbf20.png)
</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29671</IssueID>
    <Title>getConfiguration2.inspect does not return folderValue</Title>
    <Description>testing  #29466:

- this 3 folder setup:
  ![2017-06-27_22-40-31](https://user-images.githubusercontent.com/1898161/27608991-a84497b2-5b89-11e7-895c-7e8c2390a1d2.png)
- value for "editor.lineNumbers" in the 3 setting files:
  - main: "relative"
  - f1: "on"
  - f2: "off"
- this code in "sayHello" handler of "hello world" extension:
  ```ts
        const uri = vscode.window.activeTextEditor.document.uri;
        const config = vscode.workspace.getConfiguration2("editor", uri);
        const info = config.inspect("lineNumbers");
  ```
- open f2.txt in editor (which lives in folder f2 and has the editor.lineNumbers value "off")
- trigger sayHello command

Observe:
The lineNumbers value in config is "off" (which is the expected value):
![2017-06-27_22-45-44](https://user-images.githubusercontent.com/1898161/27609199-66b08666-5b8a-11e7-8598-fb4e91a3a55d.png)

The "folderValue" in info is undefined. This is unexpected because the value "off" comes from a folder:
![2017-06-27_22-44-09](https://user-images.githubusercontent.com/1898161/27609131-2713dd78-5b8a-11e7-8f1c-c4eba9245034.png)</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29625</IssueID>
    <Title>Workspace searching with a negative lookahead fails</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: macOS 10.12.5

Steps to Reproduce:

1. Click on search icon on the left for whole workspace searching
2. Try searching with `:(?! )` and it will complain that the `!` was unexpected:

![screen shot 2017-06-27 at 10 46 03 am](https://user-images.githubusercontent.com/325473/27593777-0de27256-5b26-11e7-8d9b-dfdd60c6eed7.png)

I can use that same regexp when searching in a file just fine, just the workspace level searching:

![screen shot 2017-06-27 at 10 47 22 am](https://user-images.githubusercontent.com/325473/27593792-13de6246-5b26-11e7-8c25-8bc3671c5bb1.png)

Reproduces without extensions: Yes</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29612</IssueID>
    <Title>QuickOpen does not respect files.exclude per folder</Title>
    <Description>Refs #29510</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29588</IssueID>
    <Title>We need a better context menu contribution story</Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/29466

- fresh workspace
- open context menu on an empty explorer

You get:

![capture](https://user-images.githubusercontent.com/1931590/27587110-53e84970-5b43-11e7-9786-3a1df20cea06.png)

Most of the actions are not applicable. They should be either disabled or preferable not be there at all. 
</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29585</IssueID>
    <Title>VSCode removes folder from "recent list" if it is on Network Drive</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode. --&gt;

- VSCode Version: 1.13.1
- OS Version: macOS 1.12

**VSCode removes folder from "recent list" if it is on Network Drive and not connected, if it is connected it doesnt appear again. It should stay here all the time.**

**Steps to Reproduce:**

1. Connect any SAMBA (smb) network drive
2. Open folder on VS Code from SAMBA
3. Close VS Code
4, Disconnect SAMBA
5, Open VS Code
6, Connect SAMBA
7, Try to open project, from Welcome screen or File &gt; Open recent (Folder is missing here)

Reproduces without extensions: Yes</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29583</IssueID>
    <Title>Emmet css abbreviation not expanded in style attribute in html tag</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-caniuse|akamud|0.5.3|
|path-intellisense|christian-kohler|1.4.2|
|vscode-wxml|coderfee|0.1.9|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-html-css|ecmel|0.1.7|
|EditorConfig|EditorConfig|0.9.3|
|tortoise-svn|fantasytyx|0.1.1|
|auto-rename-tag|formulahendry|0.0.14|
|vscode-scss|mrmlnc|0.6.2|
|vscode-stylefmt|mrmlnc|2.4.1|
|vetur|octref|0.8.6|
|vuehelper|oysun|0.1.0|
|vscode-html-scss|P-de-Jong|0.0.42|
|vscode-icons|robertohuertasm|7.10.1|
|stylelint|shinnn|0.25.0|;


---

Steps to Reproduce:

when i type `&lt;div style="d:b` and press tab, Emmet does not expanded</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29575</IssueID>
    <Title>Allow `files.encoding` to be set per programming language.</Title>
    <Description>The default file encoding cannot be set per programming language. This is a problem, because certain old languages force you to use old encodings.

Instead of manually having to reload the file in the correct encoding every time, I propose to allow the `files.encoding` setting to appear inside language specific settings.

```json
"[baan]": {
    "files.encoding": "iso88591"
}
```

When opening files of the types registered for the `baan` language, this would automatically set the file encoding to the specified value.

---

- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|better-toml|bungcip|0.2.0|
|baan|danielhauser|0.0.1|
|vscode-rust|kalitaalexey|0.4.2|
|cpptools|ms-vscode|0.11.4|;</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>30/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29569</IssueID>
    <Title>[I18N] Unresolved message placeholder</Title>
    <Description>When opening a typescript file I get the message 
&lt;img width="1433" alt="screenshot 26" src="https://user-images.githubusercontent.com/265597/27583545-1431e984-5b35-11e7-804c-0a7192c1094b.png"&gt;

Note the brackets ```({1)}```. Seems to be a error in the order of the closing brackets.</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29533</IssueID>
    <Title>Commit options are clickable when there is nothing to commit</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: OS X Sierra

Steps to Reproduce:
1. There is nothing to commit
2. The `Commit Staged` and `Commit All` options in the git ui are still clickable
Reproduces without extensions: Yes

I am downgrading version of VS Code right now, because of this.
Is it a bug, or it is a feature ?</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29530</IssueID>
    <Title>Ruler: depending on the size of the file tree, the ruler can be 1px or 2px wide</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: MacOS Sierra 10.12.5

Steps to Reproduce:

1. Resize the editor/file browser on the left
2. The ruler changes width randomly

This is a mild annoyance but depending on the size of the editor/file tree, the ruler's width will change from 1px to 2px, making it more noticeable than it needs to be on some occasions.

Screenshots to compare:

![screen shot 2017-06-27 at 09 25 16](https://user-images.githubusercontent.com/1923346/27575767-113a8714-5b1b-11e7-8cb9-d9835e29ea16.JPG)

![screen shot 2017-06-27 at 09 25 32](https://user-images.githubusercontent.com/1923346/27575768-113b34ca-5b1b-11e7-8a54-b349264caeca.JPG)
</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29521</IssueID>
    <Title>Copy-paste selection cutoff from debug-console</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Mint 18.1 Cinnamon 64-bit
- Node.js debug

Hello guys. I have found funny bug - when trying to copy-paste debug console output, VS code select just what you see on the screen. If I try to resize debug console it still select just what you see, not the whole output.
Steps to Reproduce:
1. Have a long array or object
2. Console-logify it.
3. Try copy and paste it from debug console.
![2017-06-27 11-48-43](https://user-images.githubusercontent.com/22980660/27571558-d10af050-5b30-11e7-9945-e6cd48192d49.png)
![2017-06-27 11-49-26](https://user-images.githubusercontent.com/22980660/27571564-d90fe7ba-5b30-11e7-906c-59caee93300f.png)
![default](https://user-images.githubusercontent.com/22980660/27571571-de552ea6-5b30-11e7-93e9-4d0394f73317.png)
</Description>
    <CreatedDate>27/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29474</IssueID>
    <Title>Untitled file on launch should be a "preview" tab</Title>
    <Description>If VS Code is configured to show an untitled file on launch, it should be a special "preview" untitled tab which will go away if the user opens a file without touching it. See https://github.com/Microsoft/vscode/issues/12387#issuecomment-309576044 for more context.</Description>
    <CreatedDate>26/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29452</IssueID>
    <Title>Emmet abbreviations interfere with CSS Intellisense</Title>
    <Description>```css
.monaco-diff-editor .diff-review th {
	text-alig|
}
```

&lt;img width="624" alt="screen shot 2017-06-26 at 15 29 38" src="https://user-images.githubusercontent.com/5047891/27541465-4a0e60de-5a84-11e7-8403-e3f717cba37e.png"&gt;

* the first selected completion inserts `text-emphasis: after;` which is completely unexpected.
* I would expect `text-align` to be selected, such that suggestions are a useful feature.


</Description>
    <CreatedDate>26/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29438</IssueID>
    <Title>Not being notified when a settings file from a root folder (Other than first)  is changed</Title>
    <Description>Enable experimental file watching service.

Set up multi-root workspace, say Root A, Root B.
Let's say Root B has a setting `"editor.lineNumbers" = "off"` in its `.vscode` folder.

Open a file from Root B, observe that line numbers are off.
Change the value of the setting to `"relative`" and save.

Expected: File from Root B should show relative line numbers
Observed: Nothing changes

Only works after refresh</Description>
    <CreatedDate>26/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29391</IssueID>
    <Title>Support moving the debugger cursor to another line</Title>
    <Description>In the regular Visual Studio you can drag/drop the debugger cursor, for example to go back a few lines and execute these again after altering some local variable.

It seems that this is not supported by VS Code.

Supporting this would make us much more productive if you can fiddle around in a piece of code without needing to start over debugging completely.</Description>
    <CreatedDate>24/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29369</IssueID>
    <Title>Cursor position error</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|gitignore|codezombiech|0.5.0|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.5|
|xml|DotJoshJohnson|1.9.2|
|tslint|eg2|0.15.0|
|vscode-npm-script|eg2|0.2.0|
|Angular2|johnpapa|2.3.3|
|vscode-scss|mrmlnc|0.6.2|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.4.1|
|vs-keybindings|ms-vscode|0.1.3|
|team|ms-vsts|1.119.0|
|vetur|octref|0.8.5|
|vscode-docker|PeterJausovec|0.0.16|
|vscode-icons|robertohuertasm|7.9.0|;


---

Steps to Reproduce:

1.Ctrl+`
2.
![default](https://user-images.githubusercontent.com/9586655/27505679-85a8801e-58d8-11e7-9b39-64a74e0f064b.PNG)


</Description>
    <CreatedDate>24/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29360</IssueID>
    <Title>persian font problem in integrated terminal</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.after the MAY 2017 update all the persian characters show in reverse in integrated terminal , please fix this , it is so annoying 
![aacapture](https://user-images.githubusercontent.com/6470623/27500171-7d6b7138-587c-11e7-8d43-ad1c660349c6.JPG)

2.</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29358</IssueID>
    <Title>python interpreter uses incorrect encoding when invoked by a task</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 17.0.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.5|
|theme-chromodynamics|lei|1.0.8|
|ftp-sync|lukasz-wronski|0.3.3|
|MagicPython|magicstack|1.0.10|
|java|redhat|0.6.0|;


---

Steps to Reproduce:

1.
Define the following task
```
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "python3",
    "isShellCommand": true,
    "args": ["${file}"],
    "showOutput": "always"
}
```
2.
Invoke it on the following python program

```
import sys

print(sys.stdout.encoding)
print('🐞🐞')
```

Output is something along the lines of:

```
US-ASCII
Traceback (most recent call last):
  File "/Users/pvg/src/pyxample/soupy.py", line 4, in &lt;module&gt;
    print('\U0001f41e\U0001f41e')
UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)
```

Something similar happens in Windows as reported by an SO user here:

https://stackoverflow.com/questions/44724461/task-output-encoding-in-vscode

Curiously, invoking the above program with 'Run Python File in Terminal' does not have this problem, the program produces the expected output and completes. 

It is possible to work around the task problem by setting an environment variable although that it feels like that should not be necessary (the option itself is rather poorly documented).

```
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "python3",
    "isShellCommand": true,
    "args": ["${file}"],
    "showOutput": "always",
    "options": {
            "env": {
                "PYTHONIOENCODING":"utf-8"
            }
    }
}
```


</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29331</IssueID>
    <Title>After first mouse click inside integrated terminal, Ctrl+C stops working until closing shell (regression)</Title>
    <Description>Version 1.14.0-insider
Commit 73015a5e052e6de8ecd60eed2670bea81fad8cac
Date 2017-06-16T05:13:31.107Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0

Starting with the update I got today, Ctrl+C is not working well anymore in the integrated terminal.

Steps to reproduce:
1. Open terminal
2. Press Ctrl+C - it is working
3. Click somewhere inside the console area
4. Press Ctrl+C - it is not working anymore (until shell is restarted)

Note that this makes the terminal unusable because I can't cancel any operations, quit from REPL shells, etc. The only workaround so far is to switch to a second shell which is not yet affected, then switch back, and then Ctrl+C will work exactly one time (see point 5b below).

Additional things I observed:
1. It happens also with `--disable-extensions`.
2. It is triggered by clicking inside the console area only. Moving focus doesn't affect it, clicking anywhere else doesn't affect it either. For example, it is possible to click into the editor and then move focus back to the terminal by clicking the "Terminal" text in its tab bar instead of clicking into the actual console area, or by using Ctrl+M and Tab, and it will not become broken.
3. There is no way to get a specific shell session back to a working state other than closing/killing it (at least not permanently, see point 5b below).
4. Only Ctrl+C appears affected. I found other control key combinations such as Ctrl+R and Ctrl+X still working.
5. When using multiple terminal sessions, I observed the following behavior (marking affected terminals with single quote):
  a. When moving from an affected terminal A' to a non-affected terminal B, the first Ctrl+C will not work, **displaying a message "Warn - The terminal has no selection to copy"** (I guess that's a hint to the source of the bug), but subsequent Ctrl+C presses will work.
  b. When moving from a non-affected terminal A to an affected terminal B', the first Ctrl+C *will* work, but subsequent Ctrl+C presses will not.
  c. When moving from an affected terminal A' to another affected terminal B', no special behavior occurs (it keeps being broken). Similarly, when moving from a non-affected terminal A to another non-affected terminal B, it keeps working.
6. When actually selecting something in the terminal and then pressing Ctrl+C to _copy_ it, the copy works, but it does not repair the terminal. Also, the selection is not cleared then - I'm not entirely sure about that but I think I remember that in the past it was cleared on copy.</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29328</IssueID>
    <Title>minimap jump to area</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|one-monokai|azemoh|0.3.1|
|Ruby|rebornix|0.12.1|
|vscode-icons|robertohuertasm|7.9.0|
|vim|vscodevim|0.8.7|;


---

Steps to Reproduce:

1. open any source file that requires scrolling
2. with minimap enabled, click an area of the map that is not under the shadow, and hold the click
3. while still holding the click, try to drag the shadow to a desired area

The expected behavior is to be able to drag the shadow up and down, as you are able to do with the regular scroll bar. However when following the above steps, the shadow is not automatically selected after the scroll position jumps to the area that you initially click in step 2. Instead you have to release and reclick to have the shadow be selected.</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>27/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29325</IssueID>
    <Title>Allow files explorer navigation by typing name</Title>
    <Description>I would like to be able to type a name of a file to navigate to it using explorer. 

Example:
* pressing 'w' when focus is in explorer window will select first file that begins with 'w' 
* pressing 'a' later selects first file that name begins with 'wa' 
* this 'wa' buffer is cleared when arrow key is pressed.</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29324</IssueID>
    <Title>"View" options list hovers on "Go"."Debug" "Help" option.  </Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.2|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-html-css|ecmel|0.1.7|
|auto-close-tag|formulahendry|0.4.2|
|HTMLHint|mkaufman|0.3.3|
|cpptools|ms-vscode|0.11.4|
|html-css-class-completion|Zignd|1.7.0|;


---

Steps to Reproduce:

1.Click "View" in Menu Bar. 
   the opened list floats on the options "Go","Debug","Help".
2.The approach makes these 3 options ("Go","Debug","Help") inaccessible as they are cover by "View" 
   menu.

I think the list of "View" should start below the Menu Bar.As the rest of options show their list,starting below the menu bar.Here i attached the Screenshot.  

![menu bar view](https://user-images.githubusercontent.com/29153455/27482176-ed2f5ab4-583d-11e7-99d1-a7744c55160a.png)
</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29301</IssueID>
    <Title>Emmet + SCSS = very bad</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (779a7dfa682e31d870680caea572a11d009ab447, 2017-06-23T05:59:57.891Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
project-manager|ale|0.18.1
vscode-eslint|dba|1.2.11
vscode-great-icons|emm|2.1.8
beautify|Hoo|1.1.1
atom-keybindings|ms-|2.0.1
seti-icons|qin|0.1.3
vscode-icons|rob|7.9.0
---

With yesterday's fixes, Emmet at least doesn't try to put HTML tags into SCSS, this is good.
Now for the (very) bad. Ussing Emmet with SCSS is just very painful.

Say, I type `margin` in SCSS and press TAB. I expect something like `margin: `, instead I get (from Emmet): `max-resolution: ;`

From `border` and TAB I get: `background-origin: padding-box;`

Fom `padding` and TAB I get: `page-break-after: auto;`. This is very bad, on the border of uselessness.
</Description>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29280</IssueID>
    <Title>PHP auto complete issue...</Title>
    <Description>while i am coding in PHP environment auto complete of HTML, CSS, JS not working. </Description>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>22/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29270</IssueID>
    <Title>Emmet suggest wrong things in SCSS files</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (a49a42680a4269b79c4e80f6d754bbded03a0593, 2017-06-21T05:15:42.843Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.2
project-manager|ale|0.18.1
vscode-eslint|dba|1.2.11
vscode-great-icons|emm|2.1.8
beautify|Hoo|1.1.1
atom-keybindings|ms-|2.0.1
seti-icons|qin|0.1.3
vscode-icons|rob|7.9.0

(2 theme extensions excluded)
---

Steps to Reproduce:

1. Open any SCSS file
2. Try to type "abc" and  then TAB. You'll get an absolutely useless `&lt;abc&gt;&lt;/abc&gt;`.

I tried to disable Emmet in settings, first only for the SCSS files and then altogether, since Emmet is starting to get into my nerves a bit :)

I tired:
`"emmet.excludeLanguages": [
        "markdown", "scss", "sass", "css"
    ],`

and then:
`"emmet.triggerExpansionOnTab": false`

Help!
</Description>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>22/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29262</IssueID>
    <Title>Touchpad not sensitive to sliding</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|one-monokai|azemoh|0.3.1|
|path-intellisense|christian-kohler|1.4.2|
|jquerysnippets|donjayamanne|0.0.1|
|vscode-html-css|ecmel|0.1.7|
|tortoise-svn|fantasytyx|0.1.1|
|auto-rename-tag|formulahendry|0.0.14|
|beautify|HookyQR|1.1.1|
|view-in-browser|qinjia|0.0.5|
|vscode-icons|robertohuertasm|7.9.0|;


---

Steps to Reproduce:

1.XPS15 9550 
2.When I use the touchpad to move up and down the editor, there will be a obviously delay</Description>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29253</IssueID>
    <Title>[Accessibility] Magnifier Focus Tracking Not Working</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|java|redhat|0.6.0|;


---

For a screen magnifier user, it is important that text editors notify the accessibility API of caret position changes, so that the magnified view can follow the caret while e.g. writing code. This is not the case in VS Code, regardless of the editor.accessibility setting.

Steps to Reproduce:

1. Launch the Windows screen magnifier by pressing Win and +.
2. In magnifier settings, enable caret tracking if it isn't enabled - "have magnifier follow the text insertion point".
3. Open any file in VS Code.
4. Zoom in to say 4X magnification.
5. Type or use the arrow keys to move the caret off the screen.

What happens? The caret continues moving outside the visible magnified view.
What should happen? The magnified view should follow the caret so that it is never off-screen. For an example of correct behaviour, try the steps above in notepad.</Description>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29216</IssueID>
    <Title>Error: The mode has failed while tokenizing the input</Title>
    <Description>VSCode Version: code-insiders_1.14.0-1498021996_amd64.deb
OS VErsion: Debian GNU/Linux 7.11

Steps to Reproduce:

Edit any file
You should then see an error popup, and you see this on the window gaining focus:

"The mode has failed while tokenizing the input"

I have tried uninstalling and reinstalling. Have also tried the same with the standard vs code (not insiders). Have also tried the trick mentioned in other forums to no avail (sudo rm -rf /usr/share/code/resources/app/node_modules/vscode-textmate/node_modules).

Any suggestions? Many thanks
</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>29/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29188</IssueID>
    <Title>[Feature] HTML tags in Typescript comment</Title>
    <Description>For the following code snippet, if cursor is on `constructor`, you can find the comment shows the HTML tag as well. It will be much better that HTML content can be parsed and ommits the tag in the hover window. 
```javascript
export class Test {
    /**
     * &lt;p&gt;some html tag&lt;/p&gt;
     * 
     * @param s some parameter
     */
    constructor(s:string) {

    }
}
```</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>30/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29165</IssueID>
    <Title>Integrated terminal doesn't kill process after closing Visual Studio Code (using git bash as terminal)</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-javascript-snippets|codepunkt|1.0.0|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-npm-script|eg2|0.2.0|
|json-tools|eriklynd|1.0.2|
|auto-close-tag|formulahendry|0.4.2|
|vscode-atom-javascript-snippet|gluons|0.2.1|
|firebase-snippets|hasanakg|0.0.1|
|vue-snippets|hollowtree|0.1.2|
|beautify|HookyQR|1.1.1|
|node-module-intellisense|leizongmin|1.3.0|
|vscode-todo-parser|minhthai|1.8.10|
|vscode-jade-snippets|mrmlnc|1.0.1|
|vscode-pugbeautify|mrmlnc|1.0.2|
|vscode-puglint|mrmlnc|2.3.0|
|csharp|ms-vscode|1.10.0|
|debugger-for-chrome|msjsdiag|3.1.4|
|vetur|octref|0.7.0|
|vscode-json-transform|octref|0.1.2|
|vscode-icons|robertohuertasm|7.9.0|
|code-settings-sync|Shan|2.8.1|
|language-stylus|sysoev|1.7.3|
|gitblame|waderyan|1.11.3|
|iis-express|warren-buckley|1.0.0|
|Material-theme|zhuangtongfa|2.8.8|
|html-css-class-completion|Zignd|1.7.0|;


---

Steps to Reproduce:

1. Create a batch file (start.cmd) with the following code to start the application
Code: 
```
@echo off
set GETCONFIG_ROOT=%cd%\config
set NODE_ENV=development
npm start
```
2. Open application folder with Visual Studio Code
3. Open integrated terminal (bash.exe) in VS Code
4. Run `./start.cmd` to start the application
5. Close Visual Studio Code and repeat steps 2,3 and 4
6. npm throws error `listen EADDRINUSE 127.0.0.1:&lt;port-number&gt;`
7. Go to `Task Manager` in Windows
8. You can see multiple `Node.exe` processes are running
9. Kill these processes 
10. Repeat step 4
11. Application starts without any error</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29161</IssueID>
    <Title>emmet.useNewEmmet lead to wrong order of the suggestion list</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|beautify|HookyQR|1.1.1|
|prettier-eslint-vscode|RobinMalfait|0.7.1|
|code-settings-sync|Shan|2.8.1|
|jsx|TwentyChung|0.0.1|
|project-manager|alefragnani|0.18.1|
|vscode-eslint|dbaeumer|1.2.11|
|githistory|donjayamanne|0.2.0|
|theme-dracula|dracula-theme|2.1.2|
|vscode-babel-coloring|dzannotti|0.0.4|
|tslint|eg2|0.15.0|
|Angular2|johnpapa|2.3.3|
|prettify-json|mohsen1|0.0.3|
|debugger-for-chrome|msjsdiag|3.1.4|
|color-highlight|naumovs|2.2.0|
|vetur|octref|0.7.0|
|view-in-browser|qinjia|0.0.5|
|vscode-icons|robertohuertasm|7.9.0|
|stylelint|shinnn|0.25.0|
|vscode-react-native|vsmobile|0.3.2|
|gitblame|waderyan|1.11.3|
|local-history|xyz|1.2.1|
|Material-theme|zhuangtongfa|2.8.8|;


---

Steps to Reproduce:

1.set `emmet.useNewEmmet` to false
2.open a css file
3.type `padd`, and the following image show the right suggestion list.

&lt;img width="783" alt="screen shot 2017-06-21 at 1 48 39 pm" src="https://user-images.githubusercontent.com/2311742/27369011-649f4350-5688-11e7-8ba6-2bd8d816faa3.png"&gt;

4.set `emmet.useNewEmmet` to true
5.open a css file
6.type `padd`, as the following image shown, the first item in the suggestion list is `Expand Emmet Abbreviation`, which is not suitable.

![image](https://user-images.githubusercontent.com/2311742/27368940-f515f132-5687-11e7-8bd1-eab4e5e0509e.png)
</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29158</IssueID>
    <Title>Find in Terminal not working (enters ^F instead)</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|npm-intellisense|christian-kohler|1.3.0|
|githistory|donjayamanne|0.2.0|
|javadebugger|donjayamanne|0.1.2|
|python|donjayamanne|0.6.5|
|vscode-npm|fknop|3.3.0|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|Lua|keyring|0.0.9|
|vscode-todo|MattiasPernhult|0.8.0|
|extension-manifest-editor|ms-devlabs|0.1.4|
|debugger-for-chrome|msjsdiag|3.1.4|
|code-spell-checker|streetsidesoftware|1.2.0|
|vscode-todo-highlight|wayou|0.5.5|
|lua-for-vscode|xxxg0001|0.0.23|;

Settings:
```
    "editor.fontSize": 22,
    "editor.rulers": [80],
    "editor.mouseWheelZoom": true,
    "editor.fontLigatures": true,
    "workbench.iconTheme": "vs-seti",
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
    },
    "editor.renderWhitespace": "all",
    "editor.renderControlCharacters": false
```

---

Steps to Reproduce:

1. Open up VSCode
2. Open up Terminal in workspace (Powershell or cmd)
3. Hit Ctrl+F

Note: get ^F in command line instead of seeing find window:

![image](https://user-images.githubusercontent.com/8959496/27366849-9f126e94-55fd-11e7-8951-c6368c713ed3.png)

I feel like this used to work, so not sure what's going on here.</Description>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29141</IssueID>
    <Title>Git merge conflict feature doesn't recognize git diff3 common-ancestor sections</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|tsunami-code|derander|0.8.0|
|tslint|eg2|0.15.0|
|vscode-doiuse|mrmlnc|1.4.0|
|annotator|ryu1kn|0.10.1|;


---

Steps to Reproduce:

1. Turn on git's three-way conflict output: `git config --global merge.conflictstyle diff3`
2. Create a merge conflict.
3. View the conflicting file in VS Code.

The current feature sees the parent section (`||||||| merged common ancestors` and the following lines) as part of the "current change", as opposed to a separate version of the code. This means that e.g. "Accept current change" doesn't work as intended.</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29111</IssueID>
    <Title>Terminal doesn't react to shortcuts</Title>
    <Description>![image](https://user-images.githubusercontent.com/3399021/27339398-0f6a126c-55d8-11e7-94b1-c081b4a5ee84.png)
Windows 10

Steps to Reproduce:

1.  Open terminal (Powershell)
2.  CTRL + v

or another example

1.  Open terminal (Powershell)
2.  npm start (run -&gt; all ok)
3.  CTRL + c (to terminate, no reaction)

Everything used to work correctly but for some reason, no settings edited, terminal doesn't react to any CTRL + anything or any kind of shortcuts but if I type it works.

I am focused inside terminal because typing works

</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29106</IssueID>
    <Title>BUG: Scrollbar moves by changing the files tab</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version:  Windows 10

Steps to Reproduce:

1.  Open two files with scrollbar
2.  Move the scrollbar to the middle
3.  Switch between tabs

See the image, NOTICE THE BREAKPOINTS ON FIRST TAB:

![bug_vscode](https://user-images.githubusercontent.com/5774595/27335846-3cf7bde4-55a4-11e7-8c53-cdee9867cd0a.gif)



</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29095</IssueID>
    <Title>Minimap dissapears when using references popup supplied by referencesCodeLens.enabled = true</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|ng-template|Angular|0.1.3|
|Angular2|johnpapa|2.3.3|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. Enable codelens in Preferences -&gt; Settings:  "typescript.referencesCodeLens.enabled": true
2. The reference count will appear above methods and classes, click the gray x references link above the method/class, to see where it is referenced from.
3. Click above the popup that shows the references.
4. The minimap on the right will now be made into a normal vertical scrollbar.

A reboot of VSCode will show the minimap again instead of the vertical scrollbar, but only until the references popup is used again.</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>21/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29073</IssueID>
    <Title>Cannot open preference or type in new file</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (47de9b40026079f3173164e7fdd8aa6d4749ddf0, 2017-06-19T05:10:50.221Z)
- OS Version: Linux x64 4.10.0-24-generic
-sc Extensions: 

Extension|Author (truncated)|Version
---|---|---
xml|Dot|1.9.0
jupyter|don|1.1.3
python|don|0.6.5
Go|luk|0.6.62
vscode-icons|rob|7.9.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.launch vscode-insiders
2.select File -&gt; preferences

The result is shown in the following screenshot:

![sc](http://i.imgur.com/TzUS10V.png)

Also keystroke on any new file doesn't work.</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29071</IssueID>
    <Title>Cannot enter text in new file and cannot open settings</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (77bf512f0eba6c7082f5b442ac5de585febcab23, 2017-06-19T13:43:15.507Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
vscode-markdownlint|Dav|0.9.1
gc-excelviewer|Gra|1.1.15
beautify|Hoo|1.1.1
vscode-docker|Pet|0.0.16
html-snippets|abu|0.1.0
code-gnu-global|aus|0.2.2
vscode-eslint|dba|1.2.11
vscode-instant-markdown|dba|1.1.0
githistory|don|0.2.0
python|don|0.6.5
gitlens|eam|4.1.2
tslint|eg2|0.15.0
Go|luk|0.6.62
MagicPython|mag|1.0.10
prettify-json|moh|0.0.3
atom-keybindings|ms-|2.0.1
cpptools|ms-|0.11.4
csharp|ms-|1.10.0
sublime-keybindings|ms-|2.0.1
team|ms-|1.119.0
Ruby|reb|0.12.1
vscode-icons|rob|7.9.0
vim|vsc|0.8.6
gitblame|wad|1.11.3
jinja|who|0.0.8

(2 theme extensions excluded)


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29062</IssueID>
    <Title>Find all references highlights wrong thing</Title>
    <Description>- In vscode/src/vs/base/test/common/utils.ts, line 83, invoke find all references on `onError`
- In fileService.test.ts, results are off by a couple lines
- See below:

![image](https://user-images.githubusercontent.com/13241824/27311600-dbc9e354-5516-11e7-8116-9c4270cae756.png)


</Description>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>22/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29057</IssueID>
    <Title>Cannot read property 'getRoot' of null</Title>
    <Description>I see this when running out of sources with no folder opened:

Cannot read property 'getRoot' of null: TypeError: Cannot read property 'getRoot' of null
    at Configuration.getConfigurationForResource (file:///Users/chrmarti/Development/repos/vscode/out/vs/platform/configuration/common/configuration.js:243:39)
    at Configuration.getConfigurationModel (file:///Users/chrmarti/Development/repos/vscode/out/vs/platform/configuration/common/configuration.js:232:43)
    at Configuration.getValue (file:///Users/chrmarti/Development/repos/vscode/out/vs/platform/configuration/common/configuration.js:175:36)
    at WorkspaceConfigurationService.getConfiguration (file:///Users/chrmarti/Development/repos/vscode/out/vs/workbench/services/configuration/node/configuration.js:204:40)
    at TextResourceConfigurationService.getConfiguration (file:///Users/chrmarti/Development/repos/vscode/out/vs/editor/common/services/resourceConfigurationImpl.js:43:46)
    at TextFileEditor.BaseTextEditor.updateEditorConfiguration (file:///Users/chrmarti/Development/repos/vscode/out/vs/workbench/browser/parts/editor/textEditor.js:230:87)
    at file:///Users/chrmarti/Development/repos/vscode/out/vs/workbench/browser/parts/editor/textEditor.js:153:23
    at CompletePromise_ctor.CompletePromise_then [as then] (file:///Users/chrmarti/Development/repos/vscode/out/vs/base/common/winjs.base.raw.js:1566:49)
    at TextFileEditor.BaseTextEditor.setInput (file:///Users/chrmarti/Development/repos/vscode/out/vs/workbench/browser/parts/editor/textEditor.js:150:73)
    at TextFileEditor.setInput (file:///Users/chrmarti/Development/repos/vscode/out/vs/workbench/parts/files/browser/editors/textFileEditor.js:69:39)
WorkbenchShell.onUnexpectedError @ shell.ts:443
(anonymous) @ shell.ts:403
ErrorHandler.onUnexpectedError @ errors.ts:119
onUnexpectedError @ errors.ts:139
(anonymous) @ errors.ts:47
(anonymous) @ errors.ts:44
errors.ts:51 WARNING: Promise with no error callback:2
</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29051</IssueID>
    <Title>editor.mouseWheelScrollSensitivity has no effect</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.11.0+
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.15.2|
|vscode-rust|kalitaalexey|0.3.14|;


---

Steps to Reproduce:

1. Change `editor.mouseWheelScrollSensitivity` to something extreme, like 20
2. Restart vscode (just to make sure the setting is applied)
3. Turn the scroll wheel

Expected behavior:

It should scroll by much more than it used to.

Actual behavior:

Scrolling didn't change compared to the default settings.</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29038</IssueID>
    <Title>VSCode should have option to hide bottom output panel when typing in editor area</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.4.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|output-colorizer|IBM|0.1.1|
|material-icon-theme|PKief|2.0.9|
|numbered-bookmarks|alefragnani|0.10.0|
|workbench|andrew-lis|0.1.6|
|pgsql|doublefint|0.0.8|
|golang-tdd|joaoacdias|0.0.9|
|Go|lukehoban|0.6.62|
|railscasts|mrded|0.0.4|
|csharp|ms-vscode|1.10.0|
|vscode-icons|robertohuertasm|7.9.0|
|vscode-apielements|vncz|0.6.6|;


---

Steps to Reproduce:

1. Type in the editor area.
2. The bottom output area should autohide when typing in the editor and autoshow when we run or debug.

This would free up valuable screen real estate for editing, especially on a laptop.</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29020</IssueID>
    <Title>a problem of minimap</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.5|
|Go|lukehoban|0.6.62|
|vscode-icons|robertohuertasm|7.9.0|
|Material-theme|zhuangtongfa|2.8.7|;


---

Steps to Reproduce:

1. open two window of vs code
2. both windows open some files
3. sometimes minimaps of both windows display well, but sooner or later, one of the minimaps will vanish strangely.</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>23/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29014</IssueID>
    <Title>Tasks 2.0 npm run compile task as a preLaunchTask, Code won't start debugger</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z) 
- tasks.json:
~~~json
{
    "version": "2.0.0"
}
~~~
- launch.json
~~~json
// A launch configuration that compiles the extension and then opens it inside a new window
{
    "version": "0.1.0",
    "configurations": [
        {
            "name": "Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": ["--extensionDevelopmentPath=${workspaceRoot}" ],
            "stopOnEntry": false,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/out/*",
                "${workspaceRoot}/out/src/*",
                "${workspaceRoot}/out/test/*"
            ],
            "preLaunchTask": "run compile",
            "smartStep": true
        }
    ]
}
~~~

- *Expected result*: When I press F5, VS Code runs npm run compile and then starts debugger.
- *Actual result*:
    - When I press F5 first time VS Code just compiles and doesn't start debugger, just showing a spinning line in the status bar.
    - Subsequent attempts to run actually starts debugger and work as expected.
    - When I execute "Terminate running task" command I get error message:
    ![image](https://user-images.githubusercontent.com/7413219/27279663-a103961a-54e5-11e7-8a42-f06364bbe631.png)

Related to: #28235
</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>29009</IssueID>
    <Title>UI not display correctly in terminal window only in windows</Title>
    <Description>Do you have a question? Please ask it on [Stack Overflow with `vscode` tag](http://stackoverflow.com/questions/tagged/vscode)

(Use Help &gt; Report Issues to prefill these)
- VSCode Version: 1.13.1
- OS Version: Windows 10, 15063.296
- OS Language: zh-CN

Steps to Reproduce:

1. Just Open vscode
2. Click ctrl+` to open terminal window
3. Click + button to open a new terminal  window
![vscode](https://user-images.githubusercontent.com/3194004/27277646-7dc8cac2-5511-11e7-986f-23793122bae4.JPG)



</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28981</IssueID>
    <Title>Syntax coloring is broken when writing PHP in &lt;script&gt;</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.5|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.4.1|
|php-pack|felixfbecker|1.0.1|
|jinja|wholroyd|0.0.8|;


---

Steps to Reproduce:

Open the following sample code with VSCode.

```php
&lt;?php
    define('JSON_OPT', \JSON_HEX_TAG | \JSON_HEX_AMP | \JSON_HEX_APOS | \JSON_HEX_QUOT);
    $name = $_GET['name'] ?? "Nemo";
?&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
    &lt;script&gt;
        var name = &lt;?= json_encode($name, JSON_OPT) ?&gt;;
        alert('Hello, ' + name + '!');
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
```

![PHP code in script tag](https://user-images.githubusercontent.com/11690370/27269920-a5b75e48-54f5-11e7-8bfa-21a58614a38a.png)

After writing PHP codes in `&lt;script&gt;`, color of HTML tags change.
Is there a way to avoid something?</Description>
    <CreatedDate>19/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28962</IssueID>
    <Title>Request feature "Split Integrated Terminal"</Title>
    <Description>It would be great if we can split rather than switch between multiple shells within integrated terminal just like how we split editor!
</Description>
    <CreatedDate>18/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28953</IssueID>
    <Title>switch git related icons from the github icon to git icon</Title>
    <Description>- VSCode Version: 13.13.1
- OS Version: Ubuntu 17.04

I've noticed that the .gitignore icon (maybe for other files too) is for github:

![image](https://user-images.githubusercontent.com/43356/27259065-9136781c-5402-11e7-9bf8-e867ea9d4a88.png)

shouldn't it be the git icon from https://git-scm.com/?</Description>
    <CreatedDate>18/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28935</IssueID>
    <Title>Commited changes stays in diff editor</Title>
    <Description>- VSCode Version: 1.13.1
- OS Version: Windows 10 Version 1607

Steps to Reproduce:

1. Edit file (like `a.txt`)
2. Open Source Control tab, click modified file (`a.txt`) to open diff editor, write commit message and commit
3. Back to Explorer tab, modify `a.txt` again
4. See modified file(`a.txt`) again, the last time commited change stays in the diff editor

It seems I must close the diff editor manually and reopen it to solve the problem.

![vscode](https://github.com/clumsyme/blogs/blob/master/imgs/vscode.gif?raw=true)</Description>
    <CreatedDate>17/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28921</IssueID>
    <Title>Linkifier causes window to hang on long lines</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.4.0-79-generic (Elementary OS 0.2 Loki/Ubuntu 16.04)
- Extensions: &lt;bug appears with --disable-extensions&gt;
---

So, I ran the command pictured below, which was supposed to print a whole bunch of lines, but because I'm an idiot it printed all the items on one line with a whole lot of literal '\n's between them:

![image](https://user-images.githubusercontent.com/6175424/27249722-f7241eb4-52d0-11e7-9197-a056df4933bc.png)

However, printing said lines caused VS Code to completely lock up, and I had to kill it.  After some testing, I discovered the following in the CPU profiler:

![image](https://user-images.githubusercontent.com/6175424/27249748-65c2c406-52d1-11e7-87c7-f8f90848c124.png)

These are the results after running the profiler for about 10 seconds while VS Code was frozen.  The first line reveals something interesting:

![image](https://user-images.githubusercontent.com/6175424/27249779-01c89984-52d2-11e7-9021-463f0fb903cd.png)

It appears that Linkifier is using a backtracking regular expression to detect links on a single line of the terminal, which, for a line as long as the one I printed, causes the entire window to freeze for several minutes.</Description>
    <CreatedDate>17/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28916</IssueID>
    <Title>Feature Request: render emoji in Markdown Preview</Title>
    <Description>It'd be great if the VS Code Markdown preview rendered emoji. I have a simple 2 line change (https://github.com/beyang/vscode/tree/markdown-emoji) that enables this functionality.

Here's what it looks like currently:

![image](https://user-images.githubusercontent.com/1646931/27248658-b9b7a97a-52bb-11e7-9dd7-e94f2c297959.png)

And here's what it looks like on my branch:

![image](https://user-images.githubusercontent.com/1646931/27248667-cba08ba2-52bb-11e7-940b-dd1d9481ebab.png)

This could also be implemented using the proposed Markdown extension API (https://github.com/Microsoft/vscode/issues/22916), but that is still in the works and meanwhile emoji use in Markdown is widespread :). Happy to open a PR to quickly fix this issue or close it if the preference is to wait for the Markdown API.</Description>
    <CreatedDate>17/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28907</IssueID>
    <Title>Feature Request: Execute highlighted code when debugging</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.14393

This is a feature request. It's a request to implement what the Chrome developer tools has. Currently, if you are debugged at a point in the JS code, you can highlight some code and when you mouse-over the code, it will execute it and show you the results. It's really useful and faster than copying and pasting into the debug console of VS Code. Here's what I'm talking about:

![image](https://user-images.githubusercontent.com/791996/27241065-1089e630-528c-11e7-9ab7-7376b731b069.png)

You can see that the web app is currently paused at line number 344 and `11 + 11` is highlighted. When I mouse over, a popup comes up and shows me the output. This would be really cool for debugging NodeJS or Chrome in VSCode.
</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28904</IssueID>
    <Title>Can't find files on OneDrive for Business w/ Files On-demand</Title>
    <Description>Repros 100% on build 16215, OneDrive for Business 17.3.6931.0609

- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.16215
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-sidebar|Acrolinx|1.0.0|
|python|donjayamanne|0.6.5|
|PowerShell|ms-vscode|1.3.2|
|Theme-MarkdownKit|ms-vscode|0.1.4|;


---

Steps to Reproduce:

1.  Open file on OneDrive for Business via Explorer
Result: File opens and shows as blank in VS Code. Does ask if I want to save when I try to close.
1. Open file from VS Code via File, Open.
Result: Pop-up with "Path does not exist"

Everything else works fine.  VS Code is the only thing throwing up on this.
</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28900</IssueID>
    <Title>VSCode doesn't recognized OneDrive folders any more</Title>
    <Description>## - Environment:
- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.16215
- Extensions:  N/A

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.5|
|code-runner|formulahendry|0.6.20|
|vscode-javac|georgewfraser|0.0.41|
|csharpextensions|jchannon|1.3.0|
|mssql|ms-mssql|1.0.0|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.3.2|
|vscode-icons|robertohuertasm|7.9.0|;

---

## - Steps to Reproduce:

1. Open VSCode
2. Go to File, Open Folder.
3. Look for the OneDrive folder and click OK
4. Error comes out: Path doesn't exist!!

Even, if you mapped to shared folder on OneDrive it still gives the error.
This is not happening with any other IDE editors: 

## - Big FYI!!!  -&gt; This started to happened after Windows 10 Build 16215 had a recent OneDrive update this week.

![vscodenotonedrive_2017-06-16_11-58-17](https://user-images.githubusercontent.com/19892435/27234928-d358ee0e-528c-11e7-9220-b601fcf30348.jpg)


</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28897</IssueID>
    <Title>Cannot click "Submit a bug" in latest insiders on Linux</Title>
    <Description>`Version 1.14.0-insider
Commit 73015a5e052e6de8ecd60eed2670bea81fad8cac
Date 2017-06-16T05:10:46.035Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0`
On Ubuntu 16.04 x64

Step 1: Click "Submit a bug"
Step 2: Observe "Cannot read property 'length' of undefined
Step 3: Think about the irony

`Cannot read property 'length' of undefined: TypeError: Cannot read property 'length' of undefined
    at t.generateExtensionTable (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:431361)
    at t.generateNewIssueUrl (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:431030)
    at file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:29:430521
    at Object.g [as _notify] (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:57201)
    at Object.enter (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:60775)
    at n.Class.derive._creator._run (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:62603)
    at n.Class.derive._creator._completed (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:62044)
    at Object.g [as _notify] (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:57201)
    at Object.enter (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:60775)
    at n.Class.derive._oncancel._run (file:///usr/share/code-insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:28:62603)
e.doShow @ messageService.ts:125
e.show @ messageService.ts:104
(anonymous) @ actionRegistry.ts:156
done @ winjs.base.raw.js:1378
v @ winjs.base.raw.js:1224
enter @ winjs.base.raw.js:901
_run @ winjs.base.raw.js:1068
_chainedError @ winjs.base.raw.js:1031
n @ winjs.base.raw.js:736
then @ winjs.base.raw.js:1436
enter @ winjs.base.raw.js:747
_run @ winjs.base.raw.js:1068
_setCompleteValue @ winjs.base.raw.js:1052
v @ winjs.base.raw.js:1209
enter @ winjs.base.raw.js:852
_run @ winjs.base.raw.js:1068
_completed @ winjs.base.raw.js:1036
g @ winjs.base.raw.js:1170
enter @ winjs.base.raw.js:852
_run @ winjs.base.raw.js:1068
_completed @ winjs.base.raw.js:1036
e.doRequest.n.Promise.t.handlers.(anonymous function) @ ipc.ts:246
e.onMessage @ ipc.ts:319
(anonymous) @ ipc.ts:206
e.invoke @ callbackList.ts:63
e.fire @ event.ts:123
(anonymous) @ ipc.net.ts:82
emitOne @ events.js:96
emit @ events.js:188
readableAddChunk @ _stream_readable.js:176
Readable.push @ _stream_readable.js:134
onread @ net.js:551`</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28891</IssueID>
    <Title>Allow Terminal to Pop-Out</Title>
    <Description>**Feature Request**

Not sure if this is somewhere else (couldn't find it) but would like to request the ability to pop out my console so I can throw code on one monitor and debug on the other!</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28875</IssueID>
    <Title>Typing in line when element is folded bug</Title>
    <Description>Folded
![image](https://user-images.githubusercontent.com/4629328/27223504-c163c75e-52a1-11e7-993e-ad6cbda95b49.png)


Typing
![image](https://user-images.githubusercontent.com/4629328/27223403-504ac748-52a1-11e7-9378-b66f37afca2f.png)

```
OS: Windows 10
VS Code: 1.13.1
```
</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28873</IssueID>
    <Title>Debug views are missing header titles </Title>
    <Description>- VSCode Version: Insider 1.14.0

![2017-06-16_11-45-50](https://user-images.githubusercontent.com/1898161/27221758-0b4f0846-528a-11e7-8d8f-5213ff54f035.png)
</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28855</IssueID>
    <Title>Conflict resolver does not support conflict style "diff3"</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:18:03.540Z)
- OS Version: Linux x64 4.4.0-79-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|ng-template|Angular|0.1.3|
|EditorConfig|EditorConfig|0.9.3|
|cucumberautocomplete|alexkrechik|2.3.0|
|gitlens|eamodio|4.1.1|
|tslint|eg2|0.15.0|
|vscode-great-icons|emmanuelbeziat|2.1.7|
|debugger-for-chrome|msjsdiag|3.1.4|
|indent-rainbow|oderwat|0.6.1|
|vscode-jscpd|paulhoughton|0.2.0|
|postal|postal-team|1.0.0|
|vscode-icons|robertohuertasm|7.9.0|
|stylelint|shinnn|0.24.8|
|code-spell-checker|streetsidesoftware|1.2.0|;


---

Steps to Reproduce:

1. run command `git config --global merge.conflictstyle diff3`
2. create a conflict with git merge (or rebase or am or cherry-picking)
3. in vscode, conflict is displayed with 3 sections (&lt;&lt;&lt;&lt;&lt;&lt;&lt; ours ||||||| original ======= theirs &gt;&gt;&gt;&gt;&gt;&gt;&gt;)
4. if you click `Accept Current Changes`, both `ours` and `original` sections are included
5. or if you click `Accept Both Changes`, all sections are included (ours, original, theirs)
6. or if you click `Compare Changes`, left pane of comparison view contains both `ours` and `original` sections.</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28852</IssueID>
    <Title>import intellisense not working v1.11.2 or higher</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2 and higher (now 1.13.1)
- OS Version: Windows 10 x64, macOS 12

Steps to Reproduce:

1. Open a angular 2(4) or Ionic 2 project.
2. Type `import`, and select `import statement` on the hint list, then it generates import template like bellow:
` import {  } from "module";`
3. Once typed any text in the `"module"`, it shows module list related with the text (This is what I expected, and worked less than v1.10.2), but not working newest version. 

Here are the screenshots I faced.

New version( v1.11.2 or higher)

![image](https://user-images.githubusercontent.com/22894033/27207777-da5abb60-5273-11e7-8fe7-932ace24fc7e.png)

Old version(v1.10.2 or lower), what I expected
![image](https://user-images.githubusercontent.com/22894033/27207991-7bffacc2-5275-11e7-9ac4-d17c08e708a9.png)
![image](https://user-images.githubusercontent.com/22894033/27208026-c7183396-5275-11e7-9a54-8e26547fc29d.png)


</Description>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28843</IssueID>
    <Title>'Go To Definition' brings up the peek panel, closing it closes the MiniMap</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|fresh-material|2ndshift|2.2.1|
|vscode-markdownlint|DavidAnson|0.9.1|
|beautify|HookyQR|1.1.1|
|format-php|Kasik96|1.1.2|
|material-icon-theme|PKief|2.0.9|
|code-settings-sync|Shan|2.8.1|
|terminal-tabs|Tyriar|0.1.1|
|html-snippets|abusaidm|0.1.0|
|Bookmarks|alefragnani|0.15.1|
|vscode-color|anseki|0.4.1|
|git-easy|bibhasdn|1.9.1|
|vscode-svgviewer|cssho|1.4.2|
|vscode-eslint|dbaeumer|1.2.11|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.5|
|vscode-great-icons|emmanuelbeziat|2.1.7|
|code-runner|formulahendry|0.6.20|
|Go|lukehoban|0.6.62|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|latex|ms-vscode|0.1.3|
|sublime-keybindings|ms-vscode|2.0.1|
|wordcount|ms-vscode|0.1.0|
|debugger-for-chrome|msjsdiag|3.1.4|
|Ruby|rebornix|0.12.1|
|java|redhat|0.5.0|
|pdf|tomoki1207|0.2.0|
|vscode-arduino|vsciot-vscode|0.2.3|
|vscode-todo-highlight|wayou|0.5.5|
|JavaScriptSnippets|xabikos|1.4.0|
|markdown-pdf|yzane|0.1.7|;


---

Steps to Reproduce:

1. Ensure you have MiniMaps enabled in settings 
2. Right click on a function and select 'Go to Definition' from the right click menu
3. When the 'Peek Definition' panel pops up, click the 'X' in the top right corner of the pop-up panel.
4. The MiniMap should disappear from the currently active document

Closing the document and opening it again usually solves the problem</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28837</IssueID>
    <Title>Emmet not working in blade.</Title>
    <Description>Emmet does not work in blade using the "Laravel Blade Snippets" extension, even after adding the following configuration:
```json
    "emmet.syntaxProfiles": {
        "blade": "html"
    },
```
- VSCode Version: 1.13.1
- OS Version: Win 10.</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28833</IssueID>
    <Title>PHP code Syntax is not highlighted if is between a &lt;style&gt; tag</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|language-stylus|sysoev|1.7.3|;


---

Steps to Reproduce:

1. PHP syntax won't work if is inside a &lt;style&gt; block  in a .php file (which affects lighly wordpress development)

![2017-06-15](https://user-images.githubusercontent.com/13250549/27196466-c72825ca-51c7-11e7-9dcc-e15575914cd9.png)

</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28830</IssueID>
    <Title>EACCES: permission denied, doesn't open modal asking for user/pass</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-docker|PeterJausovec|0.0.16|
|vscode-multi-line-tricks|bigous|0.0.3|
|vscode-eslint|dbaeumer|1.2.11|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.5|
|vscode-babel-coloring|dzannotti|0.0.4|
|diff-tool|jinsihou|0.0.1|
|Go|lukehoban|0.6.62|
|terraform|mauve|0.0.16|
|debugger-for-chrome|msjsdiag|3.1.4|
|shellcheck|timonwong|0.1.0|
|vscode-proto3|zxh404|0.1.1|;


---

Steps to Reproduce:

1. Run command to edit a file not owned by the current user, like `code /etc/hosts`
2. Save the file
3. See error
&gt; Failed to save 'hosts': A system error occured (EACCES: permission denied, open '/private/etc/hosts')

Previously, VS Code seemed to handle this scenario properly by opening a window asking for admin user/password to escalate the save command. If I'm incorrect, apologies. The only other issues I see on this have proposed solutions that involve changing the owner of the files, which is not a correct fix, particularly in this scenario.</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28828</IssueID>
    <Title>Find-all-references preview broken in insiders</Title>
    <Description>- VSCode Version: 1.14.0-insider
- OS Version: Linux Mint 18

Steps to Reproduce:

Type:
```ts
function f() {}
// Put a lot of blank lines here. Or put it in a different file.
f();
```

1. Find-all-references for `f` in `function f() {}`
2. Click on the second result (the call `f();`)
3. I expect to see a preview of the use. Instead I am still looking at `function f() {}`. This does not happen in vscode 1.13.1.
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28824</IssueID>
    <Title>typescript inteli-sense constant crashes after update to 1.1.13 on Mac Sierra.</Title>
    <Description>Hello,
After upgrading vscode to the latest version the typescript inteli-sense crashes constantly providing me with no autocomplete or info as I work. This is the output:

```
Using tsserver from: /usr/local/lib/node_modules/typescript/lib/tsserver.js
[Info  - 5:34:06 PM] Forking TSServer
PATH: /Users/****/Library/Android/sdk/tools:/Users/****/Library/Android/sdk/platform-tools:/usr/local/Cellar/php56/5.6.20/bin:/usr/local/mysql-5.5.48-osx10.8-x86_64/bin:/usr/local/Cellar/php56/5.6.20/bin/pear:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands
[Error  - 5:41:46 PM] 'quickinfo' request failed with error.
Error: Cancelled Request 25
    at TypeScriptServiceClient.tryCancelRequest (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/typescript/out/typescriptServiceClient.js:755:25)
    at token.onCancellationRequested (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/typescript/out/typescriptServiceClient.js:695:30)
    at e.invoke (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:14715)
    at e.fire (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:53565)
    at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:56383)
    at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:56993)
    at n.Class.derive._oncancel.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:57458)
    at n.Class.derive._oncancel._cancelAction (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:46586)
    at Object.enter (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:42343)
    at n.Class.derive._oncancel._run (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:44654)

[Error  - 7:20:23 PM] 'completionEntryDetails' request failed with error.
Error: Cancelled Request 38
    at TypeScriptServiceClient.tryCancelRequest (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/typescript/out/typescriptServiceClient.js:755:25)
    at token.onCancellationRequested (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/typescript/out/typescriptServiceClient.js:695:30)
    at e.invoke (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:14715)
    at e.fire (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:53565)
    at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:56383)
    at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:56993)
    at n.Class.derive._oncancel.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:57458)
    at n.Class.derive._oncancel._cancelAction (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:46586)
    at Object.enter (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:42343)
    at n.Class.derive._oncancel._run (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:23:44654)
```</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28822</IssueID>
    <Title>The Integrated Terminal does not allow you to cancel or exit a running command with ctrl+c</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (c89a5f66c646dd8c1f6d1692d90390660c765e62, 2017-06-15T05:13:32.497Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

Extension|Author (truncated)|Version
---|---|---
Bookmarks|ale|0.15.1
project-manager|ale|0.18.0
Handlebars|and|0.2.0
vscode-eslint|dba|1.2.11
html-symbols|Die|0.0.2
EditorConfig|Edi|0.9.3
vsc-material-theme|Equ|0.0.15
tortoise-svn|fan|0.1.1
code-runner|for|0.6.20
r|Iku|0.3.1
ColdFusion|ili|0.0.7
vscode-simple-icons|Lau|1.3.1
evermonkey|mic|2.3.13
dotenv|mik|1.0.0
vscode-todo-parser|min|1.8.10
atom-keybindings|ms-|2.0.1
debugger-for-chrome|msj|3.1.4
vetur|oct|0.7.0
vscode-docker|Pet|0.0.16
sharecode|Rol|0.4.1
code-settings-sync|Sha|2.8.1
vscode-todo-highlight|way|0.5.5
licenser|ymo|1.0.0
vsc-docker|Zim|0.9.0

(1 theme extensions excluded)


---

Steps to Reproduce:

1.Run a command in the integrated terminal.
2.Attempt to cancel or stop the running command by typing ```ctrl+c``` . </Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28818</IssueID>
    <Title>Hello, the php syntax colorising is confused when using php+javascript+html files.</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:13:05.928Z)
- OS Version: Darwin x64 16.6.0
- Extensions: none
---

Steps to Reproduce:

1. Save attached file as php
[SVC_prehled_aktivit_v_mesici.txt](https://github.com/Microsoft/vscode/files/1077834/SVC_prehled_aktivit_v_mesici.txt)

2. Open in visual studio code - it seems only on Mac version 

3. Go to line 182 

4. php code colorising is wrong beginning line 182  - see screenshot
![php-syntax-colorizing](https://user-images.githubusercontent.com/29458676/27185062-6eb7b97e-51e4-11e7-97ee-eff0aa053037.png)

5. The same issue on line 22 - see screenshot 
![php-syntax-colorizing-2](https://user-images.githubusercontent.com/29458676/27185414-8a6e3ff2-51e5-11e7-8fba-5fbc5a986905.png)

6. It seems when a PHP code located between html &lt;something start&gt; &lt;something end&gt; then PHP syntax colorising goes wrong.</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28815</IssueID>
    <Title>Overlapping settings sections when one is empty</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.15.1|
|swagger-viewer|Arjun|1.4.0|
|vscode-markdownlint|DavidAnson|0.9.1|
|xml|DotJoshJohnson|1.8.0|
|csharp|ms-vscode|1.10.0|
|vscode-docker|PeterJausovec|0.0.16|
|swaggitor|qnsolutions|0.1.1|;


---

Steps to Reproduce:

1. File -&gt; Preferences -&gt; Settings
2. Scroll to a section that has no items (in my case "Swaggitor configuration")

Result: When not expanded, following sections overlap

![vscode-settings-overlap1](https://user-images.githubusercontent.com/13796362/27182197-679cf898-51a8-11e7-889c-359cbbcc560b.png)
![vscode-settings-overlap2](https://user-images.githubusercontent.com/13796362/27182209-6dd7fde8-51a8-11e7-8d63-d10e6a7ffacd.png)

Note: See issue [#24154](https://github.com/Microsoft/vscode/issues/24154), related.</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28810</IssueID>
    <Title>alt + click for multi cursor is not working</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (fda3ed38449fea27b97698ad0950c2870bf6afaa, 2017-06-14T05:10:28.780Z)
- OS Version: Linux x64 4.2.0-36-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-theme-onedark|akamud|2.0.2|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28801</IssueID>
    <Title>Extra space above fold on search.</Title>
    <Description>- VSCode Version: Version 1.13.1 (1.13.1)
- OS Version: Darwin Kernel Version 16.6.0

Steps to Reproduce:

&lt;img width="1178" alt="screen shot 2017-06-15 at 3 30 28 pm" src="https://user-images.githubusercontent.com/18315/27176334-c2c93312-51df-11e7-8f8a-2e886f3e8044.png"&gt;

&lt;img width="622" alt="screen shot 2017-06-15 at 3 31 14 pm" src="https://user-images.githubusercontent.com/18315/27176400-fa4daffc-51df-11e7-8381-88201a7699e2.png"&gt;


</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28776</IssueID>
    <Title>Feature request: Map ts files automatically in Visual Studio Code</Title>
    <Description>Actually I am using Version 1.13.1.
When running a typescript project, call stack links are printed out as link to a location in the transpiled js file.
```
at Object.&lt;anonymous&gt; (/work/app/dist/main.js:46:7)
```
It would be useful that user can configure, if such links are translated automatically to their typescript source file location, using the mapping file available in the project.
See also [https://stackoverflow.com/questions/44126583](https://stackoverflow.com/questions/44126583).
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28775</IssueID>
    <Title>CPPTools Extension Unzip Error</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-theme-onedark|akamud|2.0.2|
|python|donjayamanne|0.6.5|
|vscode-javac|georgewfraser|0.0.41|
|vscode-clang|mitaki28|0.2.2|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.3.2|
|debugger-for-chrome|msjsdiag|3.1.4|
|vscode-icons|robertohuertasm|7.9.0|;


---

Steps to Reproduce:

1.Install cpptools
2.reload
3.error occurs:
Updating C/C++ dependencies...

Downloading package 'C/C++ language components (Windows)' (4663 KB) .................... Done!
Downloading package 'ClangFormat (Windows)' (905 KB) .................... Done!
Downloading package 'Visual Studio Windows Debugger' (12081 KB) .................... Done!

Installing package 'C/C++ language components (Windows)'
Failed at stage: installPackages
Error: end of central directory record signature not found

Finished</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28772</IssueID>
    <Title>minimap disappeared when click in peek section</Title>
    <Description>- VSCode Version: Code 1.13.1 (379d2efb5539b09112c793d3d9a413017d736f89, 2017-06-14T18:21:47.485Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: all disabled
---

Steps to Reproduce:

 _I tested  it in Typescript._

1. https://code.visualstudio.com/docs/editor/editingevolved#_peek
2. "editor.minimap.enabled": true
3. open peeked editors and click on it 
4. the minimap gone, and disappear in all files
5. unless restart vs code that will be restored.

![peek](https://user-images.githubusercontent.com/17615113/27163913-256ff064-51bd-11e7-96b3-25746a05e072.png)
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28771</IssueID>
    <Title>emmet grouping not working</Title>
    <Description>- VSCode Version:    1.13.1
- OS Version:  Win 10 Simp Chinese
useNewEmmet is set to true

- step to reproduce:
open a new html and input   (div&gt;dl&gt;(dt+dd)*3)+footer&gt;p

- expect result:
expand to
&lt;div&gt;
    &lt;dl&gt;
        &lt;dt&gt;&lt;/dt&gt;
        &lt;dd&gt;&lt;/dd&gt;
        &lt;dt&gt;&lt;/dt&gt;
        &lt;dd&gt;&lt;/dd&gt;
        &lt;dt&gt;&lt;/dt&gt;
        &lt;dd&gt;&lt;/dd&gt;
    &lt;/dl&gt;
&lt;/div&gt;
&lt;footer&gt;
    &lt;p&gt;&lt;/p&gt;
&lt;/footer&gt;

- actual result:
only  div&gt;dl  remains，  dt and dd are gone.
![snipaste20170615_111142](https://user-images.githubusercontent.com/25970065/27163640-78a22bf0-51bb-11e7-8588-a7cd3178fcce.png)


- extra info:
revert to 1.12 fix this problem
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28764</IssueID>
    <Title>Find + Go to line messes up editor layout</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (fda3ed38449fea27b97698ad0950c2870bf6afaa, 2017-06-14T05:13:12.994Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: (ran as `code-insiders --disable-extensions -n` and confirmed that the extensions were not loaded)

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.11.4|
|PowerShell|ms-vscode|1.3.2|;


---

Steps to Reproduce:

1. Ctrl+N, add some lines
2. Ctrl+F (don't need to actually search for anything but leave the find box open)
3. Ctrl+G and type a line number (pressing enter is optional to see the bug)
4. Observe that a blank space is added at the top of the editor (it scrolls out of view if you have enough lines to scroll; closing the find box gets rid of this space)

![image](https://user-images.githubusercontent.com/494055/27161390-fb8ef8c2-512f-11e7-83a2-d775a8f09cd6.png)
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28762</IssueID>
    <Title>Git diff view gets stuck on previous diff</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 7

Steps to Reproduce:

1. Not sure if related or required, but follow steps to replicate #28761
2. With the bugged/opened diff view still open, make and save another change to the same file
3. Click on the change again in Source Control: it should still show the previous diff

The only way to correct this is to manually close the stale diff and click on the change again.
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28761</IssueID>
    <Title>Git Working Tree diff view becomes open editor without making changes in it</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 7

Steps to Reproduce:

1. Open a source controlled file, make changes and save
2. Click open the diff view in Source Control, then commit it
3. Return to the editor pane (note: the Working Tree/Index tab remains available in view mode (?))
4. Make a change and save it

The Working Tree view tab at this point changes to an open editor tab.
</Description>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28745</IssueID>
    <Title>Javascript Intellisense can't find function declaration.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 7

```js
var $tw = {}
$tw.boot = {};
$tw.boot.test = function(){
    console.log('hello world');
}
$tw.boot.test();
```

Take this javascript code and open it in VS Code. Then place your cursor on the call to `$tw.boot.test()` and press F12. No definition is found. </Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28744</IssueID>
    <Title>I can't open folders. It reports that the folder doesn't exist on disk anymore</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.16215
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.1.1|
|vue|jcbuisson|0.1.5|
|csharp|ms-vscode|1.10.0|;


---

Steps to Reproduce:

1. Go to file
2. Attempt to open a folder</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>26/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28738</IssueID>
    <Title>点击集成终端内的链接（有换行时），跳转地址错误</Title>
    <Description>@rebornix 
- VSCode Version: Code - Insiders 1.14.0-insider (fda3ed38449fea27b97698ad0950c2870bf6afaa, 2017-06-14T05:13:12.994Z)
- OS Version: Windows_NT ia32 10.0.16215
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|angular2-snippets|danwahlin|1.0.15|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-npm-script|eg2|0.2.0|
|auto-close-tag|formulahendry|0.4.2|
|auto-rename-tag|formulahendry|0.0.12|
|search-node-modules|jasonnutter|1.1.1|
|cpptools|ms-vscode|0.11.4|
|vuejs-extension-pack|mubaidr|0.1.4|
|vetur|octref|0.7.0|
|vuehelper|oysun|0.1.0|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. 集成终端内的链接（有换行），ctrl+click
2. 打开浏览器，地址栏的链接错误

![image](https://user-images.githubusercontent.com/13050025/27147739-71b3328a-5170-11e7-988b-92f0337034a8.png)
</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28737</IssueID>
    <Title>the backspace key and tab key do not work under VNC viewer.</Title>
    <Description>
- VSCode Version: 1.13.0
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. use VNC viewer connect to Ubuntu 16.04 and run VS code the latest version 1.13.0
2. the backspace key and tab key do not work at all.
3, but if use desktop of Ubuntu directly, without VNC, I do not hit this issue.
</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28731</IssueID>
    <Title>Feature Request: Add Setting to open VS Code without default unsaved tab being opened [closed as duplicate]</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 10

Steps to Reproduce:

1. Close all files/tabs in VS code.
2. Close VS code.
3. Open VS code.

The application will open up with a default `Untitled-1` tab already open that you can start typing into.
It would be nice to have a setting that allows VS Code to start without opening any tabs. e.g. it looks like this:
![image](https://user-images.githubusercontent.com/1187140/27140993-40ef410c-50e4-11e7-995c-36b82fbf0e52.png)

The reason this is desirable is I often open VS Code and then open the file I'm after, by using Ctrl+O or the `File -&gt; Open Recent` menu. This means always having to close the default tab that VS code opened when it started, which is annoying.

Alternatively, you could perhaps still have the default blank tab open with VS Code, but close it automatically once any other file is opened and that tab is still blank.</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28727</IssueID>
    <Title>encodeing in Output terminal</Title>
    <Description>- VSCode Version:
1.13.0
- OS Version:
Windows 10
Steps to Reproduce:

1. ctrl+b 
2.dont reading encoding in console  "���⥬� �� 㤠���� ���� 㪠����� ����."
</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28725</IssueID>
    <Title>Integrated terminal terminate running tasks on close</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (fda3ed38449fea27b97698ad0950c2870bf6afaa, 2017-06-14T05:13:12.994Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.2.11|
|prettier-vscode|esbenp|0.19.0|
|cpptools|ms-vscode|0.11.4|
|debugger-for-chrome|msjsdiag|3.1.3|
|java|redhat|0.5.0|;


---
If I use the integrated terminal for executing _watch_ scripts, or any _background_ running tasks, shouldn't it terminate automatically upon closing vscode?
Steps to Reproduce:
For simplicity, create a [CRA](https://github.com/facebookincubator/create-react-app) app and open it in vscode. 
1. Open the Integrated Terminal and execute `npm start`
2. Close the vscode window and try to access `http://localhost:3000`.  

It doesn't have to be a [CRA](https://github.com/facebookincubator/create-react-app) app. Try running `express` or a http server instance.</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28724</IssueID>
    <Title>Manually restarting Typescript Server triggers a warning about a crashing TS Server process</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:34:53.678Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-es-beautifier|dai-shi|0.2.4|
|theme-spacemacs|dzannotti|0.0.8|
|Theme-Jellybeams|gerane|0.0.2|
|language-haskell|justusadam|2.2.1|
|vim|vscodevim|0.8.5|;


---

Steps to Reproduce:

1. Restart Typescript Server 5 times
2. Observe a crash notification about typescript server</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28711</IssueID>
    <Title>Often crash when typing or mouse clicking in TERMINAL</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: 10.12.5

Steps to Reproduce:

1. Mouse click in TERMINAL console

Error detail:

Process:               Electron [38152]
Path:                  /Applications/Visual Studio Code.app/Contents/MacOS/Electron
Identifier:            com.microsoft.VSCode
Version:               1.13.0 (1.13.0)
Code Type:             X86-64 (Native)
Parent Process:        ??? [1]
Responsible:           Electron [38152]
User ID:               501

Date/Time:             2017-06-14 19:05:29.880 +0800
OS Version:            Mac OS X 10.12.5 (16F73)
Report Version:        12
Anonymous UUID:        E8EFBC31-6419-498D-7808-C2FB2D187490


Time Awake Since Boot: 170000 seconds

System Integrity Protection: enabled

Crashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BREAKPOINT (SIGTRAP)
Exception Codes:       0x0000000000000002, 0x0000000000000000

Thread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread
0   com.github.electron.framework 	0x000000010fc3eca1 0x10fa4a000 + 2051233
1   com.github.electron.framework 	0x000000010fc6c695 0x10fa4a000 + 2238101
2   com.github.electron.framework 	0x000000010fc6fc33 0x10fa4a000 + 2251827
3   com.github.electron.framework 	0x000000010fc75c45 0x10fa4a000 + 2276421
4   libsystem_malloc.dylib        	0x00007fffa9e44282 malloc_zone_malloc + 107
5   libsystem_malloc.dylib        	0x00007fffa9e43200 malloc + 24
6   com.apple.HIToolbox           	0x00007fff93d0d8bb -[IMKInputSession _coreAttributesFromRange:whichAttributes:completionHandler:] + 61
7   com.apple.HIToolbox           	0x00007fff93d0f939 -[IMKInputSession attributedSubstringFromRange:completionHandler:] + 186
8   com.apple.HIToolbox           	0x00007fff93cff137 __61-[IMKInputSession imkxpc_attributedSubstringFromRange:reply:]_block_invoke + 530
9   com.apple.CoreFoundation      	0x00007fff9456817c __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 12
10  com.apple.CoreFoundation      	0x00007fff94548f84 __CFRunLoopDoBlocks + 356
11  com.apple.CoreFoundation      	0x00007fff94548ac6 __CFRunLoopRun + 1878
12  com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
13  com.apple.HIToolbox           	0x00007fff93ce619e -[IMKInputSessionXPCInvocation invocationAwaitXPCReply] + 606
14  com.apple.HIToolbox           	0x00007fff93ce8750 -[IMKInputSession activate] + 3471
15  com.apple.HIToolbox           	0x00007fff93c9c7ab IMKInputSessionActivate + 36
16  com.apple.HIToolbox           	0x00007fff93c9bb3c ActivateInputMethodInstance + 100
17  com.apple.HIToolbox           	0x00007fff93c8fbcc utActivateInputMethod + 45
18  com.apple.HIToolbox           	0x00007fff93c8f735 utActivateIM4Document + 72
19  com.apple.HIToolbox           	0x00007fff93c8f5ad utOpenActivateThisDocsInputMethod + 125
20  com.apple.HIToolbox           	0x00007fff93abde09 MyActivateTSMDocument + 1687
21  com.apple.AppKit              	0x00007fff9218688d -[NSTextInputContext activate] + 284
22  com.apple.AppKit              	0x00007fff92a17ec2 +[NSTextInputContext currentInputContext_withFirstResponderSync:] + 362
23  com.apple.AppKit              	0x00007fff92044e42 -[NSApplication updateWindows] + 96
24  com.github.electron.framework 	0x00000001101264d5 0x10fa4a000 + 7193813
25  com.github.electron.framework 	0x0000000110216866 0x10fa4a000 + 8177766
26  com.github.electron.framework 	0x00000001102164f6 0x10fa4a000 + 8176886
27  com.github.electron.framework 	0x000000011010f7bb 0x10fa4a000 + 7100347
28  com.github.electron.framework 	0x000000011010d89a 0x10fa4a000 + 7092378
29  com.github.electron.framework 	0x00000001107491eb 0x10fa4a000 + 13627883
30  com.github.electron.framework 	0x000000010fca5c31 0x10fa4a000 + 2473009
31  com.github.electron.framework 	0x000000010fc79676 0x10fa4a000 + 2291318
32  com.github.electron.framework 	0x000000010fc7994c 0x10fa4a000 + 2292044
33  com.github.electron.framework 	0x000000010fc79c93 0x10fa4a000 + 2292883
34  com.github.electron.framework 	0x000000010fc7cfdd 0x10fa4a000 + 2306013
35  com.github.electron.framework 	0x000000010fc39e8a 0x10fa4a000 + 2031242
36  com.github.electron.framework 	0x000000010fc7ca54 0x10fa4a000 + 2304596
37  com.apple.CoreFoundation      	0x00007fff94568321 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17
38  com.apple.CoreFoundation      	0x00007fff9454921d __CFRunLoopDoSources0 + 557
39  com.apple.CoreFoundation      	0x00007fff94548716 __CFRunLoopRun + 934
40  com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
41  com.apple.HIToolbox           	0x00007fff93aa9ebc RunCurrentEventLoopInMode + 240
42  com.apple.HIToolbox           	0x00007fff93aa9cf1 ReceiveNextEventCommon + 432
43  com.apple.HIToolbox           	0x00007fff93aa9b26 _BlockUntilNextEventMatchingListInModeWithFilter + 71
44  com.apple.AppKit              	0x00007fff92042a54 _DPSNextEvent + 1120
45  com.apple.AppKit              	0x00007fff927be7ee -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 2796
46  com.apple.AppKit              	0x00007fff920373db -[NSApplication run] + 926
47  com.github.electron.framework 	0x000000010fc7d82e 0x10fa4a000 + 2308142
48  com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
49  com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
50  com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
51  com.github.electron.framework 	0x000000010feddf7b 0x10fa4a000 + 4800379
52  com.github.electron.framework 	0x000000010fedddd0 0x10fa4a000 + 4799952
53  com.github.electron.framework 	0x000000010fee0512 0x10fa4a000 + 4810002
54  com.github.electron.framework 	0x000000010fed9eac 0x10fa4a000 + 4783788
55  com.github.electron.framework 	0x000000010fe3fbed 0x10fa4a000 + 4152301
56  com.github.electron.framework 	0x000000010fe3ece6 0x10fa4a000 + 4148454
57  com.github.electron.framework 	0x000000010fa4c5c7 AtomMain + 71
58  com.microsoft.VSCode          	0x000000010fa3df26 main + 38
59  libdyld.dylib                 	0x00007fffa9cc2235 start + 1

Thread 1:
0   libsystem_kernel.dylib        	0x00007fffa9df144e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffa9edb48e _pthread_wqthread + 1023
2   libsystem_pthread.dylib       	0x00007fffa9edb07d start_wqthread + 13

Thread 2:
0   libsystem_kernel.dylib        	0x00007fffa9df144e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffa9edb621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fffa9edb07d start_wqthread + 13

Thread 3:
0   libsystem_kernel.dylib        	0x00007fffa9df144e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffa9edb621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fffa9edb07d start_wqthread + 13

Thread 4:
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc7fa _pthread_cond_wait + 712
2   libnode.dylib                 	0x0000000113fd12b9 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000113fc5753 0x113e6e000 + 1406803
4   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
5   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
6   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 5:
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc7fa _pthread_cond_wait + 712
2   libnode.dylib                 	0x0000000113fd12b9 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000113fc5753 0x113e6e000 + 1406803
4   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
5   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
6   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 6:
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc7fa _pthread_cond_wait + 712
2   libnode.dylib                 	0x0000000113fd12b9 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000113fc5753 0x113e6e000 + 1406803
4   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
5   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
6   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 7:
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc7fa _pthread_cond_wait + 712
2   libnode.dylib                 	0x0000000113fd12b9 uv_cond_wait + 9
3   libnode.dylib                 	0x0000000113fc5753 0x113e6e000 + 1406803
4   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
5   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
6   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 8:
0   libsystem_kernel.dylib        	0x00007fffa9df144e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffa9edb48e _pthread_wqthread + 1023
2   libsystem_pthread.dylib       	0x00007fffa9edb07d start_wqthread + 13

Thread 9:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.apple.Foundation          	0x00007fff95f5b4e2 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010fc7d65e 0x10fa4a000 + 2307678
7   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
8   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
9   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
10  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
11  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
12  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
13  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
14  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 10:: DnsConfigService
0   libsystem_kernel.dylib        	0x00007fffa9df1d96 kevent + 10
1   com.github.electron.framework 	0x000000010fcd47a7 0x10fa4a000 + 2664359
2   com.github.electron.framework 	0x000000010fcd39ed 0x10fa4a000 + 2660845
3   com.github.electron.framework 	0x000000010fc7c59f 0x10fa4a000 + 2303391
4   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
5   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
6   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
7   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
8   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
9   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
10  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 11:: CrShutdownDetector
0   libsystem_kernel.dylib        	0x00007fffa9df2246 read + 10
1   com.github.electron.framework 	0x000000010fadcdcf 0x10fa4a000 + 601551
2   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
3   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
4   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
5   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 12:: Chrome_DBThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010feeaa08 0x10fa4a000 + 4852232
10  com.github.electron.framework 	0x000000010feeadcf 0x10fa4a000 + 4853199
11  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
12  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
13  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 13:: Chrome_FileThread
0   libsystem_kernel.dylib        	0x00007fffa9df1d96 kevent + 10
1   com.github.electron.framework 	0x000000010fcd47a7 0x10fa4a000 + 2664359
2   com.github.electron.framework 	0x000000010fcd39ed 0x10fa4a000 + 2660845
3   com.github.electron.framework 	0x000000010fc7c59f 0x10fa4a000 + 2303391
4   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
5   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
6   com.github.electron.framework 	0x000000010feeaa88 0x10fa4a000 + 4852360
7   com.github.electron.framework 	0x000000010feeaddf 0x10fa4a000 + 4853215
8   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
9   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
10  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
11  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
12  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 14:: Chrome_FileUserBlockingThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010feeab08 0x10fa4a000 + 4852488
10  com.github.electron.framework 	0x000000010feeadef 0x10fa4a000 + 4853231
11  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
12  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
13  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 15:: Chrome_ProcessLauncherThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010feeab88 0x10fa4a000 + 4852616
10  com.github.electron.framework 	0x000000010feeadfc 0x10fa4a000 + 4853244
11  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
12  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
13  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 16:: Chrome_CacheThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010feeac08 0x10fa4a000 + 4852744
10  com.github.electron.framework 	0x000000010feeae09 0x10fa4a000 + 4853257
11  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
12  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
13  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 17:: Chrome_IOThread
0   libsystem_kernel.dylib        	0x00007fffa9df1d96 kevent + 10
1   com.github.electron.framework 	0x000000010fcd47a7 0x10fa4a000 + 2664359
2   com.github.electron.framework 	0x000000010fcd39ed 0x10fa4a000 + 2660845
3   com.github.electron.framework 	0x000000010fc7c586 0x10fa4a000 + 2303366
4   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
5   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
6   com.github.electron.framework 	0x000000010feeac88 0x10fa4a000 + 4852872
7   com.github.electron.framework 	0x000000010feeae16 0x10fa4a000 + 4853270
8   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
9   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
10  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
11  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
12  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 18:: IndexedDB
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
10  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
11  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
12  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
13  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 19:: BrowserBlockingWorker1/41987
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fc908e1 0x10fa4a000 + 2386145
4   com.github.electron.framework 	0x000000010fc8fec6 0x10fa4a000 + 2383558
5   com.github.electron.framework 	0x000000010fc9455d 0x10fa4a000 + 2401629
6   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
7   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 20:: CompositorTileWorker1/43267
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc7fa _pthread_cond_wait + 712
2   com.github.electron.framework 	0x000000010fdc2788 0x10fa4a000 + 3639176
3   com.github.electron.framework 	0x000000010fc9455d 0x10fa4a000 + 2401629
4   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
5   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
6   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
7   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 21:: AudioThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
10  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
11  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
12  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
13  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 22:
0   libsystem_kernel.dylib        	0x00007fffa9df0eb6 __select + 10
1   com.github.electron.framework 	0x000000010fb5b822 atom::NodeBindingsMac::PollEvents() + 226
2   com.github.electron.framework 	0x000000010fb5aecf atom::NodeBindings::EmbedThreadRunner(void*) + 63
3   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
4   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
5   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 23:
0   libsystem_kernel.dylib        	0x00007fffa9df144e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffa9edb621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fffa9edb07d start_wqthread + 13

Thread 24:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.apple.AppKit              	0x00007fff9218ff02 _NSEventThread + 205
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 25:
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.apple.CoreFoundation      	0x00007fff94587b91 CFRunLoopRun + 97
6   libnode.dylib                 	0x0000000113fd4b26 0x113e6e000 + 1469222
7   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 26:: NetworkConfigWatcher
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.apple.Foundation          	0x00007fff95f5b4e2 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277
6   com.github.electron.framework 	0x000000010fc7d65e 0x10fa4a000 + 2307678
7   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
8   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
9   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
10  com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
11  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
12  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
13  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
14  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 27:: BrowserBlockingWorker2/66619
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fc908e1 0x10fa4a000 + 2386145
4   com.github.electron.framework 	0x000000010fc8fec6 0x10fa4a000 + 2383558
5   com.github.electron.framework 	0x000000010fc9455d 0x10fa4a000 + 2401629
6   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
7   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 28:
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.github.electron.framework 	0x000000010fbc8a23 0x10fa4a000 + 1567267
3   com.github.electron.framework 	0x000000010fbc897c crashpad::MachMessageWithDeadline(mach_msg_header_t*, int, unsigned int, unsigned int, unsigned long long, unsigned int, bool) + 204
4   com.github.electron.framework 	0x000000010fbc9307 0x10fa4a000 + 1569543
5   com.github.electron.framework 	0x000000010fbc9068 crashpad::MachMessageServer::Run(crashpad::MachMessageServer::Interface*, unsigned int, int, crashpad::MachMessageServer::Persistent, crashpad::MachMessageServer::ReceiveLarge, unsigned int) + 568
6   com.github.electron.framework 	0x000000010fbc2312 0x10fa4a000 + 1540882
7   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 29:: Proxy Resolver
0   libsystem_kernel.dylib        	0x00007fffa9de934a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffa9de8797 mach_msg + 55
2   com.apple.CoreFoundation      	0x00007fff94549434 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation      	0x00007fff945488c1 __CFRunLoopRun + 1361
4   com.apple.CoreFoundation      	0x00007fff94548114 CFRunLoopRunSpecific + 420
5   com.github.electron.framework 	0x000000010fc7d3bf 0x10fa4a000 + 2307007
6   com.github.electron.framework 	0x000000010fc7ce9c 0x10fa4a000 + 2305692
7   com.github.electron.framework 	0x000000010fc793de 0x10fa4a000 + 2290654
8   com.github.electron.framework 	0x000000010fc8df33 0x10fa4a000 + 2375475
9   com.github.electron.framework 	0x000000010fca6892 0x10fa4a000 + 2476178
10  com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
11  libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
12  libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
13  libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 30:: WorkerPool/14355
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf9c7 0x10fa4a000 + 2644423
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 31:: WorkerPool/107271
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf9c7 0x10fa4a000 + 2644423
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 32:: WorkerPool/13835
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf9c7 0x10fa4a000 + 2644423
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 33:: WorkerPool/114983
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf9c7 0x10fa4a000 + 2644423
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 34:: WorkerPool/113251
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf9c7 0x10fa4a000 + 2644423
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 35:: WorkerPool/113835
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fccf569 0x10fa4a000 + 2643305
4   com.github.electron.framework 	0x000000010fccf79c 0x10fa4a000 + 2643868
5   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
6   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
7   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
8   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 36:: BrowserBlockingWorker3/115867
0   libsystem_kernel.dylib        	0x00007fffa9df0bf2 __psynch_cvwait + 10
1   libsystem_pthread.dylib       	0x00007fffa9edc833 _pthread_cond_wait + 769
2   com.github.electron.framework 	0x000000010fc3dffb 0x10fa4a000 + 2047995
3   com.github.electron.framework 	0x000000010fc908e1 0x10fa4a000 + 2386145
4   com.github.electron.framework 	0x000000010fc8fec6 0x10fa4a000 + 2383558
5   com.github.electron.framework 	0x000000010fc9455d 0x10fa4a000 + 2401629
6   com.github.electron.framework 	0x000000010fc83fc7 0x10fa4a000 + 2334663
7   libsystem_pthread.dylib       	0x00007fffa9edb93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffa9edb887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffa9edb08d thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0x0000000000000400  rbx: 0x0000000000000000  rcx: 0x0000000000000010  rdx: 0xfffffffffffffff0
  rdi: 0x00000001139de48c  rsi: 0x00007f8f0b9b8bd0  rbp: 0x00007fff501beee0  rsp: 0x00007fff501beee0
   r8: 0x0000000000000040   r9: 0x00007fffb2bc0040  r10: 0x000000011c344110  r11: 0x0000007044806710
  r12: 0x00007fff501bef10  r13: 0x00007fff501bf3f8  r14: 0x00007fff501bf3e8  r15: 0x00007fff501bf3f0
  rip: 0x000000010fc3eca1  rfl: 0x0000000000000246  cr2: 0x00007fffbe398495
  
Logical CPU:     2
Error Code:      0x00000000
Trap Number:     3


Binary Images:
       0x10fa3d000 -        0x10fa3dff7 +com.microsoft.VSCode (1.13.0 - 1.13.0) &lt;5AC448E8-732C-3E93-8EE4-4B8DEEC0D3C4&gt; /Applications/Visual Studio Code.app/Contents/MacOS/Electron
       0x10fa4a000 -        0x1136cafa3 +com.github.electron.framework (0) &lt;506DBB52-60F8-3A87-B4AF-06FFF2B7A86A&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
       0x113d14000 -        0x113d2efff +com.github.Squirrel (1.0 - 1) &lt;4C459C36-AFB6-3B8A-8FEC-76C192C17E30&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel
       0x113d58000 -        0x113dbbff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) &lt;701B20DE-3ADD-3643-B52A-E05744C30DB3&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa
       0x113e3f000 -        0x113e53fff +org.mantle.Mantle (1.0 - ???) &lt;31915DD6-48E6-3706-A076-C9D4CE17F4F6&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle
       0x113e6e000 -        0x114cfafff +libnode.dylib (0) &lt;8BCDD958-71F9-32ED-9587-C66650F5C5FB&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib
       0x114fae000 -        0x115020fef +libffmpeg.dylib (0) &lt;C5BC2ED0-B808-3C7D-BFA5-8885567D4ED8&gt; /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib
       0x115179000 -        0x1151b7ff7  com.apple.audio.midi.CoreMIDI (1.10 - 88) &lt;5E2D1F53-B466-312E-AEA7-117B68C9A7F0&gt; /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
       0x1151e5000 -        0x1151feffb  libexpat.1.dylib (15) &lt;F48F1B7B-BEB4-32EE-8C5D-0370096F3864&gt; /usr/lib/libexpat.1.dylib
       0x117ca5000 -        0x117cbcffb  libCGInterfaces.dylib (331.5) &lt;17109679-A284-3C72-AA60-DBA815D3062B&gt; /System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
       0x119ae0000 -        0x119c86fff  GLEngine (14.0.16) &lt;1999FBF9-0B82-34B1-8876-87B4F82101BB&gt; /System/Library/Frameworks/OpenGL.framework/Resources/GLEngine.bundle/GLEngine
       0x119cc5000 -        0x11a71aff7  com.apple.driver.AppleIntelSKLGraphicsGLDriver (10.25.13 - 10.2.5) &lt;3FDB486A-E09C-3A1E-BC86-75E2FA5540BD&gt; /System/Library/Extensions/AppleIntelSKLGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelSKLGraphicsGLDriver
       0x11aa49000 -        0x11aa73fff  GLRendererFloat (14.0.16) &lt;8D11C08E-8249-38DB-9856-BFC01EEDE0CB&gt; /System/Library/Frameworks/OpenGL.framework/Resources/GLRendererFloat.bundle/GLRendererFloat
       0x11aa7d000 -        0x11ab0bff7  com.apple.driver.AppleIntelSKLGraphicsMTLDriver (10.25.13 - 10.2.5) &lt;A3EA0344-6AC8-3729-A8BA-D1A537A11A04&gt; /System/Library/Extensions/AppleIntelSKLGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelSKLGraphicsMTLDriver
       0x11ac43000 -        0x11ac45fff +keymapping.node (???) &lt;2DE63AAA-4425-3F64-878C-530A392152E3&gt; /Applications/Visual Studio Code.app/Contents/Resources/app/node_modules/native-keymap/build/Release/keymapping.node
       0x11c305000 -        0x11c342dc7  dyld (433.5) &lt;322C06B7-8878-311D-888C-C8FD2CA96FF3&gt; /usr/lib/dyld
    0x7fff90cef000 -     0x7fff90eb0fff  com.apple.avfoundation (2.0 - 1187.36) &lt;8C7813BE-B548-33E3-A61E-FF1F1984386A&gt; /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
    0x7fff90eb1000 -     0x7fff90f53ff7  com.apple.audio.AVFAudio (1.0 - ???) &lt;7997D588-B542-3EBB-B822-D719C1114BB4&gt; /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
    0x7fff9101e000 -     0x7fff9101efff  com.apple.Accelerate (1.11 - Accelerate 1.11) &lt;916E360F-323C-3AE1-AB3D-D1F3B284AEE9&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
    0x7fff91037000 -     0x7fff91550feb  com.apple.vImage (8.1 - ???) &lt;B58A7937-BEE2-38FE-87F4-5D5F40D31DC9&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
    0x7fff91551000 -     0x7fff916c2ff3  libBLAS.dylib (1185.50.4) &lt;4087FFE0-627E-3623-96B4-F0A9A1991E09&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
    0x7fff916c3000 -     0x7fff916d7ffb  libBNNS.dylib (15) &lt;254698C7-7D36-3FFF-864E-ADEEEE543076&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
    0x7fff916d8000 -     0x7fff91acefef  libLAPACK.dylib (1185.50.4) &lt;C35FFB2F-A0E6-3903-8A3C-113A74BCBCA2&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
    0x7fff91acf000 -     0x7fff91ae5fff  libLinearAlgebra.dylib (1185.50.4) &lt;345CAACF-7263-36EF-B69B-793EA8B390AF&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
    0x7fff91ae6000 -     0x7fff91aecfff  libQuadrature.dylib (3) &lt;EF56C8E6-DE22-3C69-B543-A8648F335FDD&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
    0x7fff91aed000 -     0x7fff91b01ff7  libSparseBLAS.dylib (1185.50.4) &lt;67BA432E-FB59-3C78-A8BE-ED4274CBC359&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
    0x7fff91b02000 -     0x7fff91c89fe7  libvDSP.dylib (600.60.1) &lt;4155F45B-41CD-3782-AE8F-7AE740FD83C3&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
    0x7fff91c8a000 -     0x7fff91d3cfff  libvMisc.dylib (600.60.1) &lt;98F27D2D-E5DD-38EF-8747-0C4DE821A23D&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
    0x7fff91d3d000 -     0x7fff91d3dfff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) &lt;7C5733E7-0568-3E7D-AF61-160F19FED544&gt; /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
    0x7fff91ffc000 -     0x7fff92dd5ff3  com.apple.AppKit (6.9 - 1504.83.101) &lt;EC7BD195-F9E1-3E43-820A-5FDD0B2B0B67&gt; /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
    0x7fff92de7000 -     0x7fff92de7fff  com.apple.ApplicationServices (48 - 48) &lt;4C71CBA8-47E4-38BF-BE3B-F20DF8667D5D&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
    0x7fff92de8000 -     0x7fff92e56ff7  com.apple.ApplicationServices.ATS (377 - 422.2) &lt;A31D17BE-F747-39FB-9A84-5F2F8891204C&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
    0x7fff92ef0000 -     0x7fff9301fff7  libFontParser.dylib (194.12) &lt;73C3946D-EF92-3AC1-89C3-0E75B2A85325&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
    0x7fff93020000 -     0x7fff9306afff  libFontRegistry.dylib (196.4) &lt;EA96AE47-3369-3DEA-BB82-98348ADBD85B&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
    0x7fff930c7000 -     0x7fff930fafff  libTrueTypeScaler.dylib (194.12) &lt;8944A23A-EE36-3657-9B4F-933231C8FDEC&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
    0x7fff93167000 -     0x7fff93211ff7  com.apple.ColorSync (4.12.0 - 502.2) &lt;ACA4001E-A0E3-33F6-9CD6-EEC2AA15E322&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
    0x7fff93212000 -     0x7fff93263fff  com.apple.HIServices (1.22 - 592.1) &lt;7353E76E-9A3A-3693-87AF-41953585E024&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
    0x7fff93264000 -     0x7fff93273ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) &lt;2CBE7F61-2056-3F96-99A1-0D527796AFA6&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
    0x7fff93274000 -     0x7fff932c1fff  com.apple.print.framework.PrintCore (12 - 491) &lt;5027FD58-F0EE-33E4-8577-934CA06CD2AF&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
    0x7fff932c2000 -     0x7fff932fdfff  com.apple.QD (3.12 - 313) &lt;B339C41D-8CDF-3342-8414-F9717DCCADD4&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
    0x7fff932fe000 -     0x7fff93309fff  com.apple.speech.synthesis.framework (6.6.2 - 6.6.2) &lt;7853EFF4-62B9-394E-B7B8-41A645656820&gt; /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
    0x7fff9330a000 -     0x7fff93516fff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) &lt;91D2BA22-B168-3A9A-9008-6FFC5A8FDC1E&gt; /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
    0x7fff93517000 -     0x7fff93517fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) &lt;8C0153FD-FEFF-309C-AACD-BF9657A31F8E&gt; /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
    0x7fff93680000 -     0x7fff93a5afff  com.apple.CFNetwork (811.5.4 - 811.5.4) &lt;4DBF8932-6286-3B23-87D9-63615B9958D9&gt; /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
    0x7fff93a74000 -     0x7fff93a74fff  com.apple.Carbon (154 - 157) &lt;69F403C7-F0CB-34E6-89B0-235CF4978C17&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
    0x7fff93a75000 -     0x7fff93a78fff  com.apple.CommonPanels (1.2.6 - 98) &lt;BF04BB22-D54C-309E-9F5C-897D969CAF70&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
    0x7fff93a79000 -     0x7fff93d82fff  com.apple.HIToolbox (2.1.1 - 857.8) &lt;CAB143FE-AEAF-3EDE-AD7B-C04E1B7C5615&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
    0x7fff93d83000 -     0x7fff93d86ff7  com.apple.help (1.3.5 - 49) &lt;B1A930E3-5907-3677-BACD-858EF68B172D&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
    0x7fff93d87000 -     0x7fff93d8cfff  com.apple.ImageCapture (9.0 - 9.0) &lt;341252B4-E082-361A-B756-6A330259C741&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
    0x7fff93d8d000 -     0x7fff93e24ff3  com.apple.ink.framework (10.9 - 219) &lt;1BD40B45-FD33-3177-A935-565EE5FC79D7&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
    0x7fff93e25000 -     0x7fff93e3ffff  com.apple.openscripting (1.7 - 172) &lt;31CFBB35-24BD-3E12-9B6B-1FA842FB605B&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
    0x7fff93e40000 -     0x7fff93e41ff3  com.apple.print.framework.Print (12 - 267) &lt;E2F82F1F-DC27-3EF0-9F75-B354F701450A&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
    0x7fff93e42000 -     0x7fff93e44ff7  com.apple.securityhi (9.0 - 55006) &lt;DBD65629-535D-3669-8218-7F074D61638C&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
    0x7fff93e45000 -     0x7fff93e4bff7  com.apple.speech.recognition.framework (6.0.1 - 6.0.1) &lt;082895DC-3AC7-3DEF-ADCA-5B018C19C9D3&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
    0x7fff93e4c000 -     0x7fff93f2bffb  com.apple.cloudkit.CloudKit (651.14 - 651.14) &lt;9F901E45-23E3-3F45-B66F-1BAB3AFC4462&gt; /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
    0x7fff93f2c000 -     0x7fff93f2cfff  com.apple.Cocoa (6.11 - 22) &lt;85EDFBE1-75F0-369E-8CA8-C6A639B98FA6&gt; /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
    0x7fff94076000 -     0x7fff94103fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) &lt;78767F88-91D4-31CE-AAC6-1F9407F479BB&gt; /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
    0x7fff94104000 -     0x7fff94117fff  com.apple.CoreBluetooth (1.0 - 1) &lt;BCB78777-76F0-3CC1-8443-9E61AEF7EF63&gt; /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
    0x7fff94118000 -     0x7fff94413fff  com.apple.CoreData (120 - 754.2) &lt;4C9CAB2C-60D4-3694-A0A0-5B04B14BD14E&gt; /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
    0x7fff94414000 -     0x7fff944c0ff7  com.apple.CoreDisplay (1.0 - 1) &lt;AAD5DF0B-0D22-305E-86FF-BB1431130363&gt; /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
    0x7fff944c1000 -     0x7fff9495aff7  com.apple.CoreFoundation (6.9 - 1349.8) &lt;09ED473E-5DE8-307F-B55C-16F6419236D5&gt; /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
    0x7fff9495b000 -     0x7fff94fddfff  com.apple.CoreGraphics (2.0 - 1070.22) &lt;78E7C882-837D-3CC3-B221-767B999873CE&gt; /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
    0x7fff94fde000 -     0x7fff95221ffb  com.apple.CoreImage (12.4.0 - 451.4.9) &lt;BE4303C9-C9D9-361D-AC94-DBE40EB6700E&gt; /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
    0x7fff95222000 -     0x7fff95287ff7  com.apple.corelocation (2101.0.63) &lt;B76E6C13-E10B-3F2F-AFD7-DB2C0DEF6579&gt; /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation
    0x7fff95288000 -     0x7fff95339fff  com.apple.CoreMedia (1.0 - 1907.59.1.5) &lt;6CCDE81A-6992-33ED-A1D9-9D27A4C1E31F&gt; /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
    0x7fff9533a000 -     0x7fff95385ff7  com.apple.CoreMediaIO (805.0 - 4932) &lt;ACE54DDE-C526-31CA-9755-3938603E3751&gt; /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
    0x7fff95386000 -     0x7fff95386fff  com.apple.CoreServices (775.19 - 775.19) &lt;7255917D-EFBB-3BE2-A8FD-DAD631BC0949&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
    0x7fff95387000 -     0x7fff953d8fff  com.apple.AE (712.5 - 712.5) &lt;61F2AE2C-E04E-3FDF-9E88-201325136C83&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
    0x7fff953d9000 -     0x7fff956b4ff7  com.apple.CoreServices.CarbonCore (1159.6 - 1159.6) &lt;08AC074C-965B-3EDF-8E45-0707C8DE9EAD&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
    0x7fff956b5000 -     0x7fff956e8fff  com.apple.DictionaryServices (1.2 - 274) &lt;D23866E2-F7C8-3984-A9D4-96552CCDE573&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
    0x7fff956e9000 -     0x7fff956f1ff3  com.apple.CoreServices.FSEvents (1230.50.1 - 1230.50.1) &lt;2AD1B0E5-7214-37C4-8D11-A27C9CAC0F74&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
    0x7fff956f2000 -     0x7fff9585eff7  com.apple.LaunchServices (775.19 - 775.19) &lt;94D15A2A-852C-3B4B-A701-43043C8F1527&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
    0x7fff9585f000 -     0x7fff9590fffb  com.apple.Metadata (10.7.0 - 1075.40) &lt;DA911E1B-3977-386D-930D-96BD5085CB8E&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
    0x7fff95910000 -     0x7fff9596ffff  com.apple.CoreServices.OSServices (775.19 - 775.19) &lt;C709A773-4FA0-33DD-B3E2-FBA41E00F177&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
    0x7fff95970000 -     0x7fff959e0fff  com.apple.SearchKit (1.4.0 - 1.4.0) &lt;7A6DDA2B-03F1-3137-BA9E-1CC211973E26&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
    0x7fff959e1000 -     0x7fff95a26ff7  com.apple.coreservices.SharedFileList (38 - 38) &lt;DA096678-93AB-3291-BDE2-482F1D544589&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
    0x7fff95aaf000 -     0x7fff95bfcffb  com.apple.CoreText (352.0 - 544.15) &lt;BF0EE575-BB7E-3BF9-9029-232B4ADC24E4&gt; /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
    0x7fff95bfd000 -     0x7fff95c32ff3  com.apple.CoreVideo (1.8 - 235.3) &lt;AC11D5FB-C77B-34F5-B942-F698E84C229F&gt; /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
    0x7fff95c33000 -     0x7fff95ca4ffb  com.apple.framework.CoreWLAN (11.0 - 1200.31) &lt;E47C0568-E37B-3052-9E77-F0F371DCDE7F&gt; /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
    0x7fff95da2000 -     0x7fff95da7fff  com.apple.DiskArbitration (2.7 - 2.7) &lt;8AC72143-D3C4-3AA6-84DF-734E3AFAC49B&gt; /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
    0x7fff95f39000 -     0x7fff962dfff3  com.apple.Foundation (6.9 - 1349.81) &lt;730B7944-BB43-35D5-A546-9F6CCED4B9F3&gt; /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
    0x7fff9630b000 -     0x7fff9633cff7  com.apple.GSS (4.0 - 2.0) &lt;6FADED0B-0425-3567-A75A-040C5A4638EB&gt; /System/Library/Frameworks/GSS.framework/Versions/A/GSS
    0x7fff9633d000 -     0x7fff96355ff7  com.apple.GameController (1.0 - 1) &lt;DAC8C83B-7EC8-3A88-A725-E13DD905BF4F&gt; /System/Library/Frameworks/GameController.framework/Versions/A/GameController
    0x7fff963fc000 -     0x7fff9649fffb  com.apple.Bluetooth (5.0.4 - 5.0.4f18) &lt;B3FED7E7-45EE-32DD-B59E-7942BCE9426C&gt; /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
    0x7fff964a0000 -     0x7fff96536ff7  com.apple.framework.IOKit (2.0.2 - 1324.60.3) &lt;7CE4C98B-107C-3AAA-B49A-F2ACFCBBF526&gt; /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
    0x7fff96537000 -     0x7fff9653dffb  com.apple.IOSurface (159.7 - 159.7) &lt;40550017-EF96-3C52-B400-806AFEE4B134&gt; /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
    0x7fff9653e000 -     0x7fff9658fff7  com.apple.ImageCaptureCore (7.0 - 7.0) &lt;A640CA2F-8093-34AB-947C-26679ECB8A6D&gt; /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
    0x7fff96590000 -     0x7fff966f0fef  com.apple.ImageIO.framework (3.3.0 - 1599.10.2) &lt;87AA4D39-0AFC-3A34-98EF-02710E2BF3CA&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
    0x7fff966f1000 -     0x7fff966f5fff  libGIF.dylib (1599.10.2) &lt;6ED05614-1301-3452-943B-118F00F20C8D&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
    0x7fff966f6000 -     0x7fff967e6ff7  libJP2.dylib (1599.10.2) &lt;72C00423-55F0-3CAD-B198-EF00950791E6&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
    0x7fff967e7000 -     0x7fff9680affb  libJPEG.dylib (1599.10.2) &lt;78945614-990F-3705-A91C-46F717F7C635&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
    0x7fff9680b000 -     0x7fff96832ff7  libPng.dylib (1599.10.2) &lt;B800C14F-6E41-36B6-8DC1-1AE97A83A964&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
    0x7fff96833000 -     0x7fff96835ff3  libRadiance.dylib (1599.10.2) &lt;037D95B4-82A7-3A59-B3EB-0FF0977CF7A5&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
    0x7fff96836000 -     0x7fff96884fff  libTIFF.dylib (1599.10.2) &lt;CA2C7BF9-FDDB-36CF-B063-B075B29F8878&gt; /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
    0x7fff969e2000 -     0x7fff975eaff3  com.apple.JavaScriptCore (12603 - 12603.2.4) &lt;FFD37381-05F4-3907-BD31-74CFC3D7868F&gt; /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
    0x7fff975eb000 -     0x7fff97604ff7  com.apple.Kerberos (3.0 - 1) &lt;B9D242EB-E325-3A21-9812-C77CBBFB0D51&gt; /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
    0x7fff9788d000 -     0x7fff97893fff  com.apple.MediaAccessibility (1.0 - 97.1.1) &lt;0BD82735-6644-37CE-B13D-8E7CC59A1752&gt; /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
    0x7fff978a9000 -     0x7fff97de2ff7  com.apple.MediaToolbox (1.0 - 1907.59.1.5) &lt;2024A2A2-50B6-36AA-BC6D-3AAFA78EB707&gt; /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
    0x7fff97de3000 -     0x7fff97e3efff  com.apple.Metal (87.18 - 87.18) &lt;5C2F12FB-45C1-3103-A827-3D225BF8D05A&gt; /System/Library/Frameworks/Metal.framework/Versions/A/Metal
    0x7fff98727000 -     0x7fff9872ffff  com.apple.NetFS (6.0 - 4.0) &lt;14A24D00-5673-330A-959D-87F72040DEFF&gt; /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
    0x7fff98906000 -     0x7fff9890eff7  libcldcpuengine.dylib (2.8.5) &lt;73E1E526-01DF-3199-9B48-155F0329EF44&gt; /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
    0x7fff9890f000 -     0x7fff9895dff3  com.apple.opencl (2.8.6 - 2.8.6) &lt;5FAF6F49-2648-39E6-922B-5630A5D7F7E4&gt; /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
    0x7fff9895e000 -     0x7fff98977ffb  com.apple.CFOpenDirectory (10.12 - 194) &lt;A64E9A01-3F6E-36EA-9C10-88C564A68C9D&gt; /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
    0x7fff98978000 -     0x7fff98983ff7  com.apple.OpenDirectory (10.12 - 194) &lt;4298FFD0-B1A7-3064-AF5B-708B3FA38671&gt; /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
    0x7fff98984000 -     0x7fff98986fff  libCVMSPluginSupport.dylib (14.0.16) &lt;A20EC348-37C9-33B6-9A81-06006F3214A1&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
    0x7fff98987000 -     0x7fff9898aff7  libCoreFSCache.dylib (156.3) &lt;687C4CC3-6537-344B-8BE1-5234C8CB2864&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
    0x7fff9898b000 -     0x7fff9898ffff  libCoreVMClient.dylib (156.3) &lt;E7AEFCBE-B6BF-3C7C-9A4E-E78CB04DB794&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
    0x7fff98990000 -     0x7fff98999ff7  libGFXShared.dylib (14.0.16) &lt;63542E68-EB1A-3ECF-AAFB-E7B8AB313C70&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
    0x7fff9899a000 -     0x7fff989a5fff  libGL.dylib (14.0.16) &lt;84BEED97-0A93-356D-A922-97EA311EA446&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
    0x7fff989a6000 -     0x7fff989e2ff7  libGLImage.dylib (14.0.16) &lt;3518A85C-6905-3511-A6C9-2F82C519D28F&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
    0x7fff989e3000 -     0x7fff98b59ff3  libGLProgrammability.dylib (14.0.16) &lt;0EDA89D8-7C28-3D53-BDBA-7CB25232C329&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib
    0x7fff98b5a000 -     0x7fff98b9bff7  libGLU.dylib (14.0.16) &lt;9860DCF7-56E0-3A8F-A377-52635C9D8B27&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
    0x7fff99503000 -     0x7fff99511fff  com.apple.opengl (14.0.16 - 14.0.16) &lt;27E7D76E-A26B-39F8-8CF2-AB57920776A3&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
    0x7fff995ae000 -     0x7fff996f5fff  com.apple.QTKit (7.7.3 - 2978.7) &lt;49F88771-52FE-3989-AAB7-10A7494C4419&gt; /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
    0x7fff996f6000 -     0x7fff99960ff7  com.apple.imageKit (3.0 - 1023) &lt;9C547565-CBAA-3ACB-A3F6-1366A0DCDCB4&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
    0x7fff99961000 -     0x7fff99a28fff  com.apple.PDFKit (1.0 - 1) &lt;BE82F14C-B20C-3771-B16C-F0723F6552AD&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
    0x7fff99a29000 -     0x7fff99f4fff7  com.apple.QuartzComposer (5.1 - 356) &lt;C66293F6-EF05-3B36-8524-081CEB9FADD7&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
    0x7fff99f50000 -     0x7fff99f73ffb  com.apple.quartzfilters (1.10.0 - 1.10.0) &lt;365342ED-7A1A-3C75-AE60-90764E96034C&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
    0x7fff99f74000 -     0x7fff9a061fff  com.apple.QuickLookUIFramework (5.0 - 720.7) &lt;3136C23E-399E-3296-928A-B18EC9FC423C&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
    0x7fff9a062000 -     0x7fff9a062fff  com.apple.quartzframework (1.5 - 21) &lt;09455972-8A33-3D61-B193-BA7E7CF984CA&gt; /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
    0x7fff9a063000 -     0x7fff9a263fff  com.apple.QuartzCore (1.11 - 453.39.3) &lt;AB46D60D-17A8-3122-800E-2A9DA604FCBA&gt; /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
    0x7fff9a264000 -     0x7fff9a2b9fff  com.apple.QuickLookFramework (5.0 - 720.7) &lt;3BD7BA2F-924C-3EFF-B26E-3F930E62E6B4&gt; /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
    0x7fff9a2ba000 -     0x7fff9a2cffff  com.apple.SafariServices.framework (12603 - 12603.2.4) &lt;BD072E0A-9759-341D-9E59-5D869380076B&gt; /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
    0x7fff9a7ca000 -     0x7fff9aaccff7  com.apple.security (7.0 - 57740.60.18) &lt;021AACF6-D15F-37E0-840B-88853684BA00&gt; /System/Library/Frameworks/Security.framework/Versions/A/Security
    0x7fff9aacd000 -     0x7fff9ab42fff  com.apple.securityfoundation (6.0 - 55132.50.7) &lt;4433C0CC-FE90-3DD3-BAC1-CC31D515B510&gt; /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
    0x7fff9ab43000 -     0x7fff9ab6cfff  com.apple.securityinterface (10.0 - 55079.50.4) &lt;50E3EAA8-1AF0-3910-AAFD-57D93D958DFF&gt; /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface
    0x7fff9ab6d000 -     0x7fff9ab70ff3  com.apple.xpc.ServiceManagement (1.0 - 1) &lt;9F285B19-B53B-3502-85A2-72C26DB40EA7&gt; /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
    0x7fff9aef7000 -     0x7fff9af66ff7  com.apple.SystemConfiguration (1.14 - 1.14) &lt;2412CDE0-C317-31EA-8F53-7A58BBFCC720&gt; /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
    0x7fff9af67000 -     0x7fff9b315fff  com.apple.VideoToolbox (1.0 - 1907.59.1.5) &lt;75E2F901-572F-3FC8-A599-96A085EEBC88&gt; /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
    0x7fff9d7bb000 -     0x7fff9d7d6ff3  com.apple.AppContainer (4.0 - 307.50.21) &lt;C2E6BA3D-81FF-39C3-B4BF-DBB9A17DE078&gt; /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
    0x7fff9d7d7000 -     0x7fff9d7e4ff3  com.apple.AppSandbox (4.0 - 307.50.21) &lt;BF9FA426-8C11-358B-9E1F-A3901E3F2B14&gt; /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
    0x7fff9d7e5000 -     0x7fff9d807ffb  com.apple.framework.Apple80211 (12.0 - 1200.47) &lt;B692048E-1B61-3DAF-9CBA-4D314E7562DC&gt; /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
    0x7fff9d808000 -     0x7fff9d817feb  com.apple.AppleFSCompression (88.50.3 - 1.0) &lt;478E8BFF-8BA2-375E-BE02-BA27F115C15A&gt; /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
    0x7fff9d90b000 -     0x7fff9d99697f  com.apple.AppleJPEG (1.0 - 1) &lt;B9E9570D-04A4-34E4-B756-D200043B25B8&gt; /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
    0x7fff9d9cf000 -     0x7fff9d9d2ff3  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) &lt;42A1731A-A576-307A-B07C-9F8F64696CB7&gt; /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
    0x7fff9d9d3000 -     0x7fff9da25fff  com.apple.AppleVAFramework (5.0.36 - 5.0.36) &lt;7352078D-C230-397C-81A5-57A48CF218C0&gt; /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
    0x7fff9da2f000 -     0x7fff9da36ff7  com.apple.AssetCacheServices (48.3 - 48.3) &lt;C59F7295-36D8-3109-A910-C83D884CC92C&gt; /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices
    0x7fff9ddc9000 -     0x7fff9de47ff7  com.apple.backup.framework (1.8.5 - 1.8.5) &lt;CC679891-E8F5-3166-8EB6-AEA06954A52D&gt; /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
    0x7fff9ead2000 -     0x7fff9eaf9ff3  com.apple.ChunkingLibrary (173 - 173) &lt;FC2165F9-FC93-39C0-8323-C2F43A5E00A3&gt; /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
    0x7fff9eafa000 -     0x7fff9eb86ff7  com.apple.CloudDocs (1.0 - 486.29) &lt;751554B6-A09E-32A8-A604-9F1B1FD8B84D&gt; /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs
    0x7fff9f41e000 -     0x7fff9f427ffb  com.apple.CommonAuth (4.0 - 2.0) &lt;216950CB-269F-3476-BA17-D6363AC49FBC&gt; /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
    0x7fff9f5ab000 -     0x7fff9f98aff7  com.apple.CoreAUC (226.0.0 - 226.0.0) &lt;FBF6C5BC-5937-3957-B6BA-E101DF9B0DF6&gt; /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
    0x7fff9f98b000 -     0x7fff9f9bbfff  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) &lt;3F6857D1-AE7C-3593-B064-930F5BB7269E&gt; /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
    0x7fff9fb6f000 -     0x7fff9fb7ffff  com.apple.CoreEmoji (1.0 - 40.3.3) &lt;E9A28301-2D79-3A97-A046-028258A6ABE5&gt; /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
    0x7fff9fc44000 -     0x7fff9fc5aff3  com.apple.CoreMediaAuthoring (2.2 - 956) &lt;AEBFF55F-BF1E-3CA5-AA9C-1CE22218A665&gt; /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
    0x7fff9fc61000 -     0x7fff9fcf1ffb  com.apple.CorePDF (4.0 - 4) &lt;7F50E4A6-940C-33F5-BE4E-7E01AFE98A8F&gt; /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
    0x7fff9feba000 -     0x7fff9feeaff3  com.apple.CoreServicesInternal (276.2 - 276.2) &lt;05EB7D45-DD4C-3A0F-AC63-A0C2A68E6481&gt; /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
    0x7fffa017b000 -     0x7fffa020aff7  com.apple.CoreSymbolication (62046) &lt;7839CD8E-011D-3567-88DE-3D472C661136&gt; /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
    0x7fffa020b000 -     0x7fffa034afe7  com.apple.coreui (2.1 - 431.3) &lt;2E8FEC10-FC5B-3782-92DA-A85C24B7BF7C&gt; /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
    0x7fffa034b000 -     0x7fffa041bff3  com.apple.CoreUtils (5.1 - 510.31) &lt;E68BB8ED-8874-36EC-A7C5-1017C0E727CB&gt; /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
    0x7fffa046b000 -     0x7fffa04d0ff3  com.apple.framework.CoreWiFi (12.0 - 1200.31) &lt;DF0972EF-F817-3FD3-8C00-2D57B8738D8C&gt; /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
    0x7fffa04d1000 -     0x7fffa04dfff7  com.apple.CrashReporterSupport (10.12 - 827) &lt;14037A71-ECFE-394A-8D6E-2CECE98F02EE&gt; /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
    0x7fffa0551000 -     0x7fffa055bffb  com.apple.framework.DFRFoundation (1.0 - 104.25) &lt;7CFF896C-EF22-3941-BB3D-F3615CE4C908&gt; /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
    0x7fffa055c000 -     0x7fffa0560ff3  com.apple.DSExternalDisplay (3.1 - 380) &lt;A195C0CE-8E4E-384B-9556-8270E306FE1D&gt; /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
    0x7fffa0596000 -     0x7fffa060bffb  com.apple.datadetectorscore (7.0 - 539.1) &lt;9C312AAC-8AEE-3C72-BDE5-7FBF62452525&gt; /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
    0x7fffa0647000 -     0x7fffa0686fff  com.apple.DebugSymbols (137 - 137) &lt;58A70B66-2628-3CFE-B103-2200D95FC5F7&gt; /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    0x7fffa0687000 -     0x7fffa0798fff  com.apple.desktopservices (1.11.5 - 1.11.5) &lt;46A9D4F3-1EF8-373C-98A4-AD48D285E484&gt; /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
    0x7fffa08db000 -     0x7fffa08e6fff  com.apple.DisplayServicesFW (3.1 - 380) &lt;83BB7C77-F18D-382D-9023-26132D925F75&gt; /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
    0x7fffa0a80000 -     0x7fffa0eb1ff7  com.apple.vision.FaceCore (3.3.2 - 3.3.2) &lt;9391D5A3-738C-3136-9D07-518CB43DBADA&gt; /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
    0x7fffa2208000 -     0x7fffa2208fff  libmetal_timestamp.dylib (600.0.49.9) &lt;E5EED927-1671-3390-BCBB-D76201D63C73&gt; /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib
    0x7fffa2215000 -     0x7fffa2220ff3  libGPUSupportMercury.dylib (14.0.16) &lt;7E99C736-2F48-313E-BEF6-6F8BABFADD9F&gt; /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib
    0x7fffa24d9000 -     0x7fffa24f5fff  com.apple.GenerationalStorage (2.0 - 267.1) &lt;3DE1C580-D089-362D-8582-8DE68A3C5F13&gt; /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
    0x7fffa250e000 -     0x7fffa2bc0fff  com.apple.GeoServices (1.0 - 1228.24.9.30.34) &lt;96BF97F6-8FF2-3FC4-A8C1-498CB7B0D9A0&gt; /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
    0x7fffa2c06000 -     0x7fffa2c7cff3  com.apple.Heimdal (4.0 - 2.0) &lt;8F9C9041-66D5-36C9-8A4C-1658035C311D&gt; /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
    0x7fffa2c7d000 -     0x7fffa2c8efff  com.apple.HelpData (2.1.12 - 100.1) &lt;EEB8CC44-9AFF-3005-A25D-18FE46574FD5&gt; /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData
    0x7fffa3297000 -     0x7fffa329effb  com.apple.IOAccelerator (311.13 - 311.13) &lt;40C04C41-A76A-3687-8D64-F76E8C46AA81&gt; /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
    0x7fffa32a0000 -     0x7fffa32b4ff7  com.apple.IOPresentment (1.0 - 29.10) &lt;A3F7C1F6-CE50-3804-AAAF-7B75EBC46BE4&gt; /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
    0x7fffa32b5000 -     0x7fffa32d7fff  com.apple.IconServices (74.4 - 74.4) &lt;218DDD05-35F4-3833-B98D-471ED0EBC031&gt; /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
    0x7fffa3373000 -     0x7fffa3383ff3  com.apple.IntlPreferences (2.0 - 216) &lt;47681AE8-4539-3525-890C-206B301CEC77&gt; /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences
    0x7fffa33be000 -     0x7fffa3575fff  com.apple.LanguageModeling (1.0 - 123.2.5) &lt;A8CA965F-0399-310D-91C3-B93DDDE9A442&gt; /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
    0x7fffa3671000 -     0x7fffa3733ff3  com.apple.MMCS (1.3 - 385.4) &lt;D3D76CE0-DE05-373E-B757-9E4B4920565D&gt; /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS
    0x7fffa3be5000 -     0x7fffa3be8fff  com.apple.Mangrove (1.0 - 1) &lt;98814966-FD65-302B-B47E-00928DC34E5C&gt; /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
    0x7fffa3e96000 -     0x7fffa3f0fff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) &lt;C323FC94-FFA5-3EE6-B2AC-7E61EA92F304&gt; /System/Library/PrivateFrameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
    0x7fffa406b000 -     0x7fffa4078ff3  com.apple.MobileKeyBag (2.0 - 1.0) &lt;F42EB8B1-BA68-3769-98BE-26A18AED902F&gt; /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
    0x7fffa4089000 -     0x7fffa40b1ff7  com.apple.MultitouchSupport.framework (368.16 - 368.16) &lt;512ADEC6-D694-3D73-A48A-6BE79CD39539&gt; /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
    0x7fffa4163000 -     0x7fffa416efff  com.apple.NetAuth (6.2 - 6.2) &lt;97F487D6-8089-31A8-B68C-6C1EAC6ED1B5&gt; /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
    0x7fffa4a46000 -     0x7fffa4a87ff3  com.apple.PerformanceAnalysis (1.148.3 - 148.3) &lt;6A21AB41-3AAA-32F3-9D46-2555A143A8B9&gt; /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
    0x7fffa5134000 -     0x7fffa516eff7  com.apple.ProtectedCloudStorage (1.0 - 1) &lt;1C6083B7-F020-3634-8F53-CC9E07F27EC5&gt; /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage
    0x7fffa516f000 -     0x7fffa5189fff  com.apple.ProtocolBuffer (1 - 249.1) &lt;A1F1B0F3-078F-378F-A9A9-0DEEA70E816A&gt; /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
    0x7fffa518a000 -     0x7fffa5199ff7  com.apple.QuickLookThumbnailing (1.0 - 1) &lt;173EE873-1700-3FCA-9782-C060FBB5BCAD&gt; /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
    0x7fffa51a2000 -     0x7fffa51c5ff3  com.apple.RemoteViewServices (2.0 - 124) &lt;6B967FDA-6591-302C-BA0A-76C4856E584E&gt; /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
    0x7fffa5e8c000 -     0x7fffa5e8ffff  com.apple.SecCodeWrapper (4.0 - 307.50.21) &lt;F8E957B2-D3F0-3B73-B38C-AE8868F00939&gt; /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
    0x7fffa5f1e000 -     0x7fffa5fabfff  com.apple.Sharing (696.2.67 - 696.2.67) &lt;F681EE28-153F-3216-97A6-6F5E4148AB2E&gt; /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
    0x7fffa5fac000 -     0x7fffa5fcbff7  com.apple.shortcut (2.16 - 98) &lt;6C0435B1-83DD-3254-B0D3-3B86C6CE606A&gt; /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut
    0x7fffa5fcc000 -     0x7fffa6232fef  com.apple.SkyLight (1.600.0 - 170.3) &lt;83AB220F-48C0-3063-8ED3-ACDB69243B4D&gt; /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
    0x7fffa6411000 -     0x7fffa641dff7  com.apple.SpeechRecognitionCore (3.3.2 - 3.3.2) &lt;684BD1EA-8268-331C-A5A9-080EB375C658&gt; /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
    0x7fffa6b09000 -     0x7fffa6b7dfdf  com.apple.Symbolication (62048.1) &lt;1A30ED19-7532-3F46-9DD3-9879A973D0CF&gt; /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
    0x7fffa6fbc000 -     0x7fffa6fc2ff7  com.apple.TCC (1.0 - 1) &lt;911B534B-4AC7-34E4-935E-E42ECD008CBC&gt; /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
    0x7fffa704e000 -     0x7fffa7114ff7  com.apple.TextureIO (2.8 - 2.8) &lt;3D61E533-4156-3B21-B7ED-CB823E680DFC&gt; /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
    0x7fffa7188000 -     0x7fffa7189fff  com.apple.TrustEvaluationAgent (2.0 - 28.50.1) &lt;EBE65DD5-1732-3747-8C6C-7BECEBF089A4&gt; /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
    0x7fffa718a000 -     0x7fffa731aff3  com.apple.UIFoundation (1.0 - 490.7) &lt;2A3063FE-1790-3510-8A0E-AEC581D42B7E&gt; /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
    0x7fffa7de9000 -     0x7fffa7ea9fff  com.apple.ViewBridge (283 - 283) &lt;25A635B3-C87C-3D3A-ADF3-539713FA1048&gt; /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
    0x7fffa82f4000 -     0x7fffa82fafff  com.apple.XPCService (2.0 - 1) &lt;4B28B225-2105-33F4-9ED0-F04288FF4FB1&gt; /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
    0x7fffa83cb000 -     0x7fffa83cdffb  com.apple.loginsupport (1.0 - 1) &lt;F3140B97-12C3-35A7-9D3D-43DA2D13C113&gt; /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
    0x7fffa8422000 -     0x7fffa843dff7  libCRFSuite.dylib (34) &lt;F78B7F5F-0B4F-35C6-AA2F-84EE9CB22137&gt; /usr/lib/libCRFSuite.dylib
    0x7fffa843e000 -     0x7fffa8449fff  libChineseTokenizer.dylib (21) &lt;0886E908-A825-36AF-B94B-2361FD8BC2A1&gt; /usr/lib/libChineseTokenizer.dylib
    0x7fffa84db000 -     0x7fffa84dcff3  libDiagnosticMessagesClient.dylib (102) &lt;84A04D24-0E60-3810-A8C0-90A65E2DF61A&gt; /usr/lib/libDiagnosticMessagesClient.dylib
    0x7fffa84dd000 -     0x7fffa86f0fff  libFosl_dynamic.dylib (16.39) &lt;E22A4243-D148-3C74-BA15-2D906A3D1F9E&gt; /usr/lib/libFosl_dynamic.dylib
    0x7fffa870c000 -     0x7fffa8713fff  libMatch.1.dylib (27) &lt;70D4BD2A-9383-37F2-B0D6-9B592D236601&gt; /usr/lib/libMatch.1.dylib
    0x7fffa8714000 -     0x7fffa8714fff  libOpenScriptingUtil.dylib (172) &lt;90743888-C1E8-34E3-924E-1A754B2B63B9&gt; /usr/lib/libOpenScriptingUtil.dylib
    0x7fffa8715000 -     0x7fffa8719ffb  libScreenReader.dylib (477.40.6) &lt;CBE6420C-EF60-3ACD-A0B6-7CBE936BA3B8&gt; /usr/lib/libScreenReader.dylib
    0x7fffa871a000 -     0x7fffa871bffb  libSystem.B.dylib (1238.60.2) &lt;FC9E9F13-3B18-305C-BE0A-97C7843652B0&gt; /usr/lib/libSystem.B.dylib
    0x7fffa8787000 -     0x7fffa87b2ff3  libarchive.2.dylib (41.50.2) &lt;B4F507BC-B24E-3BE7-B658-94D798E2CD81&gt; /usr/lib/libarchive.2.dylib
    0x7fffa87b3000 -     0x7fffa882ffc7  libate.dylib (1.12.13) &lt;D0767875-D02E-3377-84D8-5F174C27BEA9&gt; /usr/lib/libate.dylib
    0x7fffa8833000 -     0x7fffa8833ff3  libauto.dylib (187) &lt;34388D0B-C539-3C1B-9408-2BC152162E43&gt; /usr/lib/libauto.dylib
    0x7fffa8834000 -     0x7fffa8844ff3  libbsm.0.dylib (34) &lt;20084796-B04D-3B35-A003-EA11459557A9&gt; /usr/lib/libbsm.0.dylib
    0x7fffa8845000 -     0x7fffa8853ff7  libbz2.1.0.dylib (38) &lt;ADFA329A-DCE7-356D-8F09-A3168DFC6610&gt; /usr/lib/libbz2.1.0.dylib
    0x7fffa8854000 -     0x7fffa88aaff7  libc++.1.dylib (307.5) &lt;0B43BB5D-E6EB-3464-8DE9-B41AC8ED9D1C&gt; /usr/lib/libc++.1.dylib
    0x7fffa88ab000 -     0x7fffa88d5fff  libc++abi.dylib (307.3) &lt;30199352-88BF-30BD-8CFF-2A4FBE247523&gt; /usr/lib/libc++abi.dylib
    0x7fffa88d6000 -     0x7fffa88e6ffb  libcmph.dylib (6) &lt;2B5D405E-2D0B-3320-ABD6-622934C86ABE&gt; /usr/lib/libcmph.dylib
    0x7fffa88e7000 -     0x7fffa88fdfcf  libcompression.dylib (39) &lt;F2726F95-F54E-3B21-BCB5-F7151DEFDC2F&gt; /usr/lib/libcompression.dylib
    0x7fffa88fe000 -     0x7fffa88feff7  libcoretls.dylib (121.50.4) &lt;64B1001E-10F6-3542-A3B2-C4B49F51817F&gt; /usr/lib/libcoretls.dylib
    0x7fffa88ff000 -     0x7fffa8900ff3  libcoretls_cfhelpers.dylib (121.50.4) &lt;1A10303E-5EB0-3C7C-9165-021FCDFD934D&gt; /usr/lib/libcoretls_cfhelpers.dylib
    0x7fffa89ba000 -     0x7fffa8a9fff7  libcrypto.0.9.8.dylib (64.50.6) &lt;D34E16A7-990A-37A9-933A-DFAA46554EAA&gt; /usr/lib/libcrypto.0.9.8.dylib
    0x7fffa8c3d000 -     0x7fffa8c90ff7  libcups.2.dylib (450) &lt;9950BFCB-7882-33C9-9ECF-CE66773C5657&gt; /usr/lib/libcups.2.dylib
    0x7fffa8ce2000 -     0x7fffa8ce9ff3  libdscsym.dylib (148.3) &lt;63492BDA-33A8-31DE-90E8-A3D44F07EB9C&gt; /usr/lib/libdscsym.dylib
    0x7fffa8d0b000 -     0x7fffa8d0bfff  libenergytrace.dylib (15) &lt;A1B040A2-7977-3097-9ADF-34FF181EB970&gt; /usr/lib/libenergytrace.dylib
    0x7fffa8d1b000 -     0x7fffa8d20ff7  libheimdal-asn1.dylib (498.50.8) &lt;A40E3196-235E-34CE-AD9A-8D1AFC5DE004&gt; /usr/lib/libheimdal-asn1.dylib
    0x7fffa8d21000 -     0x7fffa8e13ff7  libiconv.2.dylib (50) &lt;42125B35-81D7-3FC4-9475-A26DBE10884D&gt; /usr/lib/libiconv.2.dylib
    0x7fffa8e14000 -     0x7fffa9039ffb  libicucore.A.dylib (57165.0.1) &lt;2931B842-2946-3576-AD1D-1CDA22FA1388&gt; /usr/lib/libicucore.A.dylib
    0x7fffa903f000 -     0x7fffa9040fff  liblangid.dylib (126) &lt;2085E7A7-9A34-3735-87F4-F174EF8EABF0&gt; /usr/lib/liblangid.dylib
    0x7fffa9041000 -     0x7fffa905affb  liblzma.5.dylib (10) &lt;44BD0279-99DD-36B5-8A6E-C11432E2098D&gt; /usr/lib/liblzma.5.dylib
    0x7fffa905b000 -     0x7fffa9071ff7  libmarisa.dylib (5) &lt;9030D214-5D0F-30CB-AC03-902C63909362&gt; /usr/lib/libmarisa.dylib
    0x7fffa9072000 -     0x7fffa931aff7  libmecabra.dylib (744.8) &lt;D429FCC9-42A4-38B3-8784-44024BC859EF&gt; /usr/lib/libmecabra.dylib
    0x7fffa934d000 -     0x7fffa93c7ff3  libnetwork.dylib (856.60.1) &lt;191E99F5-4723-3180-8013-02AF2F9AE4B8&gt; /usr/lib/libnetwork.dylib
    0x7fffa93c8000 -     0x7fffa979a047  libobjc.A.dylib (709) &lt;DC77AA6E-A4E4-326D-8D7F-82D63AA88F99&gt; /usr/lib/libobjc.A.dylib
    0x7fffa979d000 -     0x7fffa97a1fff  libpam.2.dylib (21.30.1) &lt;71EB0D88-DE84-3C8D-A2C5-58AA282BC5BC&gt; /usr/lib/libpam.2.dylib
    0x7fffa97a2000 -     0x7fffa97d3fff  libpcap.A.dylib (67.60.1) &lt;F6BC6ED6-AEE4-3520-B248-0C342636E2B0&gt; /usr/lib/libpcap.A.dylib
    0x7fffa97f0000 -     0x7fffa980cffb  libresolv.9.dylib (64) &lt;A244AE4C-00B0-396C-98FF-97FE4DB3DA30&gt; /usr/lib/libresolv.9.dylib
    0x7fffa980d000 -     0x7fffa9846fff  libsandbox.1.dylib (592.60.1) &lt;B3A1C3BD-084C-389B-9AFD-4BCFDBE9B5B6&gt; /usr/lib/libsandbox.1.dylib
    0x7fffa985a000 -     0x7fffa985bff3  libspindump.dylib (231.3) &lt;C7CEEB64-06F4-3ACA-AAC1-30ECA909501A&gt; /usr/lib/libspindump.dylib
    0x7fffa985c000 -     0x7fffa99a9ff7  libsqlite3.dylib (254.7) &lt;07CD6DE3-394D-3C6A-A4B4-4CAB1054A041&gt; /usr/lib/libsqlite3.dylib
    0x7fffa9a9e000 -     0x7fffa9aabfff  libxar.1.dylib (357) &lt;69547C64-E811-326F-BBED-490C6361BDCB&gt; /usr/lib/libxar.1.dylib
    0x7fffa9aac000 -     0x7fffa9b9bffb  libxml2.2.dylib (30.16) &lt;D2A6861B-D9FA-3BFC-B664-830C3FCE6065&gt; /usr/lib/libxml2.2.dylib
    0x7fffa9b9c000 -     0x7fffa9bc5fff  libxslt.1.dylib (15.9) &lt;00735AD5-B62D-3E83-86AC-5533E4E2B102&gt; /usr/lib/libxslt.1.dylib
    0x7fffa9bc6000 -     0x7fffa9bd7ff3  libz.1.dylib (67) &lt;46E3FFA2-4328-327A-8D34-A03E20BFFB8E&gt; /usr/lib/libz.1.dylib
    0x7fffa9be6000 -     0x7fffa9beaff7  libcache.dylib (79) &lt;093A4DAB-8385-3D47-A350-E20CB7CCF7BF&gt; /usr/lib/system/libcache.dylib
    0x7fffa9beb000 -     0x7fffa9bf5fff  libcommonCrypto.dylib (60092.50.5) &lt;8A64D1B0-C70E-385C-92F0-E669079FDA90&gt; /usr/lib/system/libcommonCrypto.dylib
    0x7fffa9bf6000 -     0x7fffa9bfdfff  libcompiler_rt.dylib (62) &lt;55D47421-772A-32AB-B529-1A46C2F43B4D&gt; /usr/lib/system/libcompiler_rt.dylib
    0x7fffa9bfe000 -     0x7fffa9c06fff  libcopyfile.dylib (138) &lt;819BEA3C-DF11-3E3D-A1A1-5A51C5BF1961&gt; /usr/lib/system/libcopyfile.dylib
    0x7fffa9c07000 -     0x7fffa9c8afdf  libcorecrypto.dylib (442.50.19) &lt;65D7165E-2E71-335D-A2D6-33F78E2DF0C1&gt; /usr/lib/system/libcorecrypto.dylib
    0x7fffa9c8b000 -     0x7fffa9cbcfff  libdispatch.dylib (703.50.37) &lt;6582BAD6-ED27-3B30-B620-90B1C5A4AE3C&gt; /usr/lib/system/libdispatch.dylib
    0x7fffa9cbd000 -     0x7fffa9cc2ffb  libdyld.dylib (433.5) &lt;EC3D88D2-3D40-3274-8E26-362C2D7352C8&gt; /usr/lib/system/libdyld.dylib
    0x7fffa9cc3000 -     0x7fffa9cc3ffb  libkeymgr.dylib (28) &lt;7AA011A9-DC21-3488-BF73-3B5B14D1FDD6&gt; /usr/lib/system/libkeymgr.dylib
    0x7fffa9cc4000 -     0x7fffa9cd0ffb  libkxld.dylib (3789.60.24) &lt;5DFCDC05-6CBC-35A6-8B92-DF6803492E12&gt; /usr/lib/system/libkxld.dylib
    0x7fffa9cd1000 -     0x7fffa9cd1fff  liblaunch.dylib (972.60.2) &lt;D3306CFF-58AA-3C90-B06C-B70E80E60C5B&gt; /usr/lib/system/liblaunch.dylib
    0x7fffa9cd2000 -     0x7fffa9cd7ff3  libmacho.dylib (898) &lt;17D5D855-F6C3-3B04-B680-E9BF02EF8AED&gt; /usr/lib/system/libmacho.dylib
    0x7fffa9cd8000 -     0x7fffa9cdaff3  libquarantine.dylib (85.50.1) &lt;12448CC2-378E-35F3-BE33-9DC395A5B970&gt; /usr/lib/system/libquarantine.dylib
    0x7fffa9cdb000 -     0x7fffa9cdcffb  libremovefile.dylib (45) &lt;38D4CB9C-10CD-30D3-8B7B-A515EC75FE85&gt; /usr/lib/system/libremovefile.dylib
    0x7fffa9cdd000 -     0x7fffa9cf5ff7  libsystem_asl.dylib (349.50.5) &lt;096E4228-3B7C-30A6-8B13-EC909A64499A&gt; /usr/lib/system/libsystem_asl.dylib
    0x7fffa9cf6000 -     0x7fffa9cf6ff7  libsystem_blocks.dylib (67) &lt;10DC5404-73AB-35B3-A277-A8AFECB476EB&gt; /usr/lib/system/libsystem_blocks.dylib
    0x7fffa9cf7000 -     0x7fffa9d84fef  libsystem_c.dylib (1158.50.2) &lt;E5AE5244-7D0C-36AC-8BB6-C7AE7EA52A4B&gt; /usr/lib/system/libsystem_c.dylib
    0x7fffa9d85000 -     0x7fffa9d88ffb  libsystem_configuration.dylib (888.60.2) &lt;BECC01A2-CA8D-31E6-BCDF-D452965FA976&gt; /usr/lib/system/libsystem_configuration.dylib
    0x7fffa9d89000 -     0x7fffa9d8cfff  libsystem_coreservices.dylib (41.4) &lt;7D26DE79-B424-3450-85E1-F7FAB32714AB&gt; /usr/lib/system/libsystem_coreservices.dylib
    0x7fffa9d8d000 -     0x7fffa9da5fff  libsystem_coretls.dylib (121.50.4) &lt;EC6FCF07-DCFB-3A03-9CC9-6DD3709974C6&gt; /usr/lib/system/libsystem_coretls.dylib
    0x7fffa9da6000 -     0x7fffa9dacfff  libsystem_dnssd.dylib (765.50.9) &lt;CC960215-0B1B-3822-A13A-3DDE96FA796F&gt; /usr/lib/system/libsystem_dnssd.dylib
    0x7fffa9dad000 -     0x7fffa9dd6ff7  libsystem_info.dylib (503.50.4) &lt;611DB84C-BF70-3F92-8702-B9F28A900920&gt; /usr/lib/system/libsystem_info.dylib
    0x7fffa9dd7000 -     0x7fffa9df9ff7  libsystem_kernel.dylib (3789.60.24) &lt;6E9E485F-91F6-36B7-A125-AE91DC978BCC&gt; /usr/lib/system/libsystem_kernel.dylib
    0x7fffa9dfa000 -     0x7fffa9e41fe7  libsystem_m.dylib (3121.6) &lt;86D499B5-BBDC-3D3B-8A4E-97AE8E6672A4&gt; /usr/lib/system/libsystem_m.dylib
    0x7fffa9e42000 -     0x7fffa9e60ff7  libsystem_malloc.dylib (116.50.8) &lt;A3D15F17-99A6-3367-8C7E-4280E8619C95&gt; /usr/lib/system/libsystem_malloc.dylib
    0x7fffa9e61000 -     0x7fffa9ebaffb  libsystem_network.dylib (856.60.1) &lt;369D0221-56CA-3C3E-9EDE-94B41CAE77B7&gt; /usr/lib/system/libsystem_network.dylib
    0x7fffa9ebb000 -     0x7fffa9ec4ff3  libsystem_networkextension.dylib (563.60.2) &lt;B021F2B3-8A75-3633-ABB0-FC012B8E9B0C&gt; /usr/lib/system/libsystem_networkextension.dylib
    0x7fffa9ec5000 -     0x7fffa9eceff3  libsystem_notify.dylib (165.20.1) &lt;B8160190-A069-3B3A-BDF6-2AA408221FAE&gt; /usr/lib/system/libsystem_notify.dylib
    0x7fffa9ecf000 -     0x7fffa9ed7fe7  libsystem_platform.dylib (126.50.8) &lt;897462FD-B318-321B-A554-E61982630F7E&gt; /usr/lib/system/libsystem_platform.dylib
    0x7fffa9ed8000 -     0x7fffa9ee2ff7  libsystem_pthread.dylib (218.60.3) &lt;B8FB5E20-3295-39E2-B5EB-B464D1D4B104&gt; /usr/lib/system/libsystem_pthread.dylib
    0x7fffa9ee3000 -     0x7fffa9ee6ff7  libsystem_sandbox.dylib (592.60.1) &lt;DC780631-BD23-36B1-9376-668619E18D25&gt; /usr/lib/system/libsystem_sandbox.dylib
    0x7fffa9ee7000 -     0x7fffa9ee8ff3  libsystem_secinit.dylib (24.50.4) &lt;F78B847B-3565-3E4B-98A6-F7AD40392E2D&gt; /usr/lib/system/libsystem_secinit.dylib
    0x7fffa9ee9000 -     0x7fffa9ef0ffb  libsystem_symptoms.dylib (532.50.47) &lt;3390E07C-C1CE-348F-ADBD-2C5440B45EAA&gt; /usr/lib/system/libsystem_symptoms.dylib
    0x7fffa9ef1000 -     0x7fffa9f04ff7  libsystem_trace.dylib (518.60.2) &lt;6B145B10-5874-3E89-90CD-D370DB475BA1&gt; /usr/lib/system/libsystem_trace.dylib
    0x7fffa9f05000 -     0x7fffa9f0affb  libunwind.dylib (35.3) &lt;3D50D8A8-C460-334D-A519-2DA841102C6B&gt; /usr/lib/system/libunwind.dylib
    0x7fffa9f0b000 -     0x7fffa9f34ff7  libxpc.dylib (972.60.2) &lt;1C9AF716-69DF-359F-85E9-7DFDE362F9A2&gt; /usr/lib/system/libxpc.dylib

External Modification Summary:
  Calls made by other processes targeting this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by this process:
    task_for_pid: 0
    thread_create: 0
    thread_set_state: 0
  Calls made by all processes on this machine:
    task_for_pid: 102599
    thread_create: 0
    thread_set_state: 0

VM Region Summary:
ReadOnly portion of Libraries: Total=390.1M resident=0K(0%) swapped_out_or_unallocated=390.1M(100%)
Writable regions: Total=381.1M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=381.1M(100%)
 
                                VIRTUAL   REGION 
REGION TYPE                        SIZE    COUNT (non-coalesced) 
===========                     =======  ======= 
Accelerate framework               512K        5 
Activity Tracing                   256K        2 
CG backing stores                 1892K        9 
CG image                           656K       16 
CoreAnimation                       48K        7 
CoreUI image data                  876K        9 
CoreUI image file                  192K        6 
Foundation                          24K        3 
IOKit                             19.2M       20 
Kernel Alloc Once                    8K        2 
MALLOC                            89.0M       42 
MALLOC guard page                   48K       10 
Mach message (reserved)              4K        2         reserved VM address space (unallocated)
Memory Tag 242                      12K        2 
Memory Tag 255                     1.0G      132 
STACK GUARD                       56.1M       38 
Stack                            227.8M       69 
VM_ALLOCATE                         80K       13 
__DATA                            34.4M      276 
__GLSLBUILTINS                    2588K        2 
__IMAGE                            528K        2 
__LINKEDIT                       122.6M       18 
__TEXT                           267.6M      272 
__UNICODE                          556K        2 
mapped file                      154.4M       46 
shared memory                     32.5M       37 
===========                     =======  ======= 
TOTAL                              2.0G     1016 
TOTAL, minus reserved VM space     2.0G     1016 

Model: MacBookPro13,2, BootROM MBP132.0226.B22, 2 processors, Intel Core i7, 3.3 GHz, 16 GB, SMC 2.37f20
Graphics: Intel Iris Graphics 550, Intel Iris Graphics 550, Built-In
Memory Module: BANK 0/DIMM0, 8 GB, LPDDR3, 2133 MHz, 0x802C, 0x4D5435324C31473332443450472D30393320
Memory Module: BANK 1/DIMM0, 8 GB, LPDDR3, 2133 MHz, 0x802C, 0x4D5435324C31473332443450472D30393320
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x157), Broadcom BCM43xx 1.0 (7.21.171.126.1a2)
Bluetooth: Version 5.0.4f18, 3 services, 27 devices, 1 incoming serial ports
Network Service: USB 10/100/1000 LAN, Ethernet, en8
USB Device: USB 3.0 Bus
USB Device: USB2.0 Hub
USB Device: G87
USB Device: USB2.0 Hub
USB Device: Generic Billboard Device
USB Device: iBridge
USB Device: USB3.0 Hub
USB Device: USB 10/100/1000 LAN
USB Device: USB3.0 Hub
Thunderbolt Bus: MacBook Pro, Apple Inc., 15.14
Thunderbolt Bus: MacBook Pro, Apple Inc., 15.14
</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28708</IssueID>
    <Title>version 1.13 and ohmyzsh integrated terminal flickering branches</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: Debian 8

Steps to Reproduce:

1. Use oh my zsh and integrated terminal
2. Notice how in your git repo you will see folderpath branch:branch (why showing branches 2times)
3. Notice how when you start typing in integrated terminal it will stop displaying branch 2 times but rather once

This removing and adding of branch name causes flickering since it happens on an time scale of &gt; 1s. 

Can't find any change description in https://code.visualstudio.com/updates/v1_13#_changed-setting-defaults that would cause this.
</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28703</IssueID>
    <Title>VSCode can't recognize folder when using OneDrive Files On-Demand </Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.16215
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.8.0|
|vscode-npm-script|eg2|0.2.0|
|vscode-great-icons|emmanuelbeziat|2.1.7|
|tortoise-svn|fantasytyx|0.1.1|
|beautify|HookyQR|1.1.1|
|csharp|ms-vscode|1.10.0|
|angular2-inline|natewallace|0.0.17|
|java|redhat|0.5.0|
|guides|spywhere|0.8.2|;


---

Steps to Reproduce:

1. Go to https://goo.gl/ZNMyti to install new version OneDrive to enable  OneDrive Files On-Demand .
2. Right-click the white or blue OneDrive cloud icon in the notification area, at the far right of the taskbar. 
(You might need to click the Show hidden icons arrow  next to the notification area to see the OneDrive icon. If the icon doesn't appear in the notification area, OneDrive might not be running. Click Start, type OneDrive in the search box, and then click OneDrive in the search results.)

3. Click the Settings gear.
4. On the Settings tab, select the Save space and download files as you use them box  .
5. After sync is complete. Open VSCode and click "Open Folder" button.
6. Chose folder in OneDrive and click open button.
7. VSCode will show up a message say can't find the path.</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28700</IssueID>
    <Title>GUI/Icons problem on MacOS</Title>
    <Description>Hi,

After last upgrade from time to time I have some icon problems (see screenshot attached).
Sometimes it's ok - sometimes problems exists.I need to start/close app many time to get proper icon look and there seems to be no pattern how many times I need to repeat open/close procedure.
- VSCode Version: 1.13.0 (1.13.0)
- OS Version: macOS Sierra 10.12.5 (16F73)

Steps to Reproduce:

1. Lauch Visual Studio 
![zrzut ekranu 2017-06-14 10 21 14](https://user-images.githubusercontent.com/681680/27122664-b3c23c78-50eb-11e7-8ce4-a9d767420b4a.png)

</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28697</IssueID>
    <Title>Allow making Help -&gt; About text copyable and display OS version in there</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: Microsoft Windows Home [Version 10.0.15063]

I suggest you make the info in the About modal copyable so it can be easily pasted into an issue and update the issue template to ask for this info copied verbatim instead of the list with VS Code version and OS version. Intending to replace both, the About modal should also contain OS version.

It can either be made a readonly text field, or better yet a Copy to Clipboard button could be added to save the user a mouse drag.</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28693</IssueID>
    <Title>Icons are fuzzy in the UI</Title>
    <Description>Since the update to 1.13 I am seeing fuzzy icons in the UI of VSCode. I am using the light theme. This is unrelated to the theme I select. Switching between light and dark themes doesn't fix the problem.

![schermafbeelding 2017-06-14 om 09 00 06](https://user-images.githubusercontent.com/1550763/27119478-51bb8198-50e0-11e7-87ae-749c602bc09f.png)


- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:34:53.678Z)
- OS Version: Darwin x64 16.6.0

Steps to Reproduce:

1. Open VS Code
2. Open a code file</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28689</IssueID>
    <Title>I want put the window of find reference result inset the sidebar, but now it's a float window. Float window is hard to watch in long time.</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|html-snippets|abusaidm|0.1.0|
|python|donjayamanne|0.6.5|
|vs-color-picker|lihui|0.6.0|
|bash-debug|rogalmic|0.0.7|
|code-settings-sync|Shan|2.8.1|
|vscode-multiclip|slevesque|0.1.2|
|JavaScriptSnippets|xabikos|1.4.0|
|ReactSnippets|xabikos|1.3.0|
|Material-theme|zhuangtongfa|2.8.6|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28673</IssueID>
    <Title>Two empty lines appear above document after clicking search result</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: macOS Sierra 10.12.6 Open Beta

Steps to Reproduce:
1. Search for anything under the tab on the sidebar
2. Click a result and scroll up to the top

Result:
![image](https://user-images.githubusercontent.com/16949253/27109854-ff6061b8-506a-11e7-8608-6e6f643da3af.png)</Description>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28660</IssueID>
    <Title>[powershell] Color scheme doesn't update after warning resolution.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10 Enterprise: 10.0.15063 Build 15063

Steps to Reproduce:

1. PS Script Analyzer warning is flagged
2. Click the light bulb and use the auto-resolution
3. (in this example) "where" is changed to "Where-Object" but "Object" is not updated to have the function color scheme.

Screenshots below: 

![1 syntaxwarning](https://user-images.githubusercontent.com/23180454/27103295-041ed550-503d-11e7-9cf4-8e3a551e2f39.PNG)
![2 resolvewarningmessage](https://user-images.githubusercontent.com/23180454/27103300-0835fa1a-503d-11e7-92d8-f58822803de2.PNG)
![3 bugincolorscheme](https://user-images.githubusercontent.com/23180454/27103301-0b19cdce-503d-11e7-9ce4-64e7ee6bf0a0.PNG)



</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28656</IssueID>
    <Title>ZSH Terminal Bug in VS Code</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:34:53.678Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|2.0.9|
|vscode-wakatime|WakaTime|1.1.10|
|vscode-theme-onedark|akamud|2.0.2|
|vscode-eslint|dbaeumer|1.2.11|
|sass-lint|glen-84|0.0.4|
|name-that-color|guillaumedoutriaux|0.1.2|
|mssql|ms-mssql|1.0.0|
|debugger-for-chrome|msjsdiag|3.1.3|
|color-highlight|naumovs|2.2.0|
|vscode-todo-highlight|wayou|0.5.5|;


---

Steps to Reproduce:

1. Open the terminal in VS Code

### Screenshot
This is what I see when opening up the terminal. It is showing the directory twice. This happened after the update today and it worked fine before. Please let me know if you require more information.
![screen shot 2017-06-13 at 4 37 36 pm](https://user-images.githubusercontent.com/3606121/27101123-d1e198d8-5056-11e7-88e0-629db50f1127.png)
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28652</IssueID>
    <Title>[Req] Export the Extensions list and status, even import</Title>
    <Description>It seems the list and status of extensions cannot be export at this time, which is not conducive to backup, sync manualy or share to others.</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>16/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28649</IssueID>
    <Title>Add DocumentSymbolProvider support for indicating imports</Title>
    <Description>Currently imported classes, types, constants and so on look like regular variables. It would be useful to either have a separate `SymbolKind` to indicate imports or a separate boolean flag (so a thing can be a function and be imported at the same time).</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28642</IssueID>
    <Title>Terminal autocompletion prints twice when using emojis in $PS1</Title>
    <Description>Autocompletion prints folder or file name twice when using emojis in $PS1. At the beginning of the line and where it is supposed to (the end).
Same settings works fine on macOS terminal app.

- VSCode Version: 1.13.0
- OS Version: macOS 10.12.5

Steps to Reproduce:

1. add one emoji to your PS1 variable.
This is my .bash_profile settings:
export PS1="😡 [\W]$ "

2. 
(from home folder) cd Desk and then press tab for autocomplete (Desktop) 
OR 
(from home folder) cd Desktop and then press the "/" separator.

Home folder and Desktop are only two example folders.

&lt;img width="390" alt="screen shot 2017-06-13 at 12 51 37" src="https://user-images.githubusercontent.com/24573949/27094709-086fbaec-5039-11e7-8dc1-3e63351850e8.png"&gt;
&lt;img width="398" alt="screen shot 2017-06-13 at 12 51 48" src="https://user-images.githubusercontent.com/24573949/27094730-15eed5fe-5039-11e7-98c6-cc1dc0c3d84f.png"&gt;



</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28641</IssueID>
    <Title>[BUG] Enviroment icon render</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:34:53.678Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|crane|HvyIndustries|0.3.6|
|Angular-BeastCode|Mikael|4.2.11|
|material-icon-theme|PKief|2.0.9|
|php-autocomplete|bschulte|0.4.2|
|gitignore|codezombiech|0.5.0|
|vscode-html-css|ecmel|0.1.6|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.3.0|
|php-pack|felixfbecker|1.0.1|
|code-runner|formulahendry|0.6.19|
|phpcs|ikappas|0.7.0|
|ng-bootstrap-snippets|ktriek|0.2.5|
|vs-color-picker|lihui|0.6.0|
|php-docblocker|neilbrayfield|1.2.0|
|laravel5-snippets|onecentlin|1.3.4|
|laravel-artisan|ryannaddy|0.0.7|
|autoimport|steoates|1.2.2|
|bootstrap4-vscode|thekalinga|2.3.3|
|gitflow|vector-of-bool|1.1.0|
|Material-theme|zhuangtongfa|2.8.6|;


---

After last update I have problem with rendering icons like below:

![zrzut ekranu 2017-06-13 o 19 04 57](https://user-images.githubusercontent.com/5173367/27094778-85dafcf8-506b-11e7-9b48-34583d7dac15.png)
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28640</IssueID>
    <Title>Cannot open folder in a OneDrive for Business path</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 10 16215.1000

Steps to Reproduce:

1. Open VS Code and choose Open Folder
2. Select a path that is hosted in a One Drive for Business account
3. Click open folder

Expect:
Folder to open

Actual:
VS Code reports "The path '[One Drive for Business Path]' does not seem to exist anymore on disk."
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28638</IssueID>
    <Title>Integrated terminal redraws $PS1 repeatedly while typing</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: macOS 10.12.5, Ubuntu 14.04.5 LTS

Other env config:
- Shell: zsh
- Shell manager: oh-my-zsh + powerlevel9k

Steps to Reproduce:

1. I have left and right side zsh utilities in place
2. An extra path is added after the $PS1 when not typing
2.a this is a copy of the displayed path
2.b only the last two dir paths are displayed, these are duplicated in the shell when not typing

example of desired:
```console
.../parent-dir/current-dir &gt;
```

example after upgrade to 1.13 (shell operates correctly pre 1.13 and system terminals):
```console
.../parent-dir/current-dir/parent-dir/current-dir &gt;
```

3. start typing and the $PS1 reverts to normal (only while typing characters)
3.a this causes a flipflop between `.../parent-dir/current-dir` and `.../parent-dir/current-dir/parent-dir/current-dir` while typing.

I haven't tracked down yet where the conflict is coming from, i.e. is it zsh, oh-my-zsh, or powerlevel9k. Something did change after the 1.13 release, as there were no issues before with the same configuration.
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28613</IssueID>
    <Title>Tasks: Issue with Windows env variables</Title>
    <Description>- VSCode Version: 1.13
- OS Version: Win10

We are using a tasks.json ("version": "0.1.0") and after the update it looks like the Windows environment variable expansion (e.g. "${env.TMP}") does not work anymore.
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28611</IssueID>
    <Title>when terminal address have Chinese， will be repeated</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.13.0
- OS Version:win10

Steps to Reproduce:

1.
![4](https://user-images.githubusercontent.com/9149999/27077311-366a5b40-5062-11e7-8839-6de72837afa0.png)


2.
![5](https://user-images.githubusercontent.com/9149999/27077358-6125169a-5062-11e7-94c1-6494e3f36e44.png)

</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28608</IssueID>
    <Title>Blurry icons when opening from terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: Mac OS Sierra 10.12.5

Steps to Reproduce:

1.  type `code .`
2. VS code opens with blurry icons, but when I open it by clicking on the VS Code icon in the Dock, it is all good. 

I disabled all my extensions to test.
&lt;img width="51" alt="capture d ecran 2017-06-13 a 11 52 31" src="https://user-images.githubusercontent.com/371278/27076929-d8aa6398-502e-11e7-819b-ce942a643b2a.png"&gt;
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28601</IssueID>
    <Title>Feature Request: Is there any way gives me about binary file info instead of “The file will not display in the editor......” ?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: ubuntu 16.10

Is there any way gives me about binary file info instead of “The file will not be displayed in the editor because it is either binary, very large or uses an unsupported test encoding.” ?

Just gives me something about the file stat infomation and so on. I think it is very nice.

Hope to see it on v1.14.</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28594</IssueID>
    <Title>an option to display search results in output window</Title>
    <Description>consider adding an option for displaying the search results in the output window (like Visual Studio does)</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28591</IssueID>
    <Title>Editor display bugged when search bar is opened.</Title>
    <Description>Opening the search or replace bar allows so scroll beyond the editor top bounds.

- VSCode Version: 1.13.0
- OS Version: Ubuntu 16.04 x64

Steps to Reproduce:

1. Open search or replace
2. Scroll beyond editor top

![selection_097](https://user-images.githubusercontent.com/16593597/27070789-b330ac58-501a-11e7-830d-d9b4ee7238c2.png)
![selection_098](https://user-images.githubusercontent.com/16593597/27070795-b721ecf0-501a-11e7-817b-01ba98191bcc.png)

</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28590</IssueID>
    <Title>Fat icons on macOS Sierra 10.12.5 after installing VSCode 1.13.0</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:34:53.678Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.8.0|
|EditorConfig|EditorConfig|0.9.3|
|vscode-docker|PeterJausovec|0.0.16|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-yaml-validation|djabraham|0.0.1|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|tslint|eg2|0.15.0|
|ansible|haaaad|0.2.5|
|Angular2|johnpapa|2.3.2|
|java|redhat|0.5.0|
|vscode-icons|robertohuertasm|7.9.0|
|vscode-nginx|shanoor|0.3.1|;


---

Steps to Reproduce:

1. Install VSCode 1.13.0 for Mac
2. All icons appears bold and "fat"

Clicking around the UI sometimes the icons revert to normal, and then go back to "fat"

&lt;img width="391" alt="schermata 2017-06-13 alle 09 13 28" src="https://user-images.githubusercontent.com/365382/27070525-abd31faa-5019-11e7-8155-4d398d1fc884.png"&gt;
</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28588</IssueID>
    <Title>Fat icons on Mac with Insiders</Title>
    <Description>![image](https://user-images.githubusercontent.com/1152805/27070164-1104540e-5018-11e7-8747-e9e34e4b55da.png)

![image](https://user-images.githubusercontent.com/1152805/27070181-27669644-5018-11e7-842f-1639b1868c4c.png)

- VSCode Version: 1.14.0.-insider
- OS Version: Mac OS X 10.12.4

Steps to Reproduce:

1. Start VS Code (Insiders)

I think I have this problem for about a month in 95% of all cases when I start VS Code Insiders (updated regularly).

</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28573</IssueID>
    <Title>Strange rendering issue with icons</Title>
    <Description>- VSCode Version: 1.13.0 (1.13.0)
- OS Version: macOS 10.12.5 (fresh install some days ago)

Steps to Reproduce: I have no idea. Sorry. I think you can guess it🥇

After i installed it the icons look okay but after some restarts they look like in the following screens.
Cant fix it with restarts. I have no graphic issues with any other app. Any idea what could be related to this?

`code --force-gpu-rasterization` did not help!

&lt;img width="58" alt="bildschirmfoto 2017-06-13 um 04 08 24" src="https://user-images.githubusercontent.com/3820220/27062853-5c997f0e-4fee-11e7-9da0-ea7bd48bde84.png"&gt;
&lt;img width="343" alt="bildschirmfoto 2017-06-13 um 04 08 36" src="https://user-images.githubusercontent.com/3820220/27062855-5e62892a-4fee-11e7-8ee0-ddf3a202677e.png"&gt;

</Description>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28564</IssueID>
    <Title>tmux pane_current_path is duplicated</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0 (1.13.0)
- OS Version: MacOS 10.12.5
- extensions: occurs even when I run code with `--disable-extensions`

Steps to Reproduce:

1. put this in `.tmux.conf`:
```
set -g pane-border-format "#{pane_index} #{pane_current_path} "
setw -g pane-border-status bottom

```
2. start a terminal in VSCode
3. in the terminal start tmux
```
tmux new-session -s test
```

Now, in the pane status line I expect to see the current path, e.g. `-0 /Users/klas.mellbourn ---`. 

Instead it looks like this `-/Users/klas.mellburn-0 /User/klas.mellbourn ---`. 
It seems that the current path and a dash is prepended to the expected pane title.

This occurs for both `bash` and `zsh`.

This occurs _only_ for the first pane. If I split the tmux session into to panes beside each other, the second pane gets the expected title `-1 /User/klas.mellbourn --`. However, the title for the second pane is positioned incorrectly horizontally. It is offset to the right by the size of the string `/Users/klas.mellbourn` as if tmux did not expect it to be shown.

This occurs _only_ within Visual Studio code. The pane title behaves just as expected in terminals (such as `iTerm` or the built in `terminal`) outside Visual Studio Code.</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28563</IssueID>
    <Title>I could not find command 'Print'. Does it exist at all?</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.8.0|
|csharp|ms-vscode|1.10.0|
|mono-debug|ms-vscode|0.15.5|
|PowerShell|ms-vscode|1.3.1|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28558</IssueID>
    <Title>Terminal erratic behavior + duplicate path after updating VSCode</Title>
    <Description>- VSCode Version: 1.13.0 (1.13.0)
- OS Version: macOS Sierra - 10.12.5
- **using ZSH**

Steps to Reproduce:

1. updated to latest VSCode version
2. open terminal instance
3. look at path (see image)
![vscode-path](https://user-images.githubusercontent.com/1163408/27049687-47535b50-4f6d-11e7-8bfb-a631f64e02d2.jpg)
4. when interacting with terminal (typing/clicking) there is a flicker and text flashes while the path looks to correct itself... but always returns to its duplicated state.
</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28546</IssueID>
    <Title>Terminal autocomplete problem</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:41:25.571Z)
- OS Version: Linux x64 4.4.0-79-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.1.1|
|python|donjayamanne|0.6.4|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|RustyCode|saviorisdead|0.19.1|
|cmake|twxs|0.0.17|
|vscode-lldb|vadimcn|0.5.0|
|cmake-tools|vector-of-bool|0.9.7|;


---

![out](https://user-images.githubusercontent.com/26430678/27045612-197688aa-4faa-11e7-9ace-c56ad2719c29.gif)


Steps to Reproduce:

1. Open internal terminal
2. Start to write git push command
3. After "git push origin f" press TAB for autocomplete
4. Completed string replace part of the first string in terminal</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28533</IssueID>
    <Title>Under tasks/command the env.EnvironmentVariableName (eg. env.graphviz) does no expand.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Win 7 Pro 64 Bit

Calling a task with "command": "${env.graphviz}/dot.exe" does not expand any more with vscode 1.13.0.
But calling with "command": "%graphviz%/dot.exe" does

Steps to Reproduce:

1. create an env "graphviz" like "c:\tools\graphviz\bin" under windows env dialog
2. create a task.json file with 
"version": "0.1.0",
"tasks": [
{
"isShellCommand": true,
"showOutput": "always",
"echoCommand": true,
"suppressTaskName": true,
"command": "${env.graphviz}/dot.exe",
"taskname": "graphviz svg",
"args": ["-Tsvg", "${file}", "-o", "${fileDirname}/${fileBaseNameNoExtension}.svg"]
}
...
]

I get the output:
 '${env.graphviz}' is not recognized as an internal or external command,...

</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28532</IssueID>
    <Title>bug?</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.

![ek6xjbjk 6i_0 du m _l4](https://user-images.githubusercontent.com/24860389/27038346-42ab1822-4fbd-11e7-9f82-2fed476ccab7.png)

2.</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28519</IssueID>
    <Title>Where could I find default icon path in visual studio?</Title>
    <Description>I am writing extension for view explorer. And some of item in my tree is JS string text. So I want to use the same JS icon vscode using

Where could I find all available iconPath in vs? Is there any short name or relative url?</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28518</IssueID>
    <Title>[php] Bad syntax highlight with php inside html &lt;style&gt; tag</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 7

Steps to Reproduce:

1. In a PHP file, with html in it, add a &lt;style&gt; tag
2. Add &lt;?php echo $anything; ?&gt; inside it
</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28512</IssueID>
    <Title>Integrated Terminal limited to 80 characters upon first start and first instance</Title>
    <Description>**Basic info:**
- VSCode Version: **1.13.0**
- OS Version: **Windows 10 x64 1703 15063.332**
- Monitor resolution: **2560x1440**, VSCode **maximized**

**profile.ps1:**
```
$env:LC_ALL='C.UTF-8'
Import-Module posh-git
```

**Steps to Reproduce:**

1. Open **VSCode** (**PowerShell** is configured as internal terminal)
2. ``Ctrl + ` `` to open the terminal
3. Observe that the terminal is wrapped after **80 characters**

**Additional notes:**

If the first instance of the terminal is closed and then another opened, the problem is gone. This happens only for the **first** instance after starting VSCode.

**Screenshot:**
![vscode_internal_terminal_issue](https://user-images.githubusercontent.com/16443718/27031851-3fe6f516-4f72-11e7-956f-d486a6a1251a.png)
</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28510</IssueID>
    <Title>Add Project Manager extension to VS Code</Title>
    <Description>I think that Projects ideology should be in a heart of the VS Code. The main reason for it it that we can have a dedicated folder for each project where we can save project settings (including workspace settings), cache files (for example for file tree to make Go To File super fast and save cache between VS Code reloads), to save cache of external plugins (like such as Python, that saves and uses cache for Go To Symbol In workspace).

Please discuss this decision again in your core team. Because I see that it should be implemented, and all what you need is to take the already existing extension and inject it into the native VS Code build.

Thank you for improvements.
Anton</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28503</IssueID>
    <Title> "emmet.syntaxProfiles" not working with "emmet.useNewEmmet" (emmet 2.0)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Windows 7 x64

Steps to Reproduce:

1.  Configs
```js
"emmet.useNewEmmet": true,
"emmet.syntaxProfiles": {
    "vue-html": "html",
    "vue": "html"
}
```
2. `ul&gt;li*5` + `Tab` = append 2 spaces  XD</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28499</IssueID>
    <Title>Add "always_show_minimap_viewport" option to always highlight visible area</Title>
    <Description>Sublime Text knows the `always_show_minimap_viewport` setting for the minimap:

*If `true`, shows a rectangle on the minimap highlighting the file’s visible area. If `false`, only shows the rectangle when you hover the cursor over the minimap.* 
(Source: [http://docs.sublimetext.info/en/latest/reference/settings.html](http://docs.sublimetext.info/en/latest/reference/settings.html))

![screen_shot_2017-06-12_at_10_58_29](https://user-images.githubusercontent.com/2169489/27026947-dca0eb4a-4f5f-11e7-86ea-6a457514e433.png)

I did not find an option enable this behavior in Code, I assume it is not there. I suggest implementing this. It helps a lot when navigating the file. Personally I see no benefit in the default behavior of only showing it on mouse-over since this actively reduces the usefulness of the minimap.</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28484</IssueID>
    <Title>Intent Guide</Title>
    <Description>1/ Intent guides not highlight when I focus in selection scope.
=&gt; Please change color of intent guide when focus some where.
Ex: Change color instant of "IF statement" when I focus beside of IF.
2/ When I open big html file, when I try to collapse or uncollapse each tag element, VS Code will be "lag", crashed or Not response I can't do anything next :(</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28483</IssueID>
    <Title>The theme for markdown</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:41:25.571Z)
- OS Version: Linux x64 4.4.0-78-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|cpptools|ms-vscode|0.11.4|
|Theme-MarkdownKit|ms-vscode|0.1.4|;


---

I want to set a theme for markdown and other file use another theme, this is my settings in settings.json, but do not work

```
  "[markdown]": {
    "editor.formatOnSave": true,
    "editor.wordWrap": "on",
    "editor.renderWhitespace": "all",
    "editor.acceptSuggestionOnEnter": "on",
    "workbench.colorTheme": "Markdown Editor Yellow"
  },
  "workbench.colorTheme": "Markdown Editor Dark"
```</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28482</IssueID>
    <Title>markdown.preview.scrollPreviewWithEditorSelection is invalid</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:41:25.571Z)
- OS Version: Linux x64 4.4.0-78-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|cpptools|ms-vscode|0.11.4|;


---

Steps to Reproduce:

1. File &gt; Preferences &gt; Settings (Code &gt; Preferences &gt; Settings
2. "markdown.preview.scrollPreviewWithEditorSelection": true,
3. Did not achieve the desired effect</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28479</IssueID>
    <Title>updated to 1.13.0，embedded cmd work wrong</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Win 10 Education

Steps to Reproduce:

1.
![tim 20170612095544](https://user-images.githubusercontent.com/10609199/27016835-1dd31a3e-4f56-11e7-84e3-855fc4d5ef22.png)


2. Chinese word is duplicate in embedded cmd.
3.And flash between normal and duplicate during typing letters into embedded  cmd.
</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28478</IssueID>
    <Title>minimap disappear when peek definition</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|base16-themes|AndrsDC|1.3.0|
|vs-code-css-comments|ashhitch|1.0.3|
|arm|dan-c-underwood|0.1.2|
|EditorConfig|EditorConfig|0.9.3|
|csharpextensions|jchannon|1.3.0|
|MagicPython|magicstack|1.0.10|
|cpp-symbols|mirkoh|0.0.1|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.3.1|
|vscode-icons|robertohuertasm|7.9.0|
|cmake|twxs|0.0.17|
|cmake-tools|vector-of-bool|0.9.7|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28472</IssueID>
    <Title>Minimap disappears when Ctrl+Click is triggered on a SCSS variable</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Ubuntu 16.04 Xenial Xerus
- Commit hash: 376c52b955428d205459bea6619fc161fc8faacf

Steps to Reproduce:

1. Create a two `.scss` files (eg. `main.scss` and `_part.scss`)
2. In `_part.scss` make a new variable (eg: `$color`: "blue");
3. In `main.scss` make a call to the variable, like `.color { background: $color; }`
4. Click on `$color` while holding down `ctrl` in `main.scss`. This opens the definition box for `$color`. But when it is closed (or clicking anywhere), the minimap on the right disappears

To show the minimap again, restart VS Code
</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28460</IssueID>
    <Title>Can't reload the open files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
I think this problem is a little hard to describe, and I have tried to search about this but not solve it. In this tens of thousands of issues may have been a solution for my problem, but I did not find it.

- VSCode Version: 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Microsoft Windows NT 10.0.15063.0
- I have disabled all extensions

Steps to Reproduce:

1. open some single files(don't open any folder)
![open files](http://ore0du93c.bkt.clouddn.com/open.PNG)
2. close vscode
3. reopen vscode
![reload files](http://ore0du93c.bkt.clouddn.com/reload.PNG)

There is no file open.
I want to reload the open files.
Sorry for my poor English. 😅
</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28453</IssueID>
    <Title>Integrated terminal prompt disappear when pressing tab for suggestion </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.13.0
- OS Version: Ubuntu 16.04
![screenshot from 2017-06-11 19-19-02](https://user-images.githubusercontent.com/8751130/27010652-cf0bc204-4edb-11e7-8967-460195966097.png)
![screenshot from 2017-06-11 19-19-18](https://user-images.githubusercontent.com/8751130/27010654-cf0ca318-4edb-11e7-9cee-c2abc2685a9b.png)
![screenshot from 2017-06-11 19-19-33](https://user-images.githubusercontent.com/8751130/27010653-cf0c0a3e-4edb-11e7-869b-99ad9fed969a.png)



Steps to Reproduce:

1. 
2.
</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28451</IssueID>
    <Title>Terminal/Console Broken for ZSH</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: Ubuntu 16.04
Steps to Reproduce:

1. Open VSCode
2. Open Terminal using "ctrl + ~" or preferable shortcut or just open from `view -&gt; Integrated Terminal`
Now it looks like: 
![screenshot from 2017-06-11 15-36-47](https://user-images.githubusercontent.com/3099861/27009954-0a2c4770-4ebc-11e7-9492-750ca9cd8d95.png)
![screenshot from 2017-06-11 15-36-40](https://user-images.githubusercontent.com/3099861/27009955-0b9dbed6-4ebc-11e7-9b33-be8cbeabfccc.png)

Check the last line the terminal. 

</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28449</IssueID>
    <Title>Minimap disappears when closing Peek Definition window</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Win 10 Pro

Steps to Reproduce:

1. Open "Peek Definition";
2. Close the window by clicking a cross on the upper-right corner;
3. Minimap disappears.

Minimap reappears only after reloading the project. Closing the peek-window by pressing Esc does not close the minimap at first, it remains visible. But as you right-click on something the minimap disappears.
</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28437</IssueID>
    <Title>Integrated terminal ZSH prompt doubles and flashes as I type</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:  1.13.0
- OS Version:  macOS Sierra 10.12.4

Steps to Reproduce:

1.  Install iTerm and ZSH as  explained in lessons 3 and 4 of Wes Bos' [Command Line Power User Course](https://commandlinepoweruser.com/)

2. Edit the file ~/.zshrc to customize the theme and prompt as explained in lesson  7 of Wes Bos' [Command Line Power User Course](https://commandlinepoweruser.com/). 

3. In the VSCode User settings add the following key-value setting to set ZSH as the default integrated terminal:

`"terminal.integrated.shell.osx": "zsh"`

3. In VSCode open Integrated Terminal.  The customized prompt shows up, but the prompt text appears duplicated.  Also as I type, the prompt flashes between simple (username/path as configured), and the duplicated (username/path username/path):

![screen recording 2017-06-10 at 04 54 pm](https://user-images.githubusercontent.com/2665104/27007165-b105640c-4e06-11e7-8fa5-277ade63b870.gif)


I've updated my VSCode version today and since then the described problem started.  In previous versions of VSCode there wasn't this behaviour.

Thank you.</Description>
    <CreatedDate>11/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28422</IssueID>
    <Title>Feature request: vscode.CompletionItem::documentation should support markdown</Title>
    <Description>This has bugged me since a while, and I just saw the new [Suggestion list and documentation side by side](https://code.visualstudio.com/updates/v1_13#_suggestion-list-and-documentation-side-by-side) feature in the 1.13.0 release notes and was hoping this would also finally enable markdown, but unfortunately that's not the case. It's even visible in the demo gif in the release notes where links are not formatted.

I'm [writing an autocomplete extension](https://github.com/simonvizzini/vscode-factorio-lua-api-autocomplete) and have this problem:

This looks nice and is helpful ``vscode.Hover``:

![nice-tooltip](https://user-images.githubusercontent.com/10862380/27003351-1b2e0904-4df5-11e7-9a96-6578ca24e5a0.png)

But this not so much ``vscode.CompletionItem``:

![ugly-tooltip](https://user-images.githubusercontent.com/10862380/27003353-2bcd5576-4df5-11e7-931b-08df12e0dd88.png)

Prior to 1.13.0 there was also no horizontal scrollbar and the lack of space doesn't make it easy to read.

Please consider also enabling markdown for CompletionItems. That would be really helpful. Thanks!</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28420</IssueID>
    <Title>tab as enter when working with emmet in visual studio cod</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-javascript-snippet-pack|akamud|0.1.5|
|theme-onedark|azemoh|0.4.3|
|htmltagwrap|bradgashler|0.0.3|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.11|
|file-icons|file-icons|1.0.3|
|autofilename|JerryHong|0.1.3|
|HTMLHint|mkaufman|0.3.3|
|sublime-keybindings|ms-vscode|2.0.1|
|stylelint|shinnn|0.24.8|
|guides|spywhere|0.7.1|
|open-in-browser|techer|1.0.0|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28416</IssueID>
    <Title>Display language changed to en after update to 1.13</Title>
    <Description>I know I can set locale manually. But I just don't think it's normal behavior to change locale after an update. 
Could it be a potential bug which caused VS Code change locale to default en after an update?

PS:
My system default language is zh-CN. No changes made to system locale settings before update 1.13.</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>14/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28408</IssueID>
    <Title>Ctrl-C doesn't kill process in command prompt when using "open new command prompt" command?</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|jshint|dbaeumer|0.10.15|
|vscode-todo-parser|minhthai|1.8.10|
|debugger-for-chrome|msjsdiag|3.1.2|
|language-liquid|neilding|0.0.2|
|vscode-jest|Orta|2.2.0|;


---

Steps to Reproduce:

1. From Windows, use Ctrl-Shift-C to trigger "Open New Command Prompt" which should launch a cmd.exe window.
2. Run a command and try to kill it with Ctrl-C

Specifically, I'm doing `gulp-watch` which runs a browsersync server. When I open cmd normally and navigate to the same folder, I can run `gulp-watch` and quickly kill it with `Ctrl-C` like I always have. Using "Open New Command Prompt" makes is so the `Ctrl-C` shortcut just copies the selected text (even if there is no selection). I tried this out by making sure I had text in my clipboard and then went back to the window and did a `Ctrl-C` -- when I pasted there was nothing in the clipboard.

Any thoughts?

Thanks!</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>20/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28402</IssueID>
    <Title>The localization no longer has any effect.</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-icons|robertohuertasm|7.9.0|;


---

Steps to Reproduce:
1. The localization no longer has any effect.
2. I'm Chinese user.
![snipaste20170610_093253](https://user-images.githubusercontent.com/17810492/26998938-ee9f0be8-4dbf-11e7-9790-a41f8672abc1.jpg)


</Description>
    <CreatedDate>10/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28395</IssueID>
    <Title>Add an API for showing Wizards and Dialog Boxes</Title>
    <Description>Currently, in order to get any information from the user, an extension has the following options:
* `showInputBox()`
* `showQuickPick()`

Both of those methods allow getting a single piece of information. (as opposed to a form containing multiple fields for the user to fill in)

While this is particularly efficient for getting simple data. (e.g. a "Rename" command might use `showInputBox()` to get the new name of a variable) it is (IMHO) rather inconvenient for getting more complex information.

For instance, if an extension wants to show a "wizard" that creates a new project in the currently open directory, an intuitive way would be to show a "window" that allows the user to fill in such parameters as:
1. Project name
1. The version of the language/standard to use
1. Project template
1. etc.

Since, VSCode doesn't provide an API for showing custom windows, the only way for getting these information would be to show consecutive input boxes. (using `showInputBox()`)
This means:
1. The user has to remember what they have entered
1. If the user remembers making a mistake in a previously validated input box, they have to cancel and start over

A concrete example of such behavior can be seen in the [yo](https://marketplace.visualstudio.com/items?itemName=samverschueren.yo) extension.

Having all the fields displayed simultaneously would allow the user to:
1. Write AND correct themselves without having to start all over each time they make a mistake
1. Have a recap of all the information that has been entered and make changes if needed

Some extensions (e.g. [CMake Tools](https://marketplace.visualstudio.com/items?itemName=vector-of-bool.cmake-tools)) are working around this limitation by:
1. Showing an HTML page that contains input fields, buttons, etc. (implementing `TextDocumentContentProvider`)
1. Getting the information back using an HTTP server and WebSockets
1. (Perhaps, I haven't checked, but seems doable) Updating the content of the HTML page if needed

Clever!
I think, however, that it would be better if VSCode provided some API for showing simple, custom windows that would (at least) allow getting multiple data at once.

Some ideas:
* `showForm([{fieldName: "name", fieldType: "type"}...], okCallback, cancelCallback)`
* `showDialog(message, okCallback)`
* `showFancyWindow(be, creative)`</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28378</IssueID>
    <Title>100% cpu load on single CPU system</Title>
    <Description>vs code consume 100% on a single CPU system. Real hardware may not have single CPU but single CPU vms are common (its hyper v default for example). It consumes 100% when first opened after install, I didnt even get a chance to do anything</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28363</IssueID>
    <Title>Autocomplete expressions (AKA Intellisense) in the watch section of Debug </Title>
    <Description>#### System Info:
- VSCode Version: 1.13.0
- OS Version: Ubuntu 14.04

#### Steps to Reproduce:

1. Setup a debug environment
2. Pause the execution of the program
3. Add an expression in the `watch` section of Debug

#### Expects:
- It would be great if a user could have Intellisense powered expression writing.
- I would not expect `tab` to be treated like and input enter.

#### Actual:
- The `variables` section shows all the current variables grouped by scope.
- There is not Intellisense powering the expressions in `watch`section</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28362</IssueID>
    <Title>Incorrect visualisation russian output in integrated terminal</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|xml|DotJoshJohnson|1.8.0|
|LogFileHighlighter|emilast|1.1.1|
|code-runner|formulahendry|0.6.18|
|gc-excelviewer|GrapeCity|1.1.15|
|rest-client|humao|0.14.4|
|output-colorizer|IBM|0.1.1|
|Ionide-fsharp|Ionide|2.26.1|
|Ionide-Paket|Ionide|1.6.3|
|Angular2|johnpapa|2.3.2|
|intellij-idea-keybindings|k--kato|0.2.11|
|vscode-github|KnisterPeter|0.16.1|
|Go|lukehoban|0.6.61|
|Kotlin|mathiasfrohlich|1.2.0|
|vscode-todo-parser|minhthai|1.8.10|
|mssql|ms-mssql|1.0.0|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.2.1|
|sublime-keybindings|ms-vscode|2.0.1|
|vscode-docker|PeterJausovec|0.0.15|
|erlang|pgourlain|0.1.0|
|java|redhat|0.5.0|
|todotasks|sandy081|0.5.0|
|vscode-hexdump|slevesque|1.3.0|;


---

Steps to Reproduce:

1. Open Integration Terminal.
2. Input "dir" command.
Result showed on screenshot
![default](https://user-images.githubusercontent.com/10290098/26983881-ec407870-4d45-11e7-8868-f0665d071d6b.png)

Another one example:
![default](https://user-images.githubusercontent.com/10290098/26984080-944ea1ea-4d46-11e7-83d3-88991a3bc8fa.png)
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28359</IssueID>
    <Title>Directory name shows up twice in shell status line</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.13.0 (1.13.0)
- OS Version:
- Prezto Theme: zstyle ':prezto:module:prompt' theme 'agnoster'

Steps to Reproduce:

1. Open integrated terminal
2. Navigate to any directory

Integrated terminal:
![screen shot 2017-06-09 at 8 32 56 am](https://user-images.githubusercontent.com/4955443/26982853-9e3acc2c-4cee-11e7-847d-389418abcc07.png)

iTerm2:
![screen shot 2017-06-09 at 8 34 41 am](https://user-images.githubusercontent.com/4955443/26982857-a0c7ddd6-4cee-11e7-8aca-78bc66428b9b.png)

</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28357</IssueID>
    <Title>Project Centennial version of VSC</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: Windows 10 1067 15063.332


Hi! I can know if a version of VSC (With Desktop Bridge, Project Centennial)for Windows Store ever comes?

Thanks.
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28356</IssueID>
    <Title>Menu bar colouring?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0
- OS Version: Win 10 x64

![image](https://user-images.githubusercontent.com/11233299/26981106-6c189d82-4d34-11e7-8b43-2b7005a1fd71.png)

The light menu bar clashes with dark themes, even with the default dark theme.
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28355</IssueID>
    <Title>PHP Strings on New Lines After Quotes are Broken</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: macOS Sierra 10.12.4

Since updating to VSCode 1.13.0, when writing PHP, strings that are opened on one line, then continued on another line, are no longer read as a single string, but rather for some reason it seems to think the new line has terminated the string.

![screen shot 2017-06-09 at 10 51 10 am](https://user-images.githubusercontent.com/23169829/26980991-c3bc352c-4d01-11e7-8db8-4ed72f6b6ddc.png)

</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28349</IssueID>
    <Title>Open same folder in two different Visual Studio Sessions</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|debugger-for-chrome|msjsdiag|3.1.2|
|cordova-tools|vsmobile|1.2.7|;

Before the last update I used to be able to open two sessions of Visual Studio and point them at the same folder.  Now a "feature" has been added to just switch to the existing Visual Studio.  I understand that there are split windows that I can use but this is not nearly as efficient for me as the two open studio sessions to the same folder.  My work around is to open the root folder in one session and the source folder in the second.  I would suggest that the check for an existing Visual Studio session needs to be removed as this is reducing the functionality.
---

Steps to Reproduce:

1.  Open a folder with Visual Studio
2.  press cntl-shft-n for a new window.
3.  Open the same folder as the existing Visual Studio session.
4.  The result is that the first Visual Studio Session is brought into focus and the new session is still blank.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28341</IssueID>
    <Title>Toggle Minimap to View menu</Title>
    <Description>Hi! Do you have plans on adding `Toggle Minimap` on View menu and Command Palette? Or am I missing something? I can't find any way to take the minimap next to scrollbar off, or any way to resize it. That would be great when having limited desktop space on laptops for example.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28339</IssueID>
    <Title>Debug console can be improved？</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.
The debug console using inconvenient。A lot of content, copy is not complete。Can't find the search。Output the contents of the can't jump to a specific number of rows。You can refer to Google browser's console。 tks！</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28333</IssueID>
    <Title>[Feature Request] Search text in Terminal, Output, Console and/or any editor</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Any

It would be really powerful and flexible to be able to search using the common inline search widget (ctrl+f) in the Terminal window, Debug Console, Output, Problems window as if they were common Editors.
The same would be nice for the Extension windows, the screen that shows the information about an extension has no way to search text.

If any of you has ever worked with emacs, you'd probably know the advantadges of being able to search anywhere.

Thank you and congrats for this geat editor.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28329</IssueID>
    <Title>Cannot search in files</Title>
    <Description>- VSCode Version: Code - Insiders 1.14.0-insider (4541e70733f110ada8d0b4266bc922565d74950a, 2017-06-09T05:06:23.044Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.2.11|
|tslint|eg2|0.15.0|
|cpptools|ms-vscode|0.11.4|
|debugger-for-chrome|msjsdiag|3.1.2|
|vscode-versionlens|pflannery|0.18.1|
|vscode-open-in-github|sysoev|1.6.0|;


---

Steps to Reproduce:

* search for `IEditOperationBuilder`
* search in `./src/vs/`

* The search never completes and the progress spins indefinitely.
I see a bunch of NPEs in the console:

![screen shot 2017-06-09 at 12 05 35](https://user-images.githubusercontent.com/5047891/26971049-fbacda68-4d0b-11e7-944f-aeb60e641c06.png)

![28329](https://user-images.githubusercontent.com/5047891/26971175-7f8e6720-4d0c-11e7-8f6b-c21b46a42f61.gif)
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28328</IssueID>
    <Title>Terminal prompt shows PWD twice after update</Title>
    <Description>VSCode Version: 1.13.0
OS Version: macOS Sierra 10.12
Steps to Reproduce:

Open terminal
CD to any dir
The prompt shows the PWD twice. When you type one of the iterations of pwd disappears then reappears when typing has ceased. Makes it hard to track what commands you are typing?

&lt;img width="923" alt="screen shot 2017-06-09 at 10 57 27" src="https://user-images.githubusercontent.com/8128855/26971037-8fef2356-4d03-11e7-89f7-c048d4ba7a52.png"&gt;

Issue also experienced by @tomitrescak




</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28325</IssueID>
    <Title>Only show tree views for activated extensions</Title>
    <Description>- VSCode Version: 1.13.0 (1.13.0)
- OS Version: macOS 10.12

Steps to Reproduce:

1. Create an extension, with a tree view
2. Open up a folder where the tree view isn't activated
3. See the indicator for the tree view


---

Hey all - **so cool** that we can do some user interface work now! I [built an extension straight away](https://marketplace.visualstudio.com/items?itemName=Orta.vscode-react-native-storybooks)

![preview](https://user-images.githubusercontent.com/49038/26970386-1a86fb18-4d01-11e7-8929-4c79b7a95101.gif)

This extension is only really useful for a few of the projects I work on daily, and so I was hoping that because it has a pretty limited set of activation events the section for Storybooks would only show in the cases of the activation. If I can't give it a provider, then there's not much that can be done with the UI.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28321</IssueID>
    <Title>Console output freezes vscode</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: Arch Linux

Steps to Reproduce:

1. Download this file: http://dpaste.com/0RZ5VDG.txt
2. `cat` it in the console. vscode hangs.

I'm on a 2560x monitor, openbox, no compositing with zsh as the running shell.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28320</IssueID>
    <Title>Twitchy terminal behavior, content being moved around in the terminal</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: macOS Sierra 10.12.5

Steps to Reproduce:

1. Open terminal
2. Install something heavy like `yarn add @angular/cli`
3. Watch the progress bar in the terminal twitch like this 

&lt;img width="1548" alt="screen shot 2017-06-09 at 12 21 26" src="https://user-images.githubusercontent.com/1446529/26969462-7b3ec406-4d0e-11e7-9b18-1898e9e2f5b2.png"&gt;

From the screenshot, you can see that current/total number of dependencies linked shifts to the start, but still visible on the right with a bit of an offset. 

If it helps, I am actually running scaled resolution on my MBP 15 (scaled to 1920x1200 HiDPI).
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28301</IssueID>
    <Title>the words on the terminal frame blink when I typing on the terminal frame</Title>
    <Description>- VSCode Version: Code 1.13.0 (376c52b955428d205459bea6619fc161fc8faacf, 2017-06-08T16:43:13.058Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|path-intellisense|christian-kohler|1.4.2|
|code-runner|formulahendry|0.6.18|
|cpptools|ms-vscode|0.11.4|
|vetur|octref|0.7.0|
|ejs-language-support|QassimFarid|0.0.1|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28298</IssueID>
    <Title> the editor does not support Chinese</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.13.0
- OS Version:window7

Steps to Reproduce:

After the update is complete, the editor does not support Chinese
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28289</IssueID>
    <Title>prompt (working path part) print double times in Terminal (oh-my-zsh)</Title>
    <Description>- VSCode Version: 1.13.0
- OS Version: Debian 9.0

Steps to Reproduce:

1.  install zsh &amp; oh-my-zsh
2.  in .zshrc set ZSH_THEME='agnoster' (you may install this theme first)
3.  change current shell to zsh.(or reload .zshrc if you are in zsh)

click on the terminal, the path part would dispear and show again, ...

![screenshot_20170609_131604](https://user-images.githubusercontent.com/20962135/26962032-ebd4135e-4d15-11e7-8419-d66cb382b84f.png)
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28284</IssueID>
    <Title>Line wrap issue in Terminal of New Window</Title>
    <Description>
## Environment
- VSCode Version: 1.13.0
- OS Version: macOS Sierra 10.12.5

## Steps to Reproduce:

1. File -&gt; New Window
2. Ctrl + ` to open terminal
3. Type the command longer than 80 characters

## Workaround
Change the window size, the terminal will display line wrap correctly
</Description>
    <CreatedDate>09/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28262</IssueID>
    <Title>Duplicated path in integrated terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0 (1.13.0)
- OS Version: OS Sierra 10.12.5

# Utilizing zsh with font family for Powerline causes path to duplicate
 
&lt;img width="324" alt="screen shot 2017-06-08 at 7 43 13 pm" src="https://user-images.githubusercontent.com/15329913/26955119-c3ef0422-4c82-11e7-8148-1926be07b2b2.png"&gt;

----------

Steps to Reproduce:
1. Change integrated terminal settings

    ```json
    {
      "terminal.integrated.fontFamily": "Space Mono For Powerline",
      "terminal.integrated.shell.osx": "/bin/zsh",
    }
    ```

2. Utilize integrated terminal and browse to any folder directory

## Update
------------

* Different from [#28259](https://github.com/Microsoft/vscode/issues/28259)
  * Shell return code has zero impact on terminal functionality


&lt;img width="394" alt="screen shot 2017-06-08 at 7 48 23 pm" src="https://user-images.githubusercontent.com/15329913/26955272-cadc2c50-4c83-11e7-8608-f14a2742117d.png"&gt;

</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28258</IssueID>
    <Title>Intellisense for class methods is not working</Title>
    <Description>When I create a class by extending another class or implementing an interface, the editor doesn't offer any helpful suggestions.

Typescript Service can show an error when abstract methods are not implemented, or if method signature is incorrect, but there is no help from the editor when I'm in the process of implementing the class.

An obvious example of this is implementing React Components. I expect that when I trigger suggest within the class implementation, I would see all of ComponentLifecycle methods with their signatures. However, when I invoke the suggest widget, it shows a host of things in there, none of which are helpful, and none of those I need are actually present.

![screen shot 2017-06-09 at 05 01 56](https://user-images.githubusercontent.com/5859177/26952827-51c839e6-4cd1-11e7-9821-3f57c4a57c8a.png)

Is this a bug or am I doing something wrong? I tried it with the new TypeScript-React-Starter project, but the behavior was the same.

- VSCode Version: 1.12.2 
- OS Version: MacOS Sierra
</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28256</IssueID>
    <Title>Minimap disappears when navigating within the Find All References window</Title>
    <Description>- Have minimap enabled in settings
- Open 'find all references'
- Click a result in the embedded editor
- Minimap disappears :bug:

![jun-08-2017 14-11-04](https://user-images.githubusercontent.com/323878/26950954-576835a4-4c54-11e7-8002-e7a916e0b461.gif)

</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28233</IssueID>
    <Title>Suggestion: Add support to hex, byte editor, binary </Title>
    <Description>Hi,

please add support to edit hex, binary files.

- VSCode Version:
```
Version 1.12.2
Commit 19222cdc84ce72202478ba1cec5cb557b71163de
Date 2017-05-10T13:16:25.899Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0
```

- OS Version:
Kernel: 

&gt; Linux wellington-Inspiron-3647 4.10.0-22-generic #24-Ubuntu SMP Mon May 22 17:43:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

```
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=17.04
DISTRIB_CODENAME=zesty
DISTRIB_DESCRIPTION="Ubuntu 17.04"
NAME="Ubuntu"
VERSION="17.04 (Zesty Zapus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 17.04"
VERSION_ID="17.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=zesty
UBUNTU_CODENAME=zesty
```
Steps to Reproduce:

1. Try to open or edit binary file.
2.  Problem to open.


</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28232</IssueID>
    <Title>Terminal bug. Empty spaces</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10

Steps to Reproduce:

1. Ctrl + `

The terminal does not transfer lines and I get large empty spaces between the cursor and the value to be entered.

Screenshot: https://goo.gl/bDsLre</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>12/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28231</IssueID>
    <Title>Apply GTK dark theme in dark vscode themes</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Fedora 25

Steps to Reproduce:

1. Open vscode
2. Set a dark theme
3. Eyes bleed 😂: 
![captura de pantalla de 2017-06-08 14-01-11](https://user-images.githubusercontent.com/973709/26927665-16262c46-4c53-11e7-9da3-9850f36ed9b1.png)

Well, just joking, but applying the GTK dark theme for linux builds should really make visual aspect much more elegant and integrated.

Thanks!</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28229</IssueID>
    <Title>Diff previous/next change arrows not bindable to keyboard</Title>
    <Description>I want to be able to bind diff navigation arrows (right top corner when diff opened) to be bindable to keyboard, so I don't have to look for mouse.

- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-
10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|project-manager|alefragnani|0.18.0|
|vscode-simpler-icons|davidbabel|1.3.0|
|githistory|donjayamanne|0.2.0|
|xml|DotJoshJohnson|1.8.0|
|gitlens|eamodio|3.6.1|
|scriptcsRunner|filipw|0.1.0|
|code-runner|formulahendry|0.6.18|
|vscode-awk-hint|hangxingliu|0.0.2|
|AWK|luggage66|0.0.2|
|cpptools|ms-vscode|0.11.4|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.2.1|
|vscode-run-git-difftool|narekmal|0.0.4|
|vscode-clearcase|OpenNingia|1.9.2|
|vscode-format|ryannaddy|0.0.6|
|partial-diff|ryu1kn|0.3.1|
|code-settings-sync|Shan|2.8.1|
|code-spell-checker|streetsidesoftware|1.1.0|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>08/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28227</IssueID>
    <Title>vscode render error</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.12.2
- OS Version:win32 

Steps to Reproduce:

1.openDevtool 
2.press F5 refresh vscode。





![fqyw kd1md8ylgz 77 8 fv](https://user-images.githubusercontent.com/3353702/26916777-33132146-4c5e-11e7-8c8d-9e24364d34ed.png)

</Description>
    <CreatedDate>08/06/2017</CreatedDate>
    <ClosedDate>09/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28216</IssueID>
    <Title>Can't highlight links in terminal</Title>
    <Description>I can't click and drag to highlight a link in the terminal. I can select it if I start somewhere else, but not if I start dragging on the link itself. 

![jun-07-2017 16-23-15](https://user-images.githubusercontent.com/323878/26905714-b819e2a6-4b9d-11e7-8015-ce5357aee9cc.gif)
</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>08/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28191</IssueID>
    <Title>VS Code should support custom extension marketplaces/URLs</Title>
    <Description>- VSCode Version:

Version 1.12.2
Commit 19222cdc84ce72202478ba1cec5cb557b71163de
Date 2017-05-10T13:16:25.899Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0

Steps to Reproduce:

My company has substantial internal tools, languages, etc. It'd be nice if we could have a company internal marketplace to publish such extensions on, similar to Sublime Text's Package Control supporting multiple extension repositories.</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>07/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28189</IssueID>
    <Title>Add Code and Terminal Window Side-by-Side or Floating windows</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Win. 10 (creative edition)

Steps to Reproduce:

1.Try Moving the Terminal/Debug Console to another location on the screen.
2.Look at ISE and which it worked in VS code

Would it be possible to get the Terminal/Debug Console/etc to be able to "unlock" from its current location and be able to position it anywhere on the screen(s) or re-arrange inside the main window.

Thanks~!
</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>08/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28174</IssueID>
    <Title>Cursor is not shown on correct position when resized</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.4.0-78-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|theme-darktooth|Poorchop|0.0.2|
|vscode-snazzy-operator|aaronthomas|1.1.3|
|gitignore|codezombiech|0.5.0|
|githistory|donjayamanne|0.2.0|
|Theme-Green|gerane|0.0.2|
|ewamvscadaptor|mphasiswyde|0.3.4|
|cordova-tools|vsmobile|1.2.7|
|vscode-react-native|vsmobile|0.3.2|
|Material-theme|zhuangtongfa|2.8.4|;


---

Steps to Reproduce:

1.Go in gull screen mode
2. Reduce the screen ratio by ctrl and - keys
3. click on any arbitrary point in the code.
4. Cursor is not displayed on the actual position</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>07/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28168</IssueID>
    <Title>Broken lines in intagraded terminal</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|aurelia|AureliaEffect|0.3.4|
|htmltagwrap|bradgashler|0.0.3|
|python|donjayamanne|0.6.4|
|color-highlight|naumovs|2.2.0|
|vetur|octref|0.7.0|
|sass-indented|robinbentley|1.4.1|
|language-stylus|sysoev|1.7.3|;


---

Steps to Reproduce:

1. Just run VSC
2. Open intergated terminal and see
https://puu.sh/wdc01/df91b214de.png</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>07/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28164</IssueID>
    <Title>Window State According To Git Branch</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Feature:

1. Can VScode preserve its window state according to git branch? As Branch Changes the working files and working context changes. This feature will help for alot in day to day work in different branches.
</Description>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>07/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28147</IssueID>
    <Title>VScode shows this error: [js] Expression expected</Title>
    <Description>  VScode shows this error: [js] Expression expected

PS: i don't want  disable js  validation


```js


const loadSobre = () =&gt; import('./paginas/sobre'  );


```
 


![sem titulo](https://user-images.githubusercontent.com/29238083/26849222-b87e0aac-4ad9-11e7-8aa2-51c9f916d8e6.png)
</Description>
    <CreatedDate>06/06/2017</CreatedDate>
    <ClosedDate>06/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28140</IssueID>
    <Title>Suggest menu is not stable when near the bottom of the page</Title>
    <Description>The suggest menu moves to accomodate the size of the docs for whichever item is selected. In some cases this doesn't look good as I arrow through the options. Is it possible to look at the size of the largest docs item in the current set? Or, always account for the max size?

![jun-06-2017 11-49-29](https://user-images.githubusercontent.com/323878/26846442-8ae15c50-4aae-11e7-9ad9-be5b5146bb7c.gif)
</Description>
    <CreatedDate>06/06/2017</CreatedDate>
    <ClosedDate>06/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28127</IssueID>
    <Title>VS Code check JS</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12
- OS Version: Linux Ubuntu 17.04

I'm using this setting:
```
"javascript.implicitProjectConfig.checkJs": true
```
This is something WOW, I even deleted Flow and not using it anymore, but left only this annoying problem, I can't add properties in req object....

However I can create it and no error/warning:

```
req.userId = decodedToken.userId;
```

But then I'm trying to use it in one of my routes I get the problem.

```
Property 'userId' does not exist on type 'Request',
```

But you can add properties in req object in your middleware, even Express is documented it https://expressjs.com/en/api.html#app.param. I can't use locals or to add it directly. I know it's definitions, but since this is VS Code I don't know where I need to open an issue.</Description>
    <CreatedDate>06/06/2017</CreatedDate>
    <ClosedDate>06/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28113</IssueID>
    <Title>Integrated console using git bash got stuck after some commands</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.3|
|path-intellisense|christian-kohler|1.4.2|
|bracket-pair-colorizer|CoenraadS|0.10.4|
|EditorConfig|EditorConfig|0.9.3|
|tslint|eg2|0.15.0|
|json2ts|GregorBiswanger|0.0.6|
|angular-essentials|johnpapa|0.2.0|
|Angular2|johnpapa|2.3.2|
|debugger-for-chrome|msjsdiag|3.1.2|
|angular2-inline|natewallace|0.0.17|
|vscode-janus-debug|otris-software|0.0.5|
|material-icon-theme|PKief|2.0.8|;


---
Steps to Reproduce:

1. Open new console window as a git bash
2. Navigate to a git repo directory
3. Run git log on any file
4. Enter CTRL + C to stop the log output

After this console is not responsive and only way to make it work is to close it and open again</Description>
    <CreatedDate>06/06/2017</CreatedDate>
    <ClosedDate>06/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>28105</IssueID>
    <Title>"Format document" for xml documents</Title>
    <Description>Format document function is available for html docs. 
Would be cool for XML as well.</Description>
    <CreatedDate>06/06/2017</CreatedDate>
    <ClosedDate>06/06/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27624</IssueID>
    <Title>New task runner does not show multiple tasks from old configuration</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (afe47dc84467b487ce0079ff72f55e7ef4f7ebca, 2017-05-30T10:34:18.253Z)
- OS Version: Darwin x64 15.6.0
- Extensions: none
---

Testing #27471

The old task runner offers the two tasks `hello` and `bye` to choose from, the new task runner only shows the `echo` task:
```
{
  "version": "2.0.0",
  "command": "echo",
  "isShellCommand": true,
  "args": [],
  "showOutput": "always",
  "echoCommand": true,
  "suppressTaskName": true,
  "tasks": [
    {
      "taskName": "hello",
      "args": [
        "Hello World"
      ]
    },
    {
      "taskName": "bye",
      "args": [
        "Good Bye"
      ]
    }
  ]
}
```</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27568</IssueID>
    <Title>Merge editor: Unicode character in compare editor title</Title>
    <Description>Testing #27549

- create a merge conflict as described here: https://github.com/Microsoft/vscode/issues/27288#issuecomment-304138928
- enable code lenses
- click on 'Compare Chnaged'
- Compare editor opens, but has a strange title:
![image](https://cloud.githubusercontent.com/assets/6461412/26586756/720427b6-4550-11e7-83b5-bb15c2e074e3.png)

</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27567</IssueID>
    <Title>Tasks ignored</Title>
    <Description>* have a task provider as shown below
* invoke the "Run Tasks" command
* notice that your provider is being called
* :bug: my task doesn't show

```ts

const _taskProvider = new class implements vscode.TaskProvider {

    provideTasks(token: vscode.CancellationToken): vscode.ProviderResult&lt;vscode.Task[]&gt; {
        if (vscode.window.activeTextEditor) {
            console.log('HERE');
            const { document } = vscode.window.activeTextEditor;
            return [new vscode.ShellTask(document.fileName, 'echo')];
        }
    }
};
```


![may-30-2017 15-54-04](https://cloud.githubusercontent.com/assets/1794099/26586729/6058a622-4550-11e7-8595-95ab4017cd10.gif)
</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27544</IssueID>
    <Title>Quick Open resets selection when search finishes</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.4.0-75-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|you-complete-me|RichardHe|1.0.35|
|one-monokai|azemoh|0.2.4|
|togglehs|bbenoist|0.1.2|
|vscode-icontheme-nomo-dark|be5invis|1.3.0|
|chromium-codesearch|chaopeng|0.0.7|
|vscode-instant-markdown|dbankier|1.1.0|
|monokai-plusplus|dcasella|1.6.0|
|python|donjayamanne|0.6.4|
|an-old-hope-theme-vscode|dustinsanders|2.0.0|
|Theme-Monokai|gerane|0.0.2|
|cpptools|ms-vscode|0.11.2|
|copy-file-name|nemesv|1.0.0|
|difftomaster|pavolmarko|0.0.1|
|proto|peterj|0.0.2|
|annotator|ryu1kn|0.10.1|
|rewrap|stkb|1.3.0|
|change-case|wmaurer|1.0.0|;


---

Steps to Reproduce:

1. In a large repo like Chromium, open Quick open (CTRL+P).
2. Enter a search term, e.g. 'arc'.
3. While the search proceeds in the background (running blue bar indicator shows), select an item other than the first (arrow up/down).
4. Wait until the search finishes.

Expected: The same item is still selected.
Actual: The selection resets and the first item is selected.

This often leads to opening the wrong item when the search finishes right in the moment when one hits enter.</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27526</IssueID>
    <Title>Markdown synchronized scrolling does not work with mouse wheel</Title>
    <Description>Refs: #27350

1. Open a markdown file, open the preview to the side
2. Scroll through the markdown file using the mouse wheel
3. I would expect the preview is also being scrolled. It only gets scrolled once I move the cursor position
</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27494</IssueID>
    <Title>Entering and leaving directory statements are not processed, resulting in incorrect paths for the problemMatcher</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12
- OS Version: Mac OS 10.12.5 &amp; Ubuntu 16.04
Steps to Reproduce:

1. download e.g. bash source code from GitHub
2. In top source dir mkdir build; cd build; ../configure; make 
If the make is done from within studio code, it can be seen that some paths to warnings are resolved properly, but others, to files in sub projects not.
All reported paths are relative to the current working directory, however this directory changes during the build process. This change of directory is reported with statements like:
make[1]: Leaving directory '/media/psf/Home/GitHub/bash/bash-4.4/build/builtins'
make[1]: Entering directory '/media/psf/Home/GitHub/bash/bash-4.4/build/support'
In this kind of environment which is not that uncommon, it seems kind of impossible to get the problem matcher working properly. Depending on the area you are working on you have to edit the tasks file to get a correct link to the file.
To complicate things more the leaving statements pops back to the previous one, so if you parse the entering and leaving statements, it is not stateless. You have to keep track of a stack of directories.</Description>
    <CreatedDate>30/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27468</IssueID>
    <Title>CodeLens can't determine references for TS properties ended with $</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-file-peek|abierbaum|1.0.1|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-simpler-icons|davidbabel|1.3.0|
|githistory|donjayamanne|0.2.0|
|xml|DotJoshJohnson|1.7.0|
|tslint|eg2|0.15.0|
|vscode-great-icons|emmanuelbeziat|2.1.6|
|auto-close-tag|formulahendry|0.4.2|
|auto-rename-tag|formulahendry|0.0.12|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|beautify|HookyQR|1.0.2|
|docthis|joelday|0.4.4|
|Angular2|johnpapa|2.3.1|
|spellcheck|JuliaBay|1.1.4|
|code-beautifier|michelemelluso|1.7.2|
|vscode-scss|mrmlnc|0.6.2|
|csharp|ms-vscode|1.10.0|
|PowerShell|ms-vscode|1.1.0|
|debugger-for-chrome|msjsdiag|3.1.2|
|tsimporter|pmneo|1.2.14|
|partial-diff|ryu1kn|0.3.1|
|html-preview-vscode|tht13|0.1.1|;


---

Steps to Reproduce:

1. Open **TypeScript** file
2. Add any property which can be targeted by **CodeLens**
3. End variable name with `$`, like `public foo$: number;`

[Screenshot](https://i.imgur.com/PhPomUc.png)

I think it's a bug, as `$` sign was always allowed for variable naming in **TypeScript**.</Description>
    <CreatedDate>29/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27449</IssueID>
    <Title>feature request: Do not show "Working Tree" files in "Open Editors"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Ubuntu 16.04

coming back from git view, every file I looked the diff of is opened with (Working Tree) behind. That is confusing and I always just close them.</Description>
    <CreatedDate>29/05/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27442</IssueID>
    <Title>Invalid position of cursor when changing zoom level</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 3.10.0-514.16.1.el7.x86_64
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|2.0.5|
|html-css-class-completion|Zignd|1.2.0|
|html-snippets|abusaidm|0.1.0|
|code-gnu-global|austin|0.2.2|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|3.4.9|
|tslint|eg2|0.15.0|
|prettier-vscode|esbenp|0.17.1|
|auto-rename-tag|formulahendry|0.0.11|
|code-runner|formulahendry|0.6.16|
|gitlab-mr|jasonn-porch|1.3.0|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|Go|lukehoban|0.6.61|
|cpptools|ms-vscode|0.11.0|
|seti-icons|qinjia|0.1.3|
|java|redhat|0.3.0|
|jenkinsfile-support|secanis|0.1.0|;


---

Steps to Reproduce:

1. Zoom in (`Ctrl +`)
2. Cursor is displayed at the wrong position:
![Wrong position of cursor](http://i.imgur.com/RZa1ZAC.png)</Description>
    <CreatedDate>29/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27441</IssueID>
    <Title>The format of powershell is wrong...</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|nord-visual-studio-code|arcticicestudio|0.2.0|
|theme-summerfruit|asethi77|0.0.1|
|vscode-instant-markdown|dbankier|1.1.0|
|python|donjayamanne|0.6.4|
|theme-dracula|dracula-theme|2.0.1|
|theme-slate|egoist|0.1.0|
|Theme-azure|gerane|0.0.2|
|Theme-Blackboard|gerane|0.0.2|
|Theme-PastelsonDark|gerane|0.0.2|
|Theme-peel|gerane|0.0.2|
|Theme-zacks|gerane|0.0.2|
|mdmath|goessner|1.2.9|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|hopscotch|idleberg|0.1.4|
|crayon-vscode|jansenfuller|0.1.3|
|theme-material-theme|jprestidge|1.0.1|
|intellij-idea-keybindings|k--kato|0.2.11|
|theme-chromodynamics|lei|1.0.8|
|matrix-theme|Marcelino-Jorge-Romero|0.0.1|
|Massimo-theme|mbetacchini|1.0.5|
|theme-go|mikegleasonjr|0.0.3|
|cpptools|ms-vscode|0.11.2|
|theme-railscasts|PaulOlteanu|2.0.0|
|python|tht13|0.2.3|
|theme-tinaciousdesign|tinaciousdesign|0.2.6|
|python-extended-snippets|tushortz|0.0.1|
|Material-theme|zhuangtongfa|2.8.0|;


---

When I open the powershell in vscode, the format is wrong.
Just like the pic shows.
![1](https://cloud.githubusercontent.com/assets/20606271/26550003/5675524c-44ae-11e7-9429-bdb75798291d.png)


</Description>
    <CreatedDate>29/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27440</IssueID>
    <Title>Quotemark for reference import</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (8c1c1d14df3c2f819078484aeffee37c3f00a7a8, 2017-05-29T05:13:44.347Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|path-intellisense|christian-kohler|1.4.2|
|tslint|eg2|0.15.0|
|vscode-npm-script|eg2|0.1.9|
|Angular1|johnpapa|0.1.16|
|csharp|ms-vscode|1.10.0|
|team|ms-vsts|1.118.2|
|debugger-for-chrome|msjsdiag|3.1.2|
|vscode-icons|robertohuertasm|7.8.1|
|testcafe-test-runner|romanresh|1.0.2|
|code-settings-sync|Shan|2.8.1|
|omnipascal|Wosi|0.13.0|
|Material-theme|zhuangtongfa|2.8.0|;


---

Steps to Reproduce:

1. Import reference via "Ctrl + ." 
2. Quotemark should be single, the import is always double, may the import consider the tslint rules?

![image](https://cloud.githubusercontent.com/assets/2060578/26549632/534b97b0-4450-11e7-8f4f-349770cec532.png)
</Description>
    <CreatedDate>29/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27406</IssueID>
    <Title>Workspace settings not respected</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|angulardoc-vscode|AngularDoc|2.2.2|
|tslint|eg2|0.15.0|
|vscode-great-icons|emmanuelbeziat|2.1.6|
|Angular2|johnpapa|2.3.1|
|vscode-add-angular-native-files|joshdsommer|0.0.8|
|cpptools|ms-vscode|0.11.2|
|csharp|ms-vscode|1.10.0|
|team|ms-vsts|1.118.2|
|angular2-inline|natewallace|0.0.17|
|tns-cli|pkosta2006|0.0.3|
|Ruby|rebornix|0.12.1|
|code-settings-sync|Shan|2.8.1|
|nativescript|Telerik|0.7.2|
|nativescript-ng2-snippets|wwwalkerrun|2.0.1|;


---

Steps to Reproduce:

1. Change workspace integrated terminal to something different: eg `"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"`
2. Open an integrated terminal ``ctrl+` ``
3. Integrated terminal still has the terminal configured in user settings (In my case I have `bash.exe` as my user terminal and made an attempt to set a workspace setting for another executable for a different bash and also did a sanity check with PowerShell)</Description>
    <CreatedDate>28/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27390</IssueID>
    <Title>Terminal kill does not kill</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (770206ab9c6357943a2145bd3ea49b667f3ff539, 2017-05-26T05:14:23.944Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-styled-jsx|blanu|0.1.1|
|vscode-exports-autocomplete|capaj|0.4.9|
|vscode-npm-source|dkundel|1.0.0|
|auto-close-tag|formulahendry|0.4.2|
|auto-rename-tag|formulahendry|0.0.12|
|code-runner|formulahendry|0.6.17|
|rest-client|humao|0.14.4|
|output-colorizer|IBM|0.1.1|
|node-module-intellisense|leizongmin|1.3.0|
|vs-color-picker|lihui|0.6.0|
|PowerShell|ms-vscode|1.1.0|
|debugger-for-chrome|msjsdiag|3.1.2|
|color-highlight|naumovs|2.2.0|
|rcgenerator|ngSoftware|0.0.6|
|sort-imports|peterjuras|2.3.1|
|vscode-template-literal-editor|plievone|0.8.4|
|code-settings-sync|Shan|2.8.1|
|vscode-todo-highlight|wayou|0.5.3|;


---

Steps to Reproduce:

1. open terminal
2. start server
3. kill terminal with trash icon
4. opent terminal start server again
5. port is still in use</Description>
    <CreatedDate>28/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27386</IssueID>
    <Title>Extra space showed in Terminal</Title>
    <Description>
- VSCode Version: 1.12.2
- OS Version: Win10 64bit 1703

Steps to Reproduce:

1.After windows updated, Terminal in windows use powershell.But VSCode's terminal output is wrong.Extrea spaces casuse a chaotic output.Make many newlines. I don't know this is os's bug or vscode's.

</Description>
    <CreatedDate>28/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27370</IssueID>
    <Title>Wrong/no icons on folders and files in some cases</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10 1703

VS Code seems to cache the icons for the explorer view by filename. This can cause issues if you create a file, delete it and create a folder with the same name again (or create a folder, delete it and create a file with the same name).

Steps to Reproduce:

1. Create a file with the name `test`
2. Delete the file
3. Create a folder in the same location with the same name as the file

or see this GIF for better explanation

![2017-05-27_16-34-21](https://cloud.githubusercontent.com/assets/9491603/26522176/c6e9aec0-42fa-11e7-94fe-12271109ca91.gif)

</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27369</IssueID>
    <Title>VS Code "still" won't open in xrdp session</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13.0 (insiders)
- OS Version: Ubuntu 16.04.2

See Closed incident #12233 
https://github.com/Microsoft/vscode/issues/12233

OK! Its May 27th, 2017 and I would have expect by now that VS Code (and Insiders) would already work using xrpd. But, it isn't!!

This issue still Open as the workaround a permanent resolution as we need to manually fixed it.
How about integrating the workaround steps into the installation steps?

I shortcut the steps to:
## - Fix to make VS Code work in xrdp:
sudo su
     sudo sed -i 's/BIG-REQUESTS/_IG-REQUESTS/' /usr/lib/x86_64-linux-gnu/libxcb.so.1
     sudo sed -i 's/BIG-REQUESTS/_IG-REQUESTS/' /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
exit

## - for VS Code Insiders:
LD_LIBRARY_PATH=$HOME/lib code-insiders
sudo cp /usr/lib/x86_64-linux-gnu/libxcb.so.1 /usr/share/code-insiders
sudo cp /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0 /usr/share/code-insiders

## - for VS Code:
LD_LIBRARY_PATH=$HOME/lib code
sudo cp /usr/lib/x86_64-linux-gnu/libxcb.so.1 /usr/share/code
sudo cp /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0 /usr/share/code

![vscodexrdpissue](https://cloud.githubusercontent.com/assets/19892435/26521989/a2e03c6e-42c4-11e7-9ec1-a5399969831c.png)


</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27368</IssueID>
    <Title>Scrolling Bug</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|php-intellisense|felixfbecker|1.2.2|
|laravel-blade|onecentlin|1.8.1|;


---

Steps to Reproduce:

1. While VSC is open with a page that has enough code to scroll touch trackpad with 3 fingers and drag, this will leave editor
2. go back into VSC and trackpad scrolling is messed up</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27362</IssueID>
    <Title>syntax highlighitng for HTML is wrong after adding meta viewport</Title>
    <Description>


- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:13:11.413Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|aurelia|ErikLieben|0.1.4|
|laravel-blade|KTamas|0.0.1|
|vscode-babel-coloring|dzannotti|0.0.4|
|Theme-Facebook|gerane|0.0.2|
|vue|liuji-jim|0.1.5|
|csharp|ms-vscode|1.9.0|;


---

Steps to Reproduce:

1. Create Simple HTML
2. add meta view port

```
 &lt;meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport"&gt;
```

Syntax highlighting is not correct in HTML. 

If I changed language to PHP , it's working fine. Only happen in HTML language.

</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27361</IssueID>
    <Title>Files Opened Through Git Panel (Working Tree) Aren't In Temporary Editor</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: 10.11.6

Steps to Reproduce:

1. Open Git Panel
1. Click on a file with changes
1. Click on another file with changes
1. Note that two Working Tree editors are now opened, instead of the second file replacing the first

It'd be preferable if the Keep Editor commands (saving, pressing cmd+K Enter) would work here, and the files would otherwise open over one another in the same editor (likely with a setting to always keep working tree files, if users like that behavior). 

Finding myself spending a lot of cycles closing Working Tree tabs as it stands now, this would be a nice QOL change.

Thanks as always!

Best
Michael
</Description>
    <CreatedDate>27/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27330</IssueID>
    <Title>Npm module debug not showing up in vscode debugging console</Title>
    <Description>
- VSCode Version: 1.12.2
- OS Version:  Debian Stretch

Steps to Reproduce:

1. make app.js

```
    'use strict';
    var debug = require('debug')('myapp:test');
    console.log('DEBUG is', process.env.DEBUG);
    console.log('NODE_ENV is', process.env.NODE_ENV);
    debug("foo");
```

2. in vscode left panel click on DEBUG and configure launch.json

```
    {
      "type": "node",
      "request": "launch",
      "name": "Programm starten",
      "program": "${workspaceRoot}/app.js",
      "protocol": "inspector",
      "env": {
        "DEBUG":"myapp:*",
        "NODE_ENV": "development"
      }
    }
```

3. click on green arrow (Start debug) will show only

    DEBUG is myapp:*
    NODE_ENV is development

4. on console (or even in vscode terminal) the following command will give full output (in color! yeah)

```
    $ DEBUG="myapp:*" node app.js

    DEBUG is myapp:*
    NODE_ENV is development
    myapp:test foo +0ms
```

Conclusion: There is no information from npm debug module, when started via debug.

Remark: NODE_ENV variable is not necessary, but I wanted to rule out, that debug will not be blocked, by thinking it is in production...
    
</Description>
    <CreatedDate>26/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27326</IssueID>
    <Title>Feature request - multi monitor support</Title>
    <Description>I've become a bit spoilt by the multi-monitor and 'layout' support in Visual Studio.  Is there any chance we could get multi-monitor support (even if basic) in VsCode?  For example, i'd like to be able to drag the Output or Problems tab to a different monitor.</Description>
    <CreatedDate>26/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27324</IssueID>
    <Title>Allow theming of debugging foreground in status bar</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10 1703

I'm using the Slime theme and noticed really bad contrast when debugging in the status bar.
I wanted to fix that but unfortunately it is not possible to set a dedicated foreground debugging color like for the background. Would it be possible to add something like that?

![image](https://cloud.githubusercontent.com/assets/9491603/26490650/80f1464c-420c-11e7-90ee-0c018c2a4f4d.png)
</Description>
    <CreatedDate>26/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27321</IssueID>
    <Title>Hotkeys vs language switcher</Title>
    <Description>Some hotkeys stop working when the input language is switched.

- VSCode Version: 1.12.2
- OS Version: MacOS 10.12.4

Steps to Reproduce:

1. Make sure the hotkeys are working (example: Cmd+] - indent)
2. Switch input language (En -&gt; Ru)
3. Try Cmd+] again (not working)</Description>
    <CreatedDate>26/05/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27300</IssueID>
    <Title>VSCode is sometimes blurry on multiple displays as does not respect per-monitor DPI settings</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows Pro 10 x64 creators update (10.0.15603)

Steps to Reproduce:

1. Set up environment with two monitors - primary being 100% DPI scaling and second being higher DPI (i.e. 200%) - a sample setup is HiDPI laptop (such as all Surface devices) with external monitor, where external monitor is the primary display device
2. Log out and log in or restart OS to apply DPI settings completely
3. Run vscode move it to the secondary screen with &gt;100% DPI settings

At this point vscode window is scaled up.

It is worth noting that if the primary screen has 200% DPI (i.e. if Surface built-in screen is the primary display, or was primary display at the time the user has logged in), then vscode is not blurry - but then it is downscaled when moving it to the primary monitor.

I believe this is because vscode windows are set to use `PROCESS_SYSTEM_DPI_AWARE` setting - which makes it use the DPI setting of the primary monitor, not the display it is currently at.

As vscode uses electron, which in turn uses webkit, it should be possible to use `PROCESS_PER_MONITOR_DPI_AWARE` setting - since chrome does support it properly for quite a while - chrome windows scale properly to each monitor's DPI settings.
</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27291</IssueID>
    <Title>Minimap does not show selected section of code</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.4.0-78-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|php-formatter|Sophisticode|0.2.4|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|3.5.1|
|vscode-great-icons|emmanuelbeziat|2.1.5|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.2.2|
|rest-client|humao|0.14.4|;


---

Steps to Reproduce:

1. File -&gt; Preferences -&gt; Settings
2. set this preference: "editor.minimap.enabled": true
3. In any file, select a section of code. The selected section does not appear on the minimap.</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27274</IssueID>
    <Title>"move context cursor according to words" is not intuition.</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|calculate|acarreiro|1.1.0|
|insertnumbers|Asuka|0.9.1|
|code-select-until|jakelucas|0.6.0|
|cpptools|ms-vscode|0.11.1|
|vscode-jsp|pthorsson|0.0.2|
|text-marker|ryu1kn|0.3.0|
|vscode-fileutils|sleistner|2.5.1|
|vscode-hexdump|slevesque|1.3.0|;


---

Steps to Reproduce:

1. make a UTF-8 context as the following two line:
一二三四五 12345
1234567890abcdef
2. make the cursor at Ln1, Col8 between '1' and '2' in Line 1.
3. press keyboard's key, "down", to go to the next line.
4. now, the cursor is at Ln2, Col8 between '7' and '8' in Line 2.
5. but I expected the cursor is at Ln2, Col13 between 'b' and 'c' in Line 2.

This is because there are 5 "double width words" in line 1, and the cursor's moving behavior depends on word counting but not its location (millimeter or pixel is good, but maybe bytes is not bad.) After all, the cursor is human's utility for entering words for its main job, not for counting words. By the way, status bar of sublime text shows "words" but not "location", it is bad. =(

And, it is important for multiselecting by keyboard when working on having "difference width words" context.
</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27258</IssueID>
    <Title>Collapsing PHP function with heredoc strings fails</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|php-debug|felixfbecker|1.10.0|
|crane|HvyIndustries|0.3.6|;


---

Steps to Reproduce:

1. Copy paste the function snippet below.
2. Collapse it (click on the '+' sign on the left)
3. Collapsing fails.

Code example:
funtion onefunction()
{
    string heredocString = &lt;&lt;&lt;BATMAN
    I love bats.
BATMAN;

    $superman = "I love bragging.";
}</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27255</IssueID>
    <Title> Cannot read property 'getModeId' of null</Title>
    <Description>Issue Id: &lt;b&gt;eb8443e7-3283-9585-dfd2-557380558944&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.12.2&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'getModeId' of null&lt;br /&gt;[/vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart.ts#L382:158 (getModeId)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/workbench/parts/welcome/walkThrough/electron-browser/walkThroughPart.ts#L382:158 (getModeId))&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/callbackList.ts#L63:26 (apply))&lt;br /&gt;[/vs/base/common/event.ts#L123:26 (call)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/event.ts#L123:26 (call))&lt;br /&gt;[/vs/workbench/services/configuration/node/configurationService.ts#L106:34 (fire)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/workbench/services/configuration/node/configurationService.ts#L106:34 (fire))&lt;br /&gt;[/vs/workbench/services/configuration/node/configurationService.ts#L87:82 (onBaseConfigurationChanged)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/workbench/services/configuration/node/configurationService.ts#L87:82 (onBaseConfigurationChanged))&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/callbackList.ts#L63:26 (apply))&lt;br /&gt;[/vs/base/common/event.ts#L123:26 (call)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/event.ts#L123:26 (call))&lt;br /&gt;[/vs/platform/configuration/node/configurationService.ts#L58:33 (fire)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/platform/configuration/node/configurationService.ts#L58:33 (fire))&lt;br /&gt;[/vs/platform/configuration/node/configurationService.ts#L49:81 (onConfigurationChange)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/platform/configuration/node/configurationService.ts#L49:81 (onConfigurationChange))&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/callbackList.ts#L63:26 (apply))&lt;br /&gt;</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27246</IssueID>
    <Title>JavaScript Finding all references does not work</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|angular-material-snippets|4tron|0.3.1|
|angulardoc-vscode|AngularDoc|2.2.2|
|one-monokai|azemoh|0.2.4|
|path-intellisense|christian-kohler|1.4.2|
|unity3d-pack|dimasalmaz|0.7.0|
|githistory|donjayamanne|0.2.0|
|jquerysnippets|donjayamanne|0.0.1|
|python|donjayamanne|0.6.4|
|EditorConfig|EditorConfig|0.9.3|
|eppz-code|eppz|1.2.22|
|beautify|HookyQR|1.0.2|
|csharpextensions|jchannon|1.3.0|
|Angular1|johnpapa|0.1.16|
|classic-asp-html|jtjoo|0.0.1|
|docomment|k--kato|0.0.15|
|format-php|Kasik96|1.1.2|
|angular1-code-snippets-johnpapastyle|lperdomo|0.1.0|
|ftp-sync|lukasz-wronski|0.3.3|
|csharp|ms-vscode|1.9.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|vscode-icons|robertohuertasm|7.7.0|
|shader|slevesque|0.2.3|
|python|tht13|0.2.3|
|unity-tools|Tobiah|0.1.9|
|python-extended-snippets|tushortz|0.0.1|
|unity-debug|Unity|1.2.0|
|vim|vscodevim|0.7.1|
|gitblame|waderyan|1.10.0|
|unity-snippets|YclepticStudios|0.1.2|
|Material-theme|zhuangtongfa|2.8.0|;


---

Hi I am having problems with Javascript within my project. I have 5 javascript files and I use module revealing pattern. For some reason actions like "Find All References" does not work. It works fine for the same project when I use WebStorm. I tried the same project on another computer with fresh VSC installation and got the same issue. Is this normal?</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27242</IssueID>
    <Title>explorer display issue(while using file icon theme seti)</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-svgviewer|cssho|1.2.0|
|vscode-eslint|dbaeumer|1.2.11|
|python|donjayamanne|0.6.4|
|java-debug|DSnake|0.0.2|
|tslint|eg2|0.15.0|
|language-polymer|jonwolfe|0.7.8|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.4.1|
|PowerShell|ms-vscode|0.7.2|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|debugger-for-chrome|msjsdiag|3.1.1|
|java|redhat|0.0.11|
|svg-snippets|sidthesloth|1.0.0|;


---

Steps to Reproduce:

1. create new file named 'obj'.
2. delete file 'obj'.
3. create new directory named 'obj'
4. now the directory 'obj' is displayed with a icon.
5. delete an existed directory named 'src'
6. create new file named 'src'
7. now the file 'src' is displayed without a icon.

screenshot:
![screenshot](https://master76.github.io/res/issue-vscode-v1.12.2-explorer.png)</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27241</IssueID>
    <Title>Add support to making the window transparent</Title>
    <Description>Right now you can't make the window transparent
</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27239</IssueID>
    <Title>Json autocomplete</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.8.0-52-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.2|
|Doxygen|bbenoist|1.0.0|
|markdown-table-prettify|darkriszty|1.1.0|
|python|donjayamanne|0.6.4|
|mdmath|goessner|1.2.9|
|intellij-idea-keybindings|k--kato|0.2.10|
|vscode-rust|kalitaalexey|0.3.14|
|Go|lukehoban|0.6.61|
|cpptools|ms-vscode|0.11.2|
|java|redhat|0.4.0|
|RustyCode|saviorisdead|0.19.1|
|cmake|twxs|0.0.17|
|vscode-lldb|vadimcn|0.5.0|
|cmake-tools|vector-of-bool|0.9.4|;


---

Steps to Reproduce:

![ezgif com-video-to-gif](https://cloud.githubusercontent.com/assets/26430678/26444830/9d683e6e-4146-11e7-91a5-cbcc76233707.gif)

1. Open c_cpp_properties.json (after it is created)
2. Start typing "${wor"
3. Press ctrl+space and select "${workspaceRoot}"
4. Press enter.

No matter if start with " or just ${... </Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27236</IssueID>
    <Title>Feature request: Ability to open new window as clone of first one</Title>
    <Description>this is sort-of expansion of [#25329](https://github.com/Microsoft/vscode/issues/25329) ...

I know about 'New Window' command, but that just open new instance of vscode thats is separated from first one.

What i have in mind is open new window and open there any panel (output, explorer, ...) that show same 'data' as corresponding panel in first window.

Another way to go is to be able dettach any panel from main window into its own window like visual studio can ...</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27234</IssueID>
    <Title>First symbol in bash console is omitted</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|3.5.0|
|beautify|HookyQR|1.0.2|
|rest-client|humao|0.14.4|
|cpptools|ms-vscode|0.11.2|
|vscode-icons|robertohuertasm|7.7.0|
|vscode-hexdump|slevesque|1.3.0|
|jsx|TwentyChung|0.0.1|
|vscode-proto3|zxh404|0.1.1|;


---
![image](https://cloud.githubusercontent.com/assets/16559814/26438635/62bfc8f6-414e-11e7-8227-2c26a969cb2c.png)


Steps to Reproduce:

1. I just ran 'gulp build'
2. See screenshot</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27232</IssueID>
    <Title>Win 10 - the layout of VSCode panel is out of order after Windows was upgraded to version 1703</Title>
    <Description>the same bug with #25968

- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|cpptools|ms-vscode|0.11.1|
|csharp|ms-vscode|1.9.0|
|RustyCode|saviorisdead|0.19.1|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27224</IssueID>
    <Title>[Bug] Weird Behavior in integrated bash terminal in Win 10</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Win 10

Steps to Reproduce:

1. In win 10 open integrated terminal with window maximized.
1. Clear and see bash terminal cursor at start of line, and line characters overlapping.
1. Type few chars and delete 1, the line with info about the terminal is gone.
1. Exit maximized mode to window, resize and verify it now works as intended.

**Gif proof:**
![weirdintegratedterminalbehavior](https://cloud.githubusercontent.com/assets/9698639/26433562/2048392a-40c9-11e7-9742-35eb2353e3f4.gif)

**Extra data:**
Please note i'm in Win 10, using the new Bash terminal with login shell active (take a look at gif's config highlighted in right panel).</Description>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27220</IssueID>
    <Title>Source Control files are not respecting preview mode setting behavior</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Ubuntu 16.04 LTS

Steps to Reproduce:

1. Be sure `workbench.editor.enablePreview` is not overriden in user or workspace settings
2. Switch to Source Control view
3. Single-click a changed file
4. File is open in permanent mode (regular title) instead of preview mode (italic title)
</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27206</IssueID>
    <Title>Duplicates in Go to File list</Title>
    <Description>- VSCode Version: Code 1.12.2
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|tslint|eg2|0.15.0|
|vscode-stylefmt|mrmlnc|2.4.1|
|csharp|ms-vscode|1.9.0|
|PowerShell|ms-vscode|1.0.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|material-icon-theme|PKief|2.0.6|
|stylelint|shinnn|0.24.0|

Steps to Reproduce:

1.  Open "Go to File..." menu.
1. Type pattern to find a file.
1. For some files the search list contains the file twice.
1. The duplicate will be opened in a separate tab. The tab tooltip shows that the path is different from original one in the case, e.g. the original path is "C:\Projects\Project\file.ts" but the duplicate has "C:\projects\project\file.ts".

Expected
The files should be presented once in the list and the paths should correspond to OS ones.

Is there a way to fix it? As that behavior often leads me to a difference in the content of same file if I use "Go to File..." to switch between tabs. And I cannot determine the path difference in recently opened list.

Notes
* If I try to find files by pattern containing folder name, e.g. "proj file", then the recently opened list is empty and the file results one contains the single match (no duplicate).
* I tried to clear the recent files, no success.
* I tried to disable all extensions, no success.</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27200</IssueID>
    <Title>Please provide an option to copy without coloring</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 

Version 1.12.2
Commit 19222cdc84ce72202478ba1cec5cb557b71163de
Date 2017-05-10T13:20:36.315Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0

- OS Version:
OS Name:                   Microsoft Windows 10 Pro
OS Version:                10.0.15063 N/A Build 15063

Steps to Reproduce:

1. Open a file with syntax highliting (.json, C#, whatever)
2. Paste it into rich text app like Outlook, Teams, Skype for Business whatever.

You get something like this:

![image](https://cloud.githubusercontent.com/assets/481297/26407494/9a7558c8-409b-11e7-9f3d-554b271075f8.png)

This is highly annoying. Please provide an option to copy **without** colors.
</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27199</IssueID>
    <Title>Autocompletion API doesn't allow adding words</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Mac OS 10.11.6

Steps to Reproduce:

1. Install all-autocomplete extension
1. Edit any code where you would expect either snippets or intellisense to be offered - you can only see the word completions.
1. This has been discussed in #4791 but the reporter closed it

It seems that the current completion API doesn't allow for **adding** entries to the list, which is a problem, since any specialized completion plugins would only focus on their own domain, assuming the "other" completions are preserved. For example, `all-autocomplete` extension provides much missing feature of completing words from other open files (typical in many modern editors).

If there is a way to use the API so that the extension can add its own entries to the list, please let @atishay know so he can update the plugin. Or please treat this as an enhancement request to allow that.
</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27186</IssueID>
    <Title>The information shows chaos on console！</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|theme-material|bcmarinacci|1.3.0|
|python|donjayamanne|0.6.4|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.2.2|
|code-runner|formulahendry|0.6.17|
|theme-material-theme|jprestidge|1.0.1|
|ftp-sync|lukasz-wronski|0.3.3|
|csharp|ms-vscode|1.9.0|
|vscode-css-peek|pranaygp|1.2.4|
|vscode-icons|robertohuertasm|7.7.0|
|html-css-class-completion|Zignd|1.2.0|;


---

Steps to Reproduce:

The information shows chaos on console！
![image](https://cloud.githubusercontent.com/assets/18578376/26395957/4b10c6d8-40a4-11e7-8a81-954b56b25e44.png)
</Description>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27149</IssueID>
    <Title>Workspace integrated terminal not overriding?</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|project-manager|alefragnani|0.17.0|
|vscode-yaml-validation|djabraham|0.0.1|
|python|donjayamanne|0.6.4|
|xml|DotJoshJohnson|1.7.0|
|tf-snippets|loganarnett|0.5.0|
|terraform|mauve|0.0.16|
|terraform-snippets|mindginative|1.4.2|
|PowerShell|ms-vscode|1.1.0|
|vscode-docker|PeterJausovec|0.0.14|;


---

Steps to Reproduce:

1. In the user settings, override with "terminal.integrated.shell.windows": "C:\\WINDOWS\\Sysnative\\cmd.exe"
2. In the workspace settings, revert is back with     "terminal.integrated.shell.windows": "C:\\WINDOWS\\Sysnative\\WindowsPowerShell\\v1.0\\powershell.exe"
3. Start a new integrated terminal - cmd.exe is run instead of powershell.exe. This is even after restarting VSC and closing and reopening the folder also.</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27135</IssueID>
    <Title>Shared profile feature request</Title>
    <Description>A great feature would be to have a profile stored in the cloud so that whenever installing/using VSCode on a new machine, it's easy to keep my plugins, editor settings consistent.


Thanks.</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27130</IssueID>
    <Title>Zooming out is settings cursor position off some pixels left in editor</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Ubuntu 16.04 LTS x64

Steps to Reproduce:

1. Open editor and zoom out (using shortcut or from View menu)
2. On a blank line, type some text (example: 123456789012345...)
3. When typing, the cursor is shown shifting some pixel to the right than the actual position. (It is more noticeable after writing 10-15 characters).

Cursor is shifting proportionally to the actual cursor position; the higher the number of characters the cursor is away from left side, the cursor is shifting more to the right.

In the following image, the cursor is actually at the end of line but showing before the last character:
![image](https://cloud.githubusercontent.com/assets/4369071/26351622/fc3d45f0-3fd5-11e7-8b2f-6c17a827ff15.png)
</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27127</IssueID>
    <Title>Add option for config sync across multiple installations</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.12.2 (1.12.2)
- OS Version: Mac

This is a suggestion

VCode should have an option to sign in with Outlook.com/hotmail account and all config should be able to sync across multiple installations though user profile. Option to also create multiple configs like Home Config, Weekend Config or Office Config and easier way to switch.

Lot of times we do some coding in office and switch laptop or use a bigger desktop in home. It would be really easy to sync rather than the Github hack sync way of doing the same. 

Cheers!</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27119</IssueID>
    <Title>multiselect by regex</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|calculate|acarreiro|1.1.0|
|insertnumbers|Asuka|0.9.1|
|code-select-until|jakelucas|0.6.0|
|cpptools|ms-vscode|0.11.1|
|vscode-jsp|pthorsson|0.0.2|
|text-marker|ryu1kn|0.3.0|
|vscode-fileutils|sleistner|2.5.1|
|vscode-hexdump|slevesque|1.3.0|;


---

Steps to Reproduce:

1. make a context with the "01234567890"
2. ctrl+f and enable with regex
3. search the regex string "\B(?=(\d{3})+(?!\d))"
4. I would like to see there are 3 cursors on "01234567890" as you can see them in sublime text.</Description>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27104</IssueID>
    <Title>Recently opened files includes deleted files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: macOS 10.12.4

Steps to Reproduce:

1. In any project, open a file that exists (let's call it `foo.txt`).
2. Close VS Code.
3. Delete `foo.txt` from your file system.
4. Open VS Code.
5. Use quick open to search for the name of a file. A result will appear but if you try to open it, an error will happen `Unable to open 'foo.txt': File not found (/Users/.../foo.txt).`
6. Repeating step 5 multiple times the same thing happens.

I actually can't reproduce step (6) any more but I got into this state somehow. When I try to reproduce it seems to correctly eliminate the file after the first error.

Either way, it would be nice if VS Code removes files from the recently opened list that were deleted.</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27085</IssueID>
    <Title>Enter behavior on fully typed autocompletion suggestion</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: osx 10.12.4

Steps to Reproduce:

1. Trigger autocomplete window
1. Fully type out some suggestion
1. Press enter

Expected: The autocompletion window goes away and the text doesn't change
Actual: The autocompletion window goes away but a newline is inserted

gif pressing enter:
![may-22-2017 11-57-52](https://cloud.githubusercontent.com/assets/3452559/26324036/0049e73e-3ee6-11e7-997c-13368da79fa3.gif)

This is also inconsistent with the tab behavior (a tab isn't inserted), which is interesting:

gif pressing tab:
![may-22-2017 11-59-58](https://cloud.githubusercontent.com/assets/3452559/26324093/3ed53648-3ee6-11e7-893c-0c3f2063e6fd.gif)
</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27062</IssueID>
    <Title>Ctrl + Click = go to link shortcut === bad UX</Title>
    <Description>In Windows the key shortcut to go to a link is CTRL + Click. While editing you select code and CTRL + C to copy allot. While doing this you will go to a link instead if you already pressed CTRL while selecting.</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27060</IssueID>
    <Title>Theme: Customise blue link color</Title>
    <Description>- VSCode Version: 1.13.0 insiders

Steps to Reproduce:

1. Open the welcome page or quick command panel
2. Check blue links

Can be possibile have a color key to customise these links?
&lt;img width="1015" alt="screen shot 2017-05-22 at 10 32 07" src="https://cloud.githubusercontent.com/assets/10454741/26299170/2383f142-3eda-11e7-815a-17d0da6d5bcf.png"&gt;
&lt;img width="602" alt="screen shot 2017-05-22 at 10 33 51" src="https://cloud.githubusercontent.com/assets/10454741/26299178/2ef0a124-3eda-11e7-870c-15d0f28e4d30.png"&gt;

</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27058</IssueID>
    <Title>HTML PHP hybrid writing</Title>
    <Description>\&lt;?php include 'head.html'; ?\&gt;
\&lt;body\&gt;

html php 混合编写 html 不能自动补全

HTML PHP mixed programming HTML cannot automatically complete</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27054</IssueID>
    <Title>The color of the modified files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: macOS 10.12.4

I modified several files in the project, and I didn't have a commit, and I needed its filename to be a different color so that I could make a better distinction
</Description>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27039</IssueID>
    <Title>Python VENV environments not recognized</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10 version 1703 (OS Build 15063.296)
- Extensions installed: Python v0.6.4

VS Code does not appear to recognise the structure of Python virtual environments, requiring the code to be run outside of VS, from a terminal window.

Steps to Reproduce:

1. Create a Python `venv` environment (`python -m venv foldername`)
2. Install 3rd party modules to `venv` (`Scripts\activate.bat`, `pip install -r requirements.txt`).
3. Note listed Problems in VS Code include numerous "E0401:Unable to import 'module'" pertaining to the installed (and imported) modules from step 2.</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27027</IssueID>
    <Title>Terminal Dislocation</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-html-css|ecmel|0.1.4|
|intellij-idea-keybindings|k--kato|0.2.10|;

Terminal Dislocation
---

Steps to Reproduce:

1.win10,使用4k分辨率,文本缩放350%
2.打开vscode,打开Terminal 



</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27026</IssueID>
    <Title>markdown.showpreview failed when file is located on a NAS (WD MyCloud and others)</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows 10 Prof. 1703

Steps to Reproduce:

1. Create a file like test.md with some markdown and store at 
a) on your computer ( i.e. c:\tmp) and 
b) on a Public Network path (i.e. \\NAS-3TB-II\Public)
2. Open in VS Code and try to open the preview with Ctrl-Shift-V
a) will work fine 
b) will fail

Reading and saving the file works with both locations, only preview fails.

On Ubuntu Gnome (16.04)/Virtualbox  it works fine on both locations.
</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27025</IssueID>
    <Title>Special input causes vscode to hang</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: macOS 10.12.4

Steps to Reproduce:

1. Create a new plain text file, paste "soooooooooooooooooooooooooooooo" into the first line.
2. Manually type "oooooooooooooooooooo" in the second line. The editor will hang when you are typing.

It seems like there are too many calls of function `findAllMatches`.
</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27020</IssueID>
    <Title>VS code always tells me "There are many bugs in the extension ... ". But I don't know which extension cause this problem.</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-caniuse|agauniyal|0.5.0|
|react-toolbox-snippets|alechp|0.12.0|
|EditorConfig|EditorConfig|0.6.2|
|redux-snippets|jameshrisho|0.0.2|
|weex|jaylinwang|0.4.0|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|code-beautifier|michelemelluso|1.7.2|
|vscode-postcss-sorting|mrmlnc|2.3.0|
|vetur|octref|0.6.10|
|vuehelper|oysun|0.1.0|
|vue-beautify|peakchen90|2.0.4|
|sass-indented|robinbentley|1.4.1|
|stylelint|shinnn|0.24.0|
|react-redux-es6-snippets|timothymclane|2.0.2|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27015</IssueID>
    <Title>Auto Complete pops up "invalid arguments" message</Title>
    <Description>An annoying warning message pops when using auto-complete (see image below)
I've disabled all extensions.

- OS Version: Ubuntu 16.04
- VSCode Version: 
Version 1.13.0-insider
Commit cdaa5f28efd6d6fa012a34a92a6cf3fe57928b38
Date 2017-05-19T05:11:19.365Z

Steps to Reproduce:

1. Create new JS file and save it
2. Start typing "module" and use Tab or Enter to auto complete
3. Delete the entire word and repeat step 2
3. A warning message saying: "invalid arguments" will pop up

![image](https://cloud.githubusercontent.com/assets/19211868/26281607/e15a7db6-3e04-11e7-999b-c41a89086761.png)
</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27011</IssueID>
    <Title>The code trace location is wrong!</Title>
    <Description>When I read the koa source code, I tracked the code and then jumped to a directory where it was the Users/yuantu/library/store/typescript/node_modules!
Hope for restoration!
Ps: then you want to know that the index.d.s file is the js code? I don't understand [tears] Want to learn

email: gw_iron@163.com</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27010</IssueID>
    <Title>x64 VSCode for Windows</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows 10 x64

Can we have 64-bits version of VSCode?

Reasons:

- Chrome and Node.js depend on V8 which has a JIT compiler. 32-bits version of V8 can only generate ia32 native code. 64-bits version of V8 can generate faster SIMD native code and not all of it is available in 32-bits (like AVX1 and AVX2). Since VSCode spends quite a large portion of time running JS code, there will a performance win to use x64 JIT compiler.
- In order to improve stability, performance, and security, Chrome automatically migrates to 64-bits Chrome for 64-bits OS users with more than 4GB RAM but use 32-bits Chrome. VSCode is unlikely to be attacked, but who can refuse more security and stability? [Reference](https://chromereleases.googleblog.com/2017/05/stable-channel-update-for-desktop_9.html)
- [Atom editor](https://atom.io/) provides both 32-bits and 64-bits executable for Windows.

Experiment:

- Download [prebuilt electron-v1.7.0-win32-x64](https://github.com/electron/electron/releases/download/v1.6.10/electron-v1.6.10-win32-x64.zip) and place it under `C:\electron`.
- Copy `C:\Program Files (x86)\Microsoft VS Code\resources\app` to `C:\electron\resources\app`
 - Launch `C:\electron\electron.exe`.

It did launch the outer UI of VSCode, it even picked up the editor theme of my original VSCode, but no content was shown.

I opened the developer tool and found the bug: some node.js modules are native addons built as 32-bits    .node (.dll) which is not compatible with 64-bits program. This can be configured in `node-gyp` to build 64-bits binaries.

What is the main concern not doing this?</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27008</IssueID>
    <Title>Debug -&gt; Add configuration results in "Cannot read property 'resource' of null"</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.16200
- Extensions: none
---

Steps to Reproduce:

1. Remove VS Code from system using ARP
2. Install VS Code from https://code.visualstudio.com/Download
3. Run VS Code
4. Click "Debug"
5. Click "Add Configuration"

Results in:

Error: Cannot read property 'resource' of null. 

</Description>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>27002</IssueID>
    <Title>终端显示错位</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.终端显示错位</Description>
    <CreatedDate>20/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26991</IssueID>
    <Title>Print option in File menu</Title>
    <Description>Please add a Print option to the application in the File menu.

While many scripts wont necessarily be printed onto paper due to code length etc having the option to print to pdf which would preserve code keyword colouring, formatting etc would be very useful for inclusion of code sections into training documents etc
</Description>
    <CreatedDate>20/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26984</IssueID>
    <Title>typescript 中的 模板字符串 中第一个表达式总是无法获取到变量提示 </Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Steps to Reproduce:

1.输入 es6 模板字符串 ``
2.在其中插入变量 ${ x } , 在 x 区域获取不到提示</Description>
    <CreatedDate>20/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26976</IssueID>
    <Title>The Bad display of the terminal</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|code-gnu-global|austin|0.2.2|
|vscode-markdownlint|DavidAnson|0.7.2|
|python|donjayamanne|0.6.4|
|matlab|Gimly81|0.5.0|
|MagicPython|magicstack|1.0.10|
|vscode-autoprefixer|mrmlnc|2.0.0|
|cpptools|ms-vscode|0.11.1|
|vscode-icons|robertohuertasm|7.7.0|
|python|tht13|0.2.3|
|markdown-pdf|yzane|0.1.7|;


---

Steps to Reproduce:

1. I use the keyboard shortcut Ctrl + ` to open the terminal
2. The terminal show me the bad display

the screenshot:



![bug](https://cloud.githubusercontent.com/assets/25470568/26272620/be3d07b4-3d4f-11e7-9525-45187046783b.png)
</Description>
    <CreatedDate>20/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26975</IssueID>
    <Title>The integrated terminal works abnormally.</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|terminal|formulahendry|0.0.8|
|hoogle-vscode|jcanero|0.0.4|
|language-haskell|justusadam|2.1.1|
|hindent-format|monofon|0.0.5|
|csharp|ms-vscode|1.9.0|
|phoityne-vscode|phoityne|0.0.12|
|stylish-haskell|vigoo|0.0.8|;


---

Steps to Reproduce:

1. Open VSCode
2. Open integrated terminal
3. input "dir" command and press Enter.
![2017-05-20_11-08-29](https://cloud.githubusercontent.com/assets/1961129/26272505/bfe6ed9e-3d4c-11e7-8b1b-2f2820bb4edf.png)
</Description>
    <CreatedDate>20/05/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26960</IssueID>
    <Title>Toggle Extension auto update</Title>
    <Description>I think we should add an option to toggle the extension auto-update in this menu - perhaps we considered this and did not do it for some reason?

From my point of view it will help with discovery and it's also good even if we do many auto-update the new default i.e. users will be able to turn off without needing to go int settings editing.

![image](https://cloud.githubusercontent.com/assets/1051190/26262642/55a02602-3c8a-11e7-88f8-bb62dae674be.png)

cc // @egamma </Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26958</IssueID>
    <Title>Dim files/folders from .gitignore in the file tree</Title>
    <Description>
- VSCode Version: 1.12.2
- OS Version: Windows 10

Atom is sensitive to the .gitignore file in a repository and dims out files and folders in the file tree that are in the .gitignore. It would be handy if VSCode did that too.
</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26928</IssueID>
    <Title>markdown preview doesn't show images with whitespace in filename (on Linux)</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:16:25.899Z)
- OS Version: Linux x64 4.9.0-0.bpo.2-amd64
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.12.0|
|python|donjayamanne|0.6.0|
|vscode-todo-parser|minhthai|1.8.9|
|cpptools|ms-vscode|0.10.4|;


---
I did a search for this issue and found this closed issue: https://github.com/Microsoft/vscode/issues/7898 which seems to be the same problem.

This is obviously for an other version of Code and on an other OS.

Steps to Reproduce:
1. This works fine: `![Test image](images/test_image.svg)` as long as `test_image.svg` exists
2. Replace the underscore with a whitespace and rename the file accordingly, now it just shows `![Test image](images/test image.svg)` in the preview i.e. just the text, no image.</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26924</IssueID>
    <Title>Found Modules or Symbols no longer have IntelliSense priority [BUG]</Title>
    <Description># Description
When importing a symbol from another module, IntelliSense detects importable modules.
Before 1.12.1 found modules or symbols (of modules) were prioritized in the suggestion display, as of 1.12.1, they no longer are.
Code snippets now seem to have the same priority, and all suggestions are sorted alphabetically.

If **nothing was typed yet**, symbol suggestions are prioritized as expected, modules are still ordered alphabetically.

# Spec information
- VSCode Version:
1.12.1 &amp; 1.12.2
- OS Version:
Ubuntu 16.04 x64

# Steps to Reproduce:

1. Create any typescript module with any exported symbol
2. Import the symbol from another typescript file

# Screenshot Documentation:
For modules:
![selection_078](https://cloud.githubusercontent.com/assets/16593597/26240311/d92ec5aa-3c80-11e7-90c5-dc283decd89f.png)
For symbols:
![selection_076](https://cloud.githubusercontent.com/assets/16593597/26240313/d931fe28-3c80-11e7-9ffb-45992bea2bb5.png)
Does not appear if nothing was typed yet:
![selection_077](https://cloud.githubusercontent.com/assets/16593597/26240312/d930ca08-3c80-11e7-93df-30666f655456.png)
Module import not affected:
![selection_079](https://cloud.githubusercontent.com/assets/16593597/26240922/19cdf110-3c83-11e7-8e60-b56f0980d9c8.png)
</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26923</IssueID>
    <Title>php folding with heredoc</Title>
    <Description>when trying to fold a function with heredoc text this will only hide the lines before the heredoc text.

Sample:

```
function Test() 
{
    print_r("Sample function for testing folding with heredoc...\r\n");
    $text = &lt;&lt;&lt;EOT
This is a sample text
just to get some lines
for showing the problem
when folding a function
with heredoc text.
EOT;
    print_r("$text\r\n");
}
```

After folding:

```
function Test() 
{...
This is a sample text
just to get some lines
for showing the problem
when folding a function
with heredoc text.
EOT;
    print_r("$text\r\n");
}
```</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26916</IssueID>
    <Title>Add to .gitignore option in Source Control tab</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

The Source Control tab already detects when git is used.
Can we have "Add to .gitignore" on the list for non tracked files?

![image](https://cloud.githubusercontent.com/assets/11232402/26238685/6e4d9e60-3c7a-11e7-8dca-aa9a2e83bfe5.png)
</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26915</IssueID>
    <Title>Invalid argument on insiders while editing TS</Title>
    <Description>- VSCode Version: cdaa5f2
- OS Version: Windows 10 x64

Steps to Reproduce:

1. On a TS file, inside a lodash function (_.sample) when first filling the arguments, it gave me a warn "Invalid argument"
2. The content of devtools was at this time
![image](https://cloud.githubusercontent.com/assets/461084/26238291/d6e590b2-3c4e-11e7-9b72-67a1abc68c67.png)
![image](https://cloud.githubusercontent.com/assets/461084/26238322/f40ce122-3c4e-11e7-89c2-70fa9dc6a16a.png)

3. Sample code:
![image](https://cloud.githubusercontent.com/assets/461084/26238310/e3f5e446-3c4e-11e7-8fd8-a28fa0f29afd.png)</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26905</IssueID>
    <Title> Cannot convert undefined or null to object</Title>
    <Description>Issue Id: &lt;b&gt;4b2d61d7-6d7a-6a06-e084-010eb911773d&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.12.2&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot convert undefined or null to object&lt;br /&gt;[/vs/editor/common/viewModel/viewModelDecorations.ts#L81:2 (this)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/viewModel/viewModelDecorations.ts#L81:2 (this))&lt;br /&gt;[/vs/editor/common/viewModel/viewModelImpl.ts#L375:22 (onModelDecorationsChanged)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/viewModel/viewModelImpl.ts#L375:22 (onModelDecorationsChanged))&lt;br /&gt;[/vs/editor/common/viewModel/viewModelImpl.ts#L234:7 (_onEvents)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/viewModel/viewModelImpl.ts#L234:7 (_onEvents))&lt;br /&gt;[/vs/editor/common/viewModel/viewModelImpl.ts#L131:77 (onEvents)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/viewModel/viewModelImpl.ts#L131:77 (onEvents))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L295:14 (arg1)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/eventEmitter.ts#L295:14 (arg1))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L279:31 (target)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/eventEmitter.ts#L279:31 (target))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L232:7 (_emitEvents)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/eventEmitter.ts#L232:7 (_emitEvents))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L211:8 (_emitCollected)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/base/common/eventEmitter.ts#L211:8 (_emitCollected))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L212:22 (endDeferredEmit)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/model/textModelWithDecorations.ts#L212:22 (endDeferredEmit))&lt;br /&gt;[/vs/editor/common/model/textModelWithDecorations.ts#L253:14 (changeDecorations)](https://github.com/microsoft/vscode/blob/19222cdc84ce72202478ba1cec5cb557b71163de/src/vs/editor/common/model/textModelWithDecorations.ts#L253:14 (changeDecorations))&lt;br /&gt;</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26901</IssueID>
    <Title>Add region commenting feature/ Collapse code by region</Title>
    <Description>Please add the ability to comment a code by region and enable to collapse it by region

//#region section1
code here....
//#endregion


</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26900</IssueID>
    <Title>Add `Toggle MiniMap` to `View` menu</Title>
    <Description>I'm a bad person cluttering up menus - but I think this is a cool enough feature that it deserves a toggle in there.

@alexandrudima sending directly to you but fell free to push back/ask others etc.

I also appreciate that menu is getting long :)  And with a default setting [assuming we adopt it] discover-ability is less of an issue.  But this does give a nice way to turn it both on and off.

Sean

// cc @egamma </Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26898</IssueID>
    <Title>终端滚动条无法拖动，终端输出信息无法复制</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-mocha|Compulim|0.1.1|
|vscode-eslint|dbaeumer|1.2.11|
|tslint|eg2|0.15.0|
|beautify|HookyQR|1.0.2|
|vscode-icons|robertohuertasm|7.7.0|
|guides|spywhere|0.7.0|;


---

Steps to Reproduce:

1.终端的滚动条不能拖动，上下翻页只能靠滚动条
2.终端界面里的信息无法复制</Description>
    <CreatedDate>19/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26896</IssueID>
    <Title>Could not install typings file for JavaScript language features. Please ensure that NPM is installed and is in your PATH</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: mac 10.12.5

Steps to Reproduce:

Open vscode, wait a while, get the error message in the title.

I use a the fish shell with nvm, so npm isn't available in my path until I run `npm`, `node`, or `nvm`. I've setup a script at `~/bin/npm` to work around this, but no way to specify vscode to use it, as that is a custom path that my dotfiles adds.

---

If vscode uses node, it may benefit from [safeps](https://github.com/bevry/safeps/blob/0e7cff711aeea93bafbf5d35869dd9c1271226c9/source/index.js#L1075-L1140) which has code in there to determine an executables path across many different environments.</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26882</IssueID>
    <Title>Allow access to the currently active 'when clauses' from the extension api</Title>
    <Description>Hi, I couldn't find a way to access the currently active 'when clauses' from an extension. This could be useful to allow the extension to behave in a different way if some clauses are active or not. I have seen it requested multiple times in Gitter.

An example of a use case: http://stackoverflow.com/questions/43372232/a-method-to-expose-the-vscode-active-when-clause-contexts</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26863</IssueID>
    <Title>Add Printing Option</Title>
    <Description>Right now it doesn't seem possible to print the file or just selected lines!</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26861</IssueID>
    <Title>Code preferences hotkeys bug (sys language - English, typing language - English)</Title>
    <Description>
![2017-05-18_13-15-16](https://cloud.githubusercontent.com/assets/18104686/26197761/21836c6c-3bcc-11e7-9d18-a8e1ede7a328.png)
- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:13:11.413Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.7.2|
|beautify|HookyQR|1.0.2|
|code-settings-sync|Shan|2.7.0|
|indenticator|SirTori|0.4.2|
|html-css-class-completion|Zignd|1.2.0|
|html-snippets|abusaidm|0.1.0|
|vscode-color|anseki|0.4.1|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|open-html-in-browser|coderfee|0.0.9|
|vscode-eslint|dbaeumer|1.2.11|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|vscode-npm-script|eg2|0.1.9|
|auto-rename-tag|formulahendry|0.0.11|
|code-runner|formulahendry|0.6.16|
|debugger-for-chrome|msjsdiag|3.1.1|
|vscode-icons|robertohuertasm|7.7.0|
|darcula-extended|smlombardi|3.3.2|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26860</IssueID>
    <Title>Extensions organization</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10

This is ideas and requests for the current extensions organization.
1. When I have many installed extensions, I can hardly remember my appraise for them and reason for disabling. This can be improved if we have customizable categorys (directory) / tags, or integrated reviews of marketplace or provide comment field.
2. Sometimes I like some extensions's ideas or features, but don't intend to use it for now, I have to install and disable it for recollect, or manually list them. The marketplace should provide a collection / favorites feature.
</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26859</IssueID>
    <Title>Terminal strings shift to the right</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: 15063.296

Steps to Reproduce:

1. Open Terminal
2. Write anything
3. Get this 
![image](https://cloud.githubusercontent.com/assets/11617476/26192208/70afbbe6-3bb9-11e7-8b82-3b1ff076ce74.png)

</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26858</IssueID>
    <Title>New theme order in quick open breaks muscle memory</Title>
    <Description>F1 &gt; type 'theme'
Notice that there is a new hit which is ranked N#1
This is a problem becuase it breaks people's muscle memory. I personally change a theme once per day at least and for doing that I just quickly do F1 'theme' and press enter without looking and I always get the wrong option.
Could we rename the theme generator to be worse ranked?

![screen shot 2017-05-18 at 10 04 51](https://cloud.githubusercontent.com/assets/1926584/26192331/82e312de-3bb1-11e7-8f02-c0905045f6a7.png)

</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26850</IssueID>
    <Title>Command list should sorting commands by use frequency</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|material-icon-theme|PKief|2.0.6|
|box-comment|canna|0.0.1|
|vscode-eslint|dbaeumer|1.2.11|
|python|donjayamanne|0.6.4|
|docthis|joelday|0.4.4|
|vscode-colorize|kamikillerto|0.5.1|
|vs-color-picker|lihui|0.6.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|vetur|octref|0.6.10|
|advanced-new-file|patbenatar|0.4.3|;


---

The command list(default shortcut: Cmd+Shift+P) is now sorting by characters, I think it will be more convenience if VSCode could sorting by the frequency of use.

For example, I often expect when I enter "install", the first command of the list is "Extensions: Install Extensions", but now is "Extensions: Disable All Installed Extensions", that really weird...</Description>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26836</IssueID>
    <Title>find next/previous re-opens find dialog </Title>
    <Description>- VSCode Version:1.12.2
- OS Version:Win 10

summary: don't open the "find dialog" when repeating a find.  It doesn't add any value and clutters the screen

I frequently use find next/previous to quickly navigate thru my file when I need to review and/or edit portions of the code.  The find dialog box obscures a portion of my code effectively causing me to have to close it after each ```find```.  I'm unclear on the value of opening the dialog on a find next - if I wanted to start a new search, I would.  
</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>17/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26826</IssueID>
    <Title>Feature Request -- Allow install from windows app store.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Latest
- OS Version: Windows 10

Please allow for install from windows app store.  Would like to use on a windows 10 s machine
</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>17/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26822</IssueID>
    <Title>Hope console instances can be displayed as tabs, so that I can run commands parallel.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: windows 7 SP1

Steps to Reproduce:

1. Ctrl + `   =&gt;  console shown
2. The console instance dropdown list could display as sub tabs. Maybe allow user to switch display mode.
</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>17/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26806</IssueID>
    <Title>Change All Occurrences doesn't select all occurences</Title>
    <Description>I have a JSON export of around 600k lines with a lot of repeating sections and Change All Occurrences selects only a small subset of all occurrences at a time.

In my case number of selections is always limited to 999. Even if I select a smaller section it's still limited to 999 selections so it's not a character limit.

Might be related to #331

- VSCode Version: 1.12.1
- OS Version: Fedora 25 x64

Steps to Reproduce:

1. Open a huge JSON with a lot of repeating sections
2. Select a section and press Ctrl+F2
</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26805</IssueID>
    <Title>Scrolling lag when using the touchpad on Surface pro 4</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|scala|daltonjorge|0.0.4|
|cpptools|ms-vscode|0.11.0|;


---

Steps to Reproduce:

1. Minimize the window of vscode
2. Recovery the window of vscode to maximum size
3. Then scrolling become lag
</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26803</IssueID>
    <Title>Cannot write code in editor on new empty files</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (9843623452cbb9eea0c57e2ccc371b4d2c3c2d37, 2017-05-17T06:05:58.874Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|jsx|TwentyChung|0.0.1|
|file-templates|brpaz|1.1.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-eslint|dbaeumer|1.2.11|
|vscode-babel-coloring|dzannotti|0.0.4|
|tslint|eg2|0.15.0|
|auto-close-tag|formulahendry|0.4.1|
|debugger-for-chrome|msjsdiag|3.1.1|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|7.7.0|;


---

Steps to Reproduce:

1. Create a new file
2. Try to write code in editor on an empty file</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26792</IssueID>
    <Title>CSS Tab Completions giving unexpected results ?</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: MacOS sierra 10.12.4
## List of installed extensions
```
EditorConfig.EditorConfig@0.9.3
HookyQR.beautify@1.0.2
christian-kohler.path-intellisense@1.4.2
dbaeumer.vscode-eslint@1.2.8
dracula-theme.theme-dracula@1.17.0
eg2.tslint@0.15.0
mitchdenny.ecdc@0.10.3
msjsdiag.debugger-for-chrome@3.1.1
naumovs.theme-oceanicnext@0.0.4
robertohuertasm.vscode-icons@7.7.0
```
## Steps to Reproduce:
### Expected
```scss
//type and hit tab.
df --&gt; display: flex;
posa --&gt; position: absolute;
```

### Actual
```scss
//type and hit tab
df --&gt; stroke-dashoffset: 
posa --&gt; padding-block-start: 
```

The funny thing is, if I hit undo and hit tab again, they give me the desired result. So
```scss
df --&gt; stroke-dashoffset: **UNDO** df --&gt; display: flex;
```

**NOTE:** The problem exists in the insiders build, 1.13.0 too with ZERO extensions installed. </Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>17/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26790</IssueID>
    <Title>When VSCode exits it leave terminal executed applications running instead of closing them.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: Windows 10

Steps to Reproduce:

1. Open the terminal run something like an Node.js server.
2. Close vscode.

You will see that the Node.js server is still running in background.</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26789</IssueID>
    <Title>EditorFontSize equivalent for Explorer text</Title>
    <Description>Will be good to have a settings flags for edit the explorer look, like  text size and font .</Description>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26774</IssueID>
    <Title>"Find All References" throws error</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows 10.

Steps to Reproduce:

1. Hover over a function name (optionally select / highlight function name).
2. Right-click and select "Find All References"

produces error included below.  Happens most times, but not _every_ time, and I've not been able to figure out any pattern.  When it does happen, the interface incorrectly reports no matches - which is not ideal.

[Error - 7:22:22 am] 'references' request failed with error.
Error processing request. Debug Failure. False expression: 
Error: Debug Failure. False expression: 
    at Object.assert (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:2898:23)
    at importerFromModuleSpecifier (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62027:22)
    at forEachImport (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:61985:28)
    at getDirectImportsMap (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:61962:17)
    at Object.createImportTracker (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:61736:36)
    at Object.getImportSearches (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62476:59)
    at searchForImportsOfExport (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62512:32)
    at getImportOrExportReferences (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62793:21)
    at getReferencesAtLocation (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62731:17)
    at getReferencesInContainer (c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\tsserver.js:62693:21)
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>17/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26766</IssueID>
    <Title>Feature request: Toolbar</Title>
    <Description>Can we have a simple optional toolbar with custom buttons? One row will be enough.
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26760</IssueID>
    <Title>terminal layout error</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-css-formatter|aeschli|0.0.2|
|path-intellisense|christian-kohler|1.4.2|
|python|donjayamanne|0.6.4|
|vue-snippets|hollowtree|0.1.1|
|MagicPython|magicstack|1.0.10|
|code-settings-sync|Shan|2.7.0|
|python|tht13|0.2.3|;


---

Steps to Reproduce:

when I open the terminal ,the layout is wrong 
![terminal layout error](https://cloud.githubusercontent.com/assets/7665212/26115350/571df756-3a92-11e7-9f43-323e80481997.png)
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26751</IssueID>
    <Title>annoying space in integrated terminal</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|vscode-file-peek|abierbaum|1.0.1|
|html-snippets|abusaidm|0.1.0|
|project-manager|alefragnani|0.16.0|
|vscode-color|anseki|0.4.1|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.4.2|
|gitignore|codezombiech|0.5.0|
|vscode-instant-markdown|dbankier|1.1.0|
|vscode-yaml-validation|djabraham|0.0.1|
|githistory|donjayamanne|0.2.0|
|EditorConfig|EditorConfig|0.9.3|
|tslint|eg2|0.15.0|
|vscode-npm-script|eg2|0.1.9|
|auto-close-tag|formulahendry|0.4.1|
|vscode-todo|MattiasPernhult|0.8.0|
|sublime-keybindings|ms-vscode|2.0.1|
|debugger-for-chrome|msjsdiag|3.1.1|
|indent-rainbow|oderwat|0.6.1|
|material-icon-theme|PKief|2.0.6|
|code-settings-sync|Shan|2.7.0|
|autoimport|steoates|1.2.2|
|js-complexity-analysis|TomiTurtiainen|1.0.4|
|bootstrap-3-snippets|wcwhitehead|0.0.9|
|html-css-class-completion|Zignd|1.2.0|;


---

Steps to Reproduce:

1.open integrated terminal
2.The terminal has special spaces and wired line wrap
![image](https://cloud.githubusercontent.com/assets/8097465/26108027/ced5a4a2-3a7d-11e7-9deb-b33e5d298809.png)
3.type in " clear" or "ctrl+l" can fix it temporarily but not solution</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26750</IssueID>
    <Title>The markdown preview is not interpreting checkboxes [ ]</Title>
    <Description>- VSCode Version: Code 1.12.2 (19222cdc84ce72202478ba1cec5cb557b71163de, 2017-05-10T13:20:36.315Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.7.2|
|xml|DotJoshJohnson|1.7.0|
|beautify|HookyQR|1.0.2|
|ecdc|mitchdenny|0.10.3|
|vscode-icons|robertohuertasm|7.7.0|
|vscode-sql-beautify|sensourceinc|0.0.4|;


---

Steps to Reproduce:

1.create a md file
2.add a checkbox i.e. [ ] item1
3.preview the markdown file

In the preview pane the item1 line appears as **[ ]item1**. Is this the expected preview for checkboxes? </Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26733</IssueID>
    <Title>[Insiders] Python snippet cursor doesn't get the right position</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.13.0-insider (1.13.0-insider)

- OS Version: macOS 10.12.5 (16F73)

Steps to Reproduce:

1. open a python file
2. try to use a snippet like def or class
3. The cursor is just at the image position but not a usable snippet position 

![5cee803e-779a-4b0d-9bcd-e6bfb46d232a](https://cloud.githubusercontent.com/assets/5387479/26098669/15109170-3a5b-11e7-8b94-2f5703c07c05.png)
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26732</IssueID>
    <Title>Terminal line wraps unexpected</Title>
    <Description>- VSCode Version:1.12.2
- OS Version:win10

The problem is showed as follows:

![qq 20170516165806](https://cloud.githubusercontent.com/assets/734818/26097985/ec31f5c0-3a58-11e7-9a25-f53e97dbd2d1.png)

And the cursor is not on the right position yet.</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26731</IssueID>
    <Title>Some icons are messed after update and using 'code' CLI</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: 10.12.5 (16F73)

Steps to Reproduce:

1. Open vscode from CLI.
2. Notice some icons are messed up
3. Issue is present only when using 'code' CLI from terminal. 
![2017-05-16 11 52 27](https://cloud.githubusercontent.com/assets/103639/26097724/2921fe9c-3a2e-11e7-933e-a143e150466d.png)

 
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26713</IssueID>
    <Title>命令行格式乱怎么办~</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.2
- OS Version: window 10.0.15063

![tim 20170516115237](https://cloud.githubusercontent.com/assets/2998925/26089179/4a6866fe-3a2e-11e7-9925-2531d611360c.jpg)

命令行格式乱怎么办~</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26702</IssueID>
    <Title>High CPU usage in ubuntu16.04</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12
- OS Version: ubuntu 16.04

Steps to Reproduce:

1. run the vscode and use the top command in shell to check the cpu usage
2. find more than 137.9% usage of CPU without run projects.
</Description>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26698</IssueID>
    <Title>Integrated Terminal does not allow clicking on URLs with fewer than two periods in the domain name.</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.3|
|bazel-code|DevonDCarew|0.1.4|
|material-icon-theme|PKief|2.0.5|
|python|donjayamanne|0.6.4|
|Theme-azure|gerane|0.0.2|
|Theme-1337|ms-vscode|0.1.4|;

The terminal automatically allows you to hold down cmd (on mac) and click on a string that appears to be a URL. The parser seems to be overly strict as to what constitutes a URL. In this case, it looks to see if there are at least two periods in the domain name. This is often not the case, as debug output could have URLs such as:

http://internal_server/some_path

(Interestingly enough, http://localhost/some_path does highlight so it seems that this one-word domain is special-cased by the parser.)

---

**Steps to Reproduce:**

1. Open a terminal window inside of VSCode
2. Type the following (without quotes):
`echo http://a.b.c/path` and press ENTER
3. Hold down CMD (on mac, presumably CTRL on Windows) and hover your mouse over the URL. The URL will become clickable.
4. Repeat step 2 and 3 for the following URLs:
`http://a.b/path` (Not clickable)
`http://a/path` (Not clickable)
`http://localhost/path` (Clickable)
`http://internal_server/some_path` (Not clickable)
`http://a:8000/path` (Not clickable)

**Expected:** All the links above should be clickable.</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26697</IssueID>
    <Title>How to set environment variables before running integrated terminal?</Title>
    <Description>My current integrated shell terminal on Windows 10 is a batch file this these contents:

```bat
@echo off

set CHERE_INVOKING=1

C:\Cygwin64\bin\zsh.exe --login --interactive
```

This allows me to start Cygwin's Zsh at the current opened folder path. But this will make it so that the integrated terminal is "wrapped" around a batch script, which has a few issues. For instance, trying to press `Ctrl+D` to terminate the shell, sometimes I get `Terminate batch job (Y/N)?` and it's annoying.

How can I set `CHERE_INVOKING=1` and call `zsh.exe` directly (with `--login` and `--interactive` arguments) with that environment variable set? Is there anyway to do this within VS Code without a batch file?</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26657</IssueID>
    <Title>Terminal display with Exception</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Go|lukehoban|0.6.61|
|cpptools|ms-vscode|0.11.0|;


---

Steps to Reproduce:

1.Open Integrated Terminal
2.Screenshot as follows:
![image](https://cloud.githubusercontent.com/assets/7413974/26062827/9740edc2-39be-11e7-8496-2dd3ab1e09e5.png)
![image](https://cloud.githubusercontent.com/assets/7413974/26062842/a77d9fb4-39be-11e7-86a3-75741b4cd791.png)
</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26655</IssueID>
    <Title>'Reveal in Explorer' key shortcut does not behave as context menu item</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13
- OS Version: Windows

Steps to Reproduce:

1. Open folder in workspace, go to Explorer viewlet
2. Right click on the empty space within the viewlet
3. Select 'Reveal in Explorer (Alt+Shift+R)' -&gt; **Folder opened in Explorer**

Now do step 2 again and use 'Alt+Shift+R' shortcut -&gt; **Folder is not opened in Explorer**.
</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26651</IssueID>
    <Title>Integrated Terminal: The Output is displayed unformatted</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows 10 15063

Steps to Reproduce:

1. Open integrated terminal;
2. Type any command, such as "Dir"
</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26647</IssueID>
    <Title>Bug: not open the integrated terminal when press ctrl+` with no-English keyboard layout.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Ubuntu 16.04 (64bit)

Steps to Reproduce:

1. First time (whether it is better to say - the first window) open VS Code  with Ukrainian keyboard layout.
2. Press ctrl+`

Even then switch to English keyboard layout, hotkey ctrl+` not works.
</Description>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26623</IssueID>
    <Title>VSCode 1.12.1 standard c# snippets quit working after update</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-clock|Compulim|0.0.1|
|EditorConfig|EditorConfig|0.9.3|
|beautify|HookyQR|1.0.2|
|markdown-checkbox|PKief|1.0.2|
|vscode-docker|PeterJausovec|0.0.14|
|html-snippets|abusaidm|0.1.0|
|git-easy|bibhasdn|1.9.1|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|tslint|eg2|0.15.0|
|vscode-npm-script|eg2|0.1.9|
|rest-client|humao|0.14.3|
|csharpextensions|jchannon|1.3.0|
|Angular2|johnpapa|2.2.3|
|Go|lukehoban|0.6.61|
|markdown-shortcuts|mdickin|0.8.1|
|vscode-todo-parser|minhthai|1.8.10|
|mssql|ms-mssql|1.0.0|
|**csharp**|**ms-vscode**|**1.9.0**|
|debugger-for-chrome|msjsdiag|3.1.1|
|vscode-icons|robertohuertasm|7.7.0|
|yo|samverschueren|0.9.3|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. Open .cs file containing a C# class
2. Notice other features of the extension are functioning: Syntax Highlighting, IntelliSense, Go to Definition, Find All References, .NET Core Attach debugging, etc.
3. The extension is installed (see list above) in ~/.vscode/extensions/ms-vscode.csharp-1.9.0/
4. The snippets file exists in the snippets sub-dir as csharp.json
5. Common snippets like "prop", "namespace", etc. simply do not appear.
6. Note the "class" snippet does show up in the intellisense list but produces bad output:
```
    class Name
    {
    
    ,
    }|&lt;== the cursor is left here after specifying the class name and hitting return
```
7. "foreach" snippet does the same thing:
```
            foreach (var item in collection)
            {
            
            ,
            }|&lt;== the cursor is left here after specifying var, item and collection and hitting return
```
8. Command-Shift-p and "Insert Snippet" shows the snippets that will show up in context; all of the ones I tried from the list had the same formatting issues.
9. Here is what I see from csharp.json for the "class" snippet.
```
        "Class": {

                "prefix": "class",
                "body": [
                        "class ${Name}",
                        "{",
                        "       $0",
                        "}"
                ],
                "description": "Class"
        },
```
Given this I suspect there are some syntax errors in this file. But see below - it appears that is not the whole story.

_Note I did try to re-compile the extension in hopes that the json file would be regenerated somehow. But after npm i and doing npm run compile I got an error about missing tsconfig.json file and then also noticed there was no source delivered with the extension. So I stopped there._

Note the csharp.json file had not changed since Oct 2016 - there were 2 commits recently:
[csharp.json commmits](https://github.com/OmniSharp/omnisharp-vscode/commits/master/snippets/csharp.json)

There are several issues opened in the OmniSharp repo - [#1459](https://github.com/OmniSharp/omnisharp-vscode/issues/1459) is just one. So treat this as an FYI.

However they do reference [MS VSCode #26101](https://github.com/Microsoft/vscode/issues/26101) as part of the problem.

The [OmniSharp VSCode #1464](https://github.com/OmniSharp/omnisharp-vscode/issues/1464) issue was closed on May 8 by Dustin Campbell with a reference to MS #26101.

I am hoping you and the OmniSharp folks can fix this soon. It is impactful to snippets across all extensions.
</Description>
    <CreatedDate>14/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26614</IssueID>
    <Title>VS Code's Integrated terminal won't reinitialize on extension-required reload/ manual reload</Title>
    <Description>Reloading the window in VS Code would kill the terminal window and not reinitialize it again

- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.4.0-77-generic
</Description>
    <CreatedDate>14/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26612</IssueID>
    <Title>[Req] i18n for vs_code_editor_walkthrough.md</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Windows 10

Steps to Reproduce:
1. Open the "Interactive Playground" from VSCode's "Welcome" tab.
2. The Playground is English only.

Balance:
Allow it to be updated as another md file in Github will bring good flexibility, but bad management (if often update) and may be stuck with bad content.</Description>
    <CreatedDate>14/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26610</IssueID>
    <Title>Lag when editing code while WebGL is open in Chrome</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Windows 10

Steps to Reproduce:

1. Open a tab rendering rather heavy WebGL, keep it as the focused tab
2. Go to VSCode, try to edit (scroll around, type) a file

I'm not sure if this is a bug, as I'm not sure why Chrome's performance should affect VSCode's. I'm using the latest version, but I noticed this as well on older versions.
</Description>
    <CreatedDate>14/05/2017</CreatedDate>
    <ClosedDate>14/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26609</IssueID>
    <Title>Formatting in Integrated terminal</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Theme-Dreamweaver|gerane|0.0.2|
|vscodeilviewer|josephwoodward|0.0.1|
|csharp|ms-vscode|1.9.0|
|Material-theme|zhuangtongfa|2.7.4|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>14/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26605</IssueID>
    <Title>shortcuts arabic letters</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.10.14-200.fc25.x86_64
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.4|
|cpptools|ms-vscode|0.11.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|vscode-icons|robertohuertasm|7.7.0|;


---
a lot of the shortcut keys appear with Arabic letters instead of English 
for example: Ctrl+shift+ح

Steps to Reproduce:
 I don't how to reproduce it
 it only appeared on recent versions</Description>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26597</IssueID>
    <Title>File Renaming should update file import in TS files</Title>
    <Description>Hi,

I would like to have the Rename File functionality (F2) to work like the Rename Symbol (F2), wich should update the file impor reference in all TS files folder project wide.

- VSCode Version: 
- OS Version: Win64 v10

Steps to Reproduce:

1. select a file in File Explorer
2. Rename it
3. Look for imported references, all are broken remaining with the old filename
</Description>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>13/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26590</IssueID>
    <Title>win10 uwp？</Title>
    <Description>win10 uwp？
convert？</Description>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>13/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26585</IssueID>
    <Title>Tabs for built-in terminal windows</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Ubuntu 16.04 LTS

Steps to Reproduce:

1. Make the built-in terminal visible by pressing CTRL+`
2. Open another terminal window by pressing the + button at the top right in the terminal.

Now there will be a drop down menu to switch between terminal windows. But there should be a dedicated tab for each terminal windows for easy switch.


</Description>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26583</IssueID>
    <Title>Bottom panel's dropdown list behaves incorrectly when click it for the first time</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Microsoft Windows [Version 10.0.16193.1001]

Steps to Reproduce:

1. Open vscode and toggle panel
2. Click the dropdown list in 'Output' or 'Terminal' tab
3. When click it for the first time all its items will downward shift by one item's height
4. After that it will behave normally

Click it for the first time:
![image](https://cloud.githubusercontent.com/assets/8000820/26021573/5aed7b26-37c3-11e7-8883-3b95cf9cfd37.png)

After that:
![image](https://cloud.githubusercontent.com/assets/8000820/26021579/6df6649e-37c3-11e7-9b64-32f391b3c836.png)
</Description>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>13/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26577</IssueID>
    <Title>Window height not preserved across instances on second monitor</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Win7 x64

Basically it looks like it decreases the height of the window so it won't cover the taskbar. Taskbar doesn't extend to the second monitor so you end up having to resize the window to fit the screen height every time you re-open.

Steps to Reproduce:

1. Open vscode
2. Move to second monitor
3. Increase window height so that it fills the entire height of the second monitor
4. Close and re-open vscode
</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26559</IssueID>
    <Title>终端管理器界面显示不正常</Title>
    <Description>
&lt;img width="864" alt="a" src="https://cloud.githubusercontent.com/assets/16759385/26003542/920e2096-3765-11e7-9085-6bc785f569fb.png"&gt;
- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1.终端管理器界面显示不正常，在surface 3上，有一部分文字靠右显示，旧版好像没有这个问题
</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26556</IssueID>
    <Title>integrated terminal`s typesetting in chaos</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|jshint|dbaeumer|0.10.15|
|githistory|donjayamanne|0.2.0|
|start-git-bash|McCarter|1.2.1|;


---

Steps to Reproduce:

1. ctrl+` open the integrated terminal
2. input something whatever and press enter key
![default](https://cloud.githubusercontent.com/assets/17488293/25999796/15464338-3759-11e7-8cc9-304e2a0eb062.png)

</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26555</IssueID>
    <Title>Toolbar icons break after some time</Title>
    <Description>On two Macs I use, I've encountered icons breaking like this:

![image](https://cloud.githubusercontent.com/assets/109397/25999384/9680aa64-372d-11e7-9587-f8a8b9d11560.png)
![image](https://cloud.githubusercontent.com/assets/109397/25999391/9bb412b4-372d-11e7-9b12-a87ca0e7b5bc.png)
![image](https://cloud.githubusercontent.com/assets/109397/25999397/9f21950c-372d-11e7-890c-a85c3215aa4e.png)

I'd be happy to find a workaround to un-break them.

- VSCode Version: 1.12.1
- OS Version: macOS Sierra Version 10.12.4

Steps to Reproduce:

1. Install VS Code (I used `brew cask install visual-studio-code`)
2. Use it for a few days or weeks
</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26551</IssueID>
    <Title>User Snippets add extra unneeded characters</Title>
    <Description>- VSCode Version: 1.12+
- OS Version: MacOS

Steps to Reproduce:

1. add this javascript snippet in user snippet (there are tab in it) : 
```
	"function () =&gt;": {
		"prefix": "function () =&gt;",
		"body": [
			"($1) $2=&gt; {",
			"	$3",
			"}"
		],
		"description": "Créer une function fléchée"
	},
```
2. invoke it

You will get something like that, with an extra comma :
![snippet](https://cloud.githubusercontent.com/assets/5599375/25997462/63e91c50-371c-11e7-8d21-1e6f62592c3c.gif)

</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26537</IssueID>
    <Title>Node2 not respecting startFrame</Title>
    <Description>Node2 seems not to be respecting [`startFrame`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/common/debugProtocol.d.ts#L622)

To be more precise if vscode sends to node2 a `stackTrace` request with `startFrame: 2` and `levels: 20` I still get back the first stack frame.
I can easily reproduce this with a simple javascript sample that does not have a deep call stack - only around 10 stack frames.

This milestone we are looking into a performance improvement to always first fetch the first callStack and in parallel fetch the rest (while the editor is already updated). Due to this I am assigning this issue to the May milestone. More details about the perf imrovement https://github.com/Microsoft/vscode/issues/25605

I will probably push to insiders these call stack improvements to get coverage for other debug adapters and figure out who is not respecting it (first call stack will be shown duplicated). Also then you will be able to easily repro this.</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26536</IssueID>
    <Title>Show "You cannot rename this element" *before* letting the user write a new name</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

Version 1.13.0-insider
Commit c615b43be67170e166779c9020a249442c4f36fc
Date 2017-05-09T06:13:02.691Z
Shell 1.6.6
Renderer 56.0.2924.87
Node 7.4.0

When pressing F2 to rename a variable, VSCode always lets you enter the new name, only afterwards it appears to check whether the rename is possible and if not, it shows "You cannot rename this element".

It would be better to check this first, before even prompting for a new name, to avoid frustration that what was just written has been lost and has to be written again after using Ctrl+D or similar.</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26534</IssueID>
    <Title>Syntax highlight inside HTML &lt;script&gt; tag is broken</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows 10 Enterprise, version 1607, OS Build: 14393.1198 

Steps to Reproduce:

1. Open an index.html file
2. Write a `&lt;script&gt;` tag with attribute `type="text/x-template"` or `type="text/html"`
3. Inside `&lt;script&gt;` write some HTML
4. Result: 
![vscode-script-highlight](https://cloud.githubusercontent.com/assets/1974290/25990856/8c977284-3701-11e7-9817-9fa43a57ac7c.PNG)

Note: until this build of VSCode it was working properly.

</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26529</IssueID>
    <Title>Cursor Position changed after switching open file</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.4.0-77-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.0.2|
|path-intellisense|christian-kohler|1.4.2|
|vscode-eslint|dbaeumer|1.2.8|
|tslint|eg2|0.14.0|
|Angular2|johnpapa|2.2.3|
|dart|kevinplatel|0.1.0|
|sublime-keybindings|ms-vscode|2.0.1|
|debugger-for-chrome|msjsdiag|3.1.1|
|cordova-tools|vsmobile|1.2.7|;


---

Steps to Reproduce:

1. open at least two files and position the cursor on a specific line
2. switch editor by key-combination
3. move cursor =&gt; sometimes it jumps several lines beneath the original cursor position

This leads to wrong code after C&amp;P actions.</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26516</IssueID>
    <Title> Cannot read property 'fromCache' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;e174b58a-1cde-27a8-c1ce-6af469836321&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.12.1&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'fromCache' of undefined&lt;br /&gt;[/vs/workbench/parts/search/browser/openAnythingHandler.ts#L350:20 (fromCache)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/parts/search/browser/openAnythingHandler.ts#L350:20 (fromCache))&lt;br /&gt;[/vs/workbench/parts/search/browser/openAnythingHandler.ts#L341:15 (createFileEventData)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/parts/search/browser/openAnythingHandler.ts#L341:15 (createFileEventData))&lt;br /&gt;[/vs/workbench/parts/search/browser/openAnythingHandler.ts#L210:22 (createTimerEventData)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/parts/search/browser/openAnythingHandler.ts#L210:22 (createTimerEventData))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/parts/search/browser/openAnythingHandler.ts#L174:54 (then)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/parts/search/browser/openAnythingHandler.ts#L174:54 (then))&lt;br /&gt;[/vs/workbench/parts/search/browser/openAnythingHandler.ts#L231:39 (promiseFactory)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/parts/search/browser/openAnythingHandler.ts#L231:39 (promiseFactory))&lt;br /&gt;[/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L777:26 (getResults)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L777:26 (getResults))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1566:0 (onComplete))&lt;br /&gt;[/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L758:38 (then)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L758:38 (then))&lt;br /&gt;[/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L722:24 (handleDefaultHandler)](https://github.com/microsoft/vscode/blob/f6868fce3eeb16663840eb82123369dec6077a9b/src/vs/workbench/browser/parts/quickopen/quickOpenController.ts#L722:24 (handleDefaultHandler))&lt;br /&gt;</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26503</IssueID>
    <Title>Don't enter a newline when pressing return on an auto-completion keyword which has been completed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `1.12`
- OS Version: Windows 10

Steps to Reproduce:

1. Type in a complete `keyword` which brings up an auto-completion prompt
2. Press `Enter`

In my experience, IDE's tend to just close out the auto-completion box in this scenario. It seems quite unusual to have it input a newline in this situation.

Gif of the issue:

![gif](https://cloud.githubusercontent.com/assets/748557/25980883/96f0b674-36c9-11e7-9e84-77d3a47a6b77.gif)
</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26501</IssueID>
    <Title>Bug in using Ctrl+D to select same words or characters</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Linux Ubuntu 16.04

Steps to Reproduce:

Hello, sorry my Engles.... But I believe I have found one Bug in VS Code, looking two frases bellow. Making a test. Select &lt;br&gt; and after press Crtl+D for many times, in first frase all &lt;br&gt; were Selected. Repeat same test with second frase, the selection will stop when there are two &lt;br&gt; together.

Thanks.</Description>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26494</IssueID>
    <Title>Cannot select multiple files in explorer pane</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.x
- OS Version: Linux

It would be nice if we could select multiple files at a time in the explorer pane.  This comes in handy when you want to delete several files or if you want to copy/move several files.</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26493</IssueID>
    <Title>Suggestion should align to bottom when it's above the cursor</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.13-Insiders
- OS Version: macOS

![suggestion](https://cloud.githubusercontent.com/assets/876920/25973993/598052d6-365b-11e7-827e-200da3a41b5d.gif)
</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26491</IssueID>
    <Title>Multiline Snippets are non-functional</Title>
    <Description>- VSCode Version:  **1.12.1**
- OS Version:  **Windows 10 v1607 build 14393.1066**

Until just recently (last update?), multiline snippets were useable, but now that appears to not be the case.  Here is an example of a broken snippet that previously worked:

```
     "Author Comment": {
		"prefix": "Author",
		"body": [
			"&lt;#",
			"	Author:		${Author:Matthew A. Pearon}",
			"	Date:		${Date:yyyy-MM-dd HH:mm}",
			"	Keywords:	${Keywords:Keywords}",
			"	Parameters:	${Parameters:Parameters}",
			"#&gt;"
		],
		"description": "Insert Author Comment Block"
	}
```

When used, it now just return this:
```
&lt;#

,

```

I will be able to attach a gif to this post later.</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26482</IssueID>
    <Title>Keyboard layout Portuguese (Brazil) win10 pro Toggle Line Comment (ctrl + unknown) and Split Editor (ctrl+oem_102)</Title>
    <Description>I have problem with Toggle Line Comment when trying to switch from Ctrl +; To Ctrl + / getting ctrl + unknown.
And with Split Editor when trying to switch from Ctrl + ] to Ctrl + \ getting ctrl+oem_102

Windows 10 Pro
Versão 1703
Build SO 15063.296
x64

Visual Studio Code
Version 1.12.1
Date 2017-05-04T21:26:50:689Z
Shell 1.6.6
renderer 56.0.2924.87
Node 7.4.0

Keyboard Pt-Br
ABNT2

https://jsfiddle.net/v1gz5c5m/1/

on Chrome 58.0.3029.110 (64-bit)
/ return keydown --- code: IntlRo, keyCode: 193, key: /
\ return keydown --- code: IntlBackslash, keyCode: 226, key: \

on Firefox 54.0b6 (64-bit)
/ return keydown --- code: IntlRo, keyCode: 191, key: /
\ return keydown --- code: IntlBackslash, keyCode: 220, key: \

on Edge Microsoft Edge 40.15063.0.0 Microsoft EdgeHTML 15.15063
/ return keydown --- code: undefined, keyCode: 193, key: /
\ return keydown --- code: undefined, keyCode: 226, key: \


/ on VS Code hint as image
![vscode_togglelinecomment](https://cloud.githubusercontent.com/assets/5343722/25966770/5cb7ec1e-3662-11e7-9002-d367d2f75c75.png)

\ on VS Code hint as image
![vscode_spliteditor](https://cloud.githubusercontent.com/assets/5343722/25966786/6a641e0a-3662-11e7-812e-fb160593b2cd.png)

like to/similar
#24147


</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26473</IssueID>
    <Title>Ctrl Shift S should be save all (default), not save as</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|0.3.7|
|debugger-for-chrome|msjsdiag|0.4.8|
|debugger-for-edge|msjsdiag|0.4.1|;


---

Steps to Reproduce:

1. change text in editor (arbitrary file/files)
2. Ctrl+Shift+S (should NOT open a Save as DLG, it should just save all without prompt
3. This has been the WIndows standard forever, why change it to save as?</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26467</IssueID>
    <Title>Theming: allow list.focusForeground</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (5057c95e6b5a43ddecee0d6f663764b7c80f6c95, 2017-05-11T06:05:28.620Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.3|
|code-settings-sync|Shan|2.7.0|
|sort-lines|Tyriar|1.2.0|
|Bookmarks|alefragnani|0.14.1|
|project-manager|alefragnani|0.16.0|
|path-intellisense|christian-kohler|1.4.2|
|vscode-eslint|dbaeumer|1.2.8|
|vscode-html-css|ecmel|0.1.4|
|tslint|eg2|0.14.0|
|auto-rename-tag|formulahendry|0.0.11|
|Angular2|johnpapa|2.2.3|
|vscode-icon-theme|jtlowe|1.5.0|
|theme-karyfoundation-themes|karyfoundation|11.1.0|
|HTMLHint|mkaufman|0.3.3|
|vscode-autoprefixer|mrmlnc|2.0.0|
|vscode-stylefmt|mrmlnc|2.4.1|
|angular2-inline|natewallace|0.0.17|
|typescript-hero|rbbit|0.12.0|
|project-snippets|rebornix|0.5.0|
|stylelint|shinnn|0.24.0|
|darcula-extended|smlombardi|3.3.2|
|slime|smlombardi|2.4.1|
|theme-tesla|smlombardi|6.0.0|
|change-case|wmaurer|1.0.0|;


---

Steps to Reproduce:

1. When creating a workbench theme, I can them all the colors I need except the foreground color of the active menu item:

![screen shot 2017-05-11 at 11 19 05 am](https://cloud.githubusercontent.com/assets/835148/25957262/e42c5d32-363b-11e7-9251-8b4f50de8a3c.png)

2. All I can find is the overall "editor.foreground" but I like the color of that, but I'd rather use a lighter gray or white for the text in the active menu item.  I can (and did) theme the _background_ but there doesn't seem to be a corresponding foreground.</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26462</IssueID>
    <Title>Running foundation CLI in the integrated terminal</Title>
    <Description>I am getting a strange behavior when running 'foundation watch' and then 'foundation build' using the integrated terminal and foundation-cli. After running 'foundation watch' and then hitting Ctrl + C to quit the watch task, I then try to run 'foundation build' but instead of running that task, it keeps asking me 'Terminate batch job (y/n)?' The only way I can get it to work is if I quit VS code and restart it.
 
- VSCode Version:  1.12.1
- OS Version: Windows 7 Professional

Steps to Reproduce:

1. Run a Foundation 6 project using the integrated terminal and foundation-cli, line command 'foundation watch'
2. Then stop the watch task by hitting Ctrl + C and hitting Y.
3. Try to run 'foundation build'. It then keeps asking 'Terminate batch job (y/n)?' instead of running the build task.
</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26457</IssueID>
    <Title>Suggest widget is not placed close to the cursor</Title>
    <Description>While coding today, I see that suggest widget is placed strangely

![image](https://cloud.githubusercontent.com/assets/10746682/25952798/efcbb7d4-3661-11e7-8b1b-b21141679b79.png)
</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26456</IssueID>
    <Title>Multiline copy paste from terminal is awful</Title>
    <Description>- VSCode Version: Code 1.11.1 (d9484d12b38879b7f4cdd1150efeb2fd2c1fbf39, 2017-04-06T13:58:12.954Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vagrant|bbenoist|0.4.0|
|file-templates|brpaz|1.1.0|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.0|
|gitlens|eamodio|2.12.2|
|tortoise-svn|fantasytyx|0.1.1|
|ansible|haaaad|0.2.5|
|PowerShell|ms-vscode|0.10.1|
|vscode-docker|PeterJausovec|0.0.13|
|spellchecker|swyphcosmo|1.2.9|;


---

Steps to Reproduce:

1. Have a program that outputs many lines (more than first in the window) in the terminal
2. Run it
3. Try to copy the output to paste somewhere (bug report, email)

Result:

* Drag selecting will not push scroll.
* Scrolling will deselect selection.

My work around is to use an external terminal, or to maximise the terminal, copy a section, paste, scroll, copy a section, paste and so on.</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26450</IssueID>
    <Title>Indent error with terminal</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063

---

I've got this problem that always some spaces in front of every line. When I change the terminal from powershell to cmd and git-bash, there's still this problem.

![image](https://cloud.githubusercontent.com/assets/20589824/25945700/7d9d8958-367a-11e7-9463-5854162a366f.png)

![image](https://cloud.githubusercontent.com/assets/20589824/25945670/63cbbfb8-367a-11e7-97a3-f6690554abc8.png)

</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26447</IssueID>
    <Title>Could not install typings files for JavaScript language features. Please ensure that NPM is installed and is in your PATH</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.12.1 (1.12.1)
- OS Version: MacOS 10.12.4

Steps to Reproduce:

1. Open a TS project in VSC
2. Open any JS file

NPM is installed on my system.  There is no complaint if launched from terminal, only from the app package.  There is no config option to set a path to NPM (would be quick fix).
</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26429</IssueID>
    <Title>regression: caret is rendered in wrong position when editor zoomed</Title>
    <Description>this is a regression. this did not happen in 11.1

- VSCode Version: 12.1
- OS Version: XUbuntu 16.04.2 LTS (lxde) 

Steps to Reproduce:
 - full-screen VS code
 - View-&gt;Reset Zoom
 - create a new file
 - type 100 characters on a single line (not enough to make it wrap)
 - move the caret to end of line
 - View-&gt;Zoom Out
 - type some more characters

NOTE: the caret is no longer rendered at the end of the line, and the new characters, while they appear at the end of the line, do not appear where the caret is.

 - View-&gt;Reset Zoom
 - View-&gt;Zoom In (5 times)

NOTE: different zoom levels affects the positioning error in different ways. zooming out tends to make the caret jump left &amp; right more and more. zooming in yields a subtler error, but still makes it impossible to use as a text editor.</Description>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26414</IssueID>
    <Title>Editor cursor positioning mess-up after zooming out on linux</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: ubuntu 16.04

Steps to Reproduce:

1. Click View/Zoom Out once (from 100% zooming level).
2. Double click a word in a document or type in a character.

The selected region is not the word one tried to select. Or the character is not at the position of the cursor.</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26404</IssueID>
    <Title>I can't type anything when cmd+n new file</Title>
    <Description>- VSCode Version: Code - Insiders 1.13.0-insider (c615b43be67170e166779c9020a249442c4f36fc, 2017-05-09T06:05:27.476Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|compulim-vscode-closetag|Compulim|1.1.0|
|EditorConfig|EditorConfig|0.9.3|
|beautify|HookyQR|1.0.2|
|html-css-class-completion|Zignd|1.2.0|
|Bookmarks|alefragnani|0.14.1|
|vscode-color|anseki|0.4.1|
|path-intellisense|christian-kohler|1.4.1|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|3.4.9|
|tslint|eg2|0.14.0|
|auto-close-tag|formulahendry|0.3.12|
|theme-onedark-sublime|joshpeng|0.3.6|
|vscode-less|mrmlnc|0.6.2|
|debugger-for-chrome|msjsdiag|3.1.1|
|color-highlight|naumovs|2.1.3|
|view-in-browser|qinjia|0.0.5|
|vscode-icons|robertohuertasm|7.7.0|
|vim|vscodevim|0.7.1|
|Material-theme|zhuangtongfa|2.7.3|;


---

Steps to Reproduce:

1. Use `cmd+n` for a new file to open
2. Try to type. I am not able to do any typing of a character at all</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26403</IssueID>
    <Title>Funny suggest widget layout</Title>
    <Description>I was just typing near the bottom of the file

![funny-intellisense](https://cloud.githubusercontent.com/assets/5047891/25917063/3062f17c-35c7-11e7-9800-73937c432b94.gif)

Let me know if there's something I can help with w.r.t. editor content widget API...</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26399</IssueID>
    <Title>terminal text is offset</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-javascript-snippet-pack|akamud|0.1.5|
|angulardoc-vscode|AngularDoc|2.1.0|
|path-intellisense|christian-kohler|1.4.1|
|bracket-pair-colorizer|CoenraadS|0.10.3|
|Scss2Css|cyyvs|0.0.1|
|githistory|donjayamanne|0.2.0|
|xml|DotJoshJohnson|1.7.0|
|gitlens|eamodio|3.4.9|
|code-runner|formulahendry|0.6.16|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|minify|HookyQR|0.3.0|
|Angular2|johnpapa|2.2.3|
|TypeScriptImport|kevinmcgowan|1.17.0|
|csharp|ms-vscode|1.9.0|
|vscode-icons|robertohuertasm|7.7.0|
|sass-indented|robinbentley|1.4.1|
|JavaScriptSnippets|xabikos|1.4.0|
|markdown-pdf|yzane|0.1.7|
|extractcomponent|zucska|0.7.1|;


---

![Like This](https://media.giphy.com/media/3ohzdJWrypSfQzARws/giphy.gif)

</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26394</IssueID>
    <Title>Select and rememeber language mode</Title>
    <Description>Once I set language mode for the file (in my case VS Code does not understand one file is ASP), VS Code should remember this selection next time I open the project. Since editor cannot do it automatically, each time I open a project with ASP files I have to manually set language mode over and over again.</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26388</IssueID>
    <Title>Cursor gets wrong offset through zoom-in/out</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.4.0-38-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.0.2|
|vscode-eslint|dbaeumer|1.2.8|
|vscode-instant-markdown|dbankier|1.1.0|
|vscode-scss|mrmlnc|0.6.2|
|debugger-for-chrome|msjsdiag|3.1.1|
|java|redhat|0.2.0|
|sass-indented|robinbentley|1.3.1|
|trailing-spaces|shardulm94|0.2.11|
|language-stylus|sysoev|1.6.0|
|vscode-react-native|vsmobile|0.3.2|
|markdown-pdf|yzane|0.1.7|;
---

Steps to Reproduce:

1. have a multi-line Text open in Editor. Use wrap mode. Cursor somewhere 1/3rd from left.
2. Add/remove a few characters.
3. Zoom In (enlarge / `ctrl-+`). Type a letter.

RESULT: Actual inserting is 10-15px further left, than the seeming cursor position: Here I typed three 'A' and didn't move the cursor after that... yet, the cursor seems 1¼ chars further right...

EXPECTED: correct Cursor position.

* Closing and reopening file doesn't heal.
* Effect ist stronger closer to the right side of the panel.
* I only noticed this bug in the last 1-3 releases, not before. (And I zoom quite a bit :)

![bug-3a](https://cloud.githubusercontent.com/assets/21154106/25901719/ea8acee2-3597-11e7-94c9-5cf2e590c035.png)

</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26381</IssueID>
    <Title>User settings wiped</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.4.0-77-generic
- Extensions: the listing exceeds the lower minimum of browsers' URL characters limit
---

I cant reproduce the bug so this is probably unhelpful, but here's how it happened:

1. Pressed ctrl + to zoom &amp; got a message VS needs to restart to apply settings. 
2. Clicked cancel (was on a roll).
3. VS reset to default everything on clicking cancel.
4. Closed VS &amp; reopened but the settings where still the default.
5. Checked .config settings json and it was certainly wiped.

Cheers :)</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26379</IssueID>
    <Title>Inactive editor group tab color fade</Title>
    <Description>- VSCode Version: 1.12
- OS Version: Windows 10

Currently there is no setting for adjusting inactive editor tab as after 1.12 version update it fades and it's almost impossible to read in comparison with active editor group tabs.
It would be better if active editor would have an outline/border to highlight it's activity status. In that case inactive editors could be left untouched by fading to show their status.</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26364</IssueID>
    <Title>code in &lt;script type="text/template"&gt; miss highlight function</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.12.1 (1.12.1)
- OS Version:10.12.4 (16E195)

Steps to Reproduce:

1.In a XXX.html file, insert a &lt;script type="text/template"&gt;some html code&lt;/script&gt; code snippet
2.you would see it!
</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26363</IssueID>
    <Title>Code Insiders on Ubuntu always has an available update</Title>
    <Description>1. Download code insiders from `code.visualstudio.com`
2. Check for updates
3. There is an update available
4. Download and install code insiders again
5. There is still an update available

I've noticed this because of the popup.

![image](https://cloud.githubusercontent.com/assets/5047891/25889582/80c2bdc6-356a-11e7-95e7-49543c2f86b2.png)

</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26361</IssueID>
    <Title>'About Visual Studio Code' window can't be closed with ⌘W</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-dash|deerawan|1.5.0|
|php-intellisense|felixfbecker|1.2.1|
|VS-code-drupal|marcostazi|0.0.12|;

---
This is a super-tiny issue, barely worth reporting… :)

Steps to Reproduce:

1. With the MacOS version of vscode, open the menu item "Code" and select "About Visual Studio Code" 
2. Try to close the window using ⌘W, you can't.</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>20/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26355</IssueID>
    <Title>Feature request - Ability to resize 'open editors' in explorer</Title>
    <Description>Ability to resize 'open editors' in explorer panel list so if i open more than 9 files i dont need to scroll in that list - same as 'variables' or 'watch' in debug panel</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26352</IssueID>
    <Title>Git changes preview should behave same as opening files</Title>
    <Description>While clicking once on a changed git file it should open tab in preview mode while double clicking in new tab. Things get messy in editor and it is painful to close all opened tabs after reviewing changes. It would be nice to have this feature.</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26347</IssueID>
    <Title>Code Snippets are Broken</Title>
    <Description>- VSCode Version: 1.12.1 (latest)
- OS Version: Windows 10 Pro Creator Update

Steps to Reproduce:

1. Type class Tab Tab
2. There is a comma between the { and }
3. prop doesn't show up. cw works

I had thought it's the bug of omnisharp and spent 1 hour to check the csharp.json, eventually after I update the vscode on my other PC I found it's the bug of vscode.
</Description>
    <CreatedDate>10/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26326</IssueID>
    <Title>Terminal rendering issues</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Windows 10 64-bit (Creators edition)

Steps to Reproduce:
General usage of terminal can sometimes result in weird rendering issues with terminal. (Unsure if key reason for issue. But I'm using an 21:9 monitor).
Please see gif below for example:
![](https://i.gyazo.com/43c3d9ce92450e23da7075c8f7ed62e1.gif)</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26325</IssueID>
    <Title>Go to implementation should navigate to .js file instead of typescript type definitions</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: OS X

### Steps to Reproduce:

1. Open VS Code in a new workspace
2. `npm init -y`
3. `npm install --save express`
4. `npm install --save-dev @types/express`
5. In `tsconfig.json`:
```json
{
    "compilerOptions": {
        "target": "es6",
        "module": "commonjs",
        "allowJs": true,
        "checkJs": true,
        "noEmit": true,
        "maxNodeModuleJsDepth": 1
    },
    "exclude": [
        "node_modules"
    ]
}
```
6. In `index.js`: 
```js
const express = require('express')
```

7. Right click on `'express'`, and choose *Go to implementation*

### Expected behaviour: 

The editor navigates to the .js file containing the module implementation (under node_modules/express)

### Actual behaviour: 

The editor navigates to the installed **express** type definitions  </Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26312</IssueID>
    <Title>Irrelevant snippet has precedence over user snippet?</Title>
    <Description>- VSCode Version:  1.12.1
- OS Version: Mac OS X 10.12.4

I have a snippet called `clog`, which is an abbreviation for `console.log` that I've used for quite a while. Since the last version of vs code, however. It seems that the ranking for snippets has changed, and I'm getting an irrelevant suggestion as the first choice, and muscle memory makes me want to just press return to activate it.

![image](https://cloud.githubusercontent.com/assets/577144/25853592/44a3161a-34c5-11e7-9abf-b26c2448c68a.png)

I'm not sure where this suggestion comes from, it's nothing that I've typed in any of the files I have open. But I think that probably, user snippets should get precedence here. especially if they're this specific (I'm typing the exact and complete prefix).

Steps to Reproduce:

1. Open a javascript file
2. Create a snippet with the prefix "clog",
3. Somewhere in the file, type the word "clog" and see the suggestions appear
3. See alternative suggestions appear before manually added snippet</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26309</IssueID>
    <Title>The front part of file paths on debug console are ignored</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:40:39.245Z)
- OS Version: Linux x64 4.8.0-51-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-settings-sync|Shan|2.7.0|
|theme-dracula|dracula-theme|1.15.0|
|tslint|eg2|0.14.0|;


---

Steps to Reproduce:

1. Run `Start Debug`, which runs mocha tests and prints test results with file paths on `DEBUG CONSOLE`
![screenshot from 2017-05-09 21-31-48](https://cloud.githubusercontent.com/assets/7734590/25851206/d258171e-34ff-11e7-80d4-0645ef99fc1e.png)
2. Click a file path on `DEBUG CONSOLE`
![screenshot from 2017-05-09 21-40-12](https://cloud.githubusercontent.com/assets/7734590/25851269/1b3272fe-3500-11e7-9bf4-6d2ee6377f1b.png)

---

I think that the parser should search words backward after detecting a file path in debug console, so that it doesn't ignore the front part of relative paths. Currently the parser seems to only look forward when searching using regular expressions.</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26308</IssueID>
    <Title>Files treeview control displays incorrect information when scrolling while adding a new file</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Win10

Steps to Reproduce:

1. Open a project with a complex folder/file structure, at least big enough to fill the files treeview.
2. Select a file of a subfolder.
3. Press the "New File" icon.
4. Instead of wrtting the file's name, scroll up or down until the new file is outside the boundaries of the control.

After doing this, the "New File" command is cancelled and the tree displays files inside incorrect folders until the application is restarted.
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26306</IssueID>
    <Title>regression in new IntelliSense sorting</Title>
    <Description>- VSCode Version: 1.12
- OS Version: any

Steps to Reproduce:

1. Create an extension with a snippet `do`
2. The extension should also supply different autocompletes containing the letters `d` and `o` (eg. `defoverridable`)
3. When typing `do` in a document, the first autocomplete item should (and used to) be the exact match (snippet `do`) instead the keyword autocomplete is the first item:
![image](https://cloud.githubusercontent.com/assets/311019/25850728/a30ede2a-34c3-11e7-82c0-c8be77a5fc3c.png)

This makes it very hard to use the elixir extension. Is there any way to work around this regression?

https://github.com/fr1zle/vscode-elixir/issues/64</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26295</IssueID>
    <Title>Command palette: allow matching in any-word order</Title>
    <Description>Hello,

Currently when I pressing `Cmd + Shift + P` and trying to find something - it search strings in the order that I have typed. For example, I type "Project open" and expect that it will find "Open Project". But it can't find it.

It will be amazing if you will implement the same ideology of search as it is in the Sublime Text. They allow to search words in any order, and even search strings by first letters or part of the word.

Example of the **Command Palette** in the SublimeText:
![687474703a2f2f616e67756c61722d75692e6769746875622e696f2f416e67756c61724a532d7375626c696d652d7061636b6167652f696d616765732f73637265656e73686f742d717569636b5f70616e656c2d7365617263682e706e67](https://cloud.githubusercontent.com/assets/630224/25847091/edc40378-34b4-11e7-9261-d4c4df2c499b.png)

If you will need any assistance or help in testing - just let me know and I will help you.

*Be the best!
-- Anton*</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26294</IssueID>
    <Title>Suggest documentation formatting issue</Title>
    <Description>The formatting/wrapping of the documention shown in the suggest widget looks less good than in the old implementation:

new:
![image](https://cloud.githubusercontent.com/assets/172399/25846935/386cffe8-34b4-11e7-9a47-9ccfaa5b522c.png)

old:
![image](https://cloud.githubusercontent.com/assets/172399/25846955/4c8ca6c2-34b4-11e7-93b9-6e84fe81a850.png)

Notice the unnatural word wraps.
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26293</IssueID>
    <Title>Terminal rendering completely messed up</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: 10

Steps to Reproduce:

1. Open Terminal
2. `yarn install`

![image](https://cloud.githubusercontent.com/assets/1658949/25846903/1271911e-34b4-11e7-9960-4f475673b964.png)

This is using the Git Bash. I remember it working fine before.
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26278</IssueID>
    <Title>window.newWindowDimensions not working</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Xubuntu 16.04.2

Steps to Reproduce:

1. Launch vscode and a new window will open in the center of the screen with small dimensions
2. Open settings and add ```{
    "window.newWindowDimensions": "inherit"
}```
```"maximized"``` does not work either
3. Reopen vscode and a new window will open in the center of the screen with small dimensions

Tested on a clean vscode right after installation

</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26270</IssueID>
    <Title>Broken icons when open project from terminal</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: macOS Sierra

Steps to Reproduce:

1. Open terminal an run `code path_to_folder`
&lt;img width="770" alt="console" src="https://cloud.githubusercontent.com/assets/2623486/25837232/f6cb2274-34b6-11e7-8717-aa1611b41da0.png"&gt;

2. The icons look awful (after update to 1.12.1)
&lt;img width="1026" alt="code" src="https://cloud.githubusercontent.com/assets/2623486/25837354/a557ce0a-34b7-11e7-9149-7c4e6e32af59.png"&gt;
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26269</IssueID>
    <Title>Ctrl-clicking a link shows 'no definition found' error</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2 &amp; 1.12.1
- OS Version: Windows 10 Home - Version 1607

Ctrl-clicking a link shows 'no definition found' error, as well as opening the link.
Please note I have only tested this in javascript.

![giphy](https://cloud.githubusercontent.com/assets/25046874/25869265/d04c6c96-3553-11e7-8a8e-b21ecef41fe7.gif)

Steps to Reproduce:
1. Place a commented link,
2. Control click the link,
</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26263</IssueID>
    <Title>[Bug report]Text rendering error in Terminal</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|latex-preview|ajshort|0.5.0|
|vscode-theme-onedark|akamud|1.3.2|
|one-monokai|azemoh|0.2.4|
|gitignore|codezombiech|0.5.0|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|xml|DotJoshJohnson|1.7.0|
|code-runner|formulahendry|0.6.16|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|MagicPython|magicstack|1.0.10|
|latexcompile|mathiasfrohlich|0.7.0|
|vscode-fileheader|mikey|0.0.2|
|cpptools|ms-vscode|0.11.0|
|latex|ms-vscode|0.1.3|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|material-icon-theme|PKief|2.0.5|
|java|redhat|0.3.0|
|code-settings-sync|Shan|2.7.0|
|code-spell-checker|streetsidesoftware|1.1.0|
|pdf|tomoki1207|0.2.0|
|JavaScriptSnippets|xabikos|1.4.0|
|Material-theme|zhuangtongfa|2.7.1|;

I've disabled all extensions, but bug still remains.


---
Hi,
I meet the same bug as issue #26256 ,text in terminal with wrong indentation
I'd like to add more information for that issue
- It's latest Windows 10 and VSCode.
- System in Chinese (Simplified)
- `cmd.exe` and 'powershell.exe' will meet same bug, but in` cmd.exe`, if you use `cls`, it will recover temporarily, while `powershell.exe` will not.

Steps to Reproduce:

1. press ctrl+\`
2. it occurs: text in terminal with wrong indentation. (you can see image in issue #26256)

Hope that my information can help you to fix it.
Thanks!</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26257</IssueID>
    <Title>Update 1.12.1 Broke OTB JSDoc Creation</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: none
---

Steps to Reproduce:

1. Right before the update to 1.12.1, in a standard .js file, I tried to generate JSDoc with "/**" + [Enter] above a function, and all of the @param elements were pre-created.
2. I updated to 1.12.1, and doing the exact same thing ("/**" + [Enter] above a function) results in just the bare JSDoc comment structure with no @param or any other elements auto-created.

BEFORE 1.12.1 Update:
/** + [Enter] did this:
```
/**
 * @param p1
 * @param p2
 */
function( p1, p2 ) { }
```

AFTER 1.12.1 Update:
/** + [Enter] does this:
```
/**
 * 
 */
function( p1, p2 ) { }
```</Description>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26241</IssueID>
    <Title>Render IntelliSense suggest item's signature with syntax highlighting</Title>
    <Description>Suggest:

![image](https://cloud.githubusercontent.com/assets/4033249/25825096/a1fa6392-340f-11e7-9354-47271587555d.png)

Hover

![sig](https://cloud.githubusercontent.com/assets/4033249/25825108/adc967a4-340f-11e7-9f57-61ff96d90bc9.jpg)

Signature help on typing:

![image](https://cloud.githubusercontent.com/assets/4033249/25825172/f72dd8bc-340f-11e7-9682-07f3d9aab6d2.png)

Hope suggest and typing signature help can have similar syntax highlighting so the experience is consistent.</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26240</IssueID>
    <Title>Render IntelliSense suggest item's documentation as Markdown</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/4033249/25824762/7c7e9ae4-340e-11e7-98e2-5ee014dbc282.png)

![image](https://cloud.githubusercontent.com/assets/4033249/25824786/8a105742-340e-11e7-9a66-6551a0501dda.png)

Backtick formatted as code and link of this format `[title](url)` rendered as hyperlink would be really useful.</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26220</IssueID>
    <Title>CSHTML: script tags with type text/template no longer hightlight HTML syntax</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Windows 10

Steps to Reproduce:

1. create .cshtml file
2. add script tag with type text/template
3. write HTML inside

EG:

```
&lt;script id="myTemplate" type="text/template"&gt;
    &lt;div&gt;
        &lt;ul&gt;
            &lt;li&gt;my item&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/script&gt;
```
This was working until the most recent update...</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26219</IssueID>
    <Title>Feature: Add Folder to project</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: 16.04 LTS

I'd really like a Add Folder to Project feature just like in Atom, you can open multiple folders in the same window, and working from them. In my version of VSCode, when i use the open folder option, it opens a new instance of VSCode. Please this would a nice feature to add. 
</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26213</IssueID>
    <Title>Search and Replace optionally maintains case</Title>
    <Description>Hello, this is a feature request. When performing a search and replace over multiple files, I would like the ability to (optionally) do case insensitive matches, but where the replacement maintains the case of the original text match. For example, if I want to search for "FooBar" and replace with "ConcreteObject", it would replace "fooBar" with "concreteObject" and "FooBar" with "ConcreteObject". This is useful because it helps with renaming both type declarations and local variable names.</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26208</IssueID>
    <Title>Multi-file search &amp; replace incorrectly selecting contents based on regular expression</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|;

---

Example file:

      "name": "Legion - Bronze - Teleporter",
      "to_build": "LegionStructureBasicTeleporter",
      "instance_count": 1,
      "priority": 1,
      "max_num_assisters": 10,
      "builders": [
        "LegionCommander",
        "AnyLegionFabberBasic",
        "AnyLegionFabberAdvanced",
        "LegionOrbitalBasicFabber"
      ],

Steps to Reproduce:

1. Switch to Search
2. Expand Search to include replace field
3. Enable regular expression
4. In FIND box enter: ,\n      "builders":
5. In REPLACE box enter: ,\n      "base_sort": "FromBuilder",\n      "builders":

EXPECTED BEHAVIOUR:

File will become as follows:

      "name": "Legion - Bronze - Teleporter",
      "to_build": "LegionStructureBasicTeleporter",
      "instance_count": 1,
      "priority": 1,
      "max_num_assisters": 10,
      "base_sort": "FromBuilder",
      "builders": [
        "LegionCommander",
        "AnyLegionFabberBasic",
        "AnyLegionFabberAdvanced",
        "LegionOrbitalBasicFabber"
      ],

CURRENT BEHAVIOUR:

File becomes the following:

      "name": "Legion - Bronze - Teleporter",
      "to_build": "LegionStructureBasicTeleporter",
      "instance_count": 1,
      "priority": 1,
      "max_num_as
      "base_sort": "FromBuilder",
      "builders":
      "builders": [
        "LegionCommander",
        "AnyLegionFabberBasic",
        "AnyLegionFabberAdvanced",
        "LegionOrbitalBasicFabber"
      ],

NOTE: use CTRL-H search &amp; replace within a file behaves according to expected behaviour.

[example files.zip](https://github.com/Microsoft/vscode/files/983399/example.files.zip)
</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26207</IssueID>
    <Title>Tabulations in makes snipets interpreter</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12
- OS Version: Ubuntu 17.04
- Extensions: Some are enabled in the example, but the bug is still here with them disabled
- DevTools: Nothing interesting.

Steps to Reproduce:

1. Create a snipet (I use PHP in this example)
2. Include tabs in it. You already see the error "Excepted comma or closing bracket"
3. Try using it. It will isue some [object Object] for absolutly no reason

![Screen Capture](https://cloud.githubusercontent.com/assets/16436883/25802015/b9c44d4a-33f0-11e7-9f44-6a1730869c4c.png)

In this example, I use the "Function description" snipet.

Edit: Partial fix to use tabs in snipets: using \t instead of a tab directly
</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26206</IssueID>
    <Title>Improve the debug toolbar placement</Title>
    <Description>
    </Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26197</IssueID>
    <Title>Can't scroll the markdown preview when I scrolled the editView </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: windows 10

when I scrolled the markdown editView but the preview are not scrolling
</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26191</IssueID>
    <Title>Terminal rendering issue</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.11.0|
|background|shalldie|1.1.11|;


---

Steps to Reproduce:

1.11.2 also like this
ee, how to add picture?

 ========================================================
```
W
Windows PowerShell
版权所有 (C) 2016 Microsoft Corporation。保留所有权利。
                                                                                                                                                                             PS F:\Studay
C\2016大二训练\qdu lanqiao guosai xunlian 2&gt;     g++ .\i.cpp
```
 ========================================================

that is copy from telemetry, and what i see like this

gif:
![gif](https://cloud.githubusercontent.com/assets/15842103/25798531/1b5de76e-3414-11e7-84bb-ceaac5a1ce96.gif)
cursor is also at wrong postion</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26188</IssueID>
    <Title>Feature request: filter on Explorer</Title>
    <Description>I would like to have filter on explorer, the same as `Ctrl+ ;` from Visual studio.

</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26179</IssueID>
    <Title>Incorrect encoding in output window</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.12.1 
- OS Version:windows 10 enterprise

Steps to Reproduce:

1.
![qq 20170508111247](https://cloud.githubusercontent.com/assets/18549980/25788924/4a112880-33df-11e7-9705-3739073d5c43.png)


</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26177</IssueID>
    <Title>Surface pro - scrolling using the type cover touch pad is slow</Title>
    <Description>用type cover滚动的时候很卡，但是触屏的时候很流畅，希望能优化一下。
translate by google:
&gt; Touch screen rolling is very smooth, but with the type cover when rolling is slow, hoping to optimize that

Windows 10 15063.138
Surface pro4
VSCode Version: 1.12.1</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26176</IssueID>
    <Title>Ctrl+Tab behavior not working as expected on Linux</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Linux Mint 18.1 Serena (based on Ubuntu 16.04.4)

Steps to Reproduce:

1. Hold Ctrl and press Tab to display list of recent files and select the last open file
2. Release the Tab key

Expected behavior:

The file list closes, and the editor switches to the selected file in the list, which is the previously open file.

Actual behavior:

The list remains open. Editor does not close the list until and open the selected file until the Enter key is pressed.

Notes:

I've tested this with the same version of Code on both Linux and Windows, and the incorrect behavior only seems to occur under Linux.

Screenshot:

![ctrl-tab-switcher](https://cloud.githubusercontent.com/assets/125108/25787401/67fc188c-33e4-11e7-9cd7-3610ee8754fe.png)
</Description>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26167</IssueID>
    <Title>Closing a tab with middle click causes the middle click scroll indicator to show up</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b)
- OS Version: Windows 10 1703 (15063.250)

Steps to Reproduce:

1. Middle click a tab
2. The tab will be closed, and the mouse pointer will also change into middle click scroll mode (which shouldn't happen)</Description>
    <CreatedDate>07/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26158</IssueID>
    <Title>Too easy to accidentally move a file.</Title>
    <Description>Time and time again, I get errors because I have unwittingly moved a file with my mouse.
There is a dialog box asking for confirmation of a file delete.
Would it be too much to ask to have a a similar box when moving a file.
If it is considered that most people consider the benefit is outweighed by the extra click required,
perhaps there could be a Preference setting.
Thank you.
</Description>
    <CreatedDate>07/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26150</IssueID>
    <Title>After upgrading to latest version of VS code, the lines in terminal skewed.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows 10 Professional

Steps to Reproduce:
1. Upgrade to latest VS code version
2. Open Integrated Terminal window
3. Run the node based task
4. The output lines in terminal window skewed

Given I open the command windows directly then running the exactly same task shows the perfect lines without any skew.

![skewedlines](https://cloud.githubusercontent.com/assets/25995707/25778858/0aa76800-333d-11e7-8c3f-074844764fd3.jpg)

</Description>
    <CreatedDate>07/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26145</IssueID>
    <Title>feature-request: sort files in explorer by type</Title>
    <Description>sometime there are so many files in one project. and we use many types of file
i'm looking for the way to classify file by name and type of file
so vscode should have feature to filter, sort and classify files

example by Photoshop edited
![untitled-1](https://cloud.githubusercontent.com/assets/4116021/25778193/668d5326-3321-11e7-974a-4ae163cf988a.png)
</Description>
    <CreatedDate>07/05/2017</CreatedDate>
    <ClosedDate>07/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26126</IssueID>
    <Title>Why does Vs code cannot prompt me when import node-modules after the upgrade?</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|2.0.5|;


---

Steps to Reproduce:

1.create a new JavaScript file named: service.js
2.write code: "import React from 're'"

What I want to say is why the import not auto completed after the VS code has been upgraded?

I mean when I am typing the "import React from 're'", it should prompt me like "import React from 'react'".

It works good before I upgrade to the latest version.</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26119</IssueID>
    <Title>Text at terminal got shifted?</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows 10 (1703)

I have a weird text output in my terminal, as shown by the image below, the text got shifted?, each time I press an enter button, the text got shifted

I am using a `bash` terminal running on WSL

![image](https://cloud.githubusercontent.com/assets/6851767/25772957/29926f0e-32b0-11e7-8190-c9dd2d127827.png)</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26117</IssueID>
    <Title>Dimming of inactive group and tab makes text unreadable</Title>
    <Description>vscode: 1.12

I'm trying to work with the new theming colors; however, it seems that the dimming of the inactive tab in an inactive group is greater than before?

I can't seem to find a combination that is readable unless I make the inactive tab color `#FFFFFF` which then makes it way too bright when the group is active.</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>07/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26116</IssueID>
    <Title>Text in Windows title bar updates with big delay</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows7 SP1

Steps to Reproduce:

1. Launch VSCode
2. Open some file

Title bar changes minutes later.

`window.title` configuration is default. (There isn't at setting.json)

If I launch VSCode with `code --disable-extensions` command, again this problem occurs.
</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26114</IssueID>
    <Title>Menus are slow and commands do not execute</Title>
    <Description>Steps to Reproduce:

1. Edit a file
2. ALT-F S

If you do it fairly fast the file is not saved. You have to slow down.

This is my save file muscle memory from Windows 3.0 days :) So frustrating it does not work.
</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26111</IssueID>
    <Title>Missing basic code snippets: ctor, prop after upgrade</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|Bookmarks|alefragnani|0.14.1|
|project-manager|alefragnani|0.16.0|
|aurelia|AureliaEffect|0.3.3|
|Aurelia|behzad88|1.2.1|
|xml|DotJoshJohnson|1.7.0|
|tslint|eg2|0.12.0|
|beautify|HookyQR|1.0.2|
|cs-syntax-visualizer|itn3000|0.0.2|
|csharpextensions|jchannon|1.3.0|
|vscode-nuget-package-manager|jmrog|1.1.2|
|Angular2|johnpapa|2.2.3|
|vscode-icon-theme|jtlowe|1.5.0|
|docomment|k--kato|0.0.14|
|csharpfixformat|Leopotam|0.0.23|
|csharp|ms-vscode|1.9.0|
|PowerShell|ms-vscode|0.12.2|
|resharper9-keybindings|ms-vscode|1.1.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|color-highlight|naumovs|2.1.3|
|view-in-browser|qinjia|0.0.5|
|view-in-default-application|seesharprun|3.3.0|
|bootstrap-3-snippets|wcwhitehead|0.0.9|
|JavaScriptSnippets|xabikos|1.4.0|
|html-css-class-completion|Zignd|1.1.0|;


---

Steps to Reproduce:

1.Open editor, create class, inside class start typing "ctor" or "prop", "struct", these basic snippets disappeared somehow?
2. Even adding User code snippets I can't use them inside VSCode anywhere

User stub for "ctor" snippet which is not recognized inside VSCode as below:
"constructor": {

		"prefix": "ctor",
		"body": [
			"${1:public} ${2:ClassName}(${3:Parameters})",
			"{",
			"	${0}",
			"}"
		],
		"description": "constructor"
	}</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26109</IssueID>
    <Title>acceptSuggestionOnEnter will start new line when typed whole word</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|jetjet-theme|JohnyGeorges|0.12.0|
|unity-debug|Unity|1.2.0|
|unity-snippets|YclepticStudios|0.1.2|
|Bookmarks|alefragnani|0.14.1|
|csharp|ms-vscode|1.9.0|
|guides|spywhere|0.7.0|
|vscode-lua|trixnz|0.5.0|;


---

Steps to Reproduce:
set  "editor.acceptSuggestionOnEnter": true
1. type the exact word which is in the suggestion list(such as "using" )
2.press the enter key
it will not accept the suggestion but start a new line, but if you press the tab key it will accept the suggestion.</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26107</IssueID>
    <Title>how to disable mnemonics on vscode ? </Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11
- OS Version: ubuntu 16.07

problem: I have disabled mnemonics globally yet somehow `alt + {f,e,s,v,g,d,h}` trigger code global menu ? 

I had a similar issue with sublime which i had to add a `Main.sublime-menu` in order to disable it but can't figure how to do it with vscode . </Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>07/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26098</IssueID>
    <Title>终端文本对齐混乱  Terminal text alignment chaos</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-svgviewer|cssho|1.4.0|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|jquerysnippets|donjayamanne|0.0.1|
|python|donjayamanne|0.6.4|
|vscode-npm-script|eg2|0.1.9|
|php-intellisense|felixfbecker|1.2.1|
|docthis|joelday|0.4.4|
|Angular1|johnpapa|0.1.16|
|Angular2|johnpapa|2.2.3|
|format-indent|Kasik96|1.3.0|
|csharp|ms-vscode|1.9.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|view-in-browser|qinjia|0.0.5|
|java|redhat|0.3.0|
|vscode-icons|robertohuertasm|7.6.0|
|python|tht13|0.2.3|
|JavaScriptSnippets|xabikos|1.4.0|
|ReactSnippets|xabikos|1.3.0|;


---

Steps to Reproduce:

1. Press [ Ctrl + ` ]
2. Input [ dir ]</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26097</IssueID>
    <Title>HTML syntax does not work when the extension is PHP</Title>
    <Description>Installed the Visual Code, however I noticed that when the page has PHP extension, the closing HTML tags do not work.
Thank you</Description>
    <CreatedDate>06/05/2017</CreatedDate>
    <ClosedDate>07/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26086</IssueID>
    <Title>Terminal all weird when running gulp task</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|theme-monokai-dark-soda|AdamCaviness|0.0.5|
|vscode-caniuse|akamud|0.5.3|
|theme-dark-monokai|bogdan-sinitsa|0.3.0|
|vscode-svgviewer|cssho|1.4.0|
|vscode-eslint|dbaeumer|1.2.8|
|vscode-instant-markdown|dbankier|1.1.0|
|vscode-hapijs-snippets|deerawan|2.0.0|
|githistory|donjayamanne|0.2.0|
|pgsql|doublefint|0.0.7|
|vscode-babel-coloring|dzannotti|0.0.4|
|vscode-html-css|ecmel|0.1.2|
|LogFileHighlighter|emilast|1.1.1|
|file-icons|file-icons|1.0.3|
|sass-lint|glen-84|0.0.4|
|vue-snippets|hollowtree|0.1.1|
|webcomponent-generator|jeremyrajan|1.0.1|
|svg|jock|0.0.6|
|docthis|joelday|0.4.4|
|svgpreview|kisstkondoros|0.2.0|
|quicktask|lkytal|2.6.1|
|code-beautifier|michelemelluso|1.7.2|
|vscode-csscomb|mrmlnc|4.0.1|
|debugger-for-chrome|msjsdiag|3.1.1|
|chai-snippets|nwhatt|0.1.0|
|vetur|octref|0.6.5|
|vscode-icons|robertohuertasm|7.6.0|
|sass-indented|robinbentley|1.4.1|
|stylelint|shinnn|0.24.0|
|svg-snippets|sidthesloth|1.0.0|
|language-stylus|sysoev|1.6.0|
|vscode-todo-highlight|wayou|0.4.18|
|html-css-class-completion|Zignd|1.1.0|;


---
Hello, first of all, I want to thank everyone for this awesome text editor.

Since the last update, my terminal seems to have a really weird formatting when running gulp tasks.
Here's a screenshot illustrating this issue: https://snag.gy/tdx2u4.jpg
Steps to Reproduce:

1. Open new terminal 
2. Run a gulp task that has a big output length</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26082</IssueID>
    <Title>Setting custom terminal shell for a workspace doesn't work in more than one workspace</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Mac OS 10.12.4

Steps to Reproduce:

1. In ".vscode/settings.json", set a custom workspace terminal shell. For example, to enable zsh on Max OS:
`
{
  "terminal.integrated.shell.osx": "/bin/zsh"
}
`
A bar appears on top of VSC and asks if you want to allow the workspace to manage the terminal shell. Click "Allow".
It works: the shell used in the terminal is the one that was defined

2. Try to do it again in another workspace, or in a third one. It doesn't work: the terminal remains the default terminal.

Can anyone else reproduce it?</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26075</IssueID>
    <Title>TERMINAL works badly with national (Cyrillic) symbols</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-great-icons|emmanuelbeziat|2.0.3|
|ejs-language-support|QassimFarid|0.0.1|;


---

Steps to Reproduce:

1. open Terminal
2. enter Cyrillic symbols

Result:

![2017-05-05_23-13-40](https://cloud.githubusercontent.com/assets/8489323/25762770/c0ca02f6-31e8-11e7-8ca9-1cd5190a8e4e.png)
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26072</IssueID>
    <Title>Script tags inner html snippet format color is white</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:10:14.237Z)
- OS Version: Darwin x64 16.5.0
- Extensions: none
---

Steps to Reproduce:

1. Remove all extensions
2. Create script tags with type="text/ng-template"
2. Add Html

I reverted back to March 2017 and all is well.

--Paul</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26070</IssueID>
    <Title>It's very difficult to use 'Snippet' after version update lately.</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|html-snippets|abusaidm|0.1.0|
|vscode-color|anseki|0.4.1|
|vscode-database|bajdzis|1.2.0|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.2.0|
|githistory|donjayamanne|0.2.0|
|jquerysnippets|donjayamanne|0.0.1|
|python|donjayamanne|0.6.4|
|Theme-Zenburn|gerane|0.0.3|
|beautify|HookyQR|1.0.2|
|output-colorizer|IBM|0.1.1|
|MeteorSnippets|jmlv|0.1.3|
|vscode-exec-node|miramac|0.5.0|
|Arduino|moozzyk|0.0.4|
|node-modules-resolve|naumovs|1.0.2|
|indent-rainbow|oderwat|0.6.1|
|ejs-language-support|QassimFarid|0.0.1|
|vscode-icons|robertohuertasm|7.6.0|
|text-marker|ryu1kn|0.3.0|
|guides|spywhere|0.7.0|
|language-pde|Tobiah|0.1.21|
|vscode-meteor|vuhrmeister|0.1.1|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. I usually use Snippet such as Javascript code snippets, Jquery code snippets  and my snippets.
But after updating, everything is changed. You can see below image.

&gt; ( I want to select basically 'console.log()' when I typed 'clg', not 'ConstrainLong' and my snippet's priorty became the lowest. It's very sad and annoying. ) 

![image](https://cloud.githubusercontent.com/assets/20391482/25760121/40f7c3c4-3210-11e7-8f1b-7cec162926e1.png)

2. I really hate, this VS code version. UI font is larger than before and my previous configure was ignored.  but I didn't get any advantage something. I WANNA GO PREVIOUS VERSION. This version is really suck!

How can I? Plz, plz tell me rapidly! Thank you!</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26056</IssueID>
    <Title>window.nativeTabs dosen't work</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: macOS 10.12.4

I set up "window.nativeTabs": true, but new windows open not in tabs.
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26055</IssueID>
    <Title>TERMINAL display incorrectly</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|ng-template|Angular|0.1.3|
|angulardoc-vscode|AngularDoc|2.1.0|
|path-intellisense|christian-kohler|1.2.0|
|vscode-simpler-icons|davidbabel|1.3.0|
|githistory|donjayamanne|0.2.0|
|vscode-generate-getter-setter|DSKWRK|0.4.2|
|EditorConfig|EditorConfig|0.9.3|
|auto-rename-tag|formulahendry|0.0.11|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|beautify|HookyQR|1.0.2|
|docthis|joelday|0.4.4|
|Angular2|johnpapa|2.2.3|
|refactorix|krizzdewizz|0.3.3|
|vscode-extension-auto-import|moppitz|1.3.3|
|csharp|ms-vscode|1.9.0|
|typescript-javascript-grammar|ms-vscode|0.0.19|
|angular-io-code|NoHomey|0.0.6|
|vscode-docker|PeterJausovec|0.0.13|
|typescript-hero|rbbit|0.12.0|
|vscode-icons|robertohuertasm|7.6.0|
|ts-import-assistance|Sammons|0.0.10|
|code-settings-sync|Shan|2.7.0|
|vscode-autohotkey|slevesque|0.2.0|
|autoimport|steoates|1.2.2|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. Execute `View: Toggle Integrated Terminal` to open terminal and open PowerShell by default
2. The console is not display correctly.  All the characters are not aligned correctly.  See screenshot below:

![image](https://cloud.githubusercontent.com/assets/88981/25754129/ba8eaad8-31f0-11e7-878b-8d55972ee3c3.png)

3. When I execute `cls` to clean Terminal, it back to normal.  But when I execute `dir` agin, it can't get expected display format.  Please see screenshot below:

![image](https://cloud.githubusercontent.com/assets/88981/25754237/1046b722-31f1-11e7-9e25-1df6d6d22b96.png)
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26049</IssueID>
    <Title>Integrated terminal is getting bug</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 
Version: 1.12.1
commit: f6868fce3eeb16663840eb82123369dec6077a9b
- OS Version:
Windows 10 Pro
Version: 1703
OS build: 15063.138

Steps to Reproduce:

1. start VSCode
2. run integrated terminal (Press "Ctrl + Shift + `")

When I try cmd, it get bug too.

![2017-05-05 2](https://cloud.githubusercontent.com/assets/13725109/25751324/8e92a67e-31ef-11e7-997d-aa7f187456af.png)
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26040</IssueID>
    <Title>Preview on Git diff seems to work incorrectly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows


Steps to Reproduce:

1. Open a git repo with some files modificated or renamed (tracked previously)
2. Open with one click different files on the changes list (the deleted, copied and added files, works well)


![bug](https://cloud.githubusercontent.com/assets/3236398/25754019/6294df22-3183-11e7-9187-0621c09fef0e.gif)

</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26037</IssueID>
    <Title>Syntax highlighting broken for embedded languages other than JS in html script tags</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: April 2017 1.12
- OS Version: Windows

Steps to Reproduce:

1. Create &lt;script type="text/html"&gt; tag with inline html
2. Syntax highlighting defaults to Javascript?

Note can remove type="text/html" attribute and sorta of okay but this should be needed.
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26033</IssueID>
    <Title>Git: open file in diff view title bar should always open in the same editor group</Title>
    <Description>1. Open some file in left editor group
2. Open some diff view in right editor group
3. Click on the open file git title bar action in the diff view
4. The file is opened in the left editor group. I would expect it to open in the right group

I find this frustrating 🙃</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26031</IssueID>
    <Title>Alt-Tab Display Corrupted on Linux Centos7</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: Linux Centos 7.3.1611 (Core)

Picture of [problem:](http://pasteboard.co/2CzocrVT4.jpg)

Seen this on both KDE and GNOME.
Installed via RPM.
Running inside of a Vmware 7 VM on MacOS.

Closing visual studio fixes the problem.

Steps to Reproduce:

1. Start Visual Studio Code
2. Alt-Tab
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26023</IssueID>
    <Title>no 'when' context when in Zen mode</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.14.1|
|path-intellisense|christian-kohler|1.2.0|
|githistory|donjayamanne|0.2.0|
|gitlens|eamodio|3.4.9|
|tslint|eg2|0.12.0|
|JSDocTagComplete|HookyQR|0.0.2|
|docthis|joelday|0.4.4|
|team|ms-vsts|1.117.2|
|vscode-filter-json|richie5um2|1.0.0|
|vscode-sort-json|richie5um2|1.9.0|
|partial-diff|ryu1kn|0.2.0|
|standard|shinnn|0.2.3|
|code-spell-checker|streetsidesoftware|1.1.0|
|JasmineSnippets|xabikos|0.2.1|;


---


I have configured the following in keybindings.json

```
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility",
        "when": "inZenMode"
    }
```

The expectation is to be able to use the shortcut when in ZenMode to toggle the activity bar.
But the shortcut is only active **outside** ZenMode!

Also, with each toggle, the icons for VSTS (work items, pull requests etc). get duplicated within the status bar!

</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26019</IssueID>
    <Title>Open Editors view doesn't react on mouse clicks</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Insiders 1.13.0
- OS Version: macOS or Windows 10

Steps to Reproduce:

- click on item in "Open Editors" view

Observe: nothing happens. The item is not selected.
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26015</IssueID>
    <Title>[jsx] Show correspond html close tag when click on start tag</Title>
    <Description>when using sublime

&lt;img width="602" alt="2017-05-05 6 09 37" src="https://cloud.githubusercontent.com/assets/11001914/25741654/3ebd9e14-31be-11e7-9667-2f09debfbb01.png"&gt;

there is an underline when click on start tag of html,so I can know exactly where are the closing tag.

but in VScode it highlight all tag

&lt;img width="668" alt="2017-05-05 6 09 26" src="https://cloud.githubusercontent.com/assets/11001914/25741674/683fcbe0-31be-11e7-8e14-f620409b6b53.png"&gt;

How to solve this?
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26013</IssueID>
    <Title>Terminal bug after VS Code is reopened</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Ubuntu 16.04 (x64)

Steps to Reproduce:

1. Open VS Code
2. Go to View -&gt; Integrated Terminal to show integrated terminal
3. Close VS Code
4. Open VS Code and terminal is closed

There is no bug if you are on any other tab (Problems, Output, Debug console), except Terminal.
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>26000</IssueID>
    <Title>update new VSCode 1.12.1.</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|pascal|alefragnani|0.8.0|
|vscode-javascript-snippets|codepunkt|1.0.0|
|file-icons|file-icons|1.0.3|
|vscode-javac|georgewfraser|0.0.41|
|vue|jcbuisson|0.1.5|
|copy-markdown-as-html|jerriepelser|1.0.0|
|mdhelper|joshbax|0.0.9|
|format-php|Kasik96|1.1.2|
|csharp|ms-vscode|1.9.0|
|sublime-keybindings|ms-vscode|2.0.1|
|language-vscode-javascript-angular2|nwallace|0.0.11|
|vetur|octref|0.6.4|
|vue-beautify|peakchen90|2.0.4|
|material-icon-theme|PKief|2.0.5|
|vscode-jsp|pthorsson|0.0.2|
|Material-theme|zhuangtongfa|2.7.0|;


---

Steps to Reproduce:

1.&lt;script id="cart-list" type="text/html"&gt;
2.update VSCode this script tag info input html heightlight display is error.</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25997</IssueID>
    <Title>"PATH" are not set if open the app directly</Title>
    <Description>- VSCode Version: 1.12.1
- OS Version: macOS 10.11.6
- Problem: `PATH` are not set if open the app directly, while can be set with the `code` command.

FYI, I'm using fish-shell.

Is there anything I can supply to help investigating the problem?



</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25992</IssueID>
    <Title>Terminal output is not well arranged</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.3|
|gitlens|eamodio|3.4.5|
|matlab|Gimly81|0.5.0|;


---

Steps to Reproduce:

1. ctrl+`
2. ls
3. the text is not arranged well.
![default](https://cloud.githubusercontent.com/assets/8809778/25735964/9e7bec60-31a1-11e7-8bf6-5c9e4e0c39f2.PNG)
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25989</IssueID>
    <Title>Remote debug throws "[node-debug2] Error processing "attach": 'Schema.getDomains' wasn't found"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.1
- OS Version: Windows 7 Enterprise SP1

Steps to Reproduce:

1. Debug with "Attach to Remote Program"

It was working yesterday, right after the update to 1.12.1 it throws this:
`[node-debug2] Error processing "attach": 'Schema.getDomains' wasn't found`

Remote app is running on node 6.5 if that matters.</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25973</IssueID>
    <Title>terminal bug</Title>
    <Description>- VSCode Version: Code 1.12.1
- OS Version: Windows 10.0.15063
- localization : Chinese (Simplified)

Steps to Reproduce:
1. ctrl+` open terminal panel
2.
![2](https://cloud.githubusercontent.com/assets/1720546/25732777/ae69697a-3185-11e7-9ba3-6902b5d2589e.png)
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25970</IssueID>
    <Title>希望可以一个窗口打开多个项目</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.2.1|
|auto-rename-tag|formulahendry|0.0.11|
|composer|ikappas|0.5.0|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|Go|lukehoban|0.6.59|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|cpptools|ms-vscode|0.11.0|
|vscode-icons|robertohuertasm|7.6.0|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25968</IssueID>
    <Title>Win 10 - the layout of VSCode panel is out of order after Windows was upgraded to version 1703</Title>
    <Description>- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:26:50.689Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|npm-intellisense|christian-kohler|1.3.0|
|githistory|donjayamanne|0.2.0|
|jquerysnippets|donjayamanne|0.0.1|
|vscode-html-css|ecmel|0.1.2|
|auto-close-tag|formulahendry|0.3.12|
|auto-rename-tag|formulahendry|0.0.11|
|code-runner|formulahendry|0.6.16|
|godot-tools|geequlim|0.2.5|
|beautify|HookyQR|1.0.2|
|path-autocomplete|ionutvmi|1.4.1|
|vscode-colorize|kamikillerto|0.5.0|
|Go|lukehoban|0.6.61|
|editorconfiggenerator|nepaul|0.2.1|
|syncing|nonoroazoro|1.3.7|
|vscode-versionlens|pflannery|0.14.1|
|vscode-icons|robertohuertasm|7.6.0|
|text-marker|ryu1kn|0.3.0|
|guides|spywhere|0.7.0|
|JavaScriptSnippets|xabikos|1.4.0|
|Material-theme|zhuangtongfa|2.6.3|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25964</IssueID>
    <Title>It's easy to use "Multiple cursor" ,but autocomplete not working correctly  &amp; how to remove one of the cursor ?</Title>
    <Description>If I want to write same code in several place  , I will use alt+click to generate multiple cursor . But when I press 'tab' to use autocomplete , it can't works.

And if I generate a cursor in a wrong place，I don't know how to remove it , I can only come back again .

I read the Official documents [https://code.visualstudio.com/docs/editor/codebasics#_multiple-selections-multicursor](url) , but I just find how to make multiple cursor.
</Description>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25943</IssueID>
    <Title>C# Snippets do not work after update to 1.12.0</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:18:34.633Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|fresh-material|2ndshift|1.5.0|
|html-snippets|abusaidm|0.1.0|
|vscode-color|anseki|0.4.1|
|path-intellisense|christian-kohler|1.2.0|
|vscode-eslint|dbaeumer|1.2.8|
|bower|donjayamanne|0.0.3|
|jquerysnippets|donjayamanne|0.0.1|
|bowerwatcher|ealsur|0.0.1|
|vscode-html-css|ecmel|0.1.2|
|tslint|eg2|0.12.0|
|vscode-npm-script|eg2|0.1.9|
|auto-close-tag|formulahendry|0.3.12|
|vscode-material-theme|fredrikaverpil|0.0.5|
|beautify|HookyQR|1.0.2|
|csharpextensions|jchannon|1.3.0|
|nuget-reverse-package-search|jesschadwick|0.1.68|
|vscode-nuget-package-manager|jmrog|1.1.2|
|Angular2|johnpapa|2.2.3|
|theme-material-theme|jprestidge|1.0.1|
|docomment|k--kato|0.0.14|
|mssql|ms-mssql|1.0.0|
|csharp|ms-vscode|1.9.0|
|vscode-versionlens|pflannery|0.14.1|
|material-icon-theme|PKief|2.0.5|
|ClassyNaming|reflectiondm|1.0.0|
|prettier-eslint-vscode|RobinMalfait|0.7.1|
|aspnet-helper|schneiderpat|0.6.3|
|code-settings-sync|Shan|2.7.0|
|bootstrap4-vscode|thekalinga|2.3.3|
|bootstrap-3-snippets|wcwhitehead|0.0.9|
|vscode-material-syntax-dark|woodywoodsta|0.1.1|
|JavaScriptSnippets|xabikos|1.4.0|
|ReactSnippets|xabikos|1.2.1|;


---

Steps to Reproduce:

1. Try any VSCode built-in C# snippet (ctor, prop etc)
2. Intellisense does not show the snippet in the list of available actions</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25941</IssueID>
    <Title>View is flickering when scrolling</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12
- OS Version: macOS Sierra 10.12.4

Steps to Reproduce:

1. Open  Code
2. Start scrolling

The complete view is flickering when scrolling. 
Happens since the update to 1.12</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25933</IssueID>
    <Title>release notes are NOT searchable</Title>
    <Description>- VSCode Version: 1.12


- OS Version: MacOS 10.12.4

Steps to Reproduce:

1. Open release notes
2. search for string (Cmd-F) such as  work.
3. Scream

The release notes seem to be some of bizarre presentation format, which I am sure is obvious to VS Code developer/documenter, but while it is presented in a document window, it's a truly royal pain to navigate as document.  The particular of this bug is that's not searchable, but more generally, THINGS IN DOCUMENT WINDOWS SHOULD ACT LIKE DOCUMENTS. 

If the document is REALLY a web page, OPEN A WEB BROWSER (https://code.visualstudio.com/updates/v1_12) for the user so they have an suitable experience (which btw, supports searching).  At minimum, the top of the document should state:
* it's not normal document (state what it **is**)
* Include a link to the web version of the document 
</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25932</IssueID>
    <Title>Close (Working Tree) tab when discarding changes in Source Control panel</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.0 (1.12.0)
- OS Version: OSX 10.11.6

Steps to Reproduce:

1. Open Source Control Panel
2. Select file with changes from uncommitted changes list (opens file)
3. Discard changes to currently open file

Would be nice if the `openFile.js (Working Tree)` tab auto-closed or switched to the original file version since people will frequently review the contents of a file before discarding all their changes to it.</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25931</IssueID>
    <Title>HTML &lt;script&gt; tags containing HTML are not rendered with syntax colourization any longer</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:18:34.633Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.14.1|
|swagger-viewer|Arjun|1.4.0|
|xml|DotJoshJohnson|1.7.0|
|tslint|eg2|0.12.0|
|vscode-firefox-debug|hbenl|0.12.1|
|typelens|kisstkondoros|1.4.1|
|swagger-doc-viewer|mimarec|1.0.4|
|csharp|ms-vscode|1.9.0|
|PowerShell|ms-vscode|0.12.2|
|vs-keybindings|ms-vscode|0.1.3|
|azurerm-vscode-tools|msazurermtools|0.3.4|
|debugger-for-chrome|msjsdiag|3.1.1|
|swaggitor|qnsolutions|0.1.1|
|qub-msbuild|qub|0.6.3|
|swagger-linter|vscode|0.6.0|;


---

Steps to Reproduce:

1. Create an HTML file containing the following:
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Sample App&lt;/title&gt;
    &lt;meta charset="utf-8"&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;script type="text/html" id="doc-dialog"&gt;
    &lt;div class="modalDialogBody" style="width: 200px;height: 200px; color: white; background-color: black;"&gt;
        &lt;span&gt;Text in the dialog&lt;/span&gt;
    &lt;/div&gt;
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

2. Notice that the text within the &lt;script&gt;&lt;/script&gt; block is not rendered with colourization, whereas the html outside the script element is.

**NOTE: Started to occur in 1.12.0, did not occur in 1.11.0.**
</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25930</IssueID>
    <Title>redundant enter character after auto-completion</Title>
    <Description>- VSCode Version:Version 1.12.0 72672be0b7d3eef0784077b880615f91b7ec85aa
- OS Version: Ubuntu 17.04

Steps to Reproduce:
![vscodebug](https://cloud.githubusercontent.com/assets/4303130/25724506/c25b7e96-314e-11e7-94f4-d0008372a39a.gif)

There has a redundant enter character been insert into my code after I enter "enter" key to finish auto-completion.</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25926</IssueID>
    <Title>Error processing 'configurationDone' request. Unknown Error: 0x89720010</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:10:14.237Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-devskim|MS-DevSkim|0.1.2|
|jsontotype|danielDing|0.0.3|
|csharp|ms-vscode|1.9.0|;


---

Steps to Reproduce:

1.  Had a working project.  Upgraded VSC per request.
2.  Try to Debug project.   Immediately get error 
3. I disabled all extensions just to be sure but still have error.</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25917</IssueID>
    <Title>Tabs close upon updating addons &amp;/or updating vscode</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:10:14.237Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Go|lukehoban|0.6.60|
|PowerShell|ms-vscode|0.12.2|;


---

Steps to Reproduce:

1. Get notification of an extension that needs an update
2. Allow extension to update
3. Allow "reload" after update completes
4. All open tabs are closed</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25906</IssueID>
    <Title>Can no longer remove single matches from search results</Title>
    <Description>- VSCode Version: Code 1.12.0 (72672be0b7d3eef0784077b880615f91b7ec85aa, 2017-05-04T16:10:14.237Z)
- OS Version: Darwin x64 15.6.0
- Extensions: none
---

You can still remove an entire file's matches. When you reveal the replace text box you can remove them again. Seems inconsistent.</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25904</IssueID>
    <Title>'Go to File' lists non-existent files</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|latex-workshop|James-Yu|2.2.1|
|vscode-docker|PeterJausovec|0.0.13|
|vscode-wakatime|WakaTime|1.1.4|
|Bookmarks|alefragnani|0.14.1|
|numbered-bookmarks|alefragnani|0.9.0|
|npm-intellisense|christian-kohler|1.3.0|
|gitignore|codezombiech|0.5.0|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.4|
|tslint|eg2|0.12.0|
|vscode-npm-script|eg2|0.1.9|
|vscode-great-icons|emmanuelbeziat|2.0.3|
|ocaml|hackwaly|0.6.27|
|haskell-linter|hoovercj|0.0.6|
|vscode-ghc-mod|hoovercj|1.2.0|
|language-haskell|justusadam|2.1.1|
|cpptools|ms-vscode|0.11.0|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|7.6.0|
|vscode-gtm|s3ramsay|0.2.0|
|stylish-haskell|vigoo|0.0.8|
|vim|vscodevim|0.6.20|;


---

Somehow, for some files I get capitalized duplicates:
![image](https://cloud.githubusercontent.com/assets/493741/25714138/57be2cac-30f7-11e7-8305-fa06181fea9a.png)
Both entries open the same file (there's only one file `printable.ml`). For the capitalized entry, the tab-title is also capitalized, but it highlights the correct (lowercase) file in the explorer.
The strange thing is that this only happens for some files (in this folder only for the last three files, not the rest).</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25901</IssueID>
    <Title>Must type the same letter twice when one letter is selected</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (0834f15e86ef8359da9fbcf95d49083001af65c3, 2017-05-03T15:02:36.792Z)
- OS Version: Linux x64 4.4.0-75-generic
- Extensions: none
---

Steps to Reproduce:

1. select a letter
2. type the selected letter (nothing happens)
3. type the selected letter again (the letter will finally be typed)

Real example - rename `i` to `idx`

1. select all three `i` variables
2. type `idx` (only `dx` will appear)
2. type `iidx` (first `i` won't appear)
```
for (var i = 0; i &lt; length; i++) {
}
```</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25899</IssueID>
    <Title>集成终端</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.11.2
- OS Version: Windows 10 1703

集成终端显示BUG
![BUG](https://raw.githubusercontent.com/OStoneO/testFiles/master/pic/VS%20Code%20terminal%20bug.jpg)

请问，这种终端的缩进与换行混乱有没有解决办法？

</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25880</IssueID>
    <Title>[Feature request] Take into account location information in paths when following them in the terminal</Title>
    <Description>rustc produces error messages with paths formatted like `src\librustc\ty\instance.rs:61:31`. Currently I can Ctrl+Click to go to the file. It would be nice if it could also go to line 61, column 31.</Description>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25840</IssueID>
    <Title>Drag filename from explorer to editor pane broken in 1.11.2</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: Windows 10

Steps to Reproduce:

1. Drag file from the Explorer pane into a non-focused editor pane
2. The file always opens in the currently focused editor pane

This was working in the last version.
</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25837</IssueID>
    <Title>No intellisense for Javascript project files that use 'require'</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: 10.11.6 

Steps to Reproduce:

1. Create project with A.js and B.js. Add a global variable or function and any 'require' statement to B.js
2. Attempt to access B's global variable from A.js (no intellisense shows).
3. Comment out the 'require' statement in B.js.
4. Attempt to access the global variable from A.js (intellisense shows).

&lt;img width="912" alt="screen shot 2017-05-03 at 12 17 39 pm" src="https://cloud.githubusercontent.com/assets/24323176/25670442/b0f63f56-2ffa-11e7-9510-f5aca4d9b7e2.png"&gt;
&lt;img width="896" alt="screen shot 2017-05-03 at 12 18 12 pm" src="https://cloud.githubusercontent.com/assets/24323176/25670441/b0f61dbe-2ffa-11e7-81d9-bb294a0247f7.png"&gt;


</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25831</IssueID>
    <Title>Hot exit should preserve language mode for untitled files</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: 14393.693

Hi.
I've just noticed that there is an autosave of files that are not saved. It's great ! But there is something that i miss : an autosave for the language selected ! If you create a file, and write down some code, you'll most likely change the plain text to Java, C++ or whatever you want. Iif you restart VSCode, your file will still be there, but not the selected language !
</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25828</IssueID>
    <Title>Feature Request: Add a menu to copy the search result to the clipboard</Title>
    <Description>
- VSCode Version:
  VSCode 1.12 Insider
- OS Version:
  Win10 64bit

Steps to Reproduce:

1.Open a folder
2.Find in files
There is no method to copy the research result to the clipboard.
Is it possible to popup a menu when right clicking the research result, and the menu includes an item "copy to clipboard"?

Thanks.
</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25810</IssueID>
    <Title>Vscode second instance is not opening on windows</Title>
    <Description>When a vscode instance with admin privileges is opened, no other instance of vscode will open. Tried opening from command prompt  ( without admin privileges ), explorer context menu, new instance with admin privileges   but none them is working</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25803</IssueID>
    <Title>React lifecycle method suggestions aren't work with es6</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Windows 7

Steps to Reproduce:

1. When write React Component with es5 there is a suggestion of React lifecycle method.
2. Now Facebook suggest developers use es6 instead of es5, and the createClass method is deprecated.
3. When I rebuild my app with es6, there is no suggestion of React lifecycle method.
</Description>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25797</IssueID>
    <Title>Neo keyboard 4'th layer backspace not working</Title>
    <Description>- VSCode Version: Code - OSS 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-05-02T20:44:27.820Z)
- OS Version: Linux x64 4.10.11-1-ARCH
- Extensions: none
---

Steps to Reproduce:

1. use neo layout:
    $ setxkbmap de neo
2. Fresh install vscode:
    $ yaourt visual-studio-code-oss      //-git or the binary have the same problem
3. start vscode, open an new text file and type some text
4. press "ALT-GR + v" or "&lt; + v" (should be backspace on 4'th layer) --&gt; not working

- the normal backspace works.
- the arrow keys, DEL, ENTER and the other keys on the 4'th layer work as fine as everytime
- note: in the search dialog for the keyboard-shortcut-config, the 4'th layer backspace works
- I tried to delete all key-configs for keys related to "v" or "backspace" which changed nothing

For more information on Neo, see here: [http://neo-layout.org/](url)</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25794</IssueID>
    <Title>VSCode update popup never disappears, forcing the user to click on "Later" (for the popup to disappear)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.81
- OS Version: arch linux

Steps to Reproduce:

1. open old vscode version
</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25785</IssueID>
    <Title>Maintain scroll position for content provided by TextDocumentContentProvider</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (aa05dac84b7526550653a861c17b402349cb3bc6, 2017-05-02T00:11:45.176Z)
- OS Version: Windows_NT ia32 10.0.16184
---

When switching tabs, content provided by a `TextDocumentContentProvider` resets the scroll position to the first line.

Steps to Reproduce:

1. Open content provided by a `TextDocumentContentProvider`
2. Scroll down the "file"
3. Switch tabs and come back to that "file"
4. 🐛Scroll position is reset to the first line

It would be great if the scroll position was maintained</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25782</IssueID>
    <Title>Unable to middle-click to paste in "Find"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25781</IssueID>
    <Title>Enhancement - search project dir by filename</Title>
    <Description>currently if I open a dir with large # of files, I dont see a way to search for a file, I can only search inside open files, 

lets say I want to find file named file68, i have to scroll all the way down, In this example its easy because of numerical naming, but in real examples I spend lot of time scrolling through hundreds of files to find the right file to edit, should be an easier way. 


![vc2](https://cloud.githubusercontent.com/assets/10224886/25624318/fa9d0c90-2f26-11e7-84c4-88273ea8fd5c.png)
</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25779</IssueID>
    <Title>Could not install typings files for JavaScript language features.</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (aa05dac84b7526550653a861c17b402349cb3bc6, 2017-05-02T00:04:13.700Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.3|
|code-settings-sync|Shan|2.6.2|
|sort-lines|Tyriar|1.2.0|
|Bookmarks|alefragnani|0.14.1|
|project-manager|alefragnani|0.15.1|
|path-intellisense|christian-kohler|1.2.0|
|vscode-eslint|dbaeumer|1.2.8|
|vscode-html-css|ecmel|0.1.2|
|tslint|eg2|0.12.0|
|Angular2|johnpapa|2.2.3|
|vscode-icon-theme|jtlowe|1.5.0|
|theme-karyfoundation-themes|karyfoundation|11.1.0|
|HTMLHint|mkaufman|0.3.3|
|vscode-autoprefixer|mrmlnc|2.0.0|
|vscode-stylefmt|mrmlnc|2.3.0|
|angular2-inline|natewallace|0.0.17|
|typescript-hero|rbbit|0.12.0|
|project-snippets|rebornix|0.5.0|
|stylelint|shinnn|0.24.0|
|darcula-extended|smlombardi|3.3.2|
|slime|smlombardi|1.15.0|
|theme-tesla|smlombardi|6.0.0|
|change-case|wmaurer|1.0.0|;


---

Steps to Reproduce:

1. Open a JS file
2. Dialog appears: "Could not install typings files for JavaScript language features. Please ensure that NPM is installed and is in your PATH"

I do have NPM installed, but we install node with NVM (Node Version Manager), which has confused some other plugins (mostly in Sublime Text) that expect a conventional install of Node.

My bash_profile:
````
# source ~/.profile
export LC_CTYPE=en_US.UTF-8
#PS1="\u$ "
export PATH="/usr/local/bin:node_modules/.bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
# export NODE_PATH=/usr/local/lib/node_modules

export CLICOLOR=1
# export LSCOLORS=GxFxCxDxBxegedabagaced

alias ll='ls -lahG'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; . "$NVM_DIR/nvm.sh" # This loads nvm

[[ -s ~/.bashrc ]] &amp;&amp; source ~/.bashrc


##
# Your previous /Users/stevelombardi/.bash_profile file was backed up as /Users/stevelombardi/.bash_profile.macports-saved_2017-02-13_at_14:15:46
##

# MacPorts Installer addition on 2017-02-13_at_14:15:46: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts.
````</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25778</IssueID>
    <Title>macOS ColorSync profiles cause blocky backgrounds</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: the listing exceeds the lower minimum of browsers' URL characters limit
---

Steps to Reproduce:

1. open VSCode on macOS
2. open the Displays panel of System Preferences
3. try various display profiles with some code open, using a dark color theme. "Apple RGB" should cause the issue, for example</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25775</IssueID>
    <Title>Strange boxes</Title>
    <Description>Hi VS Code team. I love the app and use it a bunch, thank you! 

I have one problem though. These (what I can only call) strange boxes often appear on the editor no matter what theme I am using. The frustrating thing is that these boxes often move and blink whilst I'm typing. 

Is this an VS Code problem or something else?

 What do you think the problem could be? I've attached pictures to help explain. 
![screen shot 2017-05-02 at 2 43 56 pm](https://cloud.githubusercontent.com/assets/10074185/25618134/fa94608a-2f45-11e7-9f65-e9632e32c7e9.png)
![screen shot 2017-05-02 at 2 43 53 pm](https://cloud.githubusercontent.com/assets/10074185/25618133/fa92e3e0-2f45-11e7-8456-e96b8027b92f.png)



- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.7.0|
|vscode-paste-and-indent|Rubymaniac|0.0.8|
|html-css-class-completion|Zignd|1.1.0|
|html-snippets|abusaidm|0.1.0|
|open-html-in-browser|coderfee|0.0.7|
|jquerysnippets|donjayamanne|0.0.1|
|auto-close-tag|formulahendry|0.3.12|
|auto-rename-tag|formulahendry|0.0.11|
|mssql|ms-mssql|0.3.0|
|debugger-for-chrome|msjsdiag|3.1.1|
|color-highlight|naumovs|2.1.3|
|vscode-icons|robertohuertasm|7.6.0|
|Material-theme|zhuangtongfa|2.6.3|;


---

Steps to Reproduce:

1. Just open a file and it shows in the editor.</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25772</IssueID>
    <Title>VS Code does not update the program in a custom installation path.</Title>
    <Description>- VSCode Version: 1.10.1 and previous, 
- OS Version: Windows 10 Pro Insider Preview, x64

I installed VS Code in a custom path, `C:\Office`. When I update the program the new version of VS Code is installed in `C:\Program Files (x86)\Microsoft VS Code`.

Steps to Reproduce:

1. Install VS Code in `C:\Office`.
2. Update VS Code when it ask me to update it to a newer version.
3. The updater will install the program in a default path, `C:\Program Files (x86)`, while it does not ask me anything about the installation path.
4. Now I have two VS Code installed in the system, the one is in `C:\Office\Microsoft VS Code` and the other is in `C:\Program Files (x86)\Microsoft VS Code`. 
5. When I open `C:\Office\Microsoft VS Code\Code.exe` it will ask me to update the program again because the program remains in the same version.
</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25757</IssueID>
    <Title>Touch screen doesn't work in the Terminal window</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-rust|kalitaalexey|0.3.11|
|cpptools|ms-vscode|0.11.0|;


---

Steps to Reproduce:

1. open Terminal Window: ctrl+`
2. use touch screen to scroll through the output. Doesn't work.</Description>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25751</IssueID>
    <Title>Find in selection button doesn't have blue border when selected</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12-insiders
- OS Version: macOS

Steps to Reproduce:

1. Select some text, cmd+f
2. Click on Find in selection button, it has a grey background but no borders
3. Press tab to cycle through all buttons in the UI, you can't notice when Find in selection is selected.
</Description>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25737</IssueID>
    <Title>[js] 'type aliases' can only be used in a .ts file</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11
- OS Version: Linux Ubuntu 16.04

Even if I use this `"javascript.validate.enable": false` it says `[js] 'type aliases' can only be used in a .ts file`, but after re-opening file everything will be fine, no error. But it's annoying, because it happens not all the time, but sometimes...

Code:
```
// `Props` type aliases.
type Props = {
  ipAddress: string,
  os: string
};
```

Settings:
```
  // JavaScript validation.
  "javascript.validate.enable": false
```</Description>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25733</IssueID>
    <Title>restart to update issue</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version:MacOS

Steps to Reproduce:

1. Click on code-&gt;restart to update and it closes all windows of vscode but doesn't updates and not even the application opens automatically
</Description>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>01/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25717</IssueID>
    <Title>cannot to disable the tab close button when turn off show tabs  </Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|language-x86-64-assembly|13xforever|2.2.9|
|java-run|caolin|1.1.4|
|yacc|carlubian|1.1.1|
|vscode-gist|dbankier|0.5.3|
|githistory|donjayamanne|0.2.0|
|javadebugger|donjayamanne|0.1.0|
|python|donjayamanne|0.6.3|
|java-debug|DSnake|0.0.2|
|mdmath|goessner|1.2.6|
|markdown-table-formatter|josa|0.2.0|
|vscode-colorize|kamikillerto|0.4.2|
|Kotlin|mathiasfrohlich|1.2.0|
|evermonkey|michalyao|2.3.12|
|vscode-todo-parser|minhthai|1.8.9|
|cpptools|ms-vscode|0.11.0|
|java|redhat|0.2.1|
|vscode-icons|robertohuertasm|7.6.0|
|theme-gruvbox|saviorisdead|0.0.1|
|background|shalldie|1.1.11|
|vscode-hexdump|slevesque|1.3.0|
|ayu|teabyii|0.2.1|
|vim|vscodevim|0.6.18|
|vscode-todo-highlight|wayou|0.4.18|
|agila-theme|whtsky|2.0.1|;

---

Steps to Reproduce:

1. `"workbench.editor.showTabs": false,`
2. `"workbench.editor.tabCloseButton": "off"`

it's a little annoying that two close button are at the top right corner only one tab.


![image](https://cloud.githubusercontent.com/assets/11540113/25572830/bd67c834-2e71-11e7-92e6-04c27c8b9461.png)
</Description>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>01/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25691</IssueID>
    <Title>Folder name does not change</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: latest
- OS Version: mac os

Steps to Reproduce:

1. open a folder named newFolder in vscode
2. go to finder and rename the folder myNewFolder
3.In vscode the folder name remains newFolder. Have to reopen the same folder to reflect the change.
</Description>
    <CreatedDate>30/04/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25687</IssueID>
    <Title>Content of editor window jumps up and down when markdown side-by-side preview is open</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Open a markdown file to editing
2. Open side-by-side preview.
3. Edit file in the left (editor) pane.

As the preview updates in right pane, content of left pane keeps jumping up and down, making it very difficult to edit.</Description>
    <CreatedDate>30/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25678</IssueID>
    <Title>Inline snippets should have lower precedence then actual properties if no match.</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (0bec115779b11a9d78bdb24ad7918c22524ea2ac, 2017-04-28T18:57:52.518Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|path-intellisense|christian-kohler|1.2.0|
|gitignore|codezombiech|0.5.0|
|bracket-pair-colorizer|CoenraadS|0.10.3|
|tslint|eg2|0.12.0|
|vscode-postfix-ts|ipatalas|1.3.0|;


---

Steps to Reproduce:

1.  `"editor.snippetSuggestions": "inline"`
2. Have lots of snippets, i.e. use `postfix` extension
3. Bring up intellisense on an object

When there is nothing matched yet, snippets should have a default lower ranking then actual properties. Often I use intellisense to discover properties on an object, now I have to scroll down past all my snippets. I don't want to set `"editor.snippetSuggestions": "bottom"` because I still want them to match when I do start typing.

![image](https://cloud.githubusercontent.com/assets/5593825/25557082/ffc8df9c-2d09-11e7-8ae8-9ae85e8737bd.png)
</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25670</IssueID>
    <Title>Source control doesn't detect changes when changing from symlink to normal file</Title>
    <Description>When changing a symlink to a normal file with the same name in a Git repository, VSCode doesn't show any changes in Source Control.

- VSCode Version: Version 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e)
- OS Version: macOS 10.12.4 (16E195)
- Git version: 2.12.0

Steps to Reproduce:

```
~ $ mkdir tsrepro
~ $ cd tsrepro/
~/tsrepro $ touch README
~/tsrepro $ ln -s README README-2
~/tsrepro $ git init
Initialized empty Git repository in /xxx/tsrepro/.git/
~/tsrepro $ git add .
~/tsrepro $ git commit -m "Initial commit"
[master (root-commit) 9901b0b] Initial commit
 2 files changed, 1 insertion(+)
 create mode 100644 README
 create mode 120000 README-2
~/tsrepro $ code .
~/tsrepro $ rm README-2
~/tsrepro $ echo "Now a file" &gt; README-2
~/tsrepro $ git status
On branch master
Changes not staged for commit:
  (use "git add &lt;file&gt;..." to update what will be committed)
  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)

	typechange: README-2

no changes added to commit (use "git add" and/or "git commit -a")
```

Source control is empty:

&lt;img width="279" alt="screen shot 2017-04-29 at 16 02 01" src="https://cloud.githubusercontent.com/assets/52677/25556032/3abc675a-2cf5-11e7-9de2-dea6507f901f.png"&gt;
</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25665</IssueID>
    <Title>[Feature Request] Custom background image without any extensions</Title>
    <Description>- VSCode Version: 1.11.1
- OS Version: OSX 10.11.6

Hope VSCode can like Atom, offering custom background image</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25663</IssueID>
    <Title>broken integrated terminal display</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Steps to Reproduce:

1.VSCode Version:1.11.2
2.OS Version:windows 10 pro 1703

broken integrated terminal display when using powershell in integrated terminal, as the following pic.

![2](https://cloud.githubusercontent.com/assets/22427127/25553388/86cd5502-2ce4-11e7-9772-243dfb5bfe16.jpg)

</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25617</IssueID>
    <Title>On linux ubuntu 16. when i mount my other partitions. It tends to be very slow. Git dont work properly and Intellisense stops!</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:01:14.464Z)
- OS Version: Linux x64 4.4.0-72-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-css-formatter|aeschli|0.0.2|
|copy-relative-path|alexdima|0.0.1|
|html-class-suggestions|AndersEAndersen|1.0.4|
|theme-material|bcmarinacci|1.3.0|
|path-intellisense|christian-kohler|1.2.0|
|compulim-vscode-closetag|Compulim|0.1.2|
|angular2-snippets|danwahlin|1.0.12|
|vscode-style-formatter|dweber019|1.0.0|
|vscode-html-css|ecmel|0.0.33|
|auto-close-tag|formulahendry|0.3.10|
|auto-rename-tag|formulahendry|0.0.11|
|sass-lint|glen-84|0.0.3|
|randomeverything|helixquar|0.0.3|
|angular2-switcher|infinity1207|0.1.4|
|vscode-angular2-emmet|jakethashi|1.0.11|
|Angular2|johnpapa|2.1.2|
|typelens|kisstkondoros|1.4.1|
|tag-rename|krizzdewizz|0.2.1|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.2|
|code-beautifier|michelemelluso|1.6.2|
|typescript-javascript-grammar|ms-vscode|0.0.18|
|color-highlight|naumovs|1.3.2|
|sort-imports|peterjuras|2.2.1|
|tsimporter|pmneo|1.2.14|
|CSSLint|raymondcamden|0.0.2|
|ActiveFileInStatusBar|RoscoP|1.0.2|
|vscode-add-angular2-files|sebastianbaar|1.1.3|
|html-css-class-completion|Zignd|1.0.3|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25611</IssueID>
    <Title>Could not run on CentOS 7 with x2go</Title>
    <Description>I have installed the latest version of VS Code on CnetOS 7. 
However when I try to run VS Code, it loads for some time trying to open, but then nothing happens, no errors, nothing.
I have tried to installed both trough rpm package and zipped files, but got the same result in both cases.

I'm using x2go to connect to my CentOS 7.</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25610</IssueID>
    <Title>Please support large files in VS Code editor</Title>
    <Description>Please enable VS Code to open large files (e.g. size about 100 MB).  It is needed for  working with log files (in debugging and tuning activities). The support for binary files would be appreciated as well. Thank you. Ivan

- VSCode Version: 1.11.2
- OS Version: Microsoft Windows 10

Steps to Reproduce:

1. Open a large text file 
2. You will get message "The file will not be displayed in the editor becouse it is either binary, very large or uses an unsupported text encoding." insted of the file's content.
</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>01/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25609</IssueID>
    <Title>-n and --new-window flags do not seem to be working</Title>
    <Description>- VSCode Version: Version 1.11.2 (1.11.2)
- OS Version: OSX 10.11.4

Steps to Reproduce:

1. open an instance of code from the command line `code .`
2. open a second instance of code for the same directory using the `--new-window` flag (`code --new-window .`

I seem to get the same window again. These flags are documented [here](https://code.visualstudio.com/docs/editor/command-line)

I get this same behaviour when debugging an extension locally

```
{
    "name": "Launch Extension",
    "type": "extensionHost",
    "request": "launch",
    "runtimeExecutable": "${execPath}",
    "args": ["--new-window", "/Users/lbatchelor/test-directory", "--extensionDevelopmentPath=${workspaceRoot}" ],
    "stopOnEntry": false
},
```
</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25561</IssueID>
    <Title>A rendering bug when typing Arabic after an English word</Title>
    <Description>- VSCode Version: Latest and greatest (Both stable:  1.11.2 / Insiders: 1.12.0-insider)
- OS Version: mac sierra

Today I found a very interesting bug. Which is not something that should normally be bothering anyone but maybe it's better to be fixed. I was unaware that my keyboard layout was Persian and I typed:
```
ُ
```
After the `constructor` and look what happens when you actually do that:

![arabic-vaj-probelm](https://cloud.githubusercontent.com/assets/2157285/25494561/3843bbc0-2b8f-11e7-978e-2fd550fae292.gif)

So I guess you can use this to reproduce the bug

```
            constructorٍ ( ) {

            }
```

I believe the problem is with [`U+0610` to `U+061A`](https://en.wikipedia.org/wiki/Arabic_script_in_Unicode).

As always thanks you so much for the Code, It's the best goddamn editor ever existed and really changed my workflow to something that every time I run it I feel so grateful.
Wishing you an awesome awesome time.</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25525</IssueID>
    <Title>Suggestion: render whitespace: show new line characters</Title>
    <Description>I have `editor.renderWhitespace` set to `all`, but it does not show me new line characters.

This would be useful, as when I have word wrapping enabled, it's not clear whether the line breaks because of a new line character or because of VSCode's word wrapping feature.</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25489</IssueID>
    <Title>Integrated terminal copies only the visible lines</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
Version 1.11.2
Commit 6eaebe3b9c70406d67c97779468c324a7a95db0e
Date 2017-04-13T08:03:11.395Z
Shell 1.4.6
Renderer 53.0.2785.143
Node 6.5.0

- OS Version: 10.0.14393

Steps to Reproduce:

1. Open the Integrated terminal
2. Run a command with a longer enough output to cause part of the output to not be visible (you'll have scroll bars)
3. Scroll to the beginning of your output, select 1-2 lines
4. Scroll to the bottom of the output
5. SHIFT+Click to select all output
6. Right-click to copy the output to your clipboard
7. Paste your clipboard content somewhere else
8. In my tests with Code and Insiders, only the visible part of the output is copied: one would assume the "hidden" output is still selected and therefore copied to the clipboard but that does not seem to be the case


</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25383</IssueID>
    <Title>Settings editor gets emptied</Title>
    <Description>Since a couple of days (actually might be weeks) I often see the right hand side of the settings editor turn completely empty. This typically happens when switching between tabs and then later coming back to the editor:

![image](https://cloud.githubusercontent.com/assets/900690/25425821/757cc39c-2a6d-11e7-9939-7aa01e54bf82.png)

in this case what I did was:
* change some settings
* open a file to the side
* click on another tab (settings got hidden)
* start a search
* click back to settings

Not sure yet how to reproduce better though.</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25382</IssueID>
    <Title>A command to restart the typescript server</Title>
    <Description>Testing #25334 

Steps to Reproduce:

1. Use the command Typescript: Select Typescript version to change the version of typescript server running
2. Choose to restart the server later in the notification

I do not see any command / way to restart the type script server after I miss the above notification.
I also think it is helpful to provide this command in general
</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25374</IssueID>
    <Title>Ability to print</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:
- OS Version:

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25360</IssueID>
    <Title>终端内容显示错乱问题</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|smali|crazywolf|1.0.1|
|python|donjayamanne|0.6.3|
|Lua|keyring|0.0.9|
|Go|lukehoban|0.6.59|
|cpptools|ms-vscode|0.11.0|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|vscode-icons|robertohuertasm|7.6.0|;


---

Steps to Reproduce:

1. 配置powershell为终端进程，启动终端后内容显示错乱。
2. 配置git的bash为终端进程，执行一些命令后，界面内容显示有问题。命令执行结束后，起始符不在行开头。</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25313</IssueID>
    <Title>Improved functionality for search</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: Windows 10

1. When I select a text portion and I press CTRL-F I would expect the "Find in selection" option to be selected 

2. When I'm in the middle of a file and I press CTRL-F I would expect the first occurrence of what I am searching for to be found *after* where my cursor is. Now, when I start typing, the editor goes up to the beginning and starts searching from there.

Thanks!</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25307</IssueID>
    <Title>Extension host terminated unexpectedly. Please reload the window to recover.</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-npm-script|eg2|0.1.9|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.9.0|
|vscode-react-native|vsmobile|0.3.2|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25101</IssueID>
    <Title>First key press ignored</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (5590786c2f676ca2aee12b16cd01b4e0ac621984, 2017-04-20T08:32:34.121Z)
- OS Version: Darwin x64 15.6.0
- Extensions: None

Steps to Reproduce:

1. New Untitled File
2. Press: a
3. Select: a
4. Press: a
5. Expected: Selection disappears and cursor is to the right of a.
6. Actual: Selection stays.

This only happens when overwriting with the same character.</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24999</IssueID>
    <Title>Support multi monitor aware DPI resolution</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: windows 10 (1607)
- Extensions: 

when I drag the visual studio code from the screen of 1920*1080 resolution to the screen of 1600*900;
the fonts and code in the editors become breezing，and it becomes difficult to read.</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24994</IssueID>
    <Title>document text search box located over found result on long first string</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|terminal-tabs|Tyriar|0.1.1|
|npm-intellisense|christian-kohler|1.3.0|
|gitlens|eamodio|3.4.5|
|tslint|eg2|0.12.0|
|TypeScriptImport|kevinmcgowan|1.17.0|
|quicktask|lkytal|2.6.0|
|vscode-extension-auto-import|moppitz|1.3.3|
|debugger-for-chrome|msjsdiag|3.0.1|
|vscode-versionlens|pflannery|0.12.2|
|autoimport|steoates|1.2.2|
|vscode-react-native|vsmobile|0.3.2|
|ReactSnippets|xabikos|1.2.1|
|local-history|xyz|1.1.1|;


---

Steps to Reproduce:

1. add to new html file:
```
&lt;div class="input-group"&gt;
  &lt;input class="form-control" id="search" ng-change="onChange($ctrl.query)" ng-model="$ctrl.query" ng-model-options="{debounce:750}" placeholder="Query" /&gt;
  &lt;div class="input-group-btn"&gt;
```
2. find query "("
3. can't see first result if screen not wide enough

Expected: move query box if result located under it.

Screenshot illustrating the problem:
https://cl.ly/2H1W3i1j011H</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24773</IssueID>
    <Title>MRU for command palette</Title>
    <Description>[Feature request]
- VSCode Version: 1.11.2
- OS Version: Win 10 - Version: 10.0.14393 Build 14393

MRU (most recently used) (or say most used command) feature is missing in command palette of VS Code. This feature is present in Sublime Text and helps one to type same set of keys to focus on the most used command with those keystrokes rather than using arrow keys to reach to that needed command.

Another request which **directly relates** to this is that the previously typed text should hold in Command Palette just like in Sublime so one can access the previous command .

![subl](https://cloud.githubusercontent.com/assets/26769888/25044296/95c0dc20-2143-11e7-9a74-44e53e819290.gif)

![code](https://cloud.githubusercontent.com/assets/26769888/25044305/a0e8158c-2143-11e7-99a5-00279cdf15a7.gif)


</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24743</IssueID>
    <Title>Git command incorrect shows in terminal.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.11.2
- OS Version:macOS Sierria 10.12.4

Steps to Reproduce:

1.When I type in 'git s' ,the path which include Chinese always shows path twice.
2.Just look at 'time.json',the path repeat twice!
&lt;img width="630" alt="2017-04-14 14 13 43" src="https://cloud.githubusercontent.com/assets/15938765/25034908/a68e672e-211c-11e7-8772-bb71a7e549ea.png"&gt;


</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24635</IssueID>
    <Title>Show a confirmation dialog before DND in the explorer</Title>
    <Description>please, before doing the final operation

ask us

"are you sure you want to move this file"

the vscode side pane makes it so easy to accidentally move shit it happens to me all the damn time. :(

![image](https://cloud.githubusercontent.com/assets/881944/24980259/561476ee-1f8c-11e7-99c4-52a33fc3b9f9.png)

constantly accidentally drag dropping folders into other folders, this time `tools` got dragged to `vendor`
</Description>
    <CreatedDate>12/04/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24629</IssueID>
    <Title>Add (optional) keyboard binding to select word under cursor.</Title>
    <Description>- VSCode Version: 1.11.1
- OS Version: Windows 10

Steps to Reproduce:

1. Hover over a word.
2. While holding `Ctrl` (or w/e key is configured), click the word.

Expected: The word is selected.

I realize "go to definition" is mapped to Ctrl + click; would be nice to enable word selection though.
</Description>
    <CreatedDate>12/04/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24625</IssueID>
    <Title>[Feature Request] Display newline characters when "editor.renderWhitespace": "all"</Title>
    <Description>- VSCode Version: 1.11.1
- OS Version: Mac OSX 10.10.5

Steps to Reproduce:

1. Add `"editor.renderWhitespace": "all"` to `settings.json`
2. It renders most whitespaces, but not newline characters.

It would be very helpful to render the newline characters, with distinct renderings for CR vs LF. This is especially helpful if you have a mixed line ending file and want to see where the issues are.
</Description>
    <CreatedDate>12/04/2017</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24376</IssueID>
    <Title>Debug preLaunchTask halted by {0} process</Title>
    <Description>Note: I was able to repro many times in a row, but my last two attempts were successful.  glfh.

- VSCode Version: 1.11.1
- OS Version: macOS 10.12.4

Trying to run launch a debug sessions will _sometimes_ be prevented by an unknown running process 

Steps to Reproduce:

1. Attempt to launch debugger with `PreLaunchTask: Build` on non-compiling code. In my case, it was just the wrong file, and no edits are needed to compile:

![screen shot 2017-04-09 at 11 13 28 am](https://cloud.githubusercontent.com/assets/463564/24839773/99e6961e-1d15-11e7-98d3-6de70f6fb671.png)


2. Attempt to launch debugger with the correct/implementation/compiling code

3. Observe error:

![screen shot 2017-04-09 at 11 01 53 am](https://cloud.githubusercontent.com/assets/463564/24839740/067a45ec-1d15-11e7-968e-1f50292513db.png)

4. Observe output of `&gt;Tasks: Show Task Log`:

![screen shot 2017-04-09 at 11 02 27 am](https://cloud.githubusercontent.com/assets/463564/24839747/357946fe-1d15-11e7-9eae-9db3da04fc25.png)

5. Run `&gt;Tasks: terminate Running Task` (but there's no observable output).

6. Subsequent Debug `Launch` attempts fail with same output.

Launch.json snippet:
```
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/${fileBasenameNoExtension}",
            "args": [],
            "preLaunchTask": "build",
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": true,
            "osx": {
                "MIMode": "lldb"
            }
        },
```

Tasks.json snippet:
```
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "taskName": "build",
            "isBuildCommand": true,
            "command": "cc",
            "isShellCommand": true,
            "args": ["-Wall", "-Wextra", "-Werror", "-g", "${fileDirname}/${fileBasename}", "-o", "${fileDirname}/${fileBasenameNoExtension}"],
            "showOutput": "always",
            "dependsOn": "clean"
        },

...

        {
            "taskName": "clean",
            "command": "saferm",
            "isShellCommand": true,
            "args": ["${fileDirname}/${fileBasenameNoExtension}", "${fileDirname}/${fileBasenameNoExtension}.dSYM"],
            "showOutput": "never"
        }
    ]
}
```</Description>
    <CreatedDate>09/04/2017</CreatedDate>
    <ClosedDate>02/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24180</IssueID>
    <Title>Cycle trough previous searches in 'Go to File' input</Title>
    <Description>Recently switched to vscode from Atom and the only thing I miss very much is to easily cycle through previous queries when searching for a specific file using  `Ctrl + P` (or `Ctrl + E`)
Search history is [already implemented](https://github.com/Microsoft/vscode/issues/5508#issuecomment-246646872) for Search box and Find box. That would be cool to implement something similar also for `Go to File` box</Description>
    <CreatedDate>07/04/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24044</IssueID>
    <Title>British Keyboard Layout: System keymaps overridden</Title>
    <Description>The system keymaps appear to have been overridden in the latest release. In all other applications using cmd + ` scrolls through all the open windows in that application. In the latest version it splits the editor window.

- VSCode Version: 1.11
- OS Version: OSX 10.10.5

Steps to Reproduce:

1. Open VSCode
2. Open another VSCode window
3. Attempt to scroll through the VSCode windows using cmd + ` 
4. It splits the current editor and doesn't scroll though open VSCode windows
</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23988</IssueID>
    <Title>[Feature] Preserve case in Find and replace</Title>
    <Description>It would be nice to have Preserve case feature in find and replace.

What I mean is: searching for 'BadJob' and replacing with 'GoodJob' would do the following replacements

```
'badjob' -&gt; 'goodjob'  
'BadJob' -&gt; 'GoodJob'  
'badJob' -&gt; 'goodJob'  
'BADJOB' -&gt; 'GOODJOB'
```

</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23987</IssueID>
    <Title>Alt Shift Drag select delete broken when wordwrap on</Title>
    <Description>- VSCode Version: 1.11.0
- OS Version: Ubuntu Linux 4.4.0-72

Steps to Reproduce:

1. load a log file with long lines 
2. use Alt Shift Drag then delete to remove timestamps

Note how chunks of lines throughout the log are now missing
</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23981</IssueID>
    <Title>Shortcut key for new menu in new features is wrong display</Title>
    <Description>
![vscode-wrong-display-shortcut-key](https://cloud.githubusercontent.com/assets/13780209/24736551/cba6fbc2-1ab2-11e7-9a4f-5fea3f016fe5.png)

- VSCode Version: Code 1.11.0 (9122ec4b1068bd391e41974f46a4b54c1b9c90f9, 2017-04-05T20:59:05.375Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-color|anseki|0.2.5|
|theme-dark-monokai|bogdan-sinitsa|0.3.0|
|vscode-great-icons|emmanuelbeziat|1.1.44|
|beautify|HookyQR|1.0.2|
|theme-oceanicnext|mhartington|0.0.1|
|prettify-json|mohsen1|0.0.3|
|todotasks|sandy081|0.4.0|
|theme-tinaciousdesign|tinaciousdesign|0.2.4|
|Material-theme|zhuangtongfa|2.3.3|;


---

Keyboard Shortcut key for new menu in new features is **wrong display** (display as Local Language - In this case is Thai). What I understand is it should display as English and same style as previous version in another menu. (Sorry for my bad English)</Description>
    <CreatedDate>06/04/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23908</IssueID>
    <Title>When I select one area to delete, the chosen area won't disappear. This is not convenient.</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 15.5.0
- Extensions: none
---

Steps to Reproduce:

One problem:

When I select one area to delete, the chosen area won't disappear, this is not convenient. 

&lt;img width="773" alt="before delete" src="https://cloud.githubusercontent.com/assets/5757051/24687982/9b6871a2-19ef-11e7-92ef-89920378d78b.png"&gt;
&lt;img width="759" alt="after delete" src="https://cloud.githubusercontent.com/assets/5757051/24687984/a0881944-19ef-11e7-9cc6-274fe403902e.png"&gt;
</Description>
    <CreatedDate>05/04/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23764</IssueID>
    <Title>Change problem/error underlines?</Title>
    <Description>Is it possible to change the red sguiggles used for problems/errors to a straight line and different color? 

Can't seem to find a setting for it.</Description>
    <CreatedDate>31/03/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23678</IssueID>
    <Title>Support navigateUp/Down between Open Editors and file tree in Explorer</Title>
    <Description>- VSCode Version: `1.11.0-insider`
- OS Version: `Mac OS 10.12.4`

Steps to Reproduce:

1. Focus within a file in an editor, with the Explorer open to the left. 
2. Use a keybinding to trigger `navigateLeft` to move focus to the Explorer. If the focus is moved to the file tree you cannot `navigateUp` to access the Open Editors section. If the focus is moved to the Open Editors section, you cannot `navigateDown` to the file tree.


</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23487</IssueID>
    <Title>Processes running in the built-in terminal do not get ended when VSCode restarts itself</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Windows 10.0.15063

Steps to Reproduce:

1. Start a process in the Terminal
2. Update or install a new extension
3. Click "Restart" when it is done installing.
4. When Code restarts, it will not end the process you started.

EDIT: I checked to make sure that a closed terminal window will successfully stop and processes it has started, just in case. That works as intended.

UPDATE: Cannot reproduce on Linux. Following my instructions results in the process being closed successfully when restarting VSCode for an extension update. Tried on Ubuntu 16.04 with the same VSCode version.</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>20/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23262</IssueID>
    <Title>Timing problem in the terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: master
- OS: Windows

The terminal seems to have timing problems under Windows in terms of detecting and firing the exit event. I sometime see the following output:

Press any key to close the terminal
HelloWorld.ts(3,17): error TS2339: Property 'loog' does not exist on type 'Console'.

The problem here is that the terminal fires the exit event before it print `Press any key to close the terminal`. The task running framework stops parsing the output when the exit event is fired hence `HelloWorld.ts(3,17): error TS2339: Property 'loog' does not exist on type 'Console'.` is not recognized as being a valid output of the task anymore.

IMO the terminal should fire 'exit' or some other event when all output from the process is processed. I remember that in the output runner framework I was listening to close events on stdio as well to make sure I processed all output correctly.
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>20/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23192</IssueID>
    <Title>Scrolling cause text line shake vertically.</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|beautify|HookyQR|1.0.2|
|cpptools|ms-vscode|0.10.3|
|csharp|ms-vscode|1.8.0|;


---

Steps to Reproduce:

1.dude, just scroll
2. look at the lines closely</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>11/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22412</IssueID>
    <Title>Provide a way (command) to switch between panes of a diff view</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (01091bb0831f7ce07db3cdc3ad66abb4141ffd8d, 2017-03-10T07:05:03.565Z)
- OS Version: Darwin x64 16.4.0

---

Currently I can't find a way switch between the right and left panes of a diff editor. It would be great if there was a command to do it both for shortcut keys and extensions.</Description>
    <CreatedDate>10/03/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22270</IssueID>
    <Title>Make find widget resizeable</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Windows 8

Please can I request a larger search box or search area so that it is easy to type longer search criteria.</Description>
    <CreatedDate>09/03/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22181</IssueID>
    <Title>cursor appearing on wrong position when beyond 300 in php file</Title>
    <Description>- VSCode Version: Code 1.10.1 (653f8733dd5a5c43d66d7168b4701f94d72b62e5, 2017-03-02T00:33:15.706Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.6.2|
|debugger-for-chrome|msjsdiag|2.4.2|
|debugger-for-ios-web|msjsdiag|0.1.2|;


---

Steps to Reproduce:

1. create a .php file and create a line of code that goes over 300 columns/ characters  in  the text editor. You will notice that the cursor is partially over the the next character not inbetween them
2. If you go over 900 columns/ characters  in  the text editor it is beyond the next character</Description>
    <CreatedDate>07/03/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21835</IssueID>
    <Title>startSession not called when debug session started with vscode.startDebug</Title>
    <Description>
- VSCode Version: 1.10.1
- OS Version: macOS Sierra 10.12.3

Steps to Reproduce:

1. Register a `startSession` command in an extension.
2. Register another command that calls `vscode.startDebug`.
3. Launch extension
4. Start debug session by selecting launch profile in Debug viewlet and clicking launch icon. - startSession` is called.
5. Stop session.
6. Invoke command from 2. - Session starts without invoking `startSession`. 
</Description>
    <CreatedDate>02/03/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21581</IssueID>
    <Title>Offer to open settings when php path not set / invalid</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (40fecfaa77f01672e8a147be71f6f7ccb9cf8a12, 2017-02-27T14:09:29.088Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|autofilename|JerryHong|0.1.3|
|vscode-simple-icons|LaurentTreguier|0.10.1|
|vscode-docker|PeterJausovec|0.0.12|
|azure-cli|chrmarti|0.3.0|
|regex|chrmarti|0.0.7|
|vscode-eslint|dbaeumer|1.2.6|
|ghlink|dt|0.0.5|
|tslint|eg2|0.8.1|
|vscode-scss|mrmlnc|0.6.1|
|PowerShell|ms-vscode|0.9.0|
|cpptools|ms-vscode|0.10.1|
|debugger-for-chrome|msjsdiag|2.5.4|
|diff|rafaelmaiolla|0.0.1|
|vscode-open-in-github|sysoev|1.4.0|;


---

I think new users would be greatly helped with an Open Settings button as part of that message:

![screen shot 2017-02-28 at 3 59 13 pm](https://cloud.githubusercontent.com/assets/9205389/23440210/97390614-fdcf-11e6-8433-304e813ab12e.png)
</Description>
    <CreatedDate>01/03/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21457</IssueID>
    <Title>Multicursor highlighting on selection behaves oddly</Title>
    <Description>- VSCode Version: 1.9.1

Steps to Reproduce:

1. Type the text `XXXXXX`
2. Select the first `X`
3. Hit cmd-D multiple times. The selection will grow exponentially:

![t](https://cloud.githubusercontent.com/assets/50314/23344401/af98e044-fc49-11e6-80f3-af1054ca8dc1.gif)

I expected each cmd-D keypress to select the next X.

Furthermore, the "highlight all" behaves similarly oddly: It will highlight _pairs_ of whatever you selected:

![t2](https://cloud.githubusercontent.com/assets/50314/23344473/096e8032-fc4b-11e6-93ee-3c7e1f90d68f.gif)

Even weirder, if you replace the text, then undo, any adjacent selections are collapsed (so it doesn't undo the selection properly):

![t3](https://cloud.githubusercontent.com/assets/50314/23351704/b173a006-fc90-11e6-9059-0d10959523d3.gif)

1. Type 20 Zs.
2. Select one Z and "highlight all". There are now 10 selections of 2 characters each (wrong).
3. Type "p" to replacing all of them. You get 10 p's (wrong).
4. Undo. There are now 5 selections of 4 characters each (wrong).
5. Type "p" to replace all of them again. You get 5 p's (wrong).
6. And so on.</Description>
    <CreatedDate>26/02/2017</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21182</IssueID>
    <Title>Terminal links: Understand line and column information after a file path</Title>
    <Description>While testing #21021.

tsc generates error messages of the following form:
```
[10:13:10] Error: /Users/me/Development/projects/vscode/extensions/html/server/src/modes/htmlMode.ts(36,31): Property 'findDocumentSymbols' does not exist on type 'LanguageService'.
[10:13:10] Error: /Users/me/Development/projects/vscode/extensions/markdown/src/extension.ts(50,36): Property 'com_mands' does not exist on type 'typeof 'vscode''.
```

The files are correctly linkified.  We should have a link detection extension that also includes the line and column information so that we can directly jump to the error by clicking the link. </Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20447</IssueID>
    <Title>Find/replace dialog is much too small</Title>
    <Description>The find/replace dialog needs to be much wider (or at least able to be resized to make it much larger). It's frustratingly small when trying to work with larger search strings.
![image](https://cloud.githubusercontent.com/assets/216265/22839669/6a418e6e-ef98-11e6-9e44-b67b2d3c44f7.png)

- VSCode Version: 1.9.1
- OS Version: Windows 10 Pro

Steps to Reproduce:

1. Edit &gt; Find</Description>
    <CreatedDate>10/02/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20045</IssueID>
    <Title>Impossible fold and unfold of regions and subregions in Latin American keyboards.</Title>
    <Description>- VSCode Version: Code 1.9.0 (27240e71ef390bf2d66307e677c2a333cebf75af, 2017-02-02T08:31:00.827Z)
- OS Version: Windows_NT ia32 10.0.14393


---

Steps to Reproduce:

1. I need fold or unfold region or subregion in VScode.
2. I can't it because the "[" key does not exist on my keyboard. The only way to do this is with the combination shift + "{" but this does not serve to execute the function.

Greetings.</Description>
    <CreatedDate>06/02/2017</CreatedDate>
    <ClosedDate>20/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18947</IssueID>
    <Title>Problem with unreadable texts in tabs due to low contrast, brightness</Title>
    <Description>Most themes (and I think it's not their fault) use in effect very unreadable colors with low brightness/contrast ratios for inactive tabs, since they are faded using opacity. This is very inconvenient - not being able to clearly see what files are open and finding easily the ones I want. Especially if you are working at night with decreased screen brightness or in bright light (in the morning).

Currently:
![image](https://cloud.githubusercontent.com/assets/821272/22165447/1ee1347a-df5c-11e6-8096-e2d825a38cf1.png)

Illutration how the issue could be improved:
![image](https://cloud.githubusercontent.com/assets/821272/22165607/0f8b09b4-df5d-11e6-8fbf-74f14ff87329.png)

I am not proposing a solution, as I feel it may come from multiple directions e.g..:
- allow themes to customize tabs styling
- do not use opacity to fade inactive tab, highlight active tab by other means
- allows custom user styling of tabs...</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18636</IssueID>
    <Title>handle doubleclick on extension for open new tab like Explorer</Title>
    <Description>
![animation2](https://cloud.githubusercontent.com/assets/1549069/22011148/ca486f98-dca2-11e6-9cc7-b2b36f91acbb.gif)
- VSCode Version: 1.8.1
- OS Version: Windows 8
</Description>
    <CreatedDate>17/01/2017</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18538</IssueID>
    <Title>30 seconds of 100% CPU usage every time my web app makes an ajax request</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Arch Linux (kernel v4.8.8)

Steps to Reproduce:

1. Trigger any HTTP request when running the web application I'm working on (sorry, it isn't open source, so I realize that doesn't help a great deal)

The problem is that when I do this, vscode immediately jumps to 100% CPU on one core, and stays there for about 30 seconds before returning to normal. Naturally, this cuts the battery life of my laptop pretty dramatically, to the extent that I am not willing to make vscode my primary editor.
![vscode using 100 cpu](https://cloud.githubusercontent.com/assets/3988775/21951406/c1379aae-d9d3-11e6-8ac5-8767c9fe7a74.png)

Oddly, it is a `code` process that spikes, but performance while using the application does not seem to be affected. At first I thought it might be reindexing files (due to adding a rendered view file or some such), but I tried adding and editing test files, and neither produced the same result (doesn't rule it out, just makes it less a likely suspect in my mind). I have also tried opening it via `code --disable-extensions`, and I still have the same issue, so it's not an extension that's causing the problem.

Here are a few details about my project that might help narrow it down:
- this is a large application (hundreds of thousands of files)
- we use PHP (Laravel) for the back-end, and we're in the process of transitioning to Angular 2 in TypeScript (from an awkward mish-mash of Angular 1, Knockout, and some other stuff that we wrote ourselves in CoffeeScript)
- we use gulp, webpack, npm, and websockets (to name a few more technologies that might be relevant)

To make this even more of a challenge, none of my three coworkers who are using vscode for this project are experiencing this issue, despite having very similar setups. At this point I don't have much hope of there being a clear solution, but I wanted to log this so that if anyone else experiences it, they may be able to add more info that would help diagnose it.</Description>
    <CreatedDate>14/01/2017</CreatedDate>
    <ClosedDate>14/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17747</IssueID>
    <Title>Scrolling issues with precision touchpad.</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.6.0|

---

Steps to Reproduce:

1. Open file from a VS project.
2. Scrolling of file is very jittery.

Steps to resolve:
1. Resize window by any means full screen using maximize button or just resize using corner dragging and it works fine.</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17560</IssueID>
    <Title>Enable "find in selection" by default when replace executed against a multi-line selection</Title>
    <Description>When doing a replace (in current file) and there is a selection that spans lines, the "find in selection" ought to be enabled by default.

1.  I believe this is standard behavior in most other programmer's editors (visual studio, intellij, textpad++)
2.  Ignoring the current context (multiple line selection) when doing a search makes no sense - why else would the use have made the selection then pressed replace?
3. For me at least, its pretty rare that I want to do a global search/replace.  This is certainly the least likely use case</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17505</IssueID>
    <Title>VS Code doesn't remember find settings (actions.find)</Title>
    <Description>- VSCode Version:
1.8.0

- OS Version:
Windows 10

Steps to Reproduce:

1.  Press Ctrl+F, then Alt+C, Alt+W, Alt+R to toggle the options
2.  Restart VSCode
3. Ctrl+F to inspect the settings again

Sublime, Notepad++ will keep the settings by default, at least we can get the option to save the settings in vscode.</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17453</IssueID>
    <Title>For PHP writing $this used to autocomplete to $this-&gt; now it removes the dollar sign</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|theme-atom-one-dark|andischerer|0.0.1|
|Theme-FlatlandMonokai|gerane|0.0.4|
|format-indent|Kasik96|1.3.0|
|php-symbols|linyang95|0.1.2|
|Theme-MaterialKit|ms-vscode|0.1.1|
|theme-hackershaze|Nuuf|1.3.1|
|Seti-theme|TsumiNa|0.0.1|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. While writing code in a PHP file, type $this to see the autocomplete to $this-&gt; option and press Enter.
2. Instead of seeing it autocomplete to $this-&gt; it removes the '$' sign and instead writes this-&gt; which is incorrect.</Description>
    <CreatedDate>17/12/2016</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17391</IssueID>
    <Title>macOS 10.9: VS Icon overlays title in title bar</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:38:28.425Z)
- OS Version: Darwin x64 13.4.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.2.2|
|view-in-browser|qinjia|0.0.3|
|vim|vscodevim|0.4.9|

---

Steps to Reproduce:

1. Start VS Code and the VS Code icon will overlay the file name in the title bar. 

In the screenshot below, the VS Code icon can be seen overlaying the file name in the title bar. 
![screen shot 2016-12-16 at 7 48 40 am](https://cloud.githubusercontent.com/assets/271288/21263454/e1a518b4-c364-11e6-94ff-84f4c4a77d84.png)

If no file is open in the editor, the VS Code icon does not display in the title bar.

![screen shot 2016-12-16 at 7 59 01 am](https://cloud.githubusercontent.com/assets/271288/21263574/a0a026b4-c365-11e6-81dc-232d9a77b826.png)
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>15/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17038</IssueID>
    <Title>Selecting highlights merge the next nearby same words</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions:

|Extension|Author|Version|
|---|---|---|
|jshint|dbaeumer|0.10.15|
|githistory|donjayamanne|0.1.2|
|CppSnippets|hars|0.0.5|
|JSDocTagComplete|HookyQR|0.0.2|
|docthis|joelday|0.3.5|
|sublime-keybindings|ms-vscode|1.8.0|

---

Steps to Reproduce:

1. Input the following text in VS Code:
```
foofoofoofoo
foo
```
2. Now I want to change all the `foo` to `bar`, then I select the second line `foo`
3. Press `Ctrl + F2`, the first line is selected like `foofoo` `foofoo`, not `foo` `foo` `foo` `foo`
4. Input `bar`, the first line become to `barbar`, not `barbarbarbar`
![vs1](https://cloud.githubusercontent.com/assets/8115912/21079036/64e2c504-bfbf-11e6-85fb-de09dc5fe7fa.gif)
The same steps in Sublime Text (except using `Alt + F3` to select highlights)
![st1](https://cloud.githubusercontent.com/assets/8115912/21079049/c062ba10-bfbf-11e6-84c4-b8504b0142dd.gif)

Another example, some text is looking like this:
```
aaaaaaaa
aaaaaa
aa
```
Then I select an `a` at any position, then press `Ctrl + F2` repeatly, the selecting part looks randomly, then input `b`, the length of each line is not the same as before.
![vs2](https://cloud.githubusercontent.com/assets/8115912/21079068/88733412-bfc0-11e6-98a6-2402f295500e.gif)
The same steps in Sublime Text
![st2](https://cloud.githubusercontent.com/assets/8115912/21079073/b3aaf944-bfc0-11e6-928e-611244472883.gif)
</Description>
    <CreatedDate>11/12/2016</CreatedDate>
    <ClosedDate>19/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17029</IssueID>
    <Title>Better coloring of matching braces.</Title>
    <Description>Request.

Currently when we have the cursor near a ( ] } etc, the matching brace color is extremely faint, and difficult to spot in the middle of the code.

A stronger and contrasting background color ( as it happens on the Brackets editor) would help tremendously. 
</Description>
    <CreatedDate>11/12/2016</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16921</IssueID>
    <Title>Allow to show diff of current file to unsaved changes</Title>
    <Description>### Feature request

at the moment vscode use undo/redo history to tell if the file has pending changes.
it would be nice that it can also execute an in-memory diff (with of course an upper limit on the size of file specified in the config) between the last saved copy and the actual one in the editor to understand if the two copies are really different, leaving the undo/redo history.

what do you think about this guys?</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16644</IssueID>
    <Title>Searched words appear underneath the searchbox</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Window 10

Steps to Reproduce:

1. Have a page of editor filled with text
2. Search for words at the top of the editor using Ctrl + F, now the word you've search is underneath the searchbox which is really annoying
</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16562</IssueID>
    <Title>Mac Insert Emoji Duplicates Text</Title>
    <Description>- VSCode Version: 1.8 Insiders
- OS Version: OSX 10.11.6

Steps to Reproduce:

1. Create blank document.
2. Type `cat`
3. Move the cursor back to between `c` and `a`
4. Insert an emoji  (such as 🐱) using the mac emoji panel

**Expected**
Result is: `a🐱bc`

**Actual**

![dec-05-2016 17-41-33](https://cloud.githubusercontent.com/assets/12821956/20909718/33c2b698-bb12-11e6-92e6-85fb6141a592.gif)

Letters after the insertion are duplicated, producing `cat🐱at`</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16486</IssueID>
    <Title>Deselect one of multi-cursors</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Win7

Steps to Reproduce:

1. Select all occurrences of current selection (Ctrl+Shift+L) or similar method (multiple Alt+click) - have two or more multi-cursors
2. Try to deselect one of multi-cursors

Is there a way of doing this?  

In Sublime and Atom, IIRC, it is the same shortcut for adding the cursors and to remove a cursor if you click on one of them.  
Following the same logic, vscode should remove the cursor with Alt+click, but I also tried various other combinations and nothing has worked.</Description>
    <CreatedDate>05/12/2016</CreatedDate>
    <ClosedDate>29/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16352</IssueID>
    <Title>Select all selected words incorrectly</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version:  win 7

Steps to Reproduce:
1. Open VSCode

2. Input below content:
aeeb
ced

3. select 'e'

4. press Ctrl + F2, then has 2 cursors. But this case it should be 3 cursors. </Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>21/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16076</IssueID>
    <Title>JSDoc. Wrong spaces after description, after pressing `Enter` when tabSize is 3</Title>
    <Description>After the description of JSDoc is incorrect shall bear count of spaces in the transition to a new line.

- VSCode Version:
![image](https://cloud.githubusercontent.com/assets/3082812/20633199/f1b41b3a-b354-11e6-84c0-c5983fab31cb.png)

- OS Version: Linux Mint 18 x64

Steps to Reproduce:

```js
/**
 * @class My
 * @prop {string} name
 */
class My {
   constructor() {
      this.name = 'MyName';
   }

   /**
    * @method func
    * @param {string} p1
    */
   func() {

   }
}
```

1. In the code in the `label 1` press `Enter`;
2. Print `test`;
3. See four spaces in `label 2`;
4. Real spaces is a three (`label 3`).

screen1 | screen 2
---|---
![image](https://cloud.githubusercontent.com/assets/3082812/20633247/74d0e3b8-b355-11e6-8675-bd3cc8ce3de6.png) | ![image](https://cloud.githubusercontent.com/assets/3082812/20633244/6f68e13c-b355-11e6-8c19-fbf53cd59f08.png)
</Description>
    <CreatedDate>25/11/2016</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15633</IssueID>
    <Title>Configurable/Themable squiggles</Title>
    <Description>When you click on a variable, all variables with the same name are highlighted. It is possible to change that background color? I can't find it anywhere in the source (but anyway there is alpha opacity for sure, so i don't know the real color) and looks like is not themeable. It doesn't appear in the devtools also.

The same happens for the red line of errors and green line of warnings, i know this is not themeable but there is no way to change it even messing with core files?</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>26/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15602</IssueID>
    <Title>A way to pause rolling out a new version</Title>
    <Description>Not sure how simple and useful this would be, but if we had had a way to pause the rollout of 1.7.0, we could have bought us some time to make a decision and possibly build a 1.7.1 to continue the rollout with.

/cc @seanmcbreen @kieferrm @joaomoreno </Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>08/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15317</IssueID>
    <Title>Allow to sort list of opened editors</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows

It looks like you can "drag and drop" to re-sort the "open editors" list manually... but that's pretty tedious.  Can an option be added to have the file list automatically be sorted alphabetically?

Thanks!</Description>
    <CreatedDate>10/11/2016</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14693</IssueID>
    <Title>VSCode is wiping out my search</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Anniversary Update

Steps to Reproduce:
1. Start with an empty text file
2. Perform a regex search / replace (`CTRL + H`), for example `an$`
3. Paste in some text, where the _end_ of the text matches the search in step 1 (eg. `Trevor Sullivan`)
4. Hit `CTRL + H` to perform another search / replace
5. The regex search you performed is replaced with the word directly preceding the matching text

Let me know if you need help reproducing this behavior. I was able to do it myself several times.

Cheers,
**Trevor Sullivan**
Docker Captain
Microsoft MVP: Cloud &amp; Data Center Management
https://trevorsullivan.net
https://twitter.com/pcgeek86
</Description>
    <CreatedDate>29/10/2016</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13029</IssueID>
    <Title>Can't sort files by date modified in open folder</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: 10 Anniversary

Steps to Reproduce:
1. Open a folder with hundreds of files
2. Try to sort to show recently modified files at top of list
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12897</IssueID>
    <Title>Feature Request: Default "find" settings (e.g., case sensitivity, regular expression settings)</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T13:06:49.879Z)
- OS Version: Darwin x64 16.0.0

SublimeText accepts default "find" preferences, such as case sensitivity and regular expression settings. It would be very, very nice of VSCode did likewise.
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12836</IssueID>
    <Title>Empty workspace: keep UI state and reopen files</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Version: 1607

**Scenario:** Open files from different directories (not using the "open folder" function) by either dragging them into the editor or using Open File. Close VSC, reopen it.
**Desired Behaviour:** All previously opened files are reopened with the same view/caret position.
**Actual Behaviour:** VSC is blank when opened

I know this feature exists for "Open Folder" but that's not what I want as I rarely open files this way, normally the files span completely different directories (or even machines).

Discussed further in this thread #101 (but a separate issue).
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12637</IssueID>
    <Title>Touchpad scrolling doesn't work</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10
- Laptop: Asus n56-vz, I'm using Asus Smart Gesture drivers for touchpad.

Suddenly touchpad scrolling stopped working.

Steps to Reproduce:
1) Add a lot of code yo see a scroll bar.
2) Try to scroll with 2-finger gesture - doesn't work;

Not sure about the reason of this behavior.
I've been using VSCode for several hours, than I turned my laptop into a sleep mode.
After waking it up back, VSCode no more responses on a touchpad scrolling (with 2 fingers).

I tried to reboot the system, no effect.
I also tried to reinstall VSCode, but it seems like I haven't achieved complete removing (cause, for example, all my extensions were safe), so it didn't help too.

Have anyone also faced with such an issue or maybe there are some tips to do in order to solve this problem?
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12042</IssueID>
    <Title>VS Code hangs when update dependencies</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10 (AU)

Steps to Reproduce:
1. Open a proyect fresh cloned.
2. Run `npm install` in a (external) terminal.

VS Code stop responding. I ran it with the integrated terminal and an external one with the same results. 

Edit typo. 
</Description>
    <CreatedDate>14/09/2016</CreatedDate>
    <ClosedDate>14/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11922</IssueID>
    <Title>Feature Request: File-&gt;Print</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10

Steps to Reproduce:
Open the File Menu

Expected Result:
There is an option to print the currently open buffer.

Actual Result:
No option to print.

Why it's important:
Sometimes, you have a need to print some code out - either as a reference, or to aid in debugging, or for other reasons.

It's rather disappointing to not find a "print" option in the editor.
</Description>
    <CreatedDate>13/09/2016</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11574</IssueID>
    <Title>Persist user choice in Find options (case, whole word, regex) in the Find widget in editor</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Mac OS El Capitan 10.11.4

Steps to Reproduce:
1. Open VS Code and some file
2. Cmd+F to find something
3. Check the box to enable case-sensitivity and regex searching
4. Close VS Code
5. Open VS Code and some file again
6. Cmd+F to find something

Expected behavior: the boxes for case-sensitivity and regex searching are checked.

Actual behavior: the boxes for case-sensitivity and regex searching are unchecked.

I _always_ want to search with these options enabled. How can I persist this state across restarts?
</Description>
    <CreatedDate>06/09/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11247</IssueID>
    <Title>showTextDocument should support to open in the background</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. Open a document with `openTextDocument`
2. Then show the resulting document with the preserveFocus argument set to true `showTextDocument(TextDocument, vscode.ViewColumn.One, true)`
3. A new editor opens and still gains focus
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>28/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11102</IssueID>
    <Title>The Find/Replace window covers the content</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.Open a file with lots of content
2.Press Ctrl+F or Ctrl+H and the content underneath the find/replace is hidden
</Description>
    <CreatedDate>29/08/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10662</IssueID>
    <Title>Find widget covers results on first line</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Discovered on Ubuntu, suspect it is the same on all

Steps to Reproduce:
1. Turn off word wrap
2. Have a very long first line of file
3. Press Ctrl+f / Open find and replace in top right of window
4. Search for a term that exists in line 1

Observe that the term is hidden by the find-box, the window is not scrolled far enough to the right to show it

E.g. in this image I have searched for "mp3", you can see the start of the path in "Value" but the actual "mp3" itself is hidden because this is the first line in the file.

![image](https://cloud.githubusercontent.com/assets/4096734/17771514/49dff4c2-653b-11e6-85cc-e1806b984d7f.png)
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10386</IssueID>
    <Title>Pressing Cmd-F overwrites find text even if nothing is selected.</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. Enter some find text.
2. Press enter.
3. Edit the text in the document.
4. Press Cmd-F to repeat the search.
5. Notice that the text in the find box has been replaced with the word the cursor is over.

This is really annoying when doing repeated find-edit cycles.
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10370</IssueID>
    <Title>"Change All Occurrences" incorrectly accounting for the lack of spaces between matching strings.</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Ubuntu 16.4 LTS

Steps to Reproduce:
1. Take the following text:
   
   ```
   abc
   abc abc
   abcabc
   ```
2. Right click the "abc" in the first line to bring up the option to "Change All Occurrences" and select it.
3. Begin typing ("def" for example) to see this result:
   
   ```
   def
   def def
   def
   ```
   
   Although there's a match made between "abcabc" and "abc", the changes are made as if "abcabc" were a single occurrence of "abc".
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10344</IssueID>
    <Title>Make find widget toggles configurable settings</Title>
    <Description>Related to https://github.com/Microsoft/vscode/issues/4309#issuecomment-225023802

Add to `settings.json` a way to always enable the case-sensitivity feature of Find.
</Description>
    <CreatedDate>09/08/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9858</IssueID>
    <Title>Highlight is persistent after deleting a code block</Title>
    <Description>- VSCode Version: 1.3
- OS Version: Mac OS

Steps to Reproduce:
1. Highlight a block of code for deletion
2. Delete the code block
3. The highlight is persistent and now highlights some lines of code that replaces the deleted code block
4. This leads to unintentional deletion of newly highlighted line (say, if you press 'backspace' twice when trying to delete some whitespace before the initially highlighted code block) 
</Description>
    <CreatedDate>27/07/2016</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9713</IssueID>
    <Title>ctrl+h now wipes out RE from find field</Title>
    <Description>- VSCode Version: insiders
- OS Version: Windows 10

Steps to Reproduce:
1. Press ctrl+f
2. Enter an RE to find
3. Press ctrl+h
4. RE is now gone

![animation](https://cloud.githubusercontent.com/assets/418464/17112147/c9cb57fc-5272-11e6-81f1-72a34f39d1e6.gif)
</Description>
    <CreatedDate>25/07/2016</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9407</IssueID>
    <Title>Replace Box in Current File Truncated</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: MacOS El Capitan 10.1

Steps to Reproduce:
1. Using default resolution 1440 x 900
2. Activate 3 split view / 3 groups
3. Show the sidebar
4. cmd + option + F to show replace dialog

Actual: dialog box truncated, hard to type text to be replaced

![image](https://cloud.githubusercontent.com/assets/1243921/16900657/4203c192-4c55-11e6-9256-0bf9cc29e419.png)
</Description>
    <CreatedDate>17/07/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9387</IssueID>
    <Title>HTML tag matching in php (template) files</Title>
    <Description>I do not really know if this is a bug or a missing feature but the one thing that keeps me from switching to VS Code is html tag matching in php/template files such as laravel blade files. Please add this feature or fix it if this is a bug, thank you!
</Description>
    <CreatedDate>16/07/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8043</IssueID>
    <Title>Can't select adjacent strings as multiple selection</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 8/10

In multiple selection, when two or more selections adjoin, those are combined to single selection. Or, can't select those.

Case 1: With `foo foofoo bar foo bar`, I want to do something to `foo`.
![01](https://cloud.githubusercontent.com/assets/4763469/16299439/40354f90-3975-11e6-89da-d4c40c419469.gif)
1. I selected first `foo`.
2. I pressed `Ctrl+D` three times.
3. Then, It seems that four `foo`s were selected.
4. I pressed `x` key.

I expected `x xx bar x bar`, but result was `x x bar x bar`.
`foofoo` was selected as single selection.

Case 2: With `foofoo bar foo bar`, I want to do something to `foo`.
![02](https://cloud.githubusercontent.com/assets/4763469/16299444/487f21b2-3975-11e6-9511-e62cb217341f.gif)
1. I selected first `foo`.
2. I pressed `Ctrl+D`.
3. Then, only `foofoo` was selected, and another `foo` was not selected.

A string in "Find" text box was changed to `foofoo` when second `foo` was selected.

Case 3: I tried to select `foo` and `foo` as two selection by using mouse with `Alt` key.
![03](https://cloud.githubusercontent.com/assets/4763469/16299447/4ee3d0e8-3975-11e6-9dc8-ed3e2bc0628c.gif)

Those became single selection when those became adjacent strings.
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>20/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7228</IssueID>
    <Title>Select + Delete causes unexpected selection</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: OSX 10.11.5 (El Cap)

Steps to Reproduce:
1. Select a code block
2. Hit backspace fast after completing the selection.

Result:

VSCode goes ahead and carries over the selection to whatever is occupying the same space now. If you wait a little after selection, the problem does not happen.

Sample:

![gif](http://d.ekin.io/17Ge0+)
</Description>
    <CreatedDate>05/06/2016</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7076</IssueID>
    <Title>Allow to print the editor contents</Title>
    <Description>- VSCode Version:1.1
- OS Version: Win10

Please,
Can you add the print command
</Description>
    <CreatedDate>31/05/2016</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7039</IssueID>
    <Title>In-File-Searchbar hides search result</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: OS X 10.11.4 

Steps to Reproduce:
1. Create a file with at least one line of dummy code (the contend should fill the line completely)
2. Search for a string which is on the rightern side of the viewport (where the searchbar would appear)

You will notice that the searchbar hides the searchresult.
</Description>
    <CreatedDate>31/05/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6971</IssueID>
    <Title>Goto definition acts too early for URLs</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10 x64

Please see issue #189. This behavior was changed for Go to Definition, but URLs still behave the old way. The behavior for URLs should be changed to match Go to Definition.
</Description>
    <CreatedDate>27/05/2016</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5751</IssueID>
    <Title>Tab not quite as expected when using snippets within snippets</Title>
    <Description>- VSCode Version: Version 1.0.1-insider (1.0.1-insider) - 85f337ee0851a464d5459ce9a354d05f94f0b9a4
- OS Version: OSX Yosemite 10.10.5

See animated gif below (sorry for resolution!):
![animated gif](http://i.giphy.com/xT1XGLJFhjDh4A97zO.gif)

I am not sure if the tab button should continue switching between the outer snippet's placeholders, or if it should respect the inner snippet's placeholders until ESC is pressed, at which point it returns to the outer snippet's context?
</Description>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5467</IssueID>
    <Title>Resize find widget</Title>
    <Description>- VSCode Version:1.0.0
- OS Version:win7

as the title said, when find message long,we need change the search form bigger,
but vscode can't as so far.
</Description>
    <CreatedDate>19/04/2016</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5050</IssueID>
    <Title>Cannot validate php file Info popup should have option to open settings</Title>
    <Description>- VSCode Version: 0.10.12-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. Open a php file 
2. Dialog pops up saying "Cannot validate the php file"

Expected:
Most other warnings ask if you would like to open the config file.
![phpconfig](https://cloud.githubusercontent.com/assets/12900364/14330474/91f0351a-fbf5-11e5-89ec-989e0aae554e.JPG)
</Description>
    <CreatedDate>06/04/2016</CreatedDate>
    <ClosedDate>06/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4566</IssueID>
    <Title>Replace dialog opens with the wrong field focused</Title>
    <Description>- VSCode Version: 0.10.11 (commit: f291f4) downloaded today
- OS Version: Ubuntu 14.04 x64

Steps to Reproduce:
1. In the editor, hit `CTRL-H` for Find &amp; Replace pop-up

Screen grab of the issue:

![test](https://cloud.githubusercontent.com/assets/2192439/13959231/056f47e4-f019-11e5-8b8f-91bd982e0870.gif)

Issue: Notice the **Find** field should be focused first when the dialog is opened. Instead, the **Replace** field is focused. And `tab` moves the focus forward, to the little icons (one would have to know to `shift-tab` to get back to Find.)

**ETA:** Ah, I suppose this changed at some point, I was comparing 0.10.11 Linux to 0.10.3 Windows.

So it becomes a question of which implementation is "more better". :p :)

Alright, well, here's a list of editor software that focuses the Find input when pressing `Ctrl-H`:
- Microsoft Office
- Google Docs
- GitHub in-browser editor
- Sublime
- Visual Studio 2015 (community / windows)
- Atom 1.5.3

Vs. editors that focus Replace first:
- Atom 1.0.2

Feel free to bring others to my attention.
</Description>
    <CreatedDate>22/03/2016</CreatedDate>
    <ClosedDate>23/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4429</IssueID>
    <Title>Store workspace UI state also for empty workspaces</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Windows 8.1

Steps to Reproduce:
1. Open VS Code, toggle "Show Side bar" to enabled
2. Close VS Code
3. Double click a file that opens in VS Code

In that instance, the side bar will be disabled again.
</Description>
    <CreatedDate>18/03/2016</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4388</IssueID>
    <Title>Make color and shape of error markers configurable</Title>
    <Description>_From @Franziskus1988 on March 3, 2016 14:6_

Sometimes it's difficult to find/see the green marked linting errors. Especially when a file contains a lot of comments (normally green).

Would it be possible to make the color and maybe the line thickness configurable?  

_Copied from original issue: Microsoft/vscode-tslint#31_
</Description>
    <CreatedDate>17/03/2016</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3312</IssueID>
    <Title>When using word navigation, the screen reader announces tokens twice</Title>
    <Description>screen reader support turned on and using NVDA

Imagine I have the cursor at teh end of this line of code

vscode.window.activeTextEditor.document.languageId

When I press ctrl + left arrow, I hear 'languageId' being announced. I then press ctrl + left arrow again. The cursor moves to before the '.' and I head 'document' being announced (although the cursor  is positioned after the document token). I press ctrl + left-arrow once more. The cursor is now positioned before the document token but I hear 'document' being announced again. It makes it sound like I have document typed twice.

Found when testing #3247
</Description>
    <CreatedDate>23/02/2016</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2461</IssueID>
    <Title>[php] Don't activate auto-completion prompts inside known comment blocks</Title>
    <Description>Using VSCode 0.10.6 on Windows 7

I've been finding that auto-completion prompts kicks in when I'm writing text in comment blocks and I'm typing the start of some method/variable/symbol that is known by the auto-completion

Attached is example screenshot of some PHP code I'm editing

![vscode_php_unwanted_autocomplete](https://cloud.githubusercontent.com/assets/563860/12618114/a28917ea-c566-11e5-9aa8-e8c132cde348.png)
</Description>
    <CreatedDate>27/01/2016</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25673</IssueID>
    <Title>Side-by-side preview of Markdown should close when switching to non-markdown file.</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Open side-by-side preview of a markdown file.
2. Open some other file - the preview still remains there.
3. Open settings page and now the widows get very congested.</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>29/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25672</IssueID>
    <Title>Incorrect size of Markdown preview when non-zero zoom level</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

Steps to Reproduce:

1. Set `"window.zoomLevel": 2` // Anything other than 0
2. Open a markdown file and start preview. The preview window will be small than the space available for it.

The issue also happens with side-by-side preview.</Description>
    <CreatedDate>29/04/2017</CreatedDate>
    <ClosedDate>29/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25647</IssueID>
    <Title>Keyboard Shortcut incorrect on British keyboard</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: 10.11.6
- MacBook Pro using built-in British keyboard layout - no external keyboard.

Steps to Reproduce:

**Note**: You'll need a mac with a British keyboard layout for the below scenario 

1. Open the Keyboard Shortcut Panel  `⌘K ⌘S`
2. Search for Terminal in the list of shortcuts
3. The keyboard shortcut displayed is ``⌃` ``

**Note**: this shortcut combination will not open the terminal.

4. Hover on the terminal command in the keyboards shortcut list and click the pen symbol to the left to edit the entry.
5. On a British keyboard press the key combination `` ⌃` `` to set the shortcut combination

**Note**: The symbols displayed in the popup are ``⌃§`` ( ctrl+[IntlBackslash] ) which is on a different key on a British keyboard. The IntlBackslash key is located to the left of the number one on the main keyboard.
</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>29/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25606</IssueID>
    <Title>Oh no</Title>
    <Description>Clicking on merge-conflict files (does not open them):

![image](https://cloud.githubusercontent.com/assets/900690/25517925/dbea88a0-2bf1-11e7-9e18-473084b9e201.png)

</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25601</IssueID>
    <Title>Debugger display variables in alternate formats</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.x
- OS Version: All

It would be nice if variables viewed in the debugger could display their values in different formats like hex, octal, or binary.
</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25593</IssueID>
    <Title>Very same file being displayed with different names (case insensitive file names)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.11.2 (1.11.2)
- OS Version: Mac OS X Sierra

&lt;img width="886" alt="screen shot 2017-04-27 at 9 28 17 pm" src="https://cloud.githubusercontent.com/assets/110336/25510775/a2b95ea0-2b90-11e7-87d5-720e5b6906f0.png"&gt;

Steps to Reproduce:

1. Create a file. For example: `portfolioBuilder-api.js`
2. Using the open file dialog type `portfoliobuilder-api.js` and open it
3. Using the open file dialog type `portfolioBuilder-api.js` and open it
4. You'll have two editors opened with different names pointing to the very same file
</Description>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25586</IssueID>
    <Title>Mac Close File Confirm Dialog Does not Prevent Workbench Keyboard Actions From Being Queued</Title>
    <Description>MacOs 10.11.6

Steps to Reproduce:

1. On MacOS, try to use cmd + w to close a dirty file
2. Wait for the file close dialog to come up
3. With the dialog showing, try pressing cmd + w again or cmd + f
4. Press cancel

**Expected**
These actions are ignored

**Actual**
The actions for the keybindings seem to be queued up and executed when the dialog is closed.

![apr-27-2017 16-34-13](https://cloud.githubusercontent.com/assets/12821956/25508556/af2285f0-2b67-11e7-90b4-1d85b3570ff2.gif)


This can result in the close confirmation dialog immediately showing again if you press cmd + w multiple times by mistake.</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25568</IssueID>
    <Title>Multiple editors open for the same file</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.x
- OS Version: Ubuntu 14.04

Steps to Reproduce:

1. Create and use a problem matcher that uses captures absolute file names instead of relative file names
1. Open a file in project and edit the file to have a compilation error
2. Compile your project, error should show up as a problem
3. View the output pane showing the absolute path to your file
4. Hold down `Ctrl` and left click on the file name
5. Observe that the file is opened in another editor, and now you have 2 editors with the same file open
</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25553</IssueID>
    <Title>Git Extension: Choose branches and get a list of changed files</Title>
    <Description>Hi,

Today in the Git extension you get a list of files that has changed since the last commit, this is a feature that is really appreciated!

I think it would be neat if this could be extended so that the user can choose two branches and get a list of files that has changed between them. When you click on a file you get the compare window just as today.

In other words there are two drop-down lists and when 'master' and 'my_work_branch' are chosen I get a list of files that has changed between these branches. 
'my_work_branch' and 'Not Committed Files' gives a list of files exactly as today and could be the default selection of the two drop-down lists.

Perhaps the selections could be extended even more so that you can select between commits in one branch, i.e. 'my_work_branch/1' and 'my_work_branch/5' gives a list of files that has changed between these commits. 

For my own preference I believe it would be enough to just compare between the last version of each branch and files that has been changed but not committed. I try to keep changes in my work branch to a minimum and then it would be great to see ALL the changes I have done against the master branch.

With this feature it would be quite easy to compare the difference between branches and also to copy desired functionality (code) between branches through the compare window.</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25549</IssueID>
    <Title>Terminal output on wrong line</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Windows 10.3 64 bit

Steps to Reproduce:
1.When I opened the vs code, the terminal's output used incorrect line breaks
![image](https://cloud.githubusercontent.com/assets/6327955/25485357/3f9138fc-2b90-11e7-91b4-6b0e53d1ecc4.png)
2.Then I inputted cls, npm run cover, then output still used incorrect line breaks
![image](https://cloud.githubusercontent.com/assets/6327955/25485665/44e0cefc-2b91-11e7-8145-0ef6f5e71092.png)


</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25513</IssueID>
    <Title>Give us a silent auto-update</Title>
    <Description>While I understand that there's the argument of users seeing automatic updates break the UI or extensions, I think a counterargument could be made where "silent updates" are a configuration setting disabled by default. 

Having VSCode nag at you on a regular basis about updates, when all you're trying to do is work quickly, is really annoying. Yes, the update takes "just" a minute. Unfortunately that's alot of time while one is in the process of trying to work quickly. In addition, after seeing that nag bar, it's not uncommon for it to keep bothering one and causing thought patterns along the lines of 'is it gonna nag me again after I choose "Open this file in VS Code" in Explorer? wait, what was the file I was wanting to open again...'. 

All this would be completely prevented by automatic silent updates. I believe it's not too much to be asked to provide a way for an advanced user to say "Hi VS Code. You are at liberty to update silently in the background, and I fully accept that I may need to manually roll back or mess around at times. Something I'd have to do anyway if I choose to accept the update manually".

In addition, If there's the argument of "but if it updates when you are working, won't it take the minute anyway?" then the answer is "Obviously it shouldn't kill the instance when it's open, just update the files silently in the background".





</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25502</IssueID>
    <Title>.Net Core project cannot load the new created tasks.json</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.14.1|
|theme-onedark|azemoh|0.4.3|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.3|
|xml|DotJoshJohnson|1.7.0|
|tslint|eg2|0.12.0|
|docthis|joelday|0.4.3|
|cpptools|ms-vscode|0.11.0|
|csharp|ms-vscode|1.9.0|
|vscode-icons|robertohuertasm|7.6.0|
|JavaScriptSnippets|xabikos|1.4.0|;


---

Steps to Reproduce:

1. create a new .net core project, (dotnet new console -n test)
2. Press F5 then pop up warning to initialize launch configuration
3. Press F5 again then click the configure task runner and the tasks.json will create automatically.
4. Although the task "build" is already in the tasks.json, the vscode still warn there is no task "build"

Reload the vscode can solve the problem. I am not sure whether other project will encounter this bug</Description>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25491</IssueID>
    <Title>Output Link Detector Does not Detect TSServer Log File Paths as Links</Title>
    <Description>In the output window: 

```
[Info  - 4:09:14 PM] Using tsserver from: /Users/matb/projects/vscode/node_modules/typescript/lib/tsserver.js
[Info  - 4:09:14 PM] TSServer log file: /var/folders/_0/611900jn0yb43f1rc47_2wmh0000gp/T/vscode-tsserver-log-nFxwtM/tsserver.log
```

![screen shot 2017-04-26 at 4 11 02 pm](https://cloud.githubusercontent.com/assets/12821956/25460949/1d809eba-2a9b-11e7-8aba-9353cadfe5e0.png)


Only the first link is detected. The tsserver log file path is not detected as a link</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25457</IssueID>
    <Title>Icons should support themes</Title>
    <Description>#25328

- VSCode Version: Code - Insiders 1.12.0-insider (48ae6e3027be560d45dd1ebfbe090d6ff77af7f0, 2017-04-26T06:32:53.505Z)
- OS Version: Linux x64 4.10.0-19-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.2.0|
|theme-sapphire|Tyriar|0.1.0|
|vscode-svgviewer|cssho|1.4.0|
|tslint|eg2|0.12.0|
|git-project-manager|felipecaputo|1.3.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.2|
|vetur|octref|0.6.3|
|seti-icons|qinjia|0.1.3|;

---

Related: https://github.com/Microsoft/vscode/issues/8017

![image](https://cloud.githubusercontent.com/assets/2193314/25447256/59d9c09e-2a69-11e7-9b94-16ebaf30df2c.png)</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25455</IssueID>
    <Title>Dragging without ctrl held and then holding ctrl before dropping changes cursor but not behavior</Title>
    <Description>#25338

- VSCode Version: Code - Insiders 1.12.0-insider (84b2a1ecb6a342d7d82605a330581f06cb726fc3, 2017-04-24T06:10:06.779Z)
- OS Version: Linux x64 4.10.0-19-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.9.3|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.2.0|
|theme-sapphire|Tyriar|0.1.0|
|vscode-svgviewer|cssho|1.4.0|
|tslint|eg2|0.12.0|
|git-project-manager|felipecaputo|1.3.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.2|
|vetur|octref|0.6.2|
|seti-icons|qinjia|0.1.3|;


---

Steps to Reproduce:

1. Select test and drag
2. Hold ctrl, notice the cursor changes indicating a behavior change
3. Drop text, the text is moved despite the cursor change</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25446</IssueID>
    <Title>Extensions view: Word-wrap hides some words</Title>
    <Description>- VSCode Version: Version 1.11.2 (1.11.2)
- OS Version: OS X El Capitan 10.11.6 (15G1421)

The extensions details do word wrap, but some words are not visible on the right border:

![screen shot 2017-04-26 at 17 03 46](https://cloud.githubusercontent.com/assets/5795847/25441380/5f798988-2aa2-11e7-8638-7d504c32a4b0.png)
</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>28/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25385</IssueID>
    <Title>terminal display bug</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-html-css|ecmel|0.1.2|
|tortoise-svn|fantasytyx|0.1.1|
|node-module-intellisense|leizongmin|1.3.0|
|vetur|octref|0.6.2|
|vscode-icons|robertohuertasm|7.6.0|;


---

Steps to Reproduce:

1.
![1](https://cloud.githubusercontent.com/assets/6029645/25426002/5dfd2a94-2aa0-11e7-8e37-c0f1c75edc42.png)

2.</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25373</IssueID>
    <Title>"Go To Next Error" steals focus until esc is pressed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.12.0
- OS Version: MacOS

Steps to Reproduce:

1. Click F8 (Or whichever shortcut) to "Go To Next Error"
2. You would ideally be able to click shortcut for "quick fix" or type in to fix but you have to press ESC first to return focus to editor. That's an annoyance.


</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25368</IssueID>
    <Title>Intellisense not working in VSCode typescript watch window</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.11.0
- OS Version: Windows 10

Steps to Reproduce:

I can't get intellisense in the VSCode typescript watch window.

It works great in the code itself - but when I debug, I want to enjoy it as well.

Any tips?
</Description>
    <CreatedDate>26/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25347</IssueID>
    <Title>allow scripts in markdown preview</Title>
    <Description>"markdown.styles": [],
"markdown.scripts": [],


</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25344</IssueID>
    <Title>Expand selection doesn't always work with every theme (for quotes)</Title>
    <Description>- VSCode Version: 
- OS Version: Windows 10

Steps to Reproduce:

1. Type anything between quotes
2. Put cursor between the cursor on what you just typed and use expand selection (Alt+Shift+Right Arrow)
3. Try it first with Dark+ (default) theme or Dracula Theme and then with Mattia Astornio's Material Theme or with Nord theme

Thing to notice: If the quotes are colored as same as text, it includes it in the selection, but it doesn't if it has different color assigned. 

![ff2de466-29bb-11e7-9230-5e5ff7f0443d](https://cloud.githubusercontent.com/assets/26769888/25409665/81d88366-2a30-11e7-85ee-4011b1739ddf.gif)


To-do: Expand selection should not include quotes, but just the text because a lot of times we need to change what is inside the quotes only. Putting quotes around the text again will add one step more.

Originally posted on Dracula theme repo, but as it also includes the default Dark+ theme and seems to be like a bug in VS Code itself, which I found a lot of people like and stick to it, so I put it here too.

https://github.com/dracula/visual-studio-code/issues/24#issuecomment-297170876
(Below one is copied from the link above)
Scopes of interest:
* punctuation.definition.string.begin
* punctuation.definition.string.end
When set to a different color than string, it expands correctly. When set to the same color, it does not.</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25305</IssueID>
    <Title>alert bar at top of screen overlaps the tabs</Title>
    <Description>it was OK, but these days the warnings are things you can't fix on Mac / Unity.

Plus it's highly annoying. The UX equivalent of nails on a chalkboard seeing that pop up with some useless info every time you switch a branch or start Unity etc. 

Can you guys entertain making a setting to A: turn it off or B: make it go away automatically or appear at the bottom of the screen or something?</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25301</IssueID>
    <Title>Bug in terminal window</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-theme-onedark|akamud|1.3.2|
|vscode-instant-markdown|dbankier|1.1.0|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.3|
|Theme-TomorrowNightEighties|gerane|0.0.2|
|CppSnippets|hars|0.0.7|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|cpptools|ms-vscode|0.10.5|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|vscode-icons|robertohuertasm|7.6.0|;


---

Steps to Reproduce:

1. the lines in the terminal window start at the middle of the line
![image](https://cloud.githubusercontent.com/assets/5538324/25389589/9e39f4c2-2a03-11e7-9440-dabf18fa2c50.png)
</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25282</IssueID>
    <Title>Code is copied with Syntax highlighting even though option is turned off</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.8|
|vscode-great-icons|emmanuelbeziat|1.1.44|
|sublime-keybindings|ms-vscode|1.9.1|
|vscode-sql-beautify|sensourceinc|0.0.4|
|change-case|wmaurer|1.0.0|;


---

Steps to Reproduce:

1. Use ```Ctrl-C``` to copy
2. Paste into any rich text field like Outlook Email, Skype for Business, Word etc.</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25273</IssueID>
    <Title>Bash on Ubuntu (on Windows) on Visual Studio Code "carriage return" after certain number of characters</Title>
    <Description>Windows 10 Latest
VSCode Insiders Latest

If I set VSCode to use Bash on Ubuntu (on Windows) on Visual Studio Code it works perfectly, except after I type a certain number of characters it resets the cursor to the start of the line, no matter my window width

![image](https://cloud.githubusercontent.com/assets/5353856/25374142/9b8bf5c8-29df-11e7-845a-1791f3aed0c2.png)

and then

![image](https://cloud.githubusercontent.com/assets/5353856/25374173/b12ebe42-29df-11e7-8470-88ae56e397c9.png)
</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25267</IssueID>
    <Title>When powershell is set as default console, console composing is wrong</Title>
    <Description>
- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ecdc|mitchdenny|0.10.3|;


---

Steps to Reproduce:

1. Press Ctrl+` to open console in VS Code
2. The console composing is wrong.
![default](https://cloud.githubusercontent.com/assets/9316590/25371868/76b0466a-29c5-11e7-99de-237e9839203f.PNG)
I don't know it's related to system language and powershell language setting. I'm using Windows 10 1703 pro in Chinese and powershell character is set to 936 (ANSI/OEM GBK). Using cmd as default console in VS code will not cause this problem.</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25264</IssueID>
    <Title>Tooltip with debugging info on mouse hover over the class' properties</Title>
    <Description>Requesting a tooltip with debugging info on mouse hover over the class being debugged's properties. Example:

![untitled0](https://cloud.githubusercontent.com/assets/4777512/25370076/f150d54a-2990-11e7-9c1e-61c7a764cbef.png)

![untitled1](https://cloud.githubusercontent.com/assets/4777512/25370077/f1709fb0-2990-11e7-9d6c-ea8b3286be27.png)

</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25258</IssueID>
    <Title>In the 1080P display, the sidebar font is too small。</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.11.2
- OS Version:Windows 10

Steps to Reproduce:

1.In the 1080P display.the siderbar font is too small,how to adjust the font size of the sidebar?
2.
![image](https://cloud.githubusercontent.com/assets/12118393/25363698/17ff5268-298f-11e7-9dea-fa3ec3720a86.png)

</Description>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25245</IssueID>
    <Title>node_modules folder hidden if excluded from jsconfig</Title>
    <Description>Having the line `"exclude": [ "node_modules" ]` in `jsconfig.json` hid the node_modules folder from the file explorer, which I believe is not the intended behavior. I was able to restore it by adding `"files.exclude": { "**/node_modules": false }` to my User Settings file. 

When this line is subsequently removed from User Settings and re-saved, the `node_modules` folder remains in the file explorer.

- VSCode Version: 1.11.2
- OS Version: Windows 10

Steps to Reproduce:
1. Add `jsconfig.json` containing `"exclude": [ "node_modules" ]` to a Node.js project folder. (Folder has `package.json` with dependencies that haven't been installed yet.)
2. Run `npm install` in project. `node_modules` folder is created but does not appear in VS Code file explorer.
3. Unhide `node_modules` folder by adding `"files.exclude": { "**/node_modules": false }` to User Settings file.
4. When `"files.exclude": { "**/node_modules": false }` is removed from User Settings, `node_modules` folder remains unhidden.

Something here seems like it's not acting as expected.</Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25240</IssueID>
    <Title>Very slow "Go to file..."</Title>
    <Description>I work with project over sshfs and it's pretty big (10k+ files). Every time when I need to jump to the file - it requires to wait half of the minute to find the file by name.

Can you please implement caching of the folders structure, like it done in the Sublime Text? It caches folders/files list in the background, allowing to jump to any file/folder very quickly.

And please, allow to save the cache outside of working directory. For example, in the `~/.vscode/project_name/` directory</Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25239</IssueID>
    <Title>Is there a setting to display line endings like CR LF?</Title>
    <Description>
    </Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25232</IssueID>
    <Title>Improve keyboard shortcut editor search</Title>
    <Description>Currently the Keyboard Shortcuts editor allows to search for a command name:
![image](https://cloud.githubusercontent.com/assets/5784415/25342476/06f46f2c-28c1-11e7-9a2b-a748032b130c.png)

It would be useful to be able to search for a key combination/chord as well:
![image](https://cloud.githubusercontent.com/assets/5784415/25342508/18e8c73c-28c1-11e7-8fab-91848f3fc547.png)

Even better, it would be great to be able to search for any column name (Command, Keybinding, Source, When), something like:

&gt; Keybinding: ctrl+k</Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25218</IssueID>
    <Title>why does Code assume that *everything* i'm typing/about to expand is going to be PHP?</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.14.1|
|color-info|bierner|0.4.1|
|vscode-svgviewer|cssho|1.4.0|
|divider|dinhani|1.1.0|
|githistory|donjayamanne|0.2.0|
|php-debug|felixfbecker|1.10.0|
|php-intellisense|felixfbecker|1.1.5|
|auto-close-tag|formulahendry|0.3.11|
|prettify-json|mohsen1|0.0.3|
|vscode-less|mrmlnc|0.6.2|
|color-highlight|naumovs|2.1.3|
|advanced-new-file|patbenatar|0.4.3|
|slack|sozercan|0.0.13|
|Align|steve8708|0.2.0|
|theme-markcustom|Mark|0.0.1|
|wordpress-snippet|tungvn|1.1.2|;


---

Steps to Reproduce:

1. When using Emmet-style HTML, anything I type is always assumed to be PHP which means when I hit 'tab' to complete/expand, it ignores my HTML and opens a PHP tag:

![code](https://cloud.githubusercontent.com/assets/936966/25326059/b2048c96-28ce-11e7-803c-c5241890e45b.gif)
</Description>
    <CreatedDate>24/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25212</IssueID>
    <Title>Persistent result view for Find All References</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: Windows 10.0.14393

I'm trying to explore the code in a large (~25000 LOC) TypeScript file, and it gets a little confusing when you're only able to look at the find references result for a single function at a time. I had two feature requests:

 - Would it be possible to give users the option to disable the code-attached Find References result window and simply display it as a fixed pane somewhere?
 - Would it be possible to display a history of Find References searches and their results? Something similar to Notepad++'s find results:

![Notepad++ find results](https://ldzfpw.by3302.livefilestore.com/y4mqGe8s5zgmKkAVaIZgSe7QPIdPU1Lc_G9GUWbSOxKg_Dh2LC_iYXfxI88ZyfmbrA6Ptcya2OTsTolCUn7gxFj7NS0N4cvImTr6IDf0fTfRpqwKUMXeXS9BiIcGK0PbXiWLAxnl7LQZpyISjioeU-gWBGrclX4xG_XCM2xRVWgRHpgAAqv4tLt-PDW5Z0hZda_LGCmGhOtWnNaSYljKgYUlg/2017-04-23_19-20-34.gif?psid=1)

A more general solution to the problem would be some kind of symbol explorer that lets you inspect the complete reference graph of any symbol, however this might be prohibitively expensive given how the language server protocol works.</Description>
    <CreatedDate>23/04/2017</CreatedDate>
    <ClosedDate>25/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25210</IssueID>
    <Title>Lightbulb Gets in the Way of Breakpoint</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: macOS 10.12.4

Steps to Reproduce:

1. Try to set a breakpoint by clicking in the margin area

Expected outcome: breakpoint can easily be set
Actual outcome: lightbulb icon sitting in the margin "blocks" the breakpoint from being set

Note: I'm pretty sure the lightbulb used to "float" out in the editor area when activated, and that was fine, but at some point, it was moved into the margin area. I find this is frustrating when in the midst of an intense debugging session.

&lt;img width="1280" alt="screen shot 2017-04-23 at 9 17 56 am" src="https://cloud.githubusercontent.com/assets/16694050/25315237/e203e39c-2806-11e7-9e90-3860ba4ef59c.png"&gt;</Description>
    <CreatedDate>23/04/2017</CreatedDate>
    <ClosedDate>24/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25200</IssueID>
    <Title>Source Control Spinner No Longer Animates</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: macOS 10.12.4

Steps to Reproduce:

1. Open a project that has source control enabled
2. Make some changes, save them, and commit them
3. Click the circular spinner icon

Expected outcome: spinner icon animation plays when push is occurring
Actual outcome: spinner icon animation no longer plays

I think this stopped working with the April release. It's not mission critical by any means, but I miss it.

&lt;img width="161" alt="screen shot 2017-04-22 at 6 02 00 pm" src="https://cloud.githubusercontent.com/assets/16694050/25309577/d68782e8-2785-11e7-9d9f-aa330c965b02.png"&gt;</Description>
    <CreatedDate>23/04/2017</CreatedDate>
    <ClosedDate>24/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25185</IssueID>
    <Title>Words position from terminal panel is incorrect</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.11.2
- OS Version: Windows 10

Steps to Reproduce:

1. 
![1492855528537](https://cloud.githubusercontent.com/assets/15644242/25303477/5017c000-2786-11e7-8408-9bd3b5999731.jpg)

2.
</Description>
    <CreatedDate>22/04/2017</CreatedDate>
    <ClosedDate>22/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25177</IssueID>
    <Title>Undo and redo keys are swapped in linux, keyboard settings: HU</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:01:14.464Z)
- OS Version: Linux x64 4.10.10-200.fc25.x86_64
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-database|bajdzis|1.2.0|
|rest-client|humao|0.14.1|
|vue|jcbuisson|0.1.5|
|vuehelper|oysun|0.1.0|
|vscode-docker|PeterJausovec|0.0.13|;

I think, that undo (Ctrl+Z) and redo (Ctrl+Y) keys are swapped. In my Fedora operating system the keyboard setting is HU. It is my keyboard:
1st line:       qwertzuiopőú
2nd line:      asdfghjkléáű
3rd line:       íyxcvbnm
The Z and Y keys are swapped in my keyboard because of HU settings.
---

Steps to Reproduce:

1. delete some character in the editor
2. press Ctrl+Z : nothing is happened
3. press Ctrl+Y : deleted characters are restored
4. expected result: resotre characters, when Ctrl+Z pressed</Description>
    <CreatedDate>22/04/2017</CreatedDate>
    <ClosedDate>24/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25170</IssueID>
    <Title>Vs code using emmet syntax, when many times will be vscode automatically prompt interference, how to do</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: window10

Steps to Reproduce:

Vs code using emmet syntax, when many times will be vscode automatically prompt interference, how to do?
When I press the tab key：
![rkoid](https://cloud.githubusercontent.com/assets/22143654/25299562/f3052522-2732-11e7-90bd-a1136537507a.gif)
</Description>
    <CreatedDate>22/04/2017</CreatedDate>
    <ClosedDate>23/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25146</IssueID>
    <Title>Install/remove package after adding or removing a line in package.json</Title>
    <Description>Visual studio code adds IntelliSense to package.json, that's great feature but is the package automatically installed after I add a line or removed after I remove a line? Also will it update if I change a version of some package?</Description>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>21/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25140</IssueID>
    <Title>Support dynamic QuickPickItem items</Title>
    <Description>In order to implement #21439, it would be great to have a `QuickPickItem` which is never filtered out no matter what the user types. Additionally, it would be aware of what the user has typed when selected.

Proposal 1
----------

```ts
export interface QuickPickItem {
  alwaysVisible?: boolean;
}

export interface QuickPickOptions {
  onDidPickItem?&lt;T extends QuickPickItem&gt;(item: T | string, input: string): any;
}
```

cc @jrieken </Description>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>21/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25136</IssueID>
    <Title>Can't --inspect into a remote node container (port translation not working)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: insider
- OS Version: Windows 10 + docker

This issue is related to the previews one, albeit this time the translation issue is with port number.
https://github.com/Microsoft/vscode/issues/23257

Now IP translation works as VSCode is respecting the launch.json IP.
However the same problem was not resolved for port translation.

That is, VSCode seems to ignore the port I specify in launch.json

Example [Host port -&gt; Container port]
9999 -&gt; --inspect-brk=0.0.0.0:9229
The above work when I open it in chrome as 172.17.0.1:9999 but it doesn't in VSCode if I specify the port number in launch.json as 9999 

Google Chrome handles both flawlessly.





</Description>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>21/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25128</IssueID>
    <Title>Quiet light theme breaks activity bar icon contrast</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/22350/25267827/a4d7ff3a-2676-11e7-9a0c-eec52ec094ff.png)
</Description>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>23/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25121</IssueID>
    <Title>vscode open a symbol link folder will redirect to the true path.</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.3.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-docker|PeterJausovec|0.0.11|
|Bookmarks|alefragnani|0.14.1|
|code-gnu-global|austin|0.2.1|
|lualinter|dcr30|1.0.3|
|vscode-yaml-validation|djabraham|0.0.1|
|githistory|donjayamanne|0.1.5|
|python|donjayamanne|0.5.8|
|Lua|keyring|0.0.9|
|Go|lukehoban|0.6.59|
|cpptools|ms-vscode|0.9.2|
|csharp|ms-vscode|1.5.3|
|Ruby|rebornix|0.10.4|
|vscode-hexdump|slevesque|1.2.1|
|rst-vscode|tht13|1.3.0|
|vscode-apielements|vncz|0.6.0|
|lua-for-vscode|xxxg0001|0.0.23|;


---

Steps to Reproduce:

1. make a symbol link folder
```
ln -s /home/ch/true_folder /tmp/true_folder
```
2. open folder "/tmp/true_folder"
3. open a terminal in vscode, execute command pwd, which output is:
```
/home/ch/true_folder
```
I think the right output should be "/tmp/true_folder". if not ,it will affect some commands that depend on the current work directory. </Description>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>24/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25095</IssueID>
    <Title>"All Exceptions" doesn't de-activate after unchecking it</Title>
    <Description>- VSCode Version: 1.12.0-Insiders
- OS Version: Windows

Steps to Reproduce:

1. Launch Extension: I used our cpptools extension.
2. Select the All Exceptions breakpoints option and have some exception trigger.
3. Uncheck the All Exceptions option.

Bug: It keep breaking on All Exceptions until I stop debugging.
</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25093</IssueID>
    <Title>Command to open the old keybindings.json side-by-side view</Title>
    <Description>Since I manage my keybindings.json file in a dotfiles repo I would prefer to open the old view and work with the text files so I can manage the format/when clauses manually.

An additional command to do this is probably better than I setting imo, that way I we don't really need a switch view button up the top.</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>21/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25091</IssueID>
    <Title>Debugging multiple files in node.js from one window - selection option disappears after restarting one of the debugged processes</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.0.2|
|vscode-github|KnisterPeter|0.12.1|
|start-git-bash|McCarter|1.2.1|
|vscode-docker|PeterJausovec|0.0.9|
|vscode-tidyhtml|anweber|1.5.0|
|git-easy|bibhasdn|1.9.1|
|vscode-eslint|dbaeumer|1.2.8|
|vscode-instant-markdown|dbankier|1.1.0|
|githistory|donjayamanne|0.2.0|
|javadebugger|donjayamanne|0.0.2|
|python|donjayamanne|0.5.5|
|vscode-npm-script|eg2|0.1.9|
|json-tools|eriklynd|1.0.2|
|javac-linter|faustinoaq|1.2.1|
|vscode-npm|fknop|3.3.0|
|docker-linter|henriiik|0.3.0|
|vscode-auto-open-markdown-preview|hnw|0.0.4|
|restructuredtext|lextudio|0.0.22|
|MagicPython|magicstack|1.0.9|
|copy-github-url|mattlott|0.1.0|
|vs-keybindings|ms-vscode|0.1.3|
|debugger-for-chrome|msjsdiag|3.0.1|
|git-add-remote|samschneller|0.0.2|
|git-common-commands-suite|samschneller|0.2.2|
|git-pull-upstream|samschneller|0.0.7|
|preview-vscode|searKing|1.1.5|
|ignore-gitignore|stubailo|1.0.1|
|rst-vscode|tht13|2.0.0|;


---

Steps to Reproduce:

1. Start to debug multiple apps in one window
2. After both start up, the debug tool palette has a selector to choose which app to pause/stop/restart
3. After restarting one, the selector disappears and you can only control the most recently restarted debug session
4. The processes also disappear from the sidebar</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25086</IssueID>
    <Title>terminal format problem</Title>
    <Description>- VSCode Version:1.11.0
- OS Version: win10 1703 15063.138 
China version.

Steps to Reproduce:
once open the terminal , the situation appear.
![](https://ws1.sinaimg.cn/large/7df5111fgy1fetnolhg4bj214q0afq41.jpg)
</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25077</IssueID>
    <Title>Duplicate tab opens on any keypress unexpectedly</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Windows 7 professional version 6.1.7601 SP1

Steps to Reproduce:

1. Do some work, then randomly on a save (ctrl+s) the changes dissapear and duplicate tab opens.
2. Close duplicate tab, discarding changes because trying to save results in the error
            "Failed to save 'style.css': The content on disk is newer. Click on Compare to compare your version 
             with the one on disk."
3. Return to page i'm working on.

![capture](https://cloud.githubusercontent.com/assets/6549973/25235677/7d9a4728-25ab-11e7-9994-287717730150.PNG)

4. Type anything and another duplicate tab opens.

![capture2](https://cloud.githubusercontent.com/assets/6549973/25235746/b57771b6-25ab-11e7-83ef-3f29f9c48793.PNG)


</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>23/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25074</IssueID>
    <Title>Folding not working properly.</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (d8fe52b1789a398a7319346b8923d330f7ab1016, 2017-04-19T07:19:29.296Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|debugger-for-chrome|msjsdiag|3.0.1|
|vscode-docker|PeterJausovec|0.0.13|
|markdown-pdf|yzane|0.1.7|;


---

Steps to Reproduce:

1. With this sample of code
```typescript
function testFolding() {
  const test: string = "";

  switch(test) {
    case "A":
      /** */
    break;
    case "B":
      /** */
    break;
    case "C":
      /** */
    break;
  }
}
```
2. When I try to Fold case "A", it's working, but I cannot Fold case B nor C.
3. If I fold case "B" I cannot do it with C but I can with A, and in that case I cannot unfold case B
3. If I fold case C I can fold then B and then A but cannot unfold B and C anymore</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25065</IssueID>
    <Title>Please make "sudo code &lt;filename&gt;" seamless</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Ubuntu 16.04

Steps to Reproduce:

1. sudo code &lt;anyfile&gt;

Expected behavior: code opens the file with elevated privileges.
Shown behavior: code complains that it should not be run with elevated privileges and that you need to define the --user-data-dir parameter.

Anyone who has sudo privileges is supposed to know what it means and the dangers associated with it, so code should not complain about it. Code is mainly used by advanced users.
The --user-data-dir parameter should be set either user- or session-wide. Not per code instance.

Please make code behave like nano.</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25058</IssueID>
    <Title>Snippets Not Handling Mirrored Tabstops Correctly  </Title>
    <Description>From: http://stackoverflow.com/questions/43507897/is-it-possible-to-default-a-placeholder-or-tabstop-with-the-value-of-a-previous?stw=2

Steps to Reproduce:

1. Create a user snippet such as `import * as ${2:$1} from '${1:module}';`
2. Trigger the snippet and tab through the items of the snippet

**Expected Behavior**
TextMate:

![textmate](https://cloud.githubusercontent.com/assets/12821956/25214091/31670e6a-254a-11e7-8482-eb7bf0b2cf64.gif)


**Actual Behavior**
VScode goes to `$2` first and then seems to skip `$1`:

![apr-19-2017 21-52-17](https://cloud.githubusercontent.com/assets/12821956/25214144/88d3c648-254a-11e7-978c-06d7b33ab64e.gif)


</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>21/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25048</IssueID>
    <Title>[feature-request] [extension-candidate] Sidebar panel which provides one-click execution of package.json scripts</Title>
    <Description>For NPM projects, we should have a sidebar which lists and allows us to execute with a single click defined scripts in our package.json, as well as common tasks, and an output showing the execution trail of current script.


Feature-request extension-candidate</Description>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25045</IssueID>
    <Title>`"editor.wordWrap": false` breaks Toggle Word Wrap behavior</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: (running with `--disable-extensions`)

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.3|
|indentation-level-movement|kaiwood|1.1.1|
|cpptools|ms-vscode|0.10.5|
|PowerShell|ms-vscode|0.12.2|;


---

Steps to Reproduce:

1. Source file with lots of words that is much longer than Window. `asddasdsasdaasddasdsasda asddasdsasda asddasdsasda asddasdsasda asddasdsasdaasddasdsasda asddasdsasda asddasdsasda asddasdsasda asddasdsasdaasddasdsasda asddasdsasda asddasdsasda asddasdsasda asddasdsasdaasddasdsasda asddasdsasda asddasdsasda asddasdsasda asddasdsasdaasddasdsasda asddasdsasda asddasdsasda asddasdsasda`
1. Note that `settings.json` has `"editor.wordWrap": false,` (I'm guessing this is a value from an older config or a mistake when I was editing that used to somehow work correctly)
1. Alt+Z to try to toggle word wrap
1. Select Word Wrap from command palette.
1. Source is not word wrapped.

![image](https://cloud.githubusercontent.com/assets/494055/25206393/9d65a3de-251c-11e7-87e1-74c70c82fa82.png)

I think an invalid value for a setting should not stop Toggle Word Wrap from working correctly.</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25016</IssueID>
    <Title>Odd command line prompt in Integrated Terminal.</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: Windows 7

Steps to Reproduce:

1. Open in Integrated Terminal.
2. Note command line prompt.

Opened the Integrated Terminal and seem to have a very odd command prompt:

![odd](https://cloud.githubusercontent.com/assets/1011584/25182370/4818766e-250c-11e7-83dd-b5820717110f.png)
</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25011</IssueID>
    <Title>Background color in editor.</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.7.1|
|xml|DotJoshJohnson|1.7.0|
|vscode-base64|adamhartford|0.0.1|
|vscode-database|bajdzis|1.2.0|
|Gradle|cazzar09|1.1.2|
|javadebugger|donjayamanne|0.0.2|
|python|donjayamanne|0.6.2|
|vscode-html-css|ecmel|0.1.1|
|json-tools|eriklynd|1.0.2|
|vscode-javac|georgewfraser|0.0.37|
|rest-client|humao|0.14.1|
|prettify-json|mohsen1|0.0.3|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|qub-xml|qub|1.0.3|
|Ruby|rebornix|0.10.4|
|java|redhat|0.1.0|;


---

Steps to Reproduce:

1.Set black default theme
2.Open  file in editor (try on html, xml, js)
3.Observe little bit lighter gray rectangles on empty space in editor
4.Place the cursor in line with this rectangle
5.Observe that rectangle is gone.

Example:
![2017-04-19 15 37 44](https://cloud.githubusercontent.com/assets/4478255/25178264/2f4644d6-2516-11e7-925f-b4e99e6b93db.png)

Also, I think it may depend on monitor which you will use, because I can see this bug only on plugged in monitor. (AOC 2476WM plugged through HDMI)</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25008</IssueID>
    <Title>markdown preview cannot wrap</Title>
    <Description>- VSCode Version: Code 1.11.1 (d9484d12b38879b7f4cdd1150efeb2fd2c1fbf39, 2017-04-06T13:58:12.954Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|java-run|caolin|1.1.4|
|java-debug|DSnake|0.0.2|
|java-properties|ithildir|0.0.1|
|java|redhat|0.1.0|
|java-imports-snippets|tushortz|0.0.1|
|java-snippets|tushortz|0.0.1|;


---

Steps to Reproduce:

1. create a new markdown fle
2. insert 3 lines with the same content "x" (just one char)
3. expected: preview displays 3 lines
4. actually: preview displays 1 line</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>25002</IssueID>
    <Title>Unicode Support(Encoding) For Output</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.2|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.8.1|
|java|redhat|0.1.0|
|cmake|twxs|0.0.17|
|cmake-tools|vector-of-bool|0.9.4|;


---
&lt;img width="995" alt="code_2017-04-19_17-02-20" src="https://cloud.githubusercontent.com/assets/2209400/25169428/feda55a6-2521-11e7-834b-4eac9ffd5678.png"&gt;

Output console dosn't support unicode characters
also there is no settings for output encoding.</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24998</IssueID>
    <Title>vertical/horizontal split window</Title>
    <Description>It would be good if it was possible to split windows both horizontal and vertical at the same time. Right now it seems to only be possible to be one or the other for all window panes.

It would be great if it had support for same layout as for vim (:sp/:vsp). Hence, splitting one window pane horizontally and at the same time have two window panes horizontally divided.
</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24993</IssueID>
    <Title>search bug: "whole word" toggles appearance of results in non-loaded files</Title>
    <Description>Steps to Reproduce:

1. open a c++ project with some '#include' statements in some files
2. close all editor windows
3. open search panel, clear ALL search flags (case, word, regex)
4. search for "#include" (without quotes). NOTE: search results appear
5. turn ON 'Match whole word'. NOTE search results dissappear. ok...
6. open a c++ file containing the text '#include'
7. repeat the search. NOTE: the search results include the text contained in the open file.

this is inconsistent. either 'match whole word' should match '#include', or it shouldn't. but it shouldn't depend on whether or not the file is open in the editor.


- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:01:14.464Z)
- OS Version: Linux x64 4.4.0-72-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|glslx-vscode|evanw|0.0.11|
|debugger-for-chrome|msjsdiag|3.0.1|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.8.1|
|mono-debug|ms-vscode|0.15.5|;

</Description>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24974</IssueID>
    <Title>IntelliSense problems if `Flow` plugin is used</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: Linux Ubuntu 16.04

Hello, I opened issue here https://github.com/flowtype/flow-for-vscode/issues/97 and they said it's VS Code problem, maybe anyone can take attention on that? This plugin is very good, because it improves IntelliSense and we don't need to use `.ts` files to have improved IntelliSense, but the problem is, it somehow duplicates suggestions and some of them arranges to the end or at the middle which is really bad, but still is it better to have this with improved IntelliSense. I know `Flow` and `TypeScript` not the best friends since VS Code using `TypeScript` it makes zero sense to you for trying to fix it, but it will be very cool from your side.

P.S. If someone are lazy to check issue on `Flow` plugin which is above I can post here all the content from the issue I opened.

Thank you.
</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24959</IssueID>
    <Title>When dragging folder to new editor window (to use explorer), don't make it mandatory to save any unsaved files elsewhere</Title>
    <Description>- VSCode Version: Code 1.11.1 (d9484d12b38879b7f4cdd1150efeb2fd2c1fbf39, 2017-04-06T14:00:34.044Z)
- OS Version: Darwin x64 16.5.0
- Extensions: none
---

Steps to Reproduce:

1. open a new window, add some text, don't save it
2. open another new separate window, drag a folder from Finder to this window
3. observe that asked to save file. why?! just leave it there unsaved and allow me to get on and use the other new window with explorer thankyouverymuch!</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24958</IssueID>
    <Title>Can't search in debug console (OS X insider build)</Title>
    <Description>How can I enable search in debug console?</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>24/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24953</IssueID>
    <Title>The terminal cursor is not displaying properly</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.2|
|beautify|HookyQR|1.0.2|
|Go|lukehoban|0.6.59|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.8.1|
|PowerShell|ms-vscode|0.12.2|
|debugger-for-chrome|msjsdiag|3.0.1|
|vscode-docker|PeterJausovec|0.0.13|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24952</IssueID>
    <Title>Code unable to determine file encoding</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (7efc373d6874511f730bdf7a30b4728ce84b22a8, 2017-04-18T06:12:01.182Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|project-manager|alefragnani|0.14.0|
|gitignore|codezombiech|0.5.0|
|vscode-yaml-validation|djabraham|0.0.1|
|git-extension-pack|donjayamanne|0.1.2|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.2|
|vscode-PSStackoverflow|DougFinke|0.0.2|
|gitlens|eamodio|3.4.5|
|PowerShell|ms-vscode|0.12.2|
|vscode-run-git-difftool|narekmal|0.0.4|
|git-pull-upstream|samschneller|0.0.7|
|python|tht13|0.2.3|
|ansible-autocomplete|timonwong|0.0.2|
|python-extended-snippets|tushortz|0.0.1|
|jinja|wholroyd|0.0.7|
|vscode-open-in-github|ziyasal|1.2.3|;



---

Steps to Reproduce:
JSON file opened using Source Control: GIT
While in the GIT
code unable to determine encoding format. 
&lt;img width="1193" alt="no encoding" src="https://cloud.githubusercontent.com/assets/15785107/25132153/549f7d8e-23fd-11e7-8a40-1849f4841813.PNG"&gt;
Open the same file in the code explorer browser, it will determine encoding to be UTFS-16 LE
&lt;img width="1193" alt="no encoding - file browser" src="https://cloud.githubusercontent.com/assets/15785107/25132338/1858cca8-23fe-11e7-9a66-e50c525b7480.PNG"&gt;

[2racksample-ip.zip](https://github.com/Microsoft/vscode/files/929740/2racksample-ip.zip)
</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24941</IssueID>
    <Title>Terminal prompt at wrong position when there is Chinese character</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.2|
|code-runner|formulahendry|0.6.16|
|Go|lukehoban|0.6.59|;


---

Steps to Reproduce:

1.Open the integrated terminal (PowerShell)
2.12 letters dislocated (12 Chinese charactors printed before the prompt)
![1](https://cloud.githubusercontent.com/assets/15924987/25123199/2a1ff414-245a-11e7-8842-a53018e93689.PNG)
3.Press many Enters when no Chinese charactors on screeen, it recoverd
![2](https://cloud.githubusercontent.com/assets/15924987/25123255/6100d69c-245a-11e7-8846-152a11f8966f.PNG)
4.echo a single Chinese character then 2 letters dislocates (2 Chinese charactors printed before the prompt) (seems a space after the CN character, but there is not)
![3](https://cloud.githubusercontent.com/assets/15924987/25123340/9e1ab0d4-245a-11e7-9409-b2b928cb2f1a.PNG)

So is vs code treating a Chinese character half-width?
https://github.com/Microsoft/vscode/issues/24930
four Korean characters printed before the last promt, so four letters dislocates.</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24940</IssueID>
    <Title>Alt + Click to create multi cursor at click not working </Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:01:14.464Z)
- OS Version: Linux x64 4.4.0-72-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-html-css|ecmel|0.1.1|
|php-intellisense|felixfbecker|1.1.5|
|ionic2-vscode|jgw9617|1.0.0|
|Angular2|johnpapa|2.2.3|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.3|
|ionic2-snippets|oudZy|1.0.0|
|vscode-icons|robertohuertasm|7.5.1|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>27/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24935</IssueID>
    <Title>Can't tap list widget</Title>
    <Description>From #9338

cc @juliannojungle</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24930</IssueID>
    <Title>Terminal screen broken with hangul print</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|one-monokai|azemoh|0.2.4|
|npm-intellisense|christian-kohler|1.3.0|
|python|donjayamanne|0.6.2|
|vscode-npm-script|eg2|0.1.9|
|vscode-npm|fknop|3.3.0|
|Go|lukehoban|0.6.59|
|HTMLHint|mkaufman|0.3.3|
|vscode-icons|robertohuertasm|7.5.1|
|code-settings-sync|Shan|2.6.2|
|python|tht13|0.2.3|
|vim|vscodevim|0.6.16|
|jinja|wholroyd|0.0.7|
|html-css-class-completion|Zignd|1.1.0|;


---

Steps to Reproduce:

1. Turn on terminal window (Ctrl + ` or Ctrl + T)
2. echo "abc". It's ok.
3. echo "한글". It's not ok. next prompt column is wrong position.

![image](https://cloud.githubusercontent.com/assets/2032376/25114746/efe67ab6-243b-11e7-8d00-6bbbe3258cb7.png)

PS. I used for terminal program with cmd, PowerShell, bash, git-bash. It's all same.</Description>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24922</IssueID>
    <Title>Allow Terminals To Be Opened Anywhere Files Can Be Opened.</Title>
    <Description>Feature Request:
I know this has been discussed at length, but I would like to bring up something more specific. I would like terminals to have every advantage that files have in terms of positioning and windowing. That would mean, that wherever you see a file opened in VSCode we could just as easily have a terminal there. At first, the feature request is merely about positioning of terminals, but eventually I imagine creating extensions that can register themselves as "handlers" for certain file types, and then when opening those files, the extensions can open in a terminal instead of text editor, but that would feel very integrated because those terminals are positioned and navigable just like regular files are. For example, imagine you have some binary file, and VSCode wouldn't know how to display anything but the random bits. Well, you could make an extension that handles that binary file type and opens in a terminal which opens it in some useful CLI inspector tool.

Also, I imagine that just allowing terminals to be open anywhere files are, might be a far simpler solution than some of the other proposed features for custom terminal positioning. This is a way to just avoid all the bikeshedding about some one-off behavior for terminal positioning, and my hope is that it's easier to implement since it can just reuse all the file windowing code. This way, when/if VSCode gets new window positioning features, terminals automatically benefit from it, too.

cc @Tyriar 

(Somewhat related feature request, but not the same thing).
https://github.com/Microsoft/vscode/issues/10546

I apologize if this exact proposal has been discussed somewhere - please feel free to point me to that.</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24910</IssueID>
    <Title>Debugging with legacy protocol because Node xxxx v6.2.2 was detected.  Using NVM and the version seems stuck on the root version and now pathed NVM version</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version:
Mac OS Sierre
Steps to Reproduce:

1.I am running the debugger... And the above error is emmitted 
2.  I changed my nvm for node to 7.9.0 but the error still persists. 
</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24896</IssueID>
    <Title>Send Alt (meta) key in integrated terminal</Title>
    <Description>I have keyboard shortcuts under my shell zsh and tmux, because of integrated terminal not sending `Alt` (or meta) key, they doesn't work. Instead of they are making special characters like `√©π`, which is default behaviour. It would be cool if `Alt` key works like in other terminal emulators.
Sorry if duplicate, searched but I couldn't find related issue.

- VSCode Version: 1.11.12
- OS Version: 10.12.4</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24894</IssueID>
    <Title>Keyboard shortcuts do not respect keyboard layout preference.</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|plantuml|jebbs|1.5.0|;


---

Steps to Reproduce:

1. Open MacOS Preferences.
2. Open Keyboard preference pane.
3. Select Dvorak-Qwerty keyboard layout
4. Try keyboard commands in Visual Studio Code. 
5. Command-S should be Save even though the "S" key is mapped to "O", instead Command-S is Open. Same for all other keyboard shortcuts.</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24888</IssueID>
    <Title>Can't Cmd+A in file field in save dialog</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: OSX 10.12.4

Steps to Reproduce:

1. New file
2. Save (Cmd+S)
3. Browse to a directory using mouse
4. Click back to filename field
5. Shows default filename of untitled
6. can't Cmd+A to select text for overwriting field value

I realize the filename is selected-all by default but that selection is lost when directories are interacted with</Description>
    <CreatedDate>17/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24867</IssueID>
    <Title>Multi-Line Problem Matcher does not support multi-line messages</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

VS Code supports defining multi-line problem matchers, but it does not support problems with messages that span multiple lines.  Attempting to define a multi-line problem matcher for messages that span multiple lines results in VS Code defining N or N-1 problems for a single problem with N lines, where either the first line of the message is used for each of the N problems or the first line is missing and a separate problem is listed for each of the N-1 lines of the error message.

For example, given the following 3-line compiler error message:
```
myfile.cpp:6:11: error: undeclared identifier "i"
    array[i] = value;
          ^
```
There is no way to define a problem matcher that will contain all 3 lines.

- VSCode Version: 1.11.x

</Description>
    <CreatedDate>16/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24853</IssueID>
    <Title>terminal  Display is not normal</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: the listing exceeds the lower minimum of browsers' URL characters limit
---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>16/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24845</IssueID>
    <Title>Inconsistent intellisense behaviors</Title>
    <Description>- VSCode Version: Code - Insiders 1.12.0-insider (9530cf6e2b804c4b986d97f105f88d40ee4d2c47, 2017-04-14T11:59:40.760Z)
- OS Version: Windows_NT ia32 10.0.16176
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-class-suggestions|AndersEAndersen|1.0.4|
|path-intellisense|christian-kohler|1.2.0|
|githistory|donjayamanne|0.2.0|
|python|donjayamanne|0.6.0|
|beautify|HookyQR|1.0.2|
|reg|ionutvmi|0.0.1|
|latex-workshop|James-Yu|1.4.2|
|Theme-MaterialKit|ms-vscode|0.1.4|
|material-icon-theme|PKief|2.0.3|
|java|redhat|0.1.0|
|vscode-open|sandcastle|0.1.0|
|code-settings-sync|Shan|2.6.2|
|sort-lines|Tyriar|1.2.0|
|markdown-all-in-one|yzhang|0.5.0|;


---

Steps to Reproduce:

1. type some text (in .txt or other file with intellisense)
2. if the completionItem is not same with what I have typed, press &lt;kbd&gt;Enter&lt;/kbd&gt; will insert the completionItem text. There is no problem and it's what we expect.
3. but if the completionItem is same with the text, press &lt;kbd&gt;Enter&lt;/kbd&gt; will insert a new line.

![completion](https://cloud.githubusercontent.com/assets/7588612/25068611/affc2208-229b-11e7-8a91-0145b33722d8.gif)

I wonder if it's a new feature in recent versions. But in most cases, I don't want the new line.</Description>
    <CreatedDate>16/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24844</IssueID>
    <Title>Cursor and letters in terminal are always in wrong place, when there are Chinese characters in the path</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.2|
|vscode-pandoc|DougFinke|0.0.8|
|cpptools|ms-vscode|0.10.5|
|csharp|ms-vscode|1.8.1|
|Theme-MarkdownKit|ms-vscode|0.1.4|
|vs-keybindings|ms-vscode|0.1.3|
|vscode-icons|robertohuertasm|7.5.1|;


---

Steps to Reproduce:

1. Start the terminal (powershell.exe) in a path with Chinese in it. (Sometimes when there is no Chinese characters in it the problem also occur)
2. The letters and the cursor in the terminal will be in wrong place.
*PS. the problem is shown in the following picture*
![default](https://cloud.githubusercontent.com/assets/6753189/25068411/5f138f1c-2295-11e7-9a8e-92c350f803aa.png)
</Description>
    <CreatedDate>16/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24841</IssueID>
    <Title>Some UI elements do not scale with window.zoomLevel</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: Windows 10 (150% system scale) or macOS 10.12

Steps to Reproduce:

1. Set window.zoomLevel to any value (e.g. 1.4)
2. See screenshots

![image](https://cloud.githubusercontent.com/assets/5107241/25067317/ed4e76ee-2271-11e7-878f-2caabc5a1816.png)

![image](https://cloud.githubusercontent.com/assets/5107241/25067318/f33cdad2-2271-11e7-824b-a9d277e44ab6.png)
</Description>
    <CreatedDate>15/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24824</IssueID>
    <Title>Markdown Code Block Syntax highlighting: Highlighting doesn't work at certain indentations.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2

![capture](https://cloud.githubusercontent.com/assets/7036770/25064655/4bf847f2-221c-11e7-9908-9ad6ddeab50e.PNG)
![capture1](https://cloud.githubusercontent.com/assets/7036770/25064657/4d156ee4-221c-11e7-9d36-d9de12d5a17c.PNG)
</Description>
    <CreatedDate>15/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24821</IssueID>
    <Title>Search results show special characters HTML-escaped</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.12.0-insider (1.12.0-insider) 9530cf6e2b804c4b986d97f105f88d40ee4d2c47
- OS Version: Mac OS X 10.12.4

Steps to Reproduce:

1. Have a repository with files containing special characters, such as "&lt;", "&gt;", "&amp;" etc. that would normally be escaped as &amp; lt;, &amp; gt;, &amp; amp; etc.
2. Search for a string that contains a special character.

3. Result: In the search results, the character is being displayed as "&amp; amp;" when it should be displayed as "&amp;".

![](https://content.screencast.com/users/Tobbi_/folders/Jing/media/cb2dabc8-e00e-424d-a713-4a5e83159abe/00000176.png)
</Description>
    <CreatedDate>15/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24813</IssueID>
    <Title>Terminal will lose content on window resize on WIN os.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: any (include latest)
- OS Version: only WINDOWS, mac will not

Steps to Reproduce:

1. open terminal
2. input cmd, like dir
3. resize vs code windows, content of terminal will relayout
4. content will lost if size changing from small to big

</Description>
    <CreatedDate>15/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24810</IssueID>
    <Title>Import path intellisense is no longer working used to work before.</Title>
    <Description>
- VSCode Version: 1.11.2
- OS Version: Mac OSX Captain

Steps to Reproduce:
After the recent update, `import` path intellisense is no longer working, used to work amazing with no extensions.  
In my react project, it even used to suggest `packages` inside `node_modules`. 

Appreciate any help on this.

</Description>
    <CreatedDate>15/04/2017</CreatedDate>
    <ClosedDate>15/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24792</IssueID>
    <Title>Provide a way for an extension to detect an active debug session</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Code - Insiders 1.12.0-insider (9530cf6e2b804c4b986d97f105f88d40ee4d2c47, 2017-04-14T11:53:02.042Z)
- OS Version: Darwin x64 16.5.0
---

As far as I can tell there isn't a way for an extension to know if there is an active debug session. This would allow an extension to alter it behavior appropriately.

Maybe something like:
`workspace.onDidChangeDebugState` with a `state` of `started | paused | stopped`

Also in addition to to the global state it would be great to be able to detect that the active editor is currently being debugged.

Maybe like:
`window.onDidChangeTextEditorDebugState` with a `state` of `started | paused | stopped`
and/or maybe a `debugState` property on the editor

For the latter case, I can give a concrete example -- in GitLens I provide a blame decoration that is applied to the end of the selected line, which works great, but when a file is being debugged it overwrites the debug decorations (variable values) which I really don't want it to do. So I'd love a way to detect that case and turn them off (ideally only if the active editor is currently being debugged -- i.e. the debug decorations would be visible). This could probably be solved by a priority on decorations or something like that (to make sure the debug ones are higher and won't be overwritten). While that might be nice to have too, having the debug events/state feels like it could be valuable to other extensions as well.

</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24791</IssueID>
    <Title>Clicking an ESLint error or warning duplicates the file</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|regex|chrmarti|0.0.8|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|xml|DotJoshJohnson|1.7.0|
|mssql|ms-mssql|0.3.0|
|PowerShell|ms-vscode|0.12.2|
|code-settings-sync|Shan|2.6.2|
|gitblame|waderyan|1.3.0|;


---

Steps to Reproduce:

1. Open JS file on SharePoint WebDav
2. Click ESLint error or warning
3. The file in question will duplicate into a new tab, and you will navigate to the error's line in that new tab - instead of the existing one.

Perhaps this could be a problem with ESLint, but it started happening with VSCode 1.11. ESLint didn't change during that transition.

Feel free to ping me internally (v-sthard) if you'd like a quick demo of the issue.

Thanks,
Stephen</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>23/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24790</IssueID>
    <Title>Spawn unknown notification after installing extension</Title>
    <Description>- VSCode Version: 1.12.2
- OS Version: Windows 10 Insider Preview 15063 (rs2_release)

Steps to Reproduce:

1. Install the PHP InteliSense plugin
2. Open a PHP file


After doing these two steps, I now see a notification that says : "Spawn UNKNOWN"

That's it, no informations anywhere, I've tried uninstalling the plugin and reinstalling VS Code but nothing changes

![code_2017-04-14_01-02-04](https://cloud.githubusercontent.com/assets/8561135/25051375/952f018e-214c-11e7-93be-0e8e630e1ae0.png)</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24787</IssueID>
    <Title>"Code Helper" process x 4-5 instances, using up 99.8% of cpu, running on OSX</Title>
    <Description>There's a process called "Code Helper" (sometimes as many as 4 instances) that's taking up 99.6% of my CPU. Running on OSX. 

- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|ng-template|Angular|0.1.3|
|Angular2Tests|MarinhoBrandao|0.7.3|
|html-css-class-completion|Zignd|1.0.3|
|open-html-in-browser|coderfee|0.0.6|
|angular2-snippets|danwahlin|1.0.15|
|classic-asp|ilich8086|0.0.2|
|easy-icons|jamesmaj|0.3.1|
|Angular1|johnpapa|0.1.16|
|web-browser|masonicboom|0.0.1|
|mssql|ms-mssql|0.3.0|
|csharp|ms-vscode|1.8.1|
|debugger-for-chrome|msjsdiag|3.0.1|
|vscode-css-peek|pranaygp|1.2.4|
|view-in-browser|qinjia|0.0.5|
|aspnet-helper|schneiderpat|0.6.3|;


---

Steps to Reproduce:

1. Run Visual Studio Code
2. Open Activity Monitor, look at %cpu and load eaten up by "Code Helper" </Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24786</IssueID>
    <Title>Subtle error with cached(?) windows workspace/folder paths: program path uses differently cased character than file on disk</Title>
    <Description>VSCode 1.11.2
Shell 1.4.6
nodejs: 7.8.0
windows 10.0.15063

I'm debugging a nodejs app created in TypeScript.
Launch config:
```
            "program": "${workspaceRoot}\\my\\test\\test.ts",            
            "outFiles": [
                "${workspaceRoot}\\dist\\test\\**\\*.js"
            ],
```

**Error/warning messages:**

* _program path uses differently cased character than file on disk_
* _Debugging with legacy protocol because Node 7.8.0 detected_

**Consequence: Breakpoints do not get hit properly.**

First I thought ${workspaceRoot} is wrong-cased on windows but it is **not**.

After more than interesting research I found the reason (at least for my system):
* The path/folder of the project used to be "C:\\myProject"
* I changed it to "C:\\myproject"
* (The names/paths in package.json and launch config are all correct)
* After closing an re-opening VS Code serveral times, I realized that the window title said **"myProject"** instead of "myproject".
* Solution: Open any other folder in VS Code and then re-open the project folder through **"File-&gt;Open Folder"**. **Do not use "Open Recent"**

So my assumption is that the project/folder name was cached somehow. 
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24765</IssueID>
    <Title>Allow to run 'code -w'  when Code is running already</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: macOS 10.12.4

Steps to Reproduce:

1. Launch VS Code from the Dock or the Finder (NOT from the command line)
2. In a terminal, run `code -w &lt;file&gt;`
3. =&gt; file opens
4. Exit VS code using &lt;kbd&gt;Cmd&lt;/kbd&gt;+&lt;kbd&gt;Q&lt;/kdb&gt;
5. =&gt; `code -w &lt;file&gt;` does not returns

Expected result:
`code -w &lt;file&gt;` should have returned.

It is worth noting that after VS Code is exited and even if `code -w &lt;file&gt;` is interrupted with &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;, VS Code can no longer be launched from the Finder or the Dock. Clicking on the app icon will do nothing. VS Code can however still be launched from the command line. There is still a Code process present but it is not visible in 'Force Quit Applications' list</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>18/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24761</IssueID>
    <Title>Terminal display problems, how to solve</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
![](https://cloud.githubusercontent.com/assets/16203604/25038806/1d444436-2133-11e7-9050-5a9c17164e99.png)

- VSCode Version: 1.11.2

- Computer System: window10

Steps to Reproduce:

1.Terminal display problems, how to solve

</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24758</IssueID>
    <Title>终端显示有问题，请问怎么解决。</Title>
    <Description>终端显示有问题，请问怎么解决。
我重装了软件。系统是Windows10
![image](https://cloud.githubusercontent.com/assets/16203604/25038806/1d444436-2133-11e7-9050-5a9c17164e99.png)
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24756</IssueID>
    <Title>Keyboard shortcut for terminal no longer works</Title>
    <Description>- VSCode Version: 1.11.2
- OS Version: OS X 10.12.4

Steps to Reproduce:

1. Press Shift + Ctrl + `
2. Nothing happens

I updated this morning, and sadly don't know what version I was on previously (I guess the previous release) and this keyboard shortcut no longer works.</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>26/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24748</IssueID>
    <Title>扩展主机意外终止。请重新加载窗口以恢复。</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T07:56:42.517Z)
- OS Version: Darwin x64 16.5.0
- Extensions: none
---

Steps to Reproduce:

1.Open vscode
2.Normally use it
3.Error: 扩展主机意外终止。请重新加载窗口以恢复。

What I have done: 
1. Version: 1.11.2, installed some extensions
Uninstall all extensions(扩展工具) -- Still Error:"扩展主机意外终止。请重新加载窗口以恢复"

2. Old version update to latest version:
2.1 remove vscode ,install a old version vscode(1.0.2,2016/06),# work well
2.2 vscode remind me to update version , i agreed, then update to  version 1.11.2
2.3 Error again:"扩展主机意外终止。请重新加载窗口以恢复"


&lt;img width="1245" alt="2017-04-14 3 09 32" src="https://cloud.githubusercontent.com/assets/7831235/25036080/28cc8bce-2124-11e7-94b6-7b3b4a159ec6.png"&gt;
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>14/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24745</IssueID>
    <Title>Allow multiple peek/references widget or store history</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

It would be very helpful to allow more than one set of references / location list / peek widget to be shown at the same time.

For example, in this image I'm looking at all `IpcMessage` derived types. If I want to look at the references of `IpcQuit`, the derived type reference view is closed and cannot be easily retrieved (especially if I've navigated to a separate part of the code base).

![image](https://cloud.githubusercontent.com/assets/356714/25035103/6147f1f2-20a0-11e7-81ee-806728818338.png)
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>14/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24740</IssueID>
    <Title>the command text position offset</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|path-intellisense|christian-kohler|1.2.0|
|vscode-eslint|dbaeumer|1.2.8|
|jquerysnippets|donjayamanne|0.0.1|
|auto-close-tag|formulahendry|0.3.10|
|auto-complete-tag|formulahendry|0.0.1|
|auto-rename-tag|formulahendry|0.0.11|
|csharp|ms-vscode|1.8.1|
|vs-keybindings|ms-vscode|0.1.3|
|view-in-browser|qinjia|0.0.5|
|guides|spywhere|0.7.0|
|vscode-react-native|vsmobile|0.3.2|;


---

Steps to Reproduce:

1.open terminal 
2.wait init
3.the command text position offset

View [Sample Picture](https://github.com/Soita7/TestProject/blob/46bd1f3f40229b6b75bc89dc98f7c2c3e7ffc0e0/bug.png)

Or Click this url
https://github.com/Soita7/TestProject/blob/46bd1f3f40229b6b75bc89dc98f7c2c3e7ffc0e0/bug.png</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24738</IssueID>
    <Title>No intelliSense in template strings</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.11.2
- OS Version: macos 10.12

Steps to Reproduce:
When I type `peo` in template strings, it`s no intelliSense.

```javascript
let peopleName = 'mary';
let sayHelloStr = `Hello ${peopleName}`;
```
![233](https://cloud.githubusercontent.com/assets/16483610/25030570/5a8ea9c0-20f8-11e7-8447-8856fe8606f9.png)
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>14/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24737</IssueID>
    <Title>Terminal UI mess</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: &gt;1.11.0
- OS Version: win10

Steps to Reproduce:

1. open vscode
2. ctrl + ` show terminal 

![](http://chuantu.biz/t5/64/1492130566x2890171870.png)
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24736</IssueID>
    <Title>Application is crashed when press toggleDevTools shortcut ['ctrl + f12']</Title>
    <Description>- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-css-formatter|aeschli|0.0.2|
|mssql|ms-mssql|0.3.0|
|csharp|ms-vscode|1.8.1|
|debugger-for-chrome|msjsdiag|3.0.1|;


---

Steps to Reproduce:

1.
Defined a shortcut for toggleDevTools, for example 'ctrl + f12'

    {
        "key": "ctrl+f12",
        "command": "workbench.action.toggleDevTools"
    }

2.
Press the shortcut serveral times, the application is crashed.

**Addtional**
I haved defined other shortcuts('s', 'ctrl + b'), and the issue appears again.

**Expected Result** 
The application can toggle dev tools correctly.

**Actual Result**
The application is crashed.
</Description>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>17/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>24722</IssueID>
    <Title>Vscode auto format spaces before and after curly brackets</Title>
    <Description>The auto formatting on vscode is great but in jsx if you do e.g.

Import {NamedExport} from 'blah' 

The auto formatter will do:

Import { NamedExport } from 'blah' 

Which is rather annoying. The applicable settings are all set to false so please don't suggest setting any of the usual suspects to false as per stackoverflow and Twitter.

It seems like an issue in vscode itself.

Please advise.</Description>
    <CreatedDate>13/04/2017</CreatedDate>
    <ClosedDate>13/04/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23651</IssueID>
    <Title>[Feature Suggestion] Navigate to Folder when entering Folder Name using Keyboard</Title>
    <Description>In explorer of sidebar, I tried to navigate to folder entering folder name.
But there is no such feature in vscode yet.
It would be good if user could use keyboard in explorer.</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23647</IssueID>
    <Title>Allow setting for bash config</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

I often use the builtin terminal pane in VSCode. When using bash (bin/bash) with default macOS configuration from .bash_profile it will not be loaded by code. VSCode expects a .bashrc in the home directory. It would be nice if we can configure the bash conf path. At the moment I work around this by having a bashconf file and symlinking this to .bash_profile and .bashrc. But I think a preference for the configuration file would be a better solution. 

I still need .bash_profile because it is used by the macOS terminal application.

- VSCode Version: 1.10.2
- OS Version: macOS 10.12.3

Steps to Reproduce:

1. open VSCode and hit _ctrl+&lt;_ (german keyboard) to open bash (default in linux and macOS)
2. no configuration loaded, a blank bash if no configuration was added to .bashrc</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23644</IssueID>
    <Title>Editor doesn't scroll when extending selection to the right</Title>
    <Description>* mac
* open a file that requires h-scrolling
* navigate to a work close the right border
* press &lt;kbd&gt;Shift+Alt+ArrowRight&lt;/kbd&gt; to extend the selection word by word
* 🐛 the editor scroll horizontally

![mar-30-2017 09-02-27](https://cloud.githubusercontent.com/assets/1794099/24491524/fdce4cc6-1527-11e7-9be7-b6e24c887196.gif)
</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23634</IssueID>
    <Title>Visual Studio Code background glitch</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-theme-onedark|akamud|1.3.2|
|one-monokai|azemoh|0.2.4|
|hopscotch|idleberg|0.1.4|
|debugger-for-chrome|msjsdiag|2.7.1|
|vscode-icons|robertohuertasm|7.4.0|;


---

Steps to Reproduce:

1. Open Visual studio code
![screen shot 2017-03-29 at 8 16 35 pm](https://cloud.githubusercontent.com/assets/11401157/24486014/a3700fdc-14bc-11e7-9f1e-00ecd474e4d6.png)

2.</Description>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23620</IssueID>
    <Title>File icon theme not working after update</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (d98a518c5485bd7a47c70f5b3783f70efa5edcd6, 2017-03-29T06:11:14.271Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-svgviewer|cssho|1.4.0|
|EditorConfig|EditorConfig|0.6.2|
|git-project-manager|felipecaputo|1.2.1|
|seti-icons|qinjia|0.1.3|
|theme-glacier|Tyriar|0.0.10|
|theme-sapphire|Tyriar|0.0.5|;

---

Updated to today's insiders and saw this:

![image](https://cloud.githubusercontent.com/assets/2193314/24475645/6b4839cc-1485-11e7-80da-11a7d57872da.png)

Error in console:

```
GET file:///C:/Users%C3%9Aimms.vscode-insiders%0Extensionsqinjia.seti-icons-0.1.3%0Fontsseti.woff net::ERR_FILE_NOT_FOUND
```

Actual path of woff file:

```
C:\Users\daimms\.vscode-insiders\extensions\qinjia.seti-icons-0.1.3\fonts\seti.woff
```

Reloading the window and restarting VS Code did not fix the issue.</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23619</IssueID>
    <Title>JSON error</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/22350/24475410/06638d40-14d0-11e7-8cb8-f06574479a7d.png)

```
Request json/colorSymbols failed with message: Cannot read property 'schema' of null
```

I simply opened this file:

```json
{
	"rules": {
		"no-unused-expression": true,
		"no-unreachable": true,
		"no-duplicate-variable": true,
		"no-duplicate-key": true,
		"no-unused-variable": true,
		"curly": true,
		"class-name": true,
		"semicolon": [
			true,
			"always"
		],
		"triple-equals": true
	}
}
```</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23605</IssueID>
    <Title>Close an instance if all files from it moved to another instance</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.9.3|;


---

Steps to Reproduce:

1. Open two instances of Code.
2. Move all open files from one instance to another.

Expected:

- Close the instance which does not have any files open in it.

Actual:

- The empty instance sticks around.</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23603</IssueID>
    <Title>[Insiders] Interactive Playground - CSS swatches, IntelliSense, Refactoring doesn't work</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (d98a518c5485bd7a47c70f5b3783f70efa5edcd6, 2017-03-29T06:05:18.022Z)
- OS Version: Darwin x64 16.5.0

Open the interactive playground and notice that the CSS swatches aren't shown, IntelliSense doesn't work, refactoring doesn't work. This all works fine in `1.10.2`</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23598</IssueID>
    <Title>Release notes page font looks out of place in latest build</Title>
    <Description>
&lt;img width="1080" alt="vscode" src="https://cloud.githubusercontent.com/assets/931192/24468941/b0f088c4-146e-11e7-8d31-8bd0154cf399.png"&gt;
- VSCode Version: Code - Insiders 1.11.0-insider (d98a518c5485bd7a47c70f5b3783f70efa5edcd6, 2017-03-29T06:11:14.271Z)
- OS Version: Windows_NT ia32 10.0.15166
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.7.0|;


---

Steps to Reproduce:

1. Upgraded to the latest VS Code Insiders build
2. Launched it</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23589</IssueID>
    <Title>Extension Source for keybindings not showing Up</Title>
    <Description>Testing #23287

I have the sublime Keymap installed and expected to see they keybindings it had set in the list but I do not.  For instance it does wet one for Toggle Zen...

![image](https://cloud.githubusercontent.com/assets/1051190/24467343/f6352eea-1468-11e7-8408-38b593f2df6f.png)

Here is my keyboard shortcut editor filtered and you can see the keymap active as well.

![image](https://cloud.githubusercontent.com/assets/1051190/24467268/bb6d8d52-1468-11e7-8208-3e6496193393.png)

</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23579</IssueID>
    <Title>Cannot switch folder when debugging extension</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (6ae8c1506669fd579da1da92108b7db86d019bc6, 2017-03-29T08:21:59.122Z)
- OS Version: Linux x64 3.13.0-108-generic
- Extensions: none
---

Only seen on Linux so far:

1. Open folder with extension
2. F5 extension
3. In extension's workbench try to open a different folder
4. -&gt; Extension's workbench closes, but does not reopen with new folder

/cc @Tyriar </Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23572</IssueID>
    <Title>Named terminals</Title>
    <Description>It would be nice if I could set a name to each of my integrated terminals
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23555</IssueID>
    <Title>Do not show multiple breakpoints for wrapped lines</Title>
    <Description>
![2017-03-29_11-03-12](https://cloud.githubusercontent.com/assets/1898161/24451315/9708b3fe-147e-11e7-951e-cbfb3ba31274.png)

Since we are not showing multiple line numbers in this case, I don't think that we should show multiple breakpoints.
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23552</IssueID>
    <Title>Allow tabs to be torn/tear off into separate window, allow tabs to be added to tabs in another window</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 16.4.0
- Extensions: none
---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23547</IssueID>
    <Title>Compare 2 files with multi selection  </Title>
    <Description>Ref: http://stackoverflow.com/questions/30139597/visual-studio-code-is-there-a-compare-feature-like-that-plugin-for-notepad

- VSCode Version: 1.10.2
- OS Version: Windows 10

A similar comparing tool as the plugin explained in StackOverflow above. Currently, VSCode does not allow multi select and also ability to edit the compared files (only the file to the right is allowed). 

Features Request:
1. Multi-select files in the tabs
2. Compare and edit both the files
3. Ability to not refresh in real time (or allow it)
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23544</IssueID>
    <Title>No longer possible to create new branch from git status bar</Title>
    <Description>I can not create a new branch using the git status bar. Which disrupts my flow of creating PRs inside vscode</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>30/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23535</IssueID>
    <Title>VSCode extension on Windows in Users/%user/.vscode, I want to change it to the VSCode root directory, make a portable</Title>
    <Description>I want to know how to set</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23531</IssueID>
    <Title>QuickOpen fails because of case insensitivity</Title>
    <Description>Reproduce
1. Create a file, say "controlpointSagas.js"
2. Rename the file to "ControlpointSagas.js"
3. Quick open (cmd-shift-p) "contr"

You are now shown both versions of the filename. You can actually open those two files separately, but you will end up in a twilight zone. Edits in either of the file views will be saved to the actual file, but not render in the other file view. 

I haven't investigated exactly what happens, but I can tell you that trouble lies ahead. I lost half an hour of editing because I accidentally opened the small caps file and made a change. Didn't catch that this file was an old version of the real file. The real file got overwritten :(

Solution: Quick-open should NOT show files that does not exist.

Apart from this problem I'm really happy that I switched from Atom. VSCode is great!
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23521</IssueID>
    <Title>Hover tooltip for terminal links is occluded when link is in first line</Title>
    <Description>Testing #23129

![image](https://cloud.githubusercontent.com/assets/762848/24441025/734d51d0-140c-11e7-8a2a-70a8c1ffaf27.png)

Expected: tooltip appears below text instead of above.

--
- VSCode Version: Code - Insiders 1.11.0-insider (a35c7da7b8f324c1e8cc7830173418e392542f6d, 2017-03-28T12:40:24.966Z)
- OS Version: Darwin x64 16.4.0
- Extensions: none

</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23519</IssueID>
    <Title>Visual Studio Code fails to start when there's no network connection</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|CppSnippets|hars|0.0.7|
|vscode-todo-parser|minhthai|1.8.9|
|csharp|ms-vscode|1.8.0|
|Theme-TomorrowKit|ms-vscode|0.1.3|
|material-icon-theme|PKief|2.0.1|
|java|redhat|0.0.13|
|code-settings-sync|Shan|2.6.1|
|guides|spywhere|0.7.0|
|unity-debug|Unity|1.1.0|
|unity-snippets|YclepticStudios|0.1.2|;


---

Steps to Reproduce:

1. Remove network connection;
2. Try to open a file with VSCode, or simply start the program.

VSCode works fine with internet connection and even in LAN, so I guess there's nothing to require via the internet. But when I try to start VSCode without any network connection, nothing happened. No matter how many times I click on, it won't start and I cannot find the program in task manager.
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23514</IssueID>
    <Title>Changing keyboard layout while keybindings.json is open doesn't update helper info</Title>
    <Description>Testing #23315

Windows 10, switched from Arabic (Lebanon) -&gt; English (US) while keybindings.json is open

![image](https://cloud.githubusercontent.com/assets/762848/24436701/ee27c4fa-13f1-11e7-9c40-b0e1f1866ba3.png)
</Description>
    <CreatedDate>29/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23503</IssueID>
    <Title>Keybinding editor with Windows Narrator on</Title>
    <Description>Testing #23287

- When the widget shows up, Narrator doesnt read the text
- While moving up and down the keybindings using arrow, Narrator says "2 of 49" "3 of 40" etc instead of reading out keyboard shortcut related info</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23502</IssueID>
    <Title>Keybinding widget prefills previous shortcuts</Title>
    <Description>Testing #23287 

- Edit a short cut, enter `Ctrl+q` in the widget
- Edit another shortcut, type a single key in the widget. The widget gets prefilled with the previous entry + whatever you type
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23495</IssueID>
    <Title>How to get default shortcut back after removing a keybinding</Title>
    <Description>Testing #23287 

- Right click on any of the default keybindings and press "Remove keybinding"

Now there is no way to get that keybinding back.

I'd expect the "Reset keybinding" option to be available </Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23494</IssueID>
    <Title>Debugger does not work with electron v1.6.x</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: 10.11.6

Steps to Reproduce:

1. Just update to electron v1.6.2 (latest version as of 3/28/17)
2. Place a breakpoint and it will hit the breakpoint although I don't see the stack trace or the yellow debugger line.
3. Here is the error description under the CALL STACK sub window: `No call stack available (vscode_backtrace: Internal error: TypeError: undefined is not a function)`
4. This happens with both electron 1.6.1 &amp; 1.6.2
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23491</IssueID>
    <Title>Long when clauses not readable</Title>
    <Description>Testing #23287 

![image](https://cloud.githubusercontent.com/assets/16890566/24425871/89ed5d38-13ba-11e7-96d3-6d86c9241cf4.png)

Of course, you can hover to see the whole clause, but that wont work for people not using the mouse</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23473</IssueID>
    <Title>Git command stage file does not work on Windows</Title>
    <Description>https://github.com/Microsoft/vscode/issues/23305

- VSCode Version: Insiders latest
- OS Version: Windows

Steps to Reproduce:

1. Make a small change to a file (say `package.json`)
2. Open the command palatte and choose Git: Stage File

I expect this to stage the file. 
Actual: does nothing. 

With the file
![image](https://cloud.githubusercontent.com/assets/2449568/24418758/e2da4226-13a1-11e7-9ce9-4dae666288e5.png)

With the diff view
![image](https://cloud.githubusercontent.com/assets/2449568/24419028/b4ba53a8-13a2-11e7-85b3-d5ce4a8f4468.png)

</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23470</IssueID>
    <Title>UX nit - Git init icon</Title>
    <Description>Testing for https://github.com/Microsoft/vscode/issues/23305

- VSCode Version: Insiders
- OS Version: Windows

Steps to Reproduce:

1. Open an empty folder with no git configuration
2. Click the SCM icon in the activity bar

I expect to see a "Git init" action that is more clear. It was unclear to me what clicking the git icon would do. 
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23450</IssueID>
    <Title>Search checkboxes are missing the checked border</Title>
    <Description>Version 1.11.0-insider
Commit 646d0f9e0db0c60f81b099472f4a9e3a722744b1
Date 2017-03-28T12:36:25.374Z

![image](https://cloud.githubusercontent.com/assets/6461412/24412245/3db32e34-13d8-11e7-8fe3-3e8cebfa9c4f.png)

Before:
![image](https://cloud.githubusercontent.com/assets/6461412/24412277/58c35564-13d8-11e7-9881-87333ab93b80.png)
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23439</IssueID>
    <Title>Scrolling position is not synchronising in node loaded scripts</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
Ref: #23283

- VSCode Version: 1.11.0
- OS Version: Win10
- Node Protocol: inspect and legacy

Steps to Reproduce:

1. Initiate remote debugging session.
2. Set a breakpoint in any of the &lt;node_internals&gt; file and hit it. 
3. Close the file without any scrolling after the breakpoint was hit.
4. Open the same script via `Debug: Open Loaded Script`. 

The opened script is scrolled to the top, whereas expected to scrolled to the same line, where it stayed after step 3.

Hitting the breakpoint, then navigating to another file and back also resets the scrolling position.</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23429</IssueID>
    <Title>Commit messages are too light, hard to read</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (a35c7da7b8f324c1e8cc7830173418e392542f6d, 2017-03-28T12:40:24.966Z)
- OS Version: Darwin x64 16.5.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-settings-sync|Shan|2.6.1|
|sort-lines|Tyriar|1.2.0|
|html-css-class-completion|Zignd|1.0.3|
|Bookmarks|alefragnani|0.12.0|
|project-manager|alefragnani|0.13.5|
|nord-visual-studio-code|arcticicestudio|0.1.1|
|path-intellisense|christian-kohler|1.2.0|
|vscode-eslint|dbaeumer|1.2.8|
|tslint|eg2|0.8.1|
|Angular2|johnpapa|2.1.2|
|vscode-icon-theme|jtlowe|1.5.0|
|theme-karyfoundation-themes|karyfoundation|11.1.0|
|HTMLHint|mkaufman|0.3.3|
|vscode-autoprefixer|mrmlnc|2.0.0|
|vscode-csscomb|mrmlnc|4.0.1|
|vscode-stylefmt|mrmlnc|2.2.4|
|stylelint|shinnn|0.23.0|
|darcula-extended|smlombardi|3.3.2|
|slime|smlombardi|1.4.1|
|theme-tesla|smlombardi|6.0.0|
|theme-toothpaste|aalaap|0.0.1|
|vscode-todo-highlight|wayou|0.4.12|
|change-case|wmaurer|1.0.0|;


---

Steps to Reproduce:

1. commit some files, type a message
2. text is light gray on white

![screen shot 2017-03-28 at 9 36 39 am](https://cloud.githubusercontent.com/assets/835148/24408534/0934b77c-139c-11e7-82e5-632f0fbc8f6f.png)
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23425</IssueID>
    <Title>Stage selected range stages the whole block</Title>
    <Description>#23305

1. Stage selection stages the whole git change block
2. It should respect the selection and allow users to stage only parts of that block

</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23412</IssueID>
    <Title>Git - long commit warning is gone</Title>
    <Description>Refs #23305

We previously had the long commit warning for git.
I no longer get this</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23410</IssueID>
    <Title>Click on git resource should not focuse the editor, only double click should</Title>
    <Description>Refs #23305

I think I already created it in the past but not 100% sure</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23405</IssueID>
    <Title>Updating Visual Studio code should retain last opened files</Title>
    <Description>Whenever i install a newer version of Visual Studio code, it updates fine but it cannot retain list of files that it opened lastly. I guess this was given in last build &amp; removed now.  Even in the last build, it was able to retain only one file among many files. This needs to be fixed.

- VSCode Version: Code - Insiders 1.11.0-insider (0b19861f31ed27160c8ea73e55e39dd0213814a6, 2017-03-28T10:48:32.966Z)
- OS Version: Windows_NT ia32 10.0.15061
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.8.0|
|PowerShell|ms-vscode|0.11.0|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23397</IssueID>
    <Title>Keybinding editor: Consider to make table sortable by Keybinding (and not only by Command)</Title>
    <Description>testing #23287:

If I want to find a "free" keybinding, it would be helpful if I could sort the table by the Keybinding. Then I could easily spot the "Cmd+&lt;key&gt;" that is not used.  </Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23392</IssueID>
    <Title>Can't navigate the stack trace in the exception peek</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- Tests #23013 

Title says it all. I would expect that I can navigate the stack trace.</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23367</IssueID>
    <Title>Reset keybinding not available for "removed"</Title>
    <Description>Testing #23287
Right click on a default keybinding
Choose remove
Confirm
The reset keybindings is not available

It is possible the current model where defaults are removed make this difficult to implement properly. Perhaps we need a different call in the service to get the defaults and this action can be based on the actual defaults rather than the "resolved" defaults.

![image](https://cloud.githubusercontent.com/assets/5047891/24398733/d376f05a-13aa-11e7-9b2c-7fa523d24b2f.png)
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23365</IssueID>
    <Title>Pressing Cmd in keystroke box always fills in some previous key combination</Title>
    <Description>testing #23243:

- VSCode Version: Insiders
- OS Version: macOS

Steps to Reproduce:

Before I ran into this bug I had assigned a key combination "cmd+shift+1" for the "Increase Current View Size" command (and did some testing with this).

1. open Keyboard Shortcuts
2. Pick some entry and click the edit button ('pen')
3. press 'Cmd' key

Observe: some previously used (or defined?) key combination is entered as the first part of a chord. In the following screen cast I'm only pressing the "command" key:

![2017-03-28_11-28-09](https://cloud.githubusercontent.com/assets/1898161/24398542/1dd6dd6e-13aa-11e7-9be1-5fd2067663fe.gif)
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23342</IssueID>
    <Title>Extension Details and Changelog tabs have small area</Title>
    <Description>Steps to Reproduce:

1. Open VS Code Insider
2. Click Extensions button on the far left hand-side
3. Click any extension to display details on the right hand-side of the VS Code
4. You can see Contributions tab's content fit into page
5. You can see Details and Changelog tabs' content doesn't fit into page

_I'm using my Windows 10 with %125 scale, also I zoom level 2 in VS Code_

![vscode-0](https://cloud.githubusercontent.com/assets/118744/24393987/e52aa7a4-13a2-11e7-8e9f-6517bef9c447.png)
![vscode-1](https://cloud.githubusercontent.com/assets/118744/24393988/e52db8ea-13a2-11e7-9854-560777bf9093.png)
![vscode-2](https://cloud.githubusercontent.com/assets/118744/24393986/e5251e06-13a2-11e7-9cf6-7c500c201c90.png)

- VSCode Version: Code - Insiders 1.11.0-insider (c995ecf2e94a00aa7eda81ed842e787b999e83ae, 2017-03-27T06:11:09.027Z)
- OS Version: Windows_NT ia32 10.0.15063
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.6.0|
|EditorConfig|EditorConfig|0.6.2|
|Angular2|johnpapa|2.1.2|
|csharp|ms-vscode|1.8.0|;

---
</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23338</IssueID>
    <Title>Feature request: Lazy QuickPickList</Title>
    <Description>- VSCode Version: 1.10.2
- OS Version: Linux

I would like to have an autocomplete QuickPickList. Is this possible right now? As far as I know the items need to be available in advance right now, right?
I would like to have it for this feature: KnisterPeter/vscode-github#84

I could think it would be a useful addition to other plugins as well.</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23331</IssueID>
    <Title>SCM: list item jumps up in this case</Title>
    <Description>Steps to Reproduce:

0. set zoom level to 1
1. have 1 outgoing change
2. open explorer
3. reload window
4. open SCM viewlet
5. hover over the item

=&gt; it jumps up by some pixels

![untitled](https://cloud.githubusercontent.com/assets/900690/24387848/5f1f31d2-132c-11e7-8e54-6fd37b8d6b2a.gif)

</Description>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23313</IssueID>
    <Title>context menus not getting hooked up to commands in Insiders</Title>
    <Description>i found this because my extension https://github.com/chrisdias/vscode-opennewinstance stopped working when you right click on a folder.  Same problem happens with Erich's npm extension.

- VSCode Version: insiders 1.11.0 c995ecf
- OS Version: MacOS

Steps to Reproduce:

1. clone https://github.com/chrisdias/vscode-opennewinstance, run npm install, open code-insiders
2. but a breakpoint in extension.ts on the line 16 
3. press F5
4. in development instance, open some workspace that has folders in it
5. right click on a folder and choose "Open New Workbench Here"

Result: Nothing happens, breakpoint is not hit, the command is not executed.

6. Open command palette
7. execute command "Open New Workbench Here" 

Result: breakpoint is hit.

However, notice that `e` is `undefined`.  in stable, it comes in as `null`.
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23308</IssueID>
    <Title>Toggle Word Wrap is lost after zooming</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|mssql|ms-mssql|0.3.0|;

---

Steps to Reproduce:

1. Open .txt file with a very long text, to have a good possibility for word wrapping
2. Just wrap a very long text (ALT+Z)
3. Zoom in OR zoom out (Ctrl++ or Ctrl+-)
4. **The bug** is word wrapping state is now lost and words are unwrapped again, but a text should be still wrapped</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23307</IssueID>
    <Title>List Filter Viewlet</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: MacOS 10.12.3

It would be nice to have a list filter viewlet that I can bind to a key command.  This would effectively allow me to filter out a list when focused with vim-like key commands.

The idea is that once invoked, a text area would appear and allow you to enter your filter criteria.  The list would either filter items or move your selection to the appropriate input.

Eg:
I might use the following key commands to navigate to File Explorer, and then filter out the list to a particluar file:

```
// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+h",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus"
  },
  // New (proposed)
  {
    "key": "/",
    "command": "list.showFilterViewlet",
    "when": "explorerViewletVisible &amp;&amp; filesExplorerFocus"
  }
]```</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23289</IssueID>
    <Title>Shortcut for terminal should change focus to it</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Windows

Steps to Reproduce:

1. The shortcut to the terminal, should change focus to the terminal it was already open and should only close it if the focus was already in the terminal.
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23282</IssueID>
    <Title>VSCode launch configuration uses wrong path</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
### Overview
- VSCode Version: 1.10.2
- OS Version: Windows 10
- Node Version: 7.7.1

### Installed Extensions:
abusaidm.html-snippets
AdamCaviness.theme-monokai-dark-soda
akamud.vscode-theme-onedark
alefragnani.Bookmarks
alefragnani.project-manager
anseki.vscode-color
be5invis.vscode-icontheme-nomo-dark
brunnerlivio.materialcolorsnippets
capaj.vscode-standardjs-snippets
christian-kohler.npm-intellisense
christian-kohler.path-intellisense
codezombiech.gitignore
Compulim.indent4to2
cssho.vscode-svgviewer
DavidAnson.vscode-markdownlint
dbaeumer.vscode-eslint
dbankier.vscode-instant-markdown
donjayamanne.githistory
donjayamanne.jquerysnippets
donjayamanne.python
DotJoshJohnson.xml
dzannotti.vscode-babel-coloring
EditorConfig.EditorConfig
eg2.tslint
eg2.vscode-npm-script
emmanuelbeziat.vscode-great-icons
felipecaputo.git-project-manager
flowtype.flow-for-vscode
formulahendry.auto-close-tag
formulahendry.auto-rename-tag
formulahendry.code-runner
hars.CppSnippets
hashhar.gitattributes
HookyQR.beautify
HookyQR.GitHubIssues
hoovercj.ruby-linter
humao.rest-client
ianhoney.task-master
ilich8086.launcher
ithildir.java-properties
joelday.docthis
KnisterPeter.vscode-github
LaurentTreguier.vscode-simple-icons
lukehoban.Go
michelemelluso.code-beautifier
minhthai.vscode-todo-parser
mohsen1.prettify-json
ms-mssql.mssql
ms-vscode.cpptools
ms-vscode.csharp
ms-vscode.PowerShell
msjsdiag.debugger-for-chrome
Orta.vscode-jest
PeterJausovec.vscode-docker
PKief.material-icon-theme
qinjia.view-in-browser
rebornix.Ruby
redhat.java
robertohuertasm.vscode-icons
seanmcbreen.Spell
Shan.code-settings-sync
silverlakesoftware.searchdocsets-vscode
slevesque.vscode-hexdump
steoates.autoimport
steve8708.Align
stevencl.addDocComments
tushortz.java-imports-snippets
tushortz.java-snippets
vector-of-bool.cmake-tools
vilicvane.es-quotes
vsmobile.vscode-react-native
wayou.vscode-todo-highlight
xabikos.JavaScriptSnippets
xabikos.ReactSnippets
zhuangtongfa.Material-theme

__NOTE: Only `msjsdiag.debugger-for-chrome` is enabled within the workspace!__


### Steps to Reproduce:

1. Create a simple project using launch.json and an electron entry file.
2. try to debug main process. 

### What happens?
VSCode resolves the path of the `runtimeExecutable` wrong. Instead of `D:\Data\Desktop\theclassic-desktop/node_modules/.bin/electron.cmd` VSCode creates the path `d:\Data\Desktop\theclassic-desktop/node_modules/.bin/electron.cmd`, which does not exist on the device. Therefore the launch failes with no errors thrown (except an entry within the `CALL STACK` pane under the debug view. It says `No call stack available (vscode_backtrace: Internal Error: undefined is not a function)`. 

My `launch.json` looks like this:
```json
{
  "version": "0.2.0",
  "configurations": [{
    "name": "Debug Main Process",
    "type": "node",
    "request": "launch",
    "cwd": "${workspaceRoot}",
    "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron",
    "windows": {
      "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron.cmd"
    },
    "program": "${workspaceRoot}/src/main-process/main.js"
  }],
  "compounds": []
}
```

Looks like `${workspaceRoot}` lowers the first letter for some reason.
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23278</IssueID>
    <Title>Release Notes ( Insider / Stable ) - When zoom is less than 0 the scroll hidden and paragraphs got overflowed</Title>
    <Description>![ks](https://cloud.githubusercontent.com/assets/17777237/24356998/5eccd8cc-12fc-11e7-9ba4-534a2c4de446.gif)
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23274</IssueID>
    <Title>Go To File includes files that are in search.exclude</Title>
    <Description>- VSCode Version: Code - Insiders 1.11.0-insider (c995ecf2e94a00aa7eda81ed842e787b999e83ae, 2017-03-27T06:05:14.051Z)
- OS Version: Darwin x64 15.6.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.6.2|
|JSDocTagComplete|HookyQR|0.0.2|
|code-settings-sync|Shan|2.6.1|
|sort-lines|Tyriar|1.2.0|
|vscode-svgviewer|cssho|1.4.0|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|tslint|eg2|0.8.1|
|vsc-ember-cli|felixrieseberg|0.3.3|
|phpcs|ikappas|0.7.0|
|prettify-json|mohsen1|0.0.3|
|Theme-MarkdownKit|ms-vscode|0.1.1|
|jscs|ms-vscode|0.1.9|
|typescript-javascript-grammar|ms-vscode|0.0.18|
|autolinting-for-javascript|t-sauer|1.3.0|
|vscode-babel-repl|t-sauer|0.1.2|
|vscode-apielements|vncz|0.6.4|
|gitblame|waderyan|1.3.0|;


---

Steps to Reproduce:

1. Open a workspace which has additional directories in `search.exclude`
2. Open "Go To File" (Cmd + P)
3. Type in something that matches something in an excluded directory
4. Excluded files show up (for example files in `node_modules`)

Until I updated VSCode today, all files from the excluded directories were also excluded from "Go To File".
</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23269</IssueID>
    <Title>URL recognition in terminal</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|python|donjayamanne|0.6.0|
|LogFileHighlighter|emilast|1.1.1|
|CppSnippets|hars|0.0.7|
|MagicPython|magicstack|1.0.7|
|cpptools|ms-vscode|0.10.5|
|PowerShell|ms-vscode|0.11.0|
|typescript-javascript-grammar|ms-vscode|0.0.18|
|vscode-docker|PeterJausovec|0.0.13|
|tcl|rashwell|0.1.0|
|tcl-outline|sheng|0.1.2|
|python-extended-snippets|tushortz|0.0.1|
|change-case|wmaurer|1.0.0|;

My result is:
{'mapId': 'aaa1e3da-fc19-42f4-9a45-87ac463a5136',
 'mapName': 'drawpath-20170327095252',
 'mapType': 1,
 'mapUrl': '**https://10.10.5.189/map.html?t=13a8aa81-ed77-d587-3c45-2c163179d2d0&amp;d=29de3537-4437-440e-bd60-644de268a8d8&amp;id=aaa1e3da-fc19-42f4-9a45-87ac463a5136&amp;maptype=1**',
 'taskId': '240159b6-e44a-483d-b712-6ac6b956faa2'}

When I click the mapUrl value, it navigates 
https://10.10.5.189/map.html?t=13a8aa81-ed77-d587-3c45-2c163179d2d0&amp;d=29de3537-4437-440e-bd60-644de268a8d8&amp;id=aaa1e3da-fc19-42f4-9a45-87ac463a5136&amp;maptype=1%27,

My expectation:
As the URL starts with ', could it ends/rstrips ' in recognition logical?

Thanks,</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23266</IssueID>
    <Title>Feature request: Errors and Warnings in Explorer?</Title>
    <Description>Would it be possible to highlight open editors and files in the explorer window that contain errors or warnings that are matched with the problem matcher?</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23265</IssueID>
    <Title>Git doesnt' load at all when clicking on the Git icon in the activity bar.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Windows 10 64-bit

Steps to Reproduce:

1. Install Git version 2.12.0.windows.1
2. Install Visual Studio Code.
3. Click on the Git icon on the activity bar.

It shows a forever-turning [infinite loading animation](https://gyazo.com/7d1fcb43cfc4c31f06a534e94677c1a8). I can't access git via this icon but I can do it from the console. 


</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23254</IssueID>
    <Title>Terninal content dislocation.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.10.2
- OS Version: Windows 10 - 15063.0

Steps to Reproduce:

1.open terminal window.
2.type any command.
![qq 20170327140354](https://cloud.githubusercontent.com/assets/6050066/24342891/3b646b44-12f6-11e7-8947-16328325373d.png)

</Description>
    <CreatedDate>27/03/2017</CreatedDate>
    <ClosedDate>28/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23227</IssueID>
    <Title>vscode terminal disrespects `cls` command in windows</Title>
    <Description>say i have a batch file that starts with
```
cls 
```
which clears the output buffer of the console

when such batch file is run under vs the `cls` command gets ignored, the console still has all output from the previous commands</Description>
    <CreatedDate>26/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23207</IssueID>
    <Title>Incorrect fuzzy file finding behavior</Title>
    <Description>Here I am searching for the file `wand.ts`. I've already planned to type in `wandts`. I get as far as `wand`, and all is good:

![screen shot 2017-03-25 at 9 10 09 pm](https://cloud.githubusercontent.com/assets/167745/24322913/777687fa-119f-11e7-8322-736a7f97ecb7.png)

However, once I type the `t`, the ordering of these three matches flips. 

![screen shot 2017-03-25 at 9 10 15 pm](https://cloud.githubusercontent.com/assets/167745/24322916/82425eac-119f-11e7-86f1-22afef5c577d.png)

That doesn't make any sense to me. Clearly `wand.ts` should still be the top match because the characters I've typed are the closest together in `wand.ts`. 

-------

VSCode Version: 1.10.2
OS Version: macOS Sierra</Description>
    <CreatedDate>25/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23204</IssueID>
    <Title>Feature request: Search text in terminal</Title>
    <Description>Title really says it all, where by going cmd+f would bring up a search text box. </Description>
    <CreatedDate>25/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23202</IssueID>
    <Title>Why my vscode can't use Toggle Word Wrap</Title>
    <Description>     - VSCode Version: 1.10.2
- Microsoft Windows [ver 10.0.15063]

Steps to Reproduce:

1. hit alt + z ````no work````
2. click  View -&gt; Toggle Word Wrap ````no work````
[this is my html file](http://onb5ufwvw.bkt.clouddn.com/index.html)
when I edit a html file ,I used a base64 format picture into a style tag，all the string was put in a line,but display in some lines.So I wanna to hit alt+z to  solve it，I have also tried the following settings:
````"editor.wordWrap": "on" ````and```` "editor.wordWrap": "off"````， but nothing happend。**Content still wraps!!!**  ![avatar](http://onb5ufwvw.bkt.clouddn.com/GIF.gif)</Description>
    <CreatedDate>25/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23189</IssueID>
    <Title>Undo History &amp; The Journal of Irreproducible Results</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: MacOS Sierra

Steps to Reproduce:

Haha. No way. I tried. It's completely random. Crazy making.

Here is the deal:

I looked at a couple open issues about Undo History in this repo. You guys assert that the history is infinite unless the file is written to by another process. My experience conflicts with that. On several very frustrating occasions, I lose all Undo history right after I save. I do have a process that watches the file and updates the build after each save but that process does not modify the file itself, at least not in any way that I can tell visually or content wise. But even if it turns out to be some crazy thing on my end (maybe one of the tools opens and saves the file as is instead of just reading from it) the fact that an editor loses its Undo history is enough for me and most developers (trust me, when enough run into this) to dump this otherwise great piece of software.

Would you consider being a normal editor like Sublime et al and preserve the Undo history in the same way those editors do? I've never had a single complaint in my whole adult life about something as trivial as this.

Please fix (something, not me)


</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23184</IssueID>
    <Title>Unfocused Tab Is Same Color as Focused Extension Tab Header (With No Tab Border) - Many Themes Affected</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Win 10

Steps to Reproduce:

1. Open VS Code with the Welcome tab open
2. Open one of the extension's tabs by clicking on an extension
3. Select Dark (Visual Studio) theme (as an example) - many other themes have this problem too
4, The extension's header has the same color as the non-focused tab (with no borders either)
5. Switch between the tabs - which tab do you think you are on? It makes me think I am on the Welcome tab and clicking the different colored Extension tab does nothing (because I'm already on that tab).
6. An example of where this confusion does not occur is the the High Contrast theme (because there are borders on the tab and tab with focus gets outlined with a different color) or Red theme (because the header is appropriately not the same color as the unfocused tab).

I can provide screenshots if necessary for clarification.
</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23180</IssueID>
    <Title>Duplicate entries shown in VS Code intellisense whenever type definitions (@types) are installed</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Mac OS Sierra

Steps to Reproduce:

1. Create a folder and open it in VS Code
2. Initialize npm, via npm init
3. Install a few packages, along with its type definition

`npm install --save-dev mocha chai chai-http`
`npm install --save-dev @types/mocha @types/chai @types/chai-http`

4. Create a typescript file, and import one of the modules. 

Current behavior:
VS Code intellisense shows duplicate entries while showing intellisense
&lt;img width="666" alt="vscode intellisenseissue duplicates" src="https://cloud.githubusercontent.com/assets/4255513/24313301/8409a5da-1099-11e7-8e7c-4faf4ba98596.png"&gt;

Expected behavior: 
Avoid duplicate entries while showing intellisense.
(Note: This issue does not happen if @types packages isn't installed)</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23176</IssueID>
    <Title>VS Code Will Not Update</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

VS Code doesn't update.  When I start it, it tells me that it will update the next time it restarts.  I click "Update Now" or click "Later" and close it on my own and it closes but does not ever restart.  When I start it again manually I get the update message again.  I have tried disabling all plugins and still have the issue.

- VSCode Version: Version 1.9.1 (1.9.1)
- OS Version: macOS Sierra 10.12.3 (16D32)

Steps to Reproduce:

1.  Open VS Code.
2.  Click "Update Now" when the update notification appears.
3.  Notice that VS Code closes but never reopens.
4.  Open VS Code again.
5.  Notice the update notification appears again.
6.  GOTO step 2.

I get this error on startup, but after disabling material icons and restarting it goes away but VS Code still won't update.:
![image](https://cloud.githubusercontent.com/assets/22749332/24311325/048da57a-10aa-11e7-8f7c-0fcf50eb911f.png)

I have these extensions installed:
![image](https://cloud.githubusercontent.com/assets/22749332/24311359/306a9b9e-10aa-11e7-972f-e8e81459dbd0.png)

</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23156</IssueID>
    <Title>Sync settings between VS code application</Title>
    <Description>It would be good idea if you provide option to sync settings between VS code between devices.
</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23141</IssueID>
    <Title>Insert Emoji by Ctrl+Cmd+Space in code break the current line</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 16.4.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|1.0.2|
|project-manager|alefragnani|0.13.5|
|theme-desertex|casualjim|0.0.6|
|vscode-eslint|dbaeumer|1.2.8|
|githistory|donjayamanne|0.2.0|
|json-tools|eriklynd|1.0.2|
|prettier-vscode|esbenp|0.11.0|
|flow-for-vscode|flowtype|0.5.0|
|vscode-icon-theme|jtlowe|1.5.0|
|Go|lukehoban|0.6.55|
|addDocComments|stevencl|0.0.8|
|react-beautify|taichi|0.3.0|;


---

Steps to Reproduce:

1. Go to any line of code, I usually insert Emoji in the HTML code or console.log in Javascript
2. Press Ctrl+Cmd+Space to open the Dialog to select Emoji
3. Navigate between Emoji by arrow buttons, press Enter to choose. Sometimes it will break the code, insert more space or comma character, sometimes it just insert exactly that Emoji</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23137</IssueID>
    <Title>Enable keyboard support for meta-delete in Terminal</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Version 1.10.2 (1.10.2)
- OS Version: MacOS 10.11.6 (15G1217)

Steps to Reproduce:

1. Open the Terminal
2. Type `foo bar`
3. Type Option-Delete

Expected result: `bar` will be deleted

Actual result: Nothing happens

Compare to what happens in Mac OS Terminal.app.

</Description>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23114</IssueID>
    <Title>Windows-specific: OS shortcuts to launch new instance not working</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|cake-vscode|cake-build|0.6.0|
|csharp|ms-vscode|1.6.2|
|code-settings-sync|Shan|2.4.3|;


---

Steps to Reproduce:

1. Launch Visual Studio Code on Windows
2. With it running in the Windows Task Bar, Shift+Click the icon to launch a new instance (Additionally, Win+Shift+{# index in Task Bar})

Expected:

I was hoping it would start a new VS Code window/instance (similar to how it works for VS2017, Explorer, Chrome, Notepad, etc.)

Actual:

Gives focus to previously launched VS Code instance

Workaround:

Once previous instance is given focus, you can Ctrl+Shift+N to do what the Windows shortcut would normally do.</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23112</IssueID>
    <Title>Regex or normal find support on DEBUG console and OUTPUT window</Title>
    <Description>- VSCode Version: Insider
- OS Version: OS X Sierra

Is there a way to do regex or normal search on debug console or output window?</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23108</IssueID>
    <Title>Debug controls cover editor tabs!</Title>
    <Description>I find that I'm constantly moving the debug controls around to see the editor tabs!
It's really annoying!

- VSCode Version: Version 1.10.2 (1.10.2)
- OS Version: OSX

Steps to Reproduce:

1. Open a bunch of tabs
2. Start debugging
3. Having multiple debug sessions running increases the problem because the controls become wider and cover even more tabs! I have multiple sessions running a lot for server, message queue and client side debugging.

I would prefer to have the debug toolbar in the debug console (beside the clear console button) 

Or the debug sidebar (above the call stack would make logical sense grouping things related where the debugger currently is).

Or have it beside the editor tabs not overlaying them but this isn't ideal either because it reduces the space available for tabs.

Or overlay the status bar at the bottom! There's tons of blank space there in the middle and the status bar already turns orange when a debug session is active. 

Or just just add a toolbar row at the top and shift the top of the editor tabs/sidebar down

Ideally there would be customizable preferences for how to display the debug controls so you could have it in any or all of these places!

</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23095</IssueID>
    <Title>Markdown preview window reduces in size when UI is zoomed</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.7.0|
|vscode-eslint|dbaeumer|1.2.7|
|gitlens|eamodio|2.12.2|
|tslint|eg2|0.8.1|;


---

Steps to Reproduce:

1. Set zoom to 100% (e.g. press Ctrl+NumPad0)
2. Open a Markdown document in Preview mode (e.g. Release Notes)
3. Increase the zoom level by pressing Ctrl+=
4. Observe that a large blank area has appeared to the right and bottom of the preview
5. Increase the zoom level again by pressing Ctrl+=
6. Observe that the blank area has increased in size

The preview should occupy the whole client area of the tab, with no margin.

100% zoom:
![image](https://cloud.githubusercontent.com/assets/16961013/24248555/d62fd15e-0fc7-11e7-9e87-5cd1eb603da0.png)

After step 3:
![image](https://cloud.githubusercontent.com/assets/16961013/24248627/149db348-0fc8-11e7-95cb-8cd5f47c617d.png)

After step 5:
![image](https://cloud.githubusercontent.com/assets/16961013/24248650/23608d4c-0fc8-11e7-8333-02ee76f4ad3d.png)

</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23084</IssueID>
    <Title>[Terminal] Select all does not work in terminal output</Title>
    <Description>Hi,

- VSCode Version: 1.10.2
- OS Version: macOS

Steps to Reproduce:

1. run e.g. tests in terminal
2. focus terminal and press Cmd+a
3. profit...nothing is selected...

Thanks.
</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23083</IssueID>
    <Title>[Terminal] Searching in terminal output does not work</Title>
    <Description>Hi,

- VSCode Version: 1.10.2
- OS Version: macOS

Steps to Reproduce:

1. run e.g. tests in terminal
2. focus terminal and press cmd + f...write a text...
3. profit...it does not search in terminal output.

Thanks.
</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23076</IssueID>
    <Title>Remote editing by SSH?</Title>
    <Description>Hi, is there any way to edit the files on the remote server by SSH login? I usually use the terminal emulator such as Xshell. But it will be wonderful if vscode integrates this function.
</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23074</IssueID>
    <Title>Error: Failed to execute git</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: deepin 15.3

Steps to Reproduce:

1. Open a directory with no "git init" or any other git operating.
2. See bug.

Even if I clicked off, it will still remind me.
If the directory has .git subdirectory, it will not show.

Steps to fix:
**Change the system language to English.**

![20170323143030](https://cloud.githubusercontent.com/assets/16589958/24234990/059e6cda-0fd6-11e7-926f-b4189d19f199.png)



</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23072</IssueID>
    <Title>interface scaling problem</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-color|anseki|0.2.5|
|vscode-svgviewer|cssho|1.4.0|
|vscode-icons|robertohuertasm|7.4.0|
|code-settings-sync|Shan|2.6.1|
|stylelint|shinnn|0.23.0|
|Material-theme|zhuangtongfa|2.3.3|
|html-css-class-completion|Zignd|1.0.3|;


---
My workscreen has limits in some views/settings

Steps to Reproduce:
I use  

"window.zoomLevel": 1,

setting to set scale up (15.6 inch 1920*1080 screen)

1. That`s how it looks: 
https://yadi.sk/i/Brlk-68m3GGFwi 
https://yadi.sk/i/3hT0xBAH3GGG5B</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23071</IssueID>
    <Title>Wrong type of comments for React JSX property</Title>
    <Description>VSCode Version: 1.10.2
OS Version: macOS 10.12.3
Steps to Reproduce:

position cursor on a line of JSX property
press command + / to comment out the line
It will insert {/* */} instead of //

I think this issue relates [Wrong type of comments for React code](https://github.com/Microsoft/vscode/issues/6461)
It works correctly for previous version and it may break after 1.9.0 with this commit: [[jsx][tsx] Wrong type of comments for React code. Fixes](https://github.com/Microsoft/vscode/commit/d826ad6e4fd52d9997fd144531c952af13218146)
</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23067</IssueID>
    <Title>从网络服务器打开文件夹，ctrl+p出来的文件会有两种情况，分别是\\192.168.1.2\NAME\mydir\*和\\192.168.1.2\name\mydir\*从而导致打开了两个不一样的文件，会造成不同步</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|shell|bbenoist|0.3.0|
|GBKtoUTF8|bukas|0.0.2|
|python|donjayamanne|0.6.0|
|tortoise-svn|fantasytyx|0.1.1|
|cpptools|ms-vscode|0.10.4|
|md2pdf|qinjia|0.0.1|
|vscode-icons|robertohuertasm|7.4.0|
|Spell|seanmcbreen|0.9.1|
|guides|spywhere|0.7.0|;


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23062</IssueID>
    <Title>Scrolling with touchpad behaves like pressing up and down arrow keys</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Windows 10

Steps to Reproduce:

I have a laptop with touchpad and scrolling (by touching the touchpad with two fingers and sliding them vertically) file content, files list, terminal window or anything inside VSCode behaves like I am pressing an holding up/down arrow keys. This behavior is not only annoying but it doesn't allow me to scroll say terminal window, because scrolling simply shows the list of last run commands - the same as if you press up arrow key multiple times. Horizontal scrolling behaves as left/right arrow keys - instead of scrolling horizontally, I move the caret. I have a wireless Microsoft mouse and when I use it for scrolling, everything works a expected. When I use my touchpad to scroll in the same way any other application like Chrome, Notepad, whatever, it behaves normally (the caret stays on its location and only the view is scrolled - actually I can normally scroll this GitHub's text area I am writing the issue text in). Does anyone have such problem with VSCode ? Could it because of touchpad drivers (I think mine is "ELAN Pointing Device") ?

List of extensions:
1 Debugger for Chrome 2.7.0
2. Git History (git log) 0.2.0
3. TSLint 0.8.1
4. vscode-icons 7.4.0

I tried to disable all extensions and reload VSCode but nothing changed.

The video below is made without using arrows keys - only scrolling functionality of my touchpad.


![vscode-scroll-issue](https://cloud.githubusercontent.com/assets/7610713/24226770/28c66286-0f71-11e7-921d-90efcfff4053.gif)
</Description>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23060</IssueID>
    <Title>Code helper constantly using over 100% of CPU</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T13:56:35.908Z)
- OS Version: Darwin x64 15.6.0
- Extensions: none
---

Steps to Reproduce:

1. Open a project with ~400 files

&lt;img width="563" alt="screen shot 2017-03-22 at 4 41 08 pm" src="https://cloud.githubusercontent.com/assets/619673/24225599/995d7118-0f1e-11e7-87e5-c3cf4eb37d0a.png"&gt;

```
ps aux | grep 36573
36573 108.0 19.6  8238860 3289564   ??  R     3:53PM  63:17.18 /Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap --type=watcherService
```</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23043</IssueID>
    <Title>Treat file-reload as an undoable "edit".</Title>
    <Description>- VSCode Version: 1.10.2 8076a19fdcab7e1fc1707952d652f0bb6c6db331
- OS Version: N/A

Steps to Reproduce:

1. Have a file open in VSCode.
2. Change the file outside VSCode.
3. In VSCode, the file reloads automatically.
4. Realise that you didn't mean to make that change.
5. Apply palm to face.

Some other editors treat the reloading of the file as an edit. This gives the careless user a reprieve if they accidentally blow away work on the command line (`git checkout .`, anyone?). They can simply invoke undo to get back to the state the file was in before the mishap.

This would also preserve undo history in the event of a reload.</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23042</IssueID>
    <Title>NPE in terminal if I start a task without having the terminal visible</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Master

```
index.js:39 TypeError: Cannot read property 'closeMessage' of undefined
    at TerminalInstance._sendPtyDataToXterm (terminalInstance.ts:491)
    at ChildProcess.&lt;anonymous&gt; (terminalInstance.ts:198)
    at emitTwo (events.js:111)
    at ChildProcess.emit (events.js:191)
    at process.nextTick (internal/child_process.js:744)
    at _combinedTickCallback (internal/process/next_tick.js:67)
    at process._tickCallback (internal/process/next_tick.js:98)
```</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23033</IssueID>
    <Title>[New Feature Request] A way to send your code to a printer.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Win 10 Enterprise v. 1607 b. 14393.576

It would be great to have a way to send your code to a printer.  Looked at the keybindings...nothing.  Googled it...nothing.  Searched the product....nothing.  Please add this functionality soon.  (i.e. navigate from File in Menu to "Print &lt;name of file&gt;...".

Thanks!
@MrAnthCool
</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>22/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23027</IssueID>
    <Title>Auto detect encoding by using uchardet</Title>
    <Description>There are some issues like #22564  that can be solved by using it. </Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23025</IssueID>
    <Title>Integrated terminal display abnormal</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.15058
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-database|bajdzis|1.2.0|
|plsql|casian|0.0.3|
|vscode-eslint|dbaeumer|1.2.8|
|python|donjayamanne|0.6.0|
|java-debug|DSnake|0.0.2|
|vscode-html-css|ecmel|0.0.33|
|theme-material-theme|jprestidge|1.0.1|
|MagicPython|magicstack|1.0.7|
|material-icon-theme|PKief|2.0.1|
|java|redhat|0.0.13|;


---

Steps to Reproduce:

1. Just take a look at the picture below:
![image](https://cloud.githubusercontent.com/assets/23732676/24203223/1601f208-0f50-11e7-83f4-07cf051baf21.png)

I just upgrade my OS version, maybe that is the reason. Before that, everything is fine.
</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>22/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>23002</IssueID>
    <Title>INSERT key doesn't work</Title>
    <Description>In most editors, the INSERT key will toggle insert/overwrite.

You may think nobody actually uses that, but it's a standard feature in practically every text-editor since the dawn of time, and it does have it's uses.

Typically the cursor changes from a vertical line to a block when overwrite is toggled on.
</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>22/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22988</IssueID>
    <Title>Word Wrap turned of but content still wraps</Title>
    <Description>- VSCode Version: 1.11.0-insider (207686d)
- OS Version: win10

String of content wraps content when longer than viewport even when wrapping set to off

Steps to Reproduce:

1. Get a file with a long string of content 
2. in my case (6475 chars)
3. turn off word wrapping

Content still wraps!!

![image](https://cloud.githubusercontent.com/assets/8544875/24180739/c8558604-0f0a-11e7-95da-db1ea923e5a7.png)

</Description>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22972</IssueID>
    <Title>Feature Request: Renaming of Integrated Terminal instances</Title>
    <Description>Feature Request: Being able to differentiate between terminal instances at a glace is a huge time  saver. 
</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>22/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22959</IssueID>
    <Title>alt + tab shows open tabs in one pane </Title>
    <Description>why alt + tab only show list in opne pane like right or left unlike visual studio which shows all the open tabs
- VSCode Version: 1.10.2
- OS Version: windows 10

Steps to Reproduce:

1.open multiple table.
2. use split editor.
3. now press alt tab , you can't see the open tabs in other split window
</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22949</IssueID>
    <Title>Terminal size content width limited</Title>
    <Description>Latest insiders.
I wonder why on wide screen there is an empty space on the right of the terminal pane?
It seems I noticed this after update on latest insiders.


![image](https://cloud.githubusercontent.com/assets/736697/24144481/33b169de-0e4f-11e7-916a-40ca549a9531.png)

It is not very convenient when use splits for terminal (tmux/nvim).
</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22939</IssueID>
    <Title>How can I use my javascript snippet for jsx?</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|one-monokai|azemoh|0.2.4|
|EditorConfig|EditorConfig|0.3.4|
|path-autocomplete|ionutvmi|1.4.1|
|Go|lukehoban|0.6.55|
|sublime-keybindings|ms-vscode|2.0.1|
|vetur|octref|0.5.6|
|theme-tinaciousdesign|tinaciousdesign|0.2.4|
|Material-theme|zhuangtongfa|2.3.3|;
</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22936</IssueID>
    <Title>The warning of "The Typescript language service died unexpectedly 5 times in the last 5 Minutes" keeps flashing on top of the window in the Visual Studio Code</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22932</IssueID>
    <Title> Cannot read property 'reason' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;cc5915e6-9f36-552a-b980-dcec91d217be&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.10.2&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'reason' of undefined&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L324:45 (reason)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L324:45 (reason))&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L185:8 (toggleExceptionWidget)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L185:8 (toggleExceptionWidget))&lt;br /&gt;[/vs/base/common/event.ts#L217:12 (apply)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/event.ts#L217:12 (apply))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L315:9 (func)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L315:9 (func))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L182:4 (safeInvoke1Arg)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L182:4 (safeInvoke1Arg))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L201:8 (_emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L201:8 (_emitToSpecificTypeListeners))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L216:8 (_emitEvents)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L216:8 (_emitEvents))&lt;br /&gt;[/vs/editor/common/commonCodeEditor.ts#L229:7 (emit)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/editor/common/commonCodeEditor.ts#L229:7 (emit))&lt;br /&gt;[/vs/workbench/browser/parts/editor/textResourceEditor.ts#L103:14 (setModel)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/browser/parts/editor/textResourceEditor.ts#L103:14 (setModel))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22931</IssueID>
    <Title> Cannot read property 'length' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;5f37060d-2015-46bd-b152-f68a02aee705&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.10.2&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'length' of undefined&lt;br /&gt;[/vs/base/common/strings.ts#L369:14 (length)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/strings.ts#L369:14 (length))&lt;br /&gt;[/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L213:38 (equalsIgnoreCase)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L213:38 (equalsIgnoreCase))&lt;br /&gt;[/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L164:23 (getActions)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L164:23 (getActions))&lt;br /&gt;[/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L90:8 (update)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/browser/debugActionsWidget.ts#L90:8 (update))&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/callbackList.ts#L63:26 (apply))&lt;br /&gt;[/vs/base/common/event.ts#L118:26 (call)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/event.ts#L118:26 (call))&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugService.ts#L456:25 (fire)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugService.ts#L456:25 (fire))&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugService.ts#L262:8 (setStateAndEmit)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugService.ts#L262:8 (setStateAndEmit))&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/callbackList.ts#L63:26 (apply))&lt;br /&gt;[/vs/base/common/event.ts#L118:26 (call)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/event.ts#L118:26 (call))&lt;br /&gt;</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22929</IssueID>
    <Title> Cannot read property 'reason' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;58473b6c-3c64-67b8-c310-05a447cbb560&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.10.2&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'reason' of undefined&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L324:45 (reason)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L324:45 (reason))&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L185:8 (toggleExceptionWidget)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/debug/electron-browser/debugEditorContribution.ts#L185:8 (toggleExceptionWidget))&lt;br /&gt;[/vs/base/common/event.ts#L217:12 (apply)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/event.ts#L217:12 (apply))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L315:9 (func)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L315:9 (func))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L182:4 (safeInvoke1Arg)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L182:4 (safeInvoke1Arg))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L201:8 (_emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L201:8 (_emitToSpecificTypeListeners))&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L216:8 (_emitEvents)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/base/common/eventEmitter.ts#L216:8 (_emitEvents))&lt;br /&gt;[/vs/editor/common/commonCodeEditor.ts#L229:7 (emit)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/editor/common/commonCodeEditor.ts#L229:7 (emit))&lt;br /&gt;[/vs/workbench/parts/files/browser/editors/textFileEditor.ts#L137:14 (setModel)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/src/vs/workbench/parts/files/browser/editors/textFileEditor.ts#L137:14 (setModel))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete)](https://github.com/microsoft/vscode/blob/8076a19fdcab7e1fc1707952d652f0bb6c6db331/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1170:0 (onComplete))&lt;br /&gt;</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>21/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22923</IssueID>
    <Title>tab键快速写代码有问题</Title>
    <Description>- VSCode Version: Code 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331, 2017-03-08T14:02:52.799Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|vscode-html-css|ecmel|0.0.33|
|mithril-emmet|FallenMax|0.6.1|
|beautify|HookyQR|1.0.2|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.2|
|vscode-icons|robertohuertasm|7.4.0|
|D3Snippets|yoyo|0.1.11|;


---

Steps to Reproduce:

1.！+tab键
2.script +tab键此时script不自动闭合，调到title一栏</Description>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>29/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22904</IssueID>
    <Title>Line thickness (cursor, indent guides) changes randomly when zoomed in/out</Title>
    <Description>- VSCode Version: 1.10.2 (8076a19fdcab7e1fc1707952d652f0bb6c6db331)
- OS Version: macOS Sierra 10.12.3

Steps to Reproduce:

1. Zoom out (in the settings it should say `"window.zoomLevel": -1` or similar).
2. Move the cursor around in a text file. The cursor will vary randomly between 1px and 2px in thickness (2 and 4 retina pixels).

![cursor thickness](https://cloud.githubusercontent.com/assets/524783/24114717/1bd16ff0-0d99-11e7-9ea9-b594abe8375d.gif)</Description>
    <CreatedDate>20/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22895</IssueID>
    <Title>Markdown H1 (===) and H2 (---) should bold and/or otherwise highlight the text above it.</Title>
    <Description>- VSCode Version: 1.10.2
- OS Version: Win7-64

Steps to Reproduce:

1. Select Markdown as Language Mode
2. Write a heading and then use H1 (===) or H2 (---) for the line below.
</Description>
    <CreatedDate>20/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22891</IssueID>
    <Title>[loc][Query][VSCode] Localizability of "inspector"</Title>
    <Description>Hi, we have a question from a translator. Could you help please?

**Source:**
Show the async calls that led to the current call stack. 'inspector' protocol only.

**File Name:**
 #package.nls.resx

**Resource ID:**
".resx", 0; "node.showAsyncStacks.description"

**Query:**
Is "inspector" localizable? Is it the same as in this issue #22531? Please confirm. Thanks!</Description>
    <CreatedDate>20/03/2017</CreatedDate>
    <ClosedDate>20/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22889</IssueID>
    <Title>Keyboard shortcuts not updated when keyboard language is changed</Title>
    <Description>- VSCode Version: 1.10.2
- OS Version: OSX 10.11.6

Steps to Reproduce:

1. Init VSCode and Change the keyboard language.
2. Use a keyboard shortcut that is different from the previous language.

For example I have a Portuguese keyboard and an English one. If I change the keyboard language from Portuguese to English `CMD + /` doesn't work to comment code until I restart VSCode.
</Description>
    <CreatedDate>20/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22885</IssueID>
    <Title>[RFC] Show Problems Panel API</Title>
    <Description>- VSCode Version: 1.10.2
- OS Version: OSX 10.12.3

Currently, we can always show `OUTPUT`, `DEBUG CONSOLE` and `TERMINAL` panel using APIs.

![image](https://cloud.githubusercontent.com/assets/6234553/24105750/d4232298-0dc0-11e7-97fa-6404676c74d2.png)

But for the `PROBLEMS` panel, we can only display it manually.

![image](https://cloud.githubusercontent.com/assets/6234553/24105826/1492b74e-0dc1-11e7-8a99-1fa891667d29.png)

So is there any existing API to show the `PROBLEMS` panel, or maybe VSCode can support it in the future?</Description>
    <CreatedDate>20/03/2017</CreatedDate>
    <ClosedDate>27/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>22862</IssueID>
    <Title>"files.autoSave": "onFocusChange"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.2
- OS Version: Linux Ubuntu 16.04

Problem:
`"files.autoSave": "onFocusChange"` not working correctly. I write something in file, I switch to another file, but it will not be auto-saved. For e.g. I change code in `server.js`, I switch to `client.js` it will not be saved. As I read here https://github.com/Microsoft/vscode/issues/353, @bpasero said:

&gt; you switch to another file or close the file
&gt; you quit the app
&gt; you move to another app so that code looses focus

P.S. It only works if I change to Untitled document which is created, but not saved and only for the first time.

I don't know if it's problem, but I will be really in love with such function.
</Description>
    <CreatedDate>19/03/2017</CreatedDate>
    <ClosedDate>20/03/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21566</IssueID>
    <Title>Collapse all children in explorer tree?</Title>
    <Description>- VSCode Version: 1.10.0
- OS Version: 10.12.3

It would be most convenient if I could right-click a folder in the explorer tree and choose "collapse all children".  

Many times, over the course of the day, I have opened many folders and subfolders.  This makes it difficult to focus/locate what I am currently working on.  I need to close each folder and its parent(s) in turn.

MacOS' Finder has the ability to collapse a folder and all child folders by option-click on the disclosure
 triangle, as in

![feb-28-2017 12-34-44](https://cloud.githubusercontent.com/assets/835148/23416821/6a1bc184-fdb2-11e6-8135-7e32482d95bb.gif)

As you can see when I re-open it, the child folder had been closed along with its parent.

I would love to be able to do this with my main "app" folder, and then open it and open the child module I need to actually work on.
</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21558</IssueID>
    <Title>Feature Request: Built-in NuGet Package Manager</Title>
    <Description>
A feature that is important but is missing is the NuGet Package Manager, this will make the application better.</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21545</IssueID>
    <Title>VSCode crashes when closing developer tools at the second time</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:

1. toggle developer tools and close.
2. toggle developer tools and close, then VS crashes.

In addition, sending usage statistics always seem to fails in my place...
![12](https://cloud.githubusercontent.com/assets/11925432/23396691/ed7c0b98-fdcf-11e6-9b70-14cebd0602a6.jpg)
[VSCode crashes when closing developer tools.zip](https://github.com/Microsoft/vscode/files/806039/VSCode.crashes.when.closing.developer.tools.zip)
</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21538</IssueID>
    <Title>proxy not working</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:44:55.542Z)
- OS Version: Linux x64 4.4.0-64-generic
- Extensions:

---

Steps to Reproduce:

1. set `http_proxy`, `https_proxy` environment variables
1. open VSCode `1.9.1`, click `Extensions` -&gt; `Show Popular Extensions`, no result 
1. open VSCode `1.6.1`, click `Extensions` -&gt; `Show Popular Extensions`, extension list displayed

</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21537</IssueID>
    <Title>Debug toolbar and tab row overlap</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (40fecfaa77f01672e8a147be71f6f7ccb9cf8a12, 2017-02-27T14:09:29.088Z)
- OS Version: Darwin x64 16.4.0
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|theme-monokai-dark-soda|AdamCaviness|0.0.5|
|EditorConfig|EditorConfig|0.3.4|
|beautify|HookyQR|0.7.4|
|vscode-docker|PeterJausovec|0.0.11|
|vscode-nsp|adambaldwin|1.0.1|
|vscode-caniuse|akamud|0.5.3|
|Bookmarks|alefragnani|0.10.2|
|project-manager|alefragnani|0.13.2|
|vscode-database|bajdzis|1.2.0|
|path-intellisense|christian-kohler|1.2.0|
|vscode-eslint|dbaeumer|1.2.5|
|vscode-instant-markdown|dbankier|1.0.0|
|githistory|donjayamanne|0.1.5|
|tslint|eg2|0.8.1|
|vscode-npm-script|eg2|0.1.8|
|vscode-great-icons|emmanuelbeziat|1.1.44|
|git-project-manager|felipecaputo|1.0.1|
|flow-for-vscode|flowtype|0.5.0|
|rest-client|humao|0.12.1|
|Scala|itryapitsin|0.1.7|
|docthis|joelday|0.3.11|
|Go|lukehoban|0.6.53|
|prettify-json|mohsen1|0.0.3|
|debugger-for-chrome|msjsdiag|2.5.3|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|7.2.0|
|sass-indented|robinbentley|1.3.0|
|preview-vscode|searKing|1.1.1|
|stylelint|shinnn|0.22.0|
|gitblame|waderyan|1.3.0|
|JavaScriptSnippets|xabikos|1.4.0|
|vscode-open-in-github|ziyasal|1.2.3|;


---

Steps to Reproduce:

1. Open multiple tabs from your project
2. Start a debugging session
3. Notice that the debug toolbar overlaps with the tab bar.
4. We can only move the toolbar left or right but we cannot get rid of the overlap.

Expectation
It may not be an issue to have a fixed mini toolbar above the tab-bar. Launching a debug session, stopping, restarting, step-over, etc can be buttons on there.</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21532</IssueID>
    <Title>反复弹出信息：在过去5分钟，TypeScript语言服务以外中止了5次</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|jquerysnippets|donjayamanne|0.0.1|
|csharp|ms-vscode|1.7.0|
|vscode-icons|robertohuertasm|7.3.0|
|JavaScriptSnippets|xabikos|1.4.0|

---

Steps to Reproduce:

1.Open a .js file with VS Code
2.The top menu pop a message "in the last 5 minutes，TypeScript language service has abort 5 “ again and again</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21530</IssueID>
    <Title>Create-React-App Waring</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.1.0|
|vscode-theme-onedark|akamud|1.3.1|
|ab-snippets|AlbertoBasalo|0.1.2|
|vscode-express|Compulim|0.0.5|
|python|donjayamanne|0.5.8|
|vscode-npm-script|eg2|0.1.8|
|vscode-npm|fknop|3.3.0|
|theme-atom-one-dark|freebroccolo|0.0.1|
|vscode-javac|georgewfraser|0.0.23|
|code-file-nav|jakelucas|0.7.2|
|NodeAssertionSnippets|jaymorrow|0.1.0|
|vscode-exec-node|miramac|0.2.8|
|cpptools|ms-vscode|0.10.1|
|csharp|ms-vscode|1.7.0|
|debugger-for-chrome|msjsdiag|2.5.5|
|ejs-language-support|QassimFarid|0.0.1|
|java|redhat|0.0.10|
|vscode-icons|robertohuertasm|7.3.0|
|ReactSnippetsStandard|TimonVS|1.1.0|
|python-extended-snippets|tushortz|0.0.1|
|jsx|TwentyChung|0.0.1|
|jsx-snippets|TwentyChung|0.0.1|
|expresssnippet|vladmrnv|0.1.0|
|vscode-react-native|vsmobile|0.3.1|
|JavaScriptSnippets|xabikos|1.4.0|
|ReactSnippets|xabikos|1.2.1|

---

Steps to Reproduce:

1. Use create-react-app 
2. Start vscode, warning ‘在过去5分钟内，TypeScript语言服务意外中止了5次。’</Description>
    <CreatedDate>28/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21523</IssueID>
    <Title>Error squigglies don't appear for zero-length diagnostics on empty line</Title>
    <Description>See below:
![image](https://cloud.githubusercontent.com/assets/762848/23382903/e40c5a86-fcf8-11e6-890b-451291c996e4.png)
</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21518</IssueID>
    <Title>signatureHelp gives buggy results when one parameter is a subset of another</Title>
    <Description>- VSCode Version: 1.9.1, 1.10.0
- OS Version: Windows (probably the Linux/Mac too)

Steps to Reproduce:

1. Install the C++ extension (should be reproduceable with other extensions that implement the signatureHelp protocol).
2. Create a test.cpp file.
3. Enter text: int test(int a, int aa);
4. Save the file.
5. Type: test(

Bug: The results are buggy (see the screenshot) -- it shows "int test(int a, int aint aint aa)" with the 2nd "int a" underlined. It appears to be a VS Code bug. The expected result is "int test(int a, int aa)" with the first "int a" underlined. You get correct results if the paramaters are not a subset of each other. In other words, the bug repros because "int a" is a subset of "int aa". The result we send back to VS Code is:

{
    "jsonrpc": "2.0",
    "id": 19,
    "result": {
        "signatures": [
            {
                "label": "int test(int a, int aa)",
                "parameters": [
                    {
                        "label": "int a"
                    },
                    {
                        "label": "int aa"
                    }
                ]
            }
        ],
        "activeSignature": 0,
        "activeParameter": 0
    }
}

![image](https://cloud.githubusercontent.com/assets/19859882/23376480/179497e6-fce1-11e6-9112-2f0e091a4c58.png)
</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21510</IssueID>
    <Title>SCM preview does not support multi-select</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (40fecfaa77f01672e8a147be71f6f7ccb9cf8a12, 2017-02-27T14:13:35.653Z)
- OS Version: Linux x64 4.8.0-38-generic
- Extensions: none
---

This is in the smoke test https://github.com/Microsoft/vscode/wiki/Smoke-Test#git</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21508</IssueID>
    <Title>Strange theme background color</Title>
    <Description>- VSCode Version: 
- OS Version: macOs Sierra 10.12.3 macbook 13'

Steps to Reproduce:

1.  Install VS on mac

![alt text](https://i.stack.imgur.com/roGZI.jpg)</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21504</IssueID>
    <Title>Quick fix: select first entry by default</Title>
    <Description>I think it would make some scenarios easier to type if the first suggestion of a quick fix was selected by default in the context menu. That way for many fixes all you need to type is `Cmd+.` and `Enter`.
</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21502</IssueID>
    <Title>Debug bar gets stuck out of screen bounds on the left</Title>
    <Description>- VSCode Version: 1.9
- OS Version: Windows 7

Steps to Reproduce:

1. Start a debugging session
2. Drag the debug bar to the far left off the editor screen

Restarting VSCode doesn't reset it.

![image](https://cloud.githubusercontent.com/assets/5769148/23366480/7d92d75a-fd0f-11e6-83f6-a3c36c540cde.png)</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21483</IssueID>
    <Title>TypeScript returns stale code actions</Title>
    <Description>related to #21060

In the aforementioned issue TypeScript return a stale code action suggesting to add an import even though it has been added already. I assume this is because diagnostics computation has been scheduled but has not yet happened. The TS code action provider should synchronise with that actual source of code action.</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21477</IssueID>
    <Title>Snippets should work with JSX DOM</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: Windows 10
- TypeScript Version: 2.2.1

Steps to Reproduce:

1.  Install snippets https://marketplace.visualstudio.com/items?itemName=bang.antd-snippets
2.  Create a React Component test.tsx file,

Or see the gif here.

![preview](https://cloud.githubusercontent.com/assets/433259/23354736/87607848-fd0d-11e6-97fc-c3733b984856.gif)

</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21474</IssueID>
    <Title>Provide a way for extensions to get a list of the opened editors</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (b2a55bd66eb60af11c60ddd61b7581538b216051, 2017-02-24T20:30:00.778Z)
- OS Version: Darwin x64 16.4.0

I'm building a new extension [Restore Editors](https://marketplace.visualstudio.com/items?itemName=eamodio.restore-editors) to be able to save the current set of editors to be re-opened at a later time. Currently I am employing some [serious hackery](https://github.com/eamodio/vscode-restore-editors/blob/master/src/documentManager.ts#L57) to get a list of the opened editors.

It would be great if there was an api that an extension could use to get at that information. Ideally this would provide even more information than is accessible now -- in addition to the `uri` and `viewColumn`, it would be great if there was an `position` that would tell the order of the editors inside a column.</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21465</IssueID>
    <Title>A better way to provide multi-line Snippets support</Title>
    <Description>ps: I'm not  excellent in English, but I'll try to make it clear.

now, we add custom snippets use json file, for example, add a for loop snippets:
```json
"For Loop": {
        "prefix": "for",
        "body": [
            "for (var ${1:index} = 0; ${1:index} &lt; ${2:array}.length; ${1:index}++) {",
            "\tvar ${3:element} = ${2:array}[${1:index}];",
            "\t$0",
            "}"
        ],
        "description": "For Loop"
    }
```
In `body`, we need add useless quotes and `\t` for good format, I think this is not good enough.

But if we use some Notations like  [CSON]("https://github.com/bevry/cson"), we write snippets will like this:
```
'For Loop':
    'prefix': 'for'
    'body': """
        for (var ${1:index} = 0; ${1:index} &lt; ${2:array}.length; ${1:index}++) {
            var ${3:element} = ${2:array}[${1:index}];
            $0
            }
"""
```
I think this is a better way to write snippets.
or we just use it like
#15140





</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21464</IssueID>
    <Title>input method bar misplaced on 4K resoluation</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
HiDPi
OS Version: Ubuntu 16.10

Steps to Reproduce:

1. Install vscode
2. input some Chinese chars
![screenshot from 2017-02-27 10-49-54](https://cloud.githubusercontent.com/assets/17548436/23347078/8e5eee3c-fcda-11e6-8cfc-8616bb8ee965.png)
![screenshot from 2017-02-27 10-46-58](https://cloud.githubusercontent.com/assets/17548436/23347085/9917e3ba-fcda-11e6-9a69-ad14dee063df.png)

The problem maybe cause by the window scaling of the gnome 
</Description>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21449</IssueID>
    <Title>Order folder by groups</Title>
    <Description>It would be great to be able to order the folders by groups.</Description>
    <CreatedDate>26/02/2017</CreatedDate>
    <ClosedDate>26/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21444</IssueID>
    <Title>Auto-Import should use tslint's quote setting</Title>
    <Description>Some folks use single quotes, some double quotes. This feature should look at the selected setting in `tslint.json`

```
    "quotemark": [
      true,
      "single"
    ],
```

- VSCode Version: Insiders 1.10.0
- Mac OSX

Steps to Reproduce:

1. use auto import

![auto import](https://cloud.githubusercontent.com/assets/1202528/23340160/7f1d6894-fbff-11e6-828c-51ce2c2f950c.gif)


</Description>
    <CreatedDate>26/02/2017</CreatedDate>
    <ClosedDate>26/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21431</IssueID>
    <Title>open visual stadio code  ,CPU will 100%</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version:1.9.1
- OS Version:window 10 ent or windows server 2012 R2 datacenter

Steps to Reproduce:

1.when i create my development virual mathine in windows server 2012 R2 with hyper-v ,and Install window 10 or windows server 2012 R2 at virual mathine ,then Install visual stadio code ,successful
2.when i open the  visual stadio code application in window 10 or windows server 2012 R2 virual mathine,the CPU will go 100%
</Description>
    <CreatedDate>26/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21414</IssueID>
    <Title>proposal for termianl UI</Title>
    <Description>this is just a proposal for terminal ui

this UI user can be rename tab for quick find and access 
and add close button on tab section

![vsc terminal](https://cloud.githubusercontent.com/assets/1549069/23329870/5c93e036-fb56-11e6-9855-1a91ec5fbc1e.jpg)
</Description>
    <CreatedDate>25/02/2017</CreatedDate>
    <ClosedDate>25/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21408</IssueID>
    <Title>I'am sorry about that bug of extensions</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions:1.9.1

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1.download the extensions maybe happened somgthing wrong,it tells me that "unable to verify the first certificate"
2. my first version is not like that happened,although i have tried for many times.do you have some suggestion?  Thank you!</Description>
    <CreatedDate>25/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21391</IssueID>
    <Title>Renaming file should fix all "import" (es6) and "require()" (commonjs) references.</Title>
    <Description>
    </Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21386</IssueID>
    <Title>Feature request: Support auto-update for linux</Title>
    <Description>(and in the meanwhile stop the distracting notification that a new version has come out)</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21385</IssueID>
    <Title>Go to file -&gt; crtl+n -&gt; open right not working</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:31:51.320Z)
- OS Version: Darwin x64 16.5.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.6.2|
|beautify|HookyQR|0.8.8|
|alignment|annsk|0.3.0|
|npm-intellisense|christian-kohler|1.3.0|
|path-intellisense|christian-kohler|1.2.0|
|prettier-vscode|esbenp|0.9.0|
|git-project-manager|felipecaputo|1.0.1|
|auto-close-tag|formulahendry|0.3.9|
|auto-rename-tag|formulahendry|0.0.11|
|debugger-for-chrome|msjsdiag|2.5.3|
|vscode-react-native|vsmobile|0.3.1|

---

Steps to Reproduce:

Can't open a file in a new panel using the following key combo

1. cmd+p
2. Search for something that produces at least 2 results
2. crtl+n 
3. cmd+enter
4. Nothing happens. I expect file to open in a new panel on the right.

But if I use down arrow for step 3 instead of crtl+n everything works as expected. Thanks for adding crtl+n to the quick open! It was killing me that it wasn't there before ;)</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>25/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21382</IssueID>
    <Title> Cannot read property 'lineNumber' of null</Title>
    <Description>Issue Id: &lt;b&gt;3faad757-f4ef-98e2-1076-986b64b85ab4&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.10.0-insider (2/23/2017 7:07:12 AM)&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'lineNumber' of null&lt;br /&gt;    at out/vs/workbench/electron-browser/workbench.main.js:81:25448 &lt;no sourcemaps&gt;&lt;br /&gt;    at out/vs/workbench/electron-browser/workbench.main.js:30:29062 &lt;no sourcemaps&gt;&lt;br /&gt;    at out/vs/workbench/electron-browser/workbench.main.js:30:27546 &lt;no sourcemaps&gt;&lt;br /&gt;    at r (out/vs/workbench/electron-browser/workbench.main.js:31:9822) &lt;no sourcemaps&gt;&lt;br /&gt;    at t.e._emitToSpecificTypeListeners (out/vs/workbench/electron-browser/workbench.main.js:31:12063) &lt;no sourcemaps&gt;&lt;br /&gt;    at t.e._emitEvents (out/vs/workbench/electron-browser/workbench.main.js:31:12335) &lt;no sourcemaps&gt;&lt;br /&gt;    at t.e.emit (out/vs/workbench/electron-browser/workbench.main.js:31:12705) &lt;no sourcemaps&gt;&lt;br /&gt;    at out/vs/workbench/electron-browser/workbench.main.js:66:15346 &lt;no sourcemaps&gt;&lt;br /&gt;    at r (out/vs/workbench/electron-browser/workbench.main.js:31:9822) &lt;no sourcemaps&gt;&lt;br /&gt;    at e._emitToBulkListeners (out/vs/workbench/electron-browser/workbench.main.js:31:12181) &lt;no sourcemaps&gt;&lt;br /&gt;</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21378</IssueID>
    <Title>VS Code git issues</Title>
    <Description>I am working a large directory and opened vscode in the root folder.

However, in the git area I am only shown the changed files of that very directory rather than those of subdirectories as well.

How can i change that?</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21368</IssueID>
    <Title>Accent menus shown in wrong location on macOS</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1 (2017-02-08T23:29:25.464Z)
- OS Version: macOS 10.12.3

Steps to Reproduce:

1. Create or open a text file
2. In the editor, press and hold a key with accents (or national characters) available (e.g. 'c'): https://support.apple.com/kb/PH25643?locale=en_US&amp;viewlocale=en_US
3. The accent menu should show up right above the character just entered, but it shows up in the editors top, left corner.
</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21354</IssueID>
    <Title>Powershell within built-in terminal non-functional and prints ^Q</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:44:55.542Z)
- OS Version: Linux x64 3.13.0-106-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.8|
|PowerShell|ms-vscode|0.9.0|
|jinja|wholroyd|0.0.7|

---

Steps to Reproduce:

1. Open built-in terminal (I used menu, CTRL+` doesn't seem to work for me on UK keyboard)
2. At the bash prompt, type powershell
3. Try to enter anything into the terminal and get a load of ^Q printed. Example output:

```
PS /home/rob/projects/powershellbackups&gt; d^Q^Q^Q^Q^Q^Qi^Q^Q^Q^Q^Q^Q^Qr^Q^Q
dir : The term 'dir' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:1 char:1
+ dir
+ ~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dir:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
```
![vscodeterminalps](https://cloud.githubusercontent.com/assets/1683665/23305101/07e53830-fa95-11e6-9e8b-365b23a522b6.png)

Text input works fine at the bash prompt. Text input works fine in powershell in xfce4-terminal. No issues inputting text into any other elements of VS Code.

System has latest v6.0.0-alpha.16 Powershell Core.

</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21350</IssueID>
    <Title>FTP links are highlighted wrongly and not openable</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;
Ref: #21021

- VSCode Version: 10.0.1-insiders
- OS Version: Windows 10 / Ubuntu

Steps to Reproduce:

1. Go to terminal, type `echo 'ftp://ftp_username@example.com/folder/filename.gif'` and enter it.
2. Hover over it.

Only part starting from `//` is highlighted, and when clicked it does not open a link.

Not sure if we go for all protocol links support (would be good though), however it definitely should not mislead the user by highlighting the link.</Description>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21312</IssueID>
    <Title>Minimap doesn't react to theme changing</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (0b27b528a7aac070bced1239310144d0763823bd, 2017-02-23T07:08:55.971Z)
- OS Version: Linux x64 4.8.0-34-generic
- Extensions: 

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|theme-glacier|Tyriar|0.0.10|
|theme-sapphire|Tyriar|0.0.5|
|vscode-terminal-here|Tyriar|0.0.5|
|vscode-svgviewer|cssho|1.3.1|
|tslint|eg2|0.8.1|
|git-project-manager|felipecaputo|1.0.1|
|vsc-travis-ci-status|felixrieseberg|1.0.5|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.1|
|csharp|ms-vscode|1.7.0|
|seti-icons|qinjia|0.1.3|
|annotator|ryu1kn|0.10.1|;


---

![image](https://cloud.githubusercontent.com/assets/2193314/23274955/7a31aed2-f9b9-11e6-84c0-f39f01fb761f.png)
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21299</IssueID>
    <Title>Revert single change from diff view</Title>
    <Description>When viewing the diff of a modified file against the most recent repository version, I would like to be able to revert (i.e. `git checkout -p`) individual changes one at a time. 

For example in WebStorm I can click the little chevrons next to the change to apply it to the other side:

&lt;img width="496" alt="screen shot 2017-02-23 at 16 35 50" src="https://cloud.githubusercontent.com/assets/115310/23269433/7ae4b02a-f9e8-11e6-9931-33700cba45bc.png"&gt;

This is somewhat related to #10782 on the functionality side and to #5770 on the UI side.
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21295</IssueID>
    <Title>Visual Studio code sidebar Vertical guideline (customize sidebar)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.7.2
- OS Version: windows 7

Steps to Reproduce:

I want vertical guideline on sidebar (for file and folders) like netbeans.
any issue for that?

![brzbe](https://cloud.githubusercontent.com/assets/12231201/23269034/896c8cb4-fa04-11e6-8b64-0dadcfe54f95.png)

I asked it on &lt;a&gt;http://stackoverflow.com/questions/41898245/visual-studio-code-sidebar-vertical-guideline-customize-sidebar&lt;/a&gt;.
but nothing.


</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21288</IssueID>
    <Title>Single line code collapsing</Title>
    <Description>Currently when you collapse code block you get two lines. Something like this.
```js
get CurrentSession(): DialerCampaignSessionModel {...
}
```
This is quite unreadable when you collaps a lot of blocks and also IMO the whole point of collapsings is to get as few lines as possible. For me, following is much better and more readable.
```js
get CurrentSession(): DialerCampaignSessionModel {...}
```
It will be nice if there was option to select collapsing type. Of course it should work for all languages.
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21278</IssueID>
    <Title>Commit with bad formating silently fails</Title>
    <Description>1. Have some badly formated file
2. Try to commit it -&gt; it silently fails
3. I would expect an error message pointing me to the output as we had before
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21275</IssueID>
    <Title>SFTP &amp; SSH Remote Projects Support</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1
- OS Version: Windows 10 Pro

Is it possible to embed a good sftp tool to manage remote projects?
There is an extension for doing just that but it has some bugs and an official-maintained plugin would be a million times better!
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21265</IssueID>
    <Title>I wish for a DEB/RPM repository to add to my list, so I can update using system package manager</Title>
    <Description>Just a simple wish to have a deb/rpm repository available to retrieve when new versions gets available.

Thanks for this editor, really enjoy writing Javascript using this editor.
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21255</IssueID>
    <Title>Add Opacity-Setting to Minimap</Title>
    <Description>There is no visual difference between the editor background and the minimap background. If you've one single long line in your code (and we all have those 80+ char lines :stuck_out_tongue_winking_eye:) the minimap cuts of the last characters and you don't realy realise it. 
### Minimap On:
![grafik](https://cloud.githubusercontent.com/assets/3358663/23249323/03cba456-f9a4-11e6-84db-4236456c94c0.png)
### Minimap Off:
![grafik](https://cloud.githubusercontent.com/assets/3358663/23249337/1eb48f94-f9a4-11e6-9263-18142454404d.png)

I suggest a `editor.minimap.opacity` User Settings to add CSS Opacity to the Minimap.
### Minimap with Opacity `0.6`:
![grafik](https://cloud.githubusercontent.com/assets/3358663/23249421/951fb03c-f9a4-11e6-8153-332b55169808.png)

</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21253</IssueID>
    <Title>This file will not be displayed in the editor because it is either binary, very large or uses an unsupported text encoding</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:


&gt; This file will not be displayed in the editor because it is either binary, very large or uses an unsupported text encoding


I just want to open an XML file of only 75 MB in size...
oh god now I'm forced to open Notepad++ again.


|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.5.2|

---

Steps to Reproduce:

1. open an XML file of 75 MB
2. open Notepad++ to fix your problems.</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21244</IssueID>
    <Title>[extensions] Quickpick enhancements</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `1.10.0-insider` 256d76fed7947e7289f921df10658d7a69233b65
- OS Version: macOS Sierra `10.12.3 (16D32)`

It would be great to have more control over a Quickpick. Here are some things I would love to have.

1. Stream or push items into a Quickpick (basically be able to show/add more items to the list as promises are resolved)
1. Update the placeholder dynamically
1. Control which item should be selected when shown
1. Add event for `right-arrow` press on an item, similar to the file access quickpick
1. Seed the inputbox with a value
</Description>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21232</IssueID>
    <Title>column location appears for some single-statement constructs</Title>
    <Description>Testing #20793

Repro steps:
1. Launch `app.js` below w/ debugger (Node v.0.12.6, Linux)
```js
setInterval(function() {
    console.log("hello");
}, 1000);
```
2. Hit the breakpoint the first time (everything looks okay)
3. Hit the breakpoint the second time, column pointer appears:
![screenshot from 2017-02-22 18-47-44](https://cloud.githubusercontent.com/assets/762848/23238369/a0f977aa-f92f-11e6-9656-81ae8f81b16d.png)

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21225</IssueID>
    <Title>Terminal links: url parameters value ignored</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10 insider
- OS Version: windows 10

Steps to Reproduce:

1. open the terminal from VSCode and have it print an url with an url parameter, like `https://github.com/foo?param=ignored`

Click on the link: the page `https://github.com/foo?param` will be opened instead of the full url with parameters `https://github.com/foo?param=ignored`.

![terminallink](https://cloud.githubusercontent.com/assets/199648/23236211/9e5e6fe0-f958-11e6-823f-6652d9a9d1ff.png)

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21216</IssueID>
    <Title>Focusing debug console or output hides TypeScript version being used in status bar</Title>
    <Description>#21037

It's strange to see the status bar jump around like this, especially when you click the debug console's monaco editor (the status bar item hides on mousedown, and show on mouseup).

It's happening because output and debug console are using monaco editors. The status bar item should show based on the last active editor, not the currently active monaco instance.

![image](https://cloud.githubusercontent.com/assets/2193314/23233899/29c8019e-f905-11e6-9ee7-a879dc975cb9.png)
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21211</IssueID>
    <Title>TypeScript go to configuration does nothing</Title>
    <Description>#21037

Related to #21210

Steps to reproduce:

1. Open ./index.js
2. Trigger *JavaScript* go to configuration
3. Create a new file and save it as an empty jsconfig.json
4. Open ./index.js
5. Trigger *TypeScript* go to configuration, nothing happens. I was expecting it to create a tsconfig.json file similar to step 3.</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21201</IssueID>
    <Title>Code completion triggered by setting the caret with a mouse button click</Title>
    <Description>1) Open `vscode.d.ts`
2) set caret with mouse button click as shown in screen recording
-&gt; code completion triggered but shouldn't

![yt4qbwfcmd](https://cloud.githubusercontent.com/assets/4674940/23228678/411a4842-f8f2-11e6-9a65-c12053b412cf.gif)

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21200</IssueID>
    <Title>SCM viewlet click/keyboard navigation doesn't work</Title>
    <Description>#20999

Clicking always forces focus in the right-side editor so it's only possible to navigate the viewlet list if you navigate focus there (eg. click commit message and tab to the list).</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21199</IssueID>
    <Title>Git: Stage gives ambiguous error message</Title>
    <Description>#20999

In file with local changes I did Git: Stage via the command palette:

![image](https://cloud.githubusercontent.com/assets/2193314/23228435/52bb8ddc-f8f1-11e6-82ca-a6d3b1d21b14.png)
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21198</IssueID>
    <Title>Is "Clean Changes" the best choice of words?</Title>
    <Description>#20999

The words "clean" and "dirty" are more technical than they need to be imo, something like "undo local changes" might be more generally understandable?

![image](https://cloud.githubusercontent.com/assets/2193314/23227810/09296c5e-f8ef-11e6-9d8a-3d5d16057c51.png)

It has been a while since I learned the meaning of these words but some developers may not know?</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21190</IssueID>
    <Title>Error when trying to init a git repo</Title>
    <Description>#20999

Steps to repro:

1. Open a folder without a git repo
2. Type something in the commit message (not sure if this made a difference)
3. Press init repo button, error
4. Remove message
5. Press init repo button, error

![image](https://cloud.githubusercontent.com/assets/2193314/23226725/79d09378-f8eb-11e6-9a02-0a6ee9a55f85.png)

Git output:

```
Using git 2.9.3 from git
git rev-parse --show-toplevel
git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git

fatal: Not a git repository (or any of the parent directories): .git

fatal: Not a git repository (or any of the parent directories): .git
```</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21180</IssueID>
    <Title>Error when using the "debug" keyword in the cmd pallet</Title>
    <Description>Testing #20982 

- Followed the steps in the test plan item, typed "debug " in the command pallet 

![image](https://cloud.githubusercontent.com/assets/16890566/23225484/e82a96d4-f8e6-11e6-97d9-8dc44b5e77fe.png)

![image](https://cloud.githubusercontent.com/assets/16890566/23225491/efbd6e30-f8e6-11e6-8874-30339855f938.png)

Any further attempts to do the same resulted in the progress bar running and not stopping
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21178</IssueID>
    <Title>jsdoc intellisense is triggered when you move the cursor to a line ending in /**</Title>
    <Description>#21031

For the following code:

```js
/**
 * Returns the minimum node from the heap.
 *
 * @return {Node} node The heap's minimum node or undefined if the heap is
 * empty.
 */
FibonacciHeap.prototype.findMinimum = function () {
  return this.minNode;
};
```

Steps to reproduce:

1. Put cursor at end of the second line (Returns the minimum...)
2. Press up, intellisense is triggered wrongly, making navigation with arrow keys difficult if you have block comments in your code. This also happens when navigating using page up/down.

![image](https://cloud.githubusercontent.com/assets/2193314/23225351/6822e72a-f8e6-11e6-9512-2f17c8f06079.png)

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21174</IssueID>
    <Title>Confusing 'current execution point' indicator</Title>
    <Description>Testing #20192 with Node 7.6.0.

- VSCode Version: Code - Insiders 1.10.0-insider (256d76fed7947e7289f921df10658d7a69233b65, 2017-02-22T07:10:23.895Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: None

Steps to Reproduce:

1. Place line breakpoint as shown below
2. F5 to let the debugger break there
-&gt; That yellow arrow left to `&amp;&amp;` is confusing. Did it break there? Maybe line breakpoints should remain unaffected by the column breakpoint decorations?

![image](https://cloud.githubusercontent.com/assets/9205389/23224791/8e275b1a-f8e4-11e6-8e48-9e7d53d6f32a.png)
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21172</IssueID>
    <Title>JSDoc completion should not open automatically when setting the caret</Title>
    <Description>Testing #21031
- Create a .js file with this contents:
  ```js
  /**
   *
   */
  ```
- Set the caret to the right of the two asterisks. 

Observe: JSDoc completion pops up.</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21165</IssueID>
    <Title>cannot navigate TS files with arrow keys anymore</Title>
    <Description>This is a regression from the self-invoking completion item provider (which is to be avoid)

* open `/src/vs/editor/common/editorCommon.ts`
* move down with arrow key
* as soon as I enter a doc comment I am stuck in IntelliSense

![feb-22-2017 17-45-26](https://cloud.githubusercontent.com/assets/1794099/23222024/eba50c5a-f926-11e6-9d2c-5df7db65639c.gif)
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21141</IssueID>
    <Title>Hover doesn't render sub/sup html elements in Markdown text</Title>
    <Description>Hover doesn't render sub/sup html elements in Markdown text. 

- VSCode Version: 1.9.1/1.10.0-insider
- OS Version: macOS 10.12.3

Steps to Reproduce:

1. hover over some text returning `x&lt;sup&gt;x+1&lt;/sup&gt;.  x&lt;sub&gt;i+1&lt;/sub&gt;`
2. Text should be rendered as x&lt;sup&gt;x+1&lt;/sup&gt;.  x&lt;sub&gt;i+1&lt;/sub&gt;

This follows up on https://github.com/redhat-developer/vscode-java/issues/155, where I'm now trying to make Javadoc return sub/sub HTML tags as-is, in the Markdown text (unreleased WIP):

&lt;img width="578" alt="screen shot 2017-02-22 at 9 34 42 am" src="https://cloud.githubusercontent.com/assets/148698/23216104/c76ef2cc-f8e2-11e6-8ac9-eb1e228fa7ba.png"&gt;

The Markdown rendering engine in VS Code supports it, as can be seen in the Markdown preview pane, just not in hover mode.
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21130</IssueID>
    <Title>Replace with a string that contains search string goes endless when replacing manually</Title>
    <Description>Steps to Reproduce:

1. vscode sources, search for "copyright"
2. replace with "copyrightttt"
3. click on an individual result to replace

=&gt; the individual result never disappears
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21123</IssueID>
    <Title>Markdown preview size is off when editor zoom is not the default</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

Steps to Reproduce:

1. Open VS Code, open a new file
2. Type the following: * Hello world!
3. Save the file as Test.md
4. Press Ctrl+P, and use the following command: Markdown: Open preview to the side. This opens a preview of the markdown on the right side.
5. Zoom in the editor with CTRL + NUMPAD_PLUS, and zoom out with CTRL + NUMPAD_MINUS
The markdown preview will be off. If you zoom in, the content area will be smaller that it could be, and if you zoom out, the content area is off the screen.</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21094</IssueID>
    <Title>Clicking on file in scm viewlet automatically focuses that file</Title>
    <Description>Refs: #20440

1. SCM viewlet, have some changes
2. Click on any file in the scm viewlet
3. Focus is immediatly transfered to the editor
4. I would expect the SCM viewlet to behave like all out other viewlets (explorer, debug) - ony click preserves the focus in the viewlet. Only double click transfers focus. This way it is imposible to focus an item in the tree and then use keyboard for further navigation</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21075</IssueID>
    <Title>[Feature request] Apply rename refactoring to all ES6 imports</Title>
    <Description>There a popular but unanswered question on stackoverflow: [Visual Studio Code - apply rename file refactoring in all ES6 imports](http://stackoverflow.com/questions/37747938/visual-studio-code-apply-rename-file-refactoring-in-all-es6-imports/42387739#42387739)

&gt; I've typescript application build with ES6 modules.
&gt; 
&gt; How do I rename ts or js file representing a module without breaking ES6 import that referenced the renamed file?
&gt; 
&gt; e.g: rename MyModule.ts to RenamedModule.ts -&gt; change import * from './MyModule' to import * from  './RenamedModule' in all files;
&gt; 
&gt; Is there an VSCode extension or typescript service that would rename module path in all ES6 imports when renaming file?

I believe the VS Code users would appreciate this feature and that it belongs to VSCode</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21072</IssueID>
    <Title>Dirty diff decoration goes into line numbers</Title>
    <Description>
![image](https://cloud.githubusercontent.com/assets/900690/23205850/b2e55e50-f8eb-11e6-9f88-ff2644e985e7.png)

Steps to Reproduce:

1. paste the contents of a file over and over again to produce high line number
2. wait for dirty diff to kick in

=&gt; it overlaps the line numbers
</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21068</IssueID>
    <Title>Bad sorting in quick open</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/22350/23205362/e5552552-f8e9-11e6-8363-3792fed26a02.png)

We should also take in consideration _consecutive_ characters, not just whether their position is early in the string.

I.e. consecutive characters always should sort before: 1 match (`icon`) should always be before two matches (`i` and `con`).</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21053</IssueID>
    <Title>Minimap obscures 'Add Configuration' Button</Title>
    <Description>Pls see the attached screenshot

![image](https://cloud.githubusercontent.com/assets/172399/23203004/f15e15d8-f8e0-11e6-8642-b7fae45907e3.png)

Since we now support Add Configuration in the drop down one option is to no longer show this in-place button (should verify with telemetry).

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21041</IssueID>
    <Title>Newline in Files search Regex not working</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: Mac OS 10.11.6

Steps to Reproduce:

1. Go to the Search sidebar
2. Turn on Regex
3. Search for something like "module\.exports\.(.*);" (without the quotes) - that works OK
4. Change that to "module\.exports\.(.*);\n" - still works OK
5. Change that to "module\.exports\.(.*);\nfunction" - does only find in the open files.
6. Note that in the editor search/replace (CMD-F), it works perfect (both search and replace too)

To make things even worse, when the search sidebar finds something using a regex with newline, if you try to use Replace, the sidebar UI gets completely screwed.

</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21035</IssueID>
    <Title>Scrolling skipping</Title>
    <Description>When I scroll using my touchpad, the scrolling regularly gets "stuck" and hangs for a minute, then jumps to where it should have been. This has been happening for at least a week, though I can't remember exactly for how long.

- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|path-intellisense|christian-kohler|1.2.0|
|python|donjayamanne|0.5.8|
|beautify|HookyQR|0.8.6|
|MagicPython|magicstack|1.0.6|
|mssql|ms-mssql|0.2.1|
|csharp|ms-vscode|1.7.0|
|PowerShell|ms-vscode|0.9.0|
|partial-diff|ryu1kn|0.2.0|
|vscode-sql-beautify|sensourceinc|0.0.4|

---

Steps to Reproduce:

1. Open any file
2. Scroll using touchpad.</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21030</IssueID>
    <Title>Color file and folder names in explorer view according to their git status</Title>
    <Description>- VSCode Version: latest Insider
- OS Version: Windows 7 Enterprise

It would be nice if in the file explorer view the file and folder names can be colored according to their git status (changed, not indexed, newly added, deleted, etc.). #</Description>
    <CreatedDate>22/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21027</IssueID>
    <Title>TypScript error when opening a JavaScript file from a SharePoint 2010 site</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.2|

---

Steps to Reproduce:

1. Start editor
2. Open a javascript file from a drive mapped to a SharePoint 2010 site
Then watch as warning that TypeScript died 5 times in the last 5 minutes continually slides down</Description>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21020</IssueID>
    <Title>[Suggestion] minimap: ability to drag and drop the "window"</Title>
    <Description>It would be great if:

 - it was possible to click and drag the "selection window" to move onto the minimap: releasing the mouse would show the text at current position
 - the minimap didn't scroll and was showing the whole document: right now, depending on the document size, you first have to scroll a little to view the part where you want to navigate to, and then only you make click on the position you want to move the view

What I call "window" is the highlighed square that indicates what part of the document is currently visible:

![window](https://cloud.githubusercontent.com/assets/199648/23186680/35443100-f888-11e6-8cf4-c345b276e242.png)
</Description>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>21006</IssueID>
    <Title>Cut-off button in keybindings editor when enabling minimal</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (25c55638340197fc9c8767aba9d32a0c29ccf68a, 2017-02-21T07:04:55.691Z)
- OS Version: Darwin x64 15.6.0

---

Steps to Reproduce:

1. enable minimap in settings
2.  Command palette &gt; Preferences: Open Keyboard Shortcuts

![screen shot 2017-02-21 at 10 02 14 am](https://cloud.githubusercontent.com/assets/4674940/23177842/2f34f008-f81d-11e6-92ad-84a7dccb855a.png)
</Description>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20992</IssueID>
    <Title>Pull out debug control panel</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: MacOS 10.12.3

How to pull the panel out in this situation?

![screen-shot-2017-02-21-at-18 00 21](https://cloud.githubusercontent.com/assets/6762673/23170735/5faccee2-f861-11e6-949c-c0dc4e25f849.png)
</Description>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20989</IssueID>
    <Title>TypeError: Cannot read property 'element' of undefined</Title>
    <Description>* open ts file
* trigger IntelliSense
* select an item with the mouse
* type space, trigger IntelliSense again
* select an item with the mouse
* 💥 the list widget explodes

```
index.js:31 [uncaught exception]: TypeError: Cannot read property 'element' of undefinedonError @ index.js:31(anonymous function) @ index.js:100emitOne @ events.js:96emit @ events.js:188window.onerror @ init.js:120
index.js:34 TypeError: Cannot read property 'element' of undefined
    at ListView.element (file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listView.js:96:37)
    at file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listWidget.js:366:91
    at Array.forEach (native)
    at file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listWidget.js:366:25
    at EventBufferer.bufferEvents (file:////Users/jrieken/Code/vscode/out/vs/base/common/event.js:338:13)
    at List.setFocus (file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listWidget.js:364:32)
    at MouseController.onPointer (file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listWidget.js:198:23)
    at file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listWidget.js:187:89
    at ListView.fireScopedEvent (file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listView.js:187:13)
    at HTMLDivElement.handler (file:////Users/jrieken/Code/vscode/out/vs/base/browser/ui/list/listView.js:174:55)
```</Description>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20961</IssueID>
    <Title>Extensions Details and Changelog views scroll bar broken after Zoom In/Out</Title>
    <Description>- VSCode Version: Code - Insiders 1.10.0-insider (64801727521592cf5fe64fd911b1efe41b1ea732, 2017-02-20T07:13:27.765Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1. Open VS Code (does not matter if its window is maximized or non-maximized)
2. Open Extensions &gt; Popular Extensions
3. Open a random extension
4. Press Ctrl + = (Zoom In)
5. The 'Details' and 'Changelog' views's scroll bars are not properly positioned (far right and bottom of the window)
6. The opposite disposition appears also on 'Zoom Out'
7. The same problem happens on those non-zero zoom levels with some extension's views. For example: 'Annotator'

![image](https://cloud.githubusercontent.com/assets/2070752/23144091/fd62d184-f7cd-11e6-9a0e-af23fc870448.png)

![image](https://cloud.githubusercontent.com/assets/2070752/23144103/0fbfbc98-f7ce-11e6-9ea6-9e52f61dc373.png)

![image](https://cloud.githubusercontent.com/assets/2070752/23144123/37fe1204-f7ce-11e6-88ea-04938791a5a2.png)

![image](https://cloud.githubusercontent.com/assets/2070752/23144139/4d81b59a-f7ce-11e6-968d-52bf8fd70512.png)
</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20957</IssueID>
    <Title>Minimap: can only click outside of current 'view'</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.10.0-insider
- OS Version: Windows 7

### Steps to Reproduce:

1. Open a file of decent length
2. Use the minimap to scroll somewhere:

![image](https://cloud.githubusercontent.com/assets/3329959/23141352/6f7faade-f784-11e6-8d2d-7f99db1f2829.png)

3. Try to fine-tune your view by clicking a bit lower in the minimap, but still inside the view pane box:

![image](https://cloud.githubusercontent.com/assets/3329959/23141355/766c38b2-f784-11e6-9695-2f6c226a7656.png)

### Expected result

* The editor should scroll a bit to match the newest click

### Actual result

* Nothing happens</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20952</IssueID>
    <Title>Peek definition works like Go to Definition if it runing from command palette</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: MacOS 10.12.3

Steps to Reproduce:

1. Place cursor on a simbol
2. Open command palette and choose Peek Definition
3. Repeat this several times.

Instead of showing a Peek Definition window, the editor opens a file with a definition. It happens in about 50% of cases.
</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20941</IssueID>
    <Title>Debugger: show variables in multiple ways: hex, dec, ascii, binary</Title>
    <Description>VS Code version: 1.8.1
Python Extension version: 0.3.24
Python Version: 3.5
OS and version: Windows 7

It would be nice to show all alternate forms of a variable into the debugger -- hex, dec, ascii, binary -- or have a way to switch between types in the UI.

thanks</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20930</IssueID>
    <Title>VSCode doesn't remember a previous session</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:44:55.542Z)
- OS Version: Linux x64 4.4.0-62-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|MagicPython|magicstack|1.0.6|

---

My VSCode app never restores the previous session after exit (files I edited and the layout) and always opens up with a blank `Untitled-1` document. It seems not to be a canonical behavior, from the docs

&gt; -n or --new-window - Opens a new session of VS Code instead of restoring the previous session (default).
</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>27/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20908</IssueID>
    <Title>connect ECONNREFUSED 191.238.172.191:443</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:44:55.542Z)
- OS Version: Linux x64 4.4.46-11-default
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-css-formatter|aeschli|0.0.2|
|jslint|ajhyndman|1.2.1|
|vs-code-css-comments|ashhitch|1.0.2|
|tslint|eg2|0.8.1|
|vscode-npm-script|eg2|0.1.8|
|Theme-FlatlandMonokai|gerane|0.0.4|
|CSSLint|raymondcamden|0.0.2|

---

Steps to Reproduce:

1. I am trying to install extensions and i got the following error i have included in the Title bar
2.</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20900</IssueID>
    <Title>Terminal: Parent Folder relative path formatting issue in terminal</Title>
    <Description>This is on Windows and I noticed it on Thursday or Friday. When using a relative parent folder path in the terminal it is causing weird spacing issues when moving the cursor. @Tyriar I wasn't sure if this was an issue in code or upstream

If the cursor is at the end of the line it forces the `..` to join the previous command in the prompt. I added a gif showing the behavior

- VSCode Version: 1.10.0-Insiders
- OS Version:  Windows 10

Steps to Reproduce:

1. Type a command and then a relative parent path like the following `cd ..\path\to\something` 
2. The `..` will have spacing issues with the **cd** depending on where the cursor is.

![issue](https://cloud.githubusercontent.com/assets/6662208/23109356/2cb70694-f6de-11e6-86c4-87a64f99d815.gif)

</Description>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20854</IssueID>
    <Title>Change all occurrences works for first 1000 entries only</Title>
    <Description>- VSCode Version: 1.9
- OS Version: Linux

Steps to Reproduce:

1. Open a file with same word present multiple times( &gt; 2000).
2. Select some part of word and right click -&gt; change all occurrences. Only selects first 1000 entries.
</Description>
    <CreatedDate>18/02/2017</CreatedDate>
    <ClosedDate>22/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20850</IssueID>
    <Title>showTextDocument() should allow to set { pinned: false }</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `1.10.0-insider` 50f8848e44029ffabf0727de49cd18ae4069b4fe
- OS Version: macOS Sierra `10.12.3 (16D32)`

The `vscode.open` command seems to be the only way to open a document in a "preview" tab, but currently it steals focus. While `window.showTextDocument` doesn't have an option to show in a "preview" tab (might be a nice option as well), but does support `preserveFocus?: boolean`.

So right now, from an extension I can't seem to open a document in a preview tab, but also not steal focus.

As an example, I was attempting to open documents in a preview tab while using the `onDidSelectItem` event from `showQuickPick()`.</Description>
    <CreatedDate>18/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20848</IssueID>
    <Title>Markdown preview problem</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.14393


---

Preview for markdown cannot fit to zoom when the window.zoomLevel got a value.
```
    {"window.zoomLevel": 1}
```
![20170218131759](https://cloud.githubusercontent.com/assets/12998371/23090618/b984e454-f5dc-11e6-9065-f118a67939f6.png)



*sorry for my poor English*</Description>
    <CreatedDate>18/02/2017</CreatedDate>
    <ClosedDate>18/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20834</IssueID>
    <Title>Quality of Life Suggestion: open files in the same window</Title>
    <Description>I have 5 untitled files in hot exit (I leave them there as memos). When I open a file without Code opened, the file opens in a window separate to the hot exit files. It would be great to unify the windows when a file is being opened.
Demonstration:
![2017-02-17_21-46-08](https://cloud.githubusercontent.com/assets/21363469/23084530/a0a838a0-f55a-11e6-9b15-7e7064e74dae.gif)
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>19/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20825</IssueID>
    <Title>Add search to generated in-product Markdown preview (release notes, extension READMEs)</Title>
    <Description>Would it be possible to add search/find to the in-product rendered Markdown previews? This would help navigation in the in-product release notes and long extension READMEs.

This came up during a meeting with the C++ extension team, where they worried that their README was getting too long for easy in-product navigation and would like the user to be able to search for the sections appropriate to their specific C++ configuration.
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20819</IssueID>
    <Title>When in preview mode of a Markdown file, keep preview mode when browsing to a link (local at least)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1
- OS Version: Windows 10

Steps to Reproduce:

1. In the explorer, open a Readme.md file
2. When file opens, click the preview
3. When markdown is rendered in HTML format, click a link that opens a new .md file

Expected:
-&gt; we are "navigated" to the preview version of the MD file

Actual:
-&gt; the file is opened in edit mode - text is markdown notation
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20816</IssueID>
    <Title>Open a new pane/column without a duplicate file</Title>
    <Description>Current behaviour: 
- opening a new pane/column opens the same file in the new pane/column. 
- With this in place, the UX is not the best. To work on a new file in a new pane/column, you have to close the duplicate file first before opening a new file.

Desired behaviour:
- ability to have an option to open an new pane/column as empty, without a duplicate file pane.</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>19/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20795</IssueID>
    <Title>Two instances of VS Code running - If file is not saved and opening the same file again</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.91
- OS Version: Windows 10 Version 1607 (OS Build 14393.693)

Steps to Reproduce:

1. Open a File using code &lt;filename&gt;
2. Modify the file, don't save it. And close VSCode.
3. Now open the same file again - It will display two VS Code instances.

Here is the screenshot

![image](https://cloud.githubusercontent.com/assets/276411/23061059/5feb1f6e-f526-11e6-8ea4-f9337da2648d.png)


</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>19/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20792</IssueID>
    <Title>Prevent same file from being open in more than one editor (toggle)</Title>
    <Description>There is a [question about this on StackOverflow](http://stackoverflow.com/questions/39890926/visual-studio-code-prevent-same-file-opening-twice), but no answer given.

- VSCode Version: 1.10.0-insider
- OS Version: macOS 10.12.3

Steps to Reproduce:

1. Use any means to open a file, say Ctrl/Cmd+P, while the focus is in one of the editor groups
1. The file opens in that editor group
1. Move to any other editor group
1. Open same file, it is opened again, this time in the current editor group

While this behavior _is not incorrect in any sense_, it leads to proliferation of (same) files open which wastes memory, if not other resources. Honestly, I don't care about memory consumption, but mentally I am arranging files open (sometimes) to the left/right and would like the "stability" of the same file always being open in the same editor-group (I make sure that I open the file in question in the "appropriate" editor-group, I don't expect any kind of automatic placement).

It would be **really** nice if we'd have a toggle (boolean setting) which would toggle from current behavior (would be the default) and the one where however I open the file, if it's already open in an editor-group, it's simply focused there.

It might be naive, but I assume that this is a rather simple thing to implement.</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>19/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20789</IssueID>
    <Title>Untracked Items added to Source Control on Commit All</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1
- OS Version: Windows 7 SP1

Steps to Reproduce:
1. Add new files to working directory 
2. New files with show up in GIT with a status of untracked
3. Do not add any staged items 
4. Add a comment and select commit all
5. All unstaged are added to source control

This would appear to be an issue since I would not expect untracked items to be added to source control when I press commit all. Only untacked items that I add to the index should be added and the rest should be ignored and left with a status of untacked.
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20783</IssueID>
    <Title> VS Code 1.9.1 cannot launch on Ubuntu due to missing libXss.so.1</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.1
- OS Version: Ubuntu 16.10 x86_64 (fully updated)

**Steps to Reproduce:**

1. Install vscode 1.9.1 from the official deb
2. Run code

**Expected behavior:**
1. Code opens/runs

**Observed behavior:**
1. The following error: `/usr/share/code/bin/../code: error while loading shared libraries: libXss.so.1: cannot open shared object file: No such file or directory`</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20776</IssueID>
    <Title>Can't step into methods when debugging unit tests</Title>
    <Description>- VSCode Version: 1.9.1 and Insiders 1.10.0 (496b804f8ae5a95e899406fcc67f6c1896894c91)
- OS Version: macOS Sierra 10.12.2

Steps to Reproduce:

1. Set a breakpoint in a test (e.g. extHostLanguageFeatures.test.ts line 637).
2. Run the "Unit Tests" launch configuration.
3. Wait for breakpoint to catch
4. Attempt to step into a function.

Expected: Step into a function
Actual: Behaved as if I pressed "Continue".
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20772</IssueID>
    <Title>magnifying markdown preview decreases the size of the preview pane</Title>
    <Description>- VSCode Version:
```
Version 1.9.1
Commit f9d0c687ff2ea7aabd85fb9a43129117c0ecf519
Date 2017-02-09T00:26:45.394Z
Shell 1.4.6
Renderer 53.0.2785.143
Node 6.5.0
```

- OS Version:
Windows 10

Steps to Reproduce:

1. open a markdown file (*.md)
2. press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; to open the markdown preview
3. press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt; to magnify the markdown preview

div displaying the markdown preview becomes smaller as preview is magnified
</Description>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20765</IssueID>
    <Title>I cannot open any files from Windows Explorer by double click or Open With &gt; VS Code</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-icontheme-nomo-dark|be5invis|1.2.5|
|EditorConfig|EditorConfig|0.3.4|
|LogFileHighlighter|emilast|1.1.1|
|vscode-great-icons|emmanuelbeziat|1.1.44|
|output-colorizer|IBM|0.0.10|
|vscode-icon-theme|jtlowe|1.4.0|
|cpptools|ms-vscode|0.10.1|
|csharp|ms-vscode|1.7.0|
|material-icon-theme|PKief|1.3.3|
|trailing-spaces|shardulm94|0.2.11|
|perforce|slevesque|1.0.0|
|markdown-pdf|yzane|0.1.6|

---

Steps to Reproduce:

1. Right click a json file, Open with &gt; VS Code
2. Nothing happens. If VS Code is not running, it will start, but not open the json file.</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20755</IssueID>
    <Title> Uncaught Error</Title>
    <Description>Issue Id: &lt;b&gt;c3b42d06-5420-1a64-b48b-35d2d8dabb9f&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.9.1&lt;br /&gt;*Stack* &lt;br /&gt;Error&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/rawDebugSession.ts#L176:30](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/electron-browser/rawDebugSession.ts#L176:30)&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1209:0 (onError)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1209:0 (onError))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L901:0 (_notify)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L901:0 (_notify))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1041:0 (_run)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1041:0 (_run))&lt;br /&gt;[/vs/workbench/parts/debug/node/v8Protocol.ts#L53:5 (errorDispatch)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/node/v8Protocol.ts#L53:5 (errorDispatch))&lt;br /&gt;[/vs/workbench/parts/debug/node/v8Protocol.ts#L136:6 (clb)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/node/v8Protocol.ts#L136:6 (clb))&lt;br /&gt;[/vs/workbench/parts/debug/node/v8Protocol.ts#L104:11 (dispatch)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/node/v8Protocol.ts#L104:11 (dispatch))&lt;br /&gt;[/vs/workbench/parts/debug/node/v8Protocol.ts#L41:8 (handleData)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/node/v8Protocol.ts#L41:8 (handleData))&lt;br /&gt;    at emitOne (events.js:96:13)&lt;br /&gt;</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20751</IssueID>
    <Title> Canceled</Title>
    <Description>Issue Id: &lt;b&gt;c5be8968-638c-cd85-4bfe-5e8eee080526&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.9.1&lt;br /&gt;*Stack* &lt;br /&gt;Error: Canceled&lt;br /&gt;[/vs/workbench/parts/debug/electron-browser/rawDebugSession.ts#L176:30](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/electron-browser/rawDebugSession.ts#L176:30)&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1209:0 (onError)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1209:0 (onError))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L901:0 (_notify)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L901:0 (_notify))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1041:0 (_run)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1041:0 (_run))&lt;br /&gt;[/vs/workbench/parts/debug/node/v8Protocol.ts#L56:11 (errorCallback)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/src/vs/workbench/parts/debug/node/v8Protocol.ts#L56:11 (errorCallback))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1652:0 (_oncancel)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1652:0 (_oncancel))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L805:0 (_cancelAction)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L805:0 (_cancelAction))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1068:0 (enter))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L964:0 (_run)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L964:0 (_run))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1311:0 (cancel)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L1311:0 (cancel))&lt;br /&gt;[vs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L805:0 (_cancelAction)](https://github.com/microsoft/vscode/blob/f9d0c687ff2ea7aabd85fb9a43129117c0ecf519/srcvs/workbench/electron-browser/vs/base/common/winjs.base.raw.js#L805:0 (_cancelAction))&lt;br /&gt;</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20739</IssueID>
    <Title>Unchecking "Show welcome page on startup" has no effect</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: Windows 10 Enterprise version 1607

Steps to Reproduce:

1. Open VSCode (`code .` anywhere)
2. It shows the welcome screen. Uncheck "Show welcome page on startup"
3. Close VSCode.
4. GOTO 1
</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20732</IssueID>
    <Title>Installation of "the 'SQL' extension" recommended, not available.</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: macOS 10.12.3

Steps to Reproduce:

1. Open a .sql file
2. Observe recommendation notice.
3. Click "Show Recommendations"

&lt;img width="724" alt="screen shot 2017-02-16 at 07 22 48" src="https://cloud.githubusercontent.com/assets/76547/23024768/cad1d4da-f418-11e6-9aca-d813fad3cb84.png"&gt;

At the top of the window, the recommendation notice comes down with the message: "It is recommended to install the 'SQL' extension." Buttons presented are "Show Recommendations" "Don't Show Again" and "Close". Clicking Show Recommendations presents a list of extensions that does not include any titled "SQL", the closest would be the Microsoft SQL Server-specific "mssql" extension. Searching all extensions for the substring "SQL" shows no extension with the title of simply "SQL".

If the intent of the notice is to encourage the user to select one of the SQL-related extensions, e.g., mssql, PL/SQL, vscode-database, then the Show button should take the user to a list of extensions tagged as SQL related, and the wording of the notice should be corrected, as "the 'SQL' extension" means one specific, so named extension.

If there is/was a specific extension simply called "SQL" that is not available at this moment, the notice could be removed or linked directly to that extension. Even if the extension is not available, it would be a clearer user-experience to click Show… and be taken to a "this extension is no longer available" page.</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20721</IssueID>
    <Title>[Feature] Multiple Editor Window Support</Title>
    <Description>- VSCode Version: 1.9.1
- OS Version: 10.0.15031.0

I would love to see the ability to have multiple editor windows open to support workstations with multiple monitors. I see this working similar to Visual Studio or Chrome, where pulling a tab out of the main window and to the desktop creates a new (editor-only) window, which can then itself have multiple tabs and be redocked in the main window by dragging it back.</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20712</IssueID>
    <Title>on danish keyboard ctrl+½ (½ === ~ on us keyboard) don't open terminal</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-08T23:44:55.542Z)
- OS Version: Linux x64 4.4.0-62-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|0.8.0|
|gitignore|codezombiech|0.5.0|
|vscode-eslint|dbaeumer|1.2.6|
|file-icons|file-icons|1.0.2|
|flow-for-vscode|flowtype|0.5.0|
|debugger-for-chrome|msjsdiag|2.5.3|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|7.2.0|
|dark-plus-material|vangware|0.2.1|

---

Steps to Reproduce:

1. on a danish keyboard(maybe others) the ~ key next to 1 is ½
2. by press ctrl+½ nothing happen
3. try to change the key in settings to any of the char on the key like § or ¾ do not help</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>20708</IssueID>
    <Title>I cant install any Extension (error:of central directory record signature not found)</Title>
    <Description>- VSCode Version: Code 1.9.1 (f9d0c687ff2ea7aabd85fb9a43129117c0ecf519, 2017-02-09T00:26:45.394Z)
- OS Version: Windows_NT ia32 6.1.7601

**messageService.ts:126**  of central directory record signature not found: Error: end of central directory record signature not found,    at c:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\yauzl\index.js:98:14,    at c:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\yauzl\index.js:342:5,    at c:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\fd-slicer\index.js:32:7,    at FSReqWrap.wrapper [as oncomplete] (fs.js:681:17)e.doShow @ messageService.ts:126</Description>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>17/02/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19549</IssueID>
    <Title>Syntax errors when using file association "*.es": "javascriptreact"</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.8.1 (clean, without extensions)
- OS Version: Windows 10

![Image of issue](https://pp.vk.me/c626519/v626519720/4a0bf/0h13n9SwKpo.jpg)

Steps to Reproduce:

1. Create file association ("*.es": "javascriptreact") in user settings
2. Paste some React code

I have no errors with same code in ".js" file.
</Description>
    <CreatedDate>28/01/2017</CreatedDate>
    <ClosedDate>28/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19542</IssueID>
    <Title>Portable edition for all os</Title>
    <Description>
- VSCode Version:Latest
- OS Version:All

I am wishing for portable edition for all platform just plug and play without need of installation/.exe file</Description>
    <CreatedDate>28/01/2017</CreatedDate>
    <ClosedDate>28/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19524</IssueID>
    <Title>Multiple process debug dropdown doesn't show up in widget consistently</Title>
    <Description>- Start (for example) "Launch VS Code" config
- Start "Unit test" config
- Process picker dropdown doesn't show up

If I click "stop", then the first config is killed, and the second keeps running, and the process picker in the widget shows up at this point.

Or if I launch a third one, it shows up.

Or if I hit a breakpoint, it shows up.</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>30/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19516</IssueID>
    <Title>Navigate among the files while typing in the Explorer panel</Title>
    <Description>
- VSCode Version:1.8.1
- OS Version: Microsoft Windows [Version 10.0.14393]

Steps to Reproduce:
In Visual Studio, we could navigate between the files while typing to search the file or folder that we want to reach.

For example, let's suppose that we have the following structure on Explorer panel
- resources
- config
  + acl.php
  + app.php
  +benchmark.php
- config.testing
- database
- routes

If I start to type "c", "o", "n" with the focus inside the **Explorer bar**, so, the panel will set the focus to the **config** folder. Once inside the **config** folder and start to type "a", "p"... it will set the focus in the **app.php file**.

If the **Explorer** panel has the focus in the **resource** folder and we start to type "b", "e","n", the **Explorer** panel will set the focus to the **benchmark.php** or other file that starts with the chars "ben".
</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>29/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19513</IssueID>
    <Title>Feature Request: Select while jumping to matching bracket.</Title>
    <Description>I would like some alternative version of the `Ctrl`+`Shift`+`\` command, which jumps to the matching bracket, that also selects while jumping. The obvious modifier key to use for that distinction would be `Shift`, which sadly is already used by the original function, so I suppose it would have to be `Ctrl`+`Shift`+`Alt`+`\` or something.</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>28/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19505</IssueID>
    <Title>Lost space in preview mode</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:41:20.664Z)
- OS Version: Linux x64 4.4.0-59-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.6.1|
|EditorConfig|EditorConfig|0.3.4|
|jslint|ajhyndman|1.2.1|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.2|
|tslint|eg2|0.8.1|
|cpptools|ms-vscode|0.10.0|
|Spell|seanmcbreen|0.9.1|
|vim|vscodevim|0.5.2|

---
In split screen look like someone tired to fix the disappearing scrollbar bug, which still exist, but now I've lost a big chuck of screen real-estate which I would like returned. This is more so a problem in split view when I am looking am editing markdown file and looking at preview side by side.

![scrollbar](https://cloud.githubusercontent.com/assets/439226/22372941/7e02d664-e46d-11e6-892c-93c7a36b7c02.png)
 </Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>29/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19499</IssueID>
    <Title>Smoke Test: replace in search strange behavior</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.x
- OS Version: Windows

Steps to Reproduce:

1. Follow the smoke and search for body
2. Replace with body2
3. Select a match and press replace

Observe: the match is not removed since body still matches. I would not expect this.
</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>27/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19498</IssueID>
    <Title>Having parameters for tasks would be very useful</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.8.1
- OS Version: macOS 10.12.3

It would be very useful to have a way of prompting for additional arguments to tasks.
Something similar to the [snippet style](https://code.visualstudio.com/docs/customization/userdefinedsnippets#_creating-your-own-snippets) could be used to prompt for additional arguments.
This way tasks, or commands like the following could be done straight from vscode:

- `bin/rails g migration AddHostNameToUrl host_name:string`
  could be defined as: `bin/rails g migration ${1:MigrationName} ${2:field:type}` 
- `bin/rails db:rollback STEP=2`
  could be defined as: `bin/rails db:rollback STEP=${1}` 

These are examples for rails/rake, but the same applies to yeoman generators

- `yo angular:controller MyNewController`
  could be defined as: `yo angular:controller ${1:ControllerName}` 
</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>28/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19488</IssueID>
    <Title>The View &gt; Output menu item doesn't show its shortcut</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:41:20.664Z)
- OS Version: Linux x64 4.8.13-1-ARCH
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|fish|TeddyDD|0.0.4|
|vscode-eslint|dbaeumer|1.2.2|
|githistory|donjayamanne|0.1.5|
|python|donjayamanne|0.5.6|
|rest-client|humao|0.12.1|
|Go|lukehoban|0.6.52|
|MagicPython|magicstack|1.0.3|
|cpptools|ms-vscode|0.10.0|
|RustyCode|saviorisdead|0.19.1|
|vue|seanwash|0.4.2|
|vscode-lldb|vadimcn|0.3.2|

---

Despite the shortcut being part of the standard set of shortcuts (at least under Linux, it's Ctrl+K Ctrl+H)

Steps to Reproduce:

1. Check the default keybindings.json (Linux):
`{ "key": "ctrl+k ctrl+h",         "command": "workbench.action.output.toggleOutput" },`
2. Look at the View menu, the "Output" item has no shortcut listed. I spent a few minutes trying to add one only to find that it already existed, it just wasn't being shown in the menu.</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>30/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19486</IssueID>
    <Title>VS Code file icon leaks around</Title>
    <Description>I have no icon theme or anything alike configured but see icons for two files, in quick open as well as in the editor title

![screen shot 2017-01-27 at 11 30 06](https://cloud.githubusercontent.com/assets/1794099/22367873/1dd85f0e-e484-11e6-872e-e1679654e0cf.png)
</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>27/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19479</IssueID>
    <Title>Application data spread out on disk (Win10)</Title>
    <Description>Besides my installation directory, I have found that application data is stored in multiple places.

With the exception of my workspace specific stuff, I have found most (all?) of my settings in `%APPDATA%\Code - Insiders`. But then I find my extensions in `%USERPROFILE%\.vscode-insiders`.

Is this how it's supposed to be? Perhaps it's just me that find it cumbersome to locate everything.</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>28/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19471</IssueID>
    <Title>Close window dialogue gets shown multiple times on pressing 'Cancel'</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Sierra 10.12.2

**Steps to Reproduce:**

1. Create a new file
2. Put something into that file so that it brings up a dialogue when trying to close it
3. Press cmd-w (close window) multiple times
4. Click cancel

The same dialogue will come up multiple times rather than cancelling the rest of the stack of close commands.

**Possible expected results:**
- The rest of the commands are removed
- The focus moves to the next tab upon pressing cancel and that one is attempted to be closed instead

</Description>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>30/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19462</IssueID>
    <Title>iMac and weird background</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.8.1
- OS Version: 10.12.2

Steps to Reproduce:

1. Open any file in VS Code on an iMac with high resolution display.
2. See background color shift when you click around a file. See attachments.

&lt;img width="1157" alt="screen shot 2017-01-26 at 4 41 58 pm" src="https://cloud.githubusercontent.com/assets/7689996/22351519/67b54284-e3e6-11e6-918f-b579d1b742f6.png"&gt;
&lt;img width="2277" alt="screen shot 2017-01-26 at 4 39 45 pm" src="https://cloud.githubusercontent.com/assets/7689996/22351526/6b8ddcb8-e3e6-11e6-92f6-ccfc7422a9cb.png"&gt;
&lt;img width="2276" alt="screen shot 2017-01-26 at 4 39 34 pm" src="https://cloud.githubusercontent.com/assets/7689996/22351530/6f7c9530-e3e6-11e6-8eec-30a7048289e9.png"&gt;

</Description>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>27/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19447</IssueID>
    <Title>textEditor.insertSnippet: what does multiple ranges do?</Title>
    <Description>Testing #15952

Create the following extension:
```typescript
'use strict';
import * as vscode from 'vscode';

export function activate(context: vscode.ExtensionContext) {
    let disposable = vscode.commands.registerCommand('extension.sayHello', () =&gt; {
        if (!vscode.window.activeTextEditor) {
            console.log('No editor');
            return;
        }
        let doc= vscode.window.activeTextEditor.document;
        let lines= [ doc.lineAt(0).range, doc.lineAt(2).range];
        vscode.window.activeTextEditor.insertSnippet(new vscode.SnippetString('for (var ${1:i}=0; ${1:i}&lt;len; ${1:i}++) { $0 }'), lines);
    });

    context.subscriptions.push(disposable);
}
```

- run the extension, open an editor and run the 'hello world' command.
Only the first line is replaced. I somehow expected that the first and third line are affected.
</Description>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>27/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19428</IssueID>
    <Title>[WelcomeUX] Page is not scrollable</Title>
    <Description>Open welcome page with panels opened and you see that welcome page is not scrollable

![image](https://cloud.githubusercontent.com/assets/10746682/22327907/e756a640-e3b9-11e6-8f6e-becb34616a9b.png)
</Description>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19421</IssueID>
    <Title>Make PHP binary location configurable in user settings only</Title>
    <Description>
    </Description>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19410</IssueID>
    <Title>VSCode 1.8.1 ships with insecure node.dll 6.5.0</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 6.2.9200
---

Steps to Reproduce:

1. Install VSCode 1.8.1.
2. Check version of `C:\Program Files (x86)\Microsoft VS Code\node.dll`.

See https://nodejs.org/en/blog/release/v6.9.0/

It also causes reports in desktop vulnerability scanners like Secunia PSI. https://secunia.com/vulnerability_scanning/personal/

</Description>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19402</IssueID>
    <Title>Background color for theme is not applied</Title>
    <Description>Reproes on MacOS and Windows right now

- Switch 'color theme' to "Tomorrow Night Blue" or "Red"
- The editor background color is the same generic dark color, not blue/red

Was this changed on purpose?</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19399</IssueID>
    <Title>VSCode does not like inline CSS</Title>
    <Description>We all know inline CSS is a really bad practice and should be avoided at all costs by any web developer. Yeah, right. But VS Code seems to be taking this rather too seriously and applying bad formatting to any HTML after a style attribute in HTML document, shifting every line after the rotten one to the left, therefore messing the indentation completely.

## How to reproduce

1. Open a new VS Code window
2. Set language to HTML (Control+K, M then type HTML)
3. Paste in the following code:


```
&lt;html&gt;  
    &lt;body&gt;
        
        &lt;div style="border:1 px solid red"&gt;I'm a block element&lt;/div&gt;
        &lt;p&gt;I'm a paragraph&lt;/p&gt;
        &lt;p&gt;I'm a second paragraph&lt;/p&gt;
        &lt;p&gt;I'm a third paragraph&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;

```
4. Format code with Control+Shift+F

And it's done! The code will look like this:


```
&lt;html&gt;

&lt;body&gt;

    &lt;div style="border:1 px solid red"&gt;I'm a block element&lt;/div&gt;
&lt;p&gt;I'm a paragraph&lt;/p&gt;
&lt;p&gt;I'm a second paragraph&lt;/p&gt;
&lt;p&gt;I'm a third paragraph&lt;/p&gt;
&lt;/body&gt;

&lt;/html&gt;
```

Notice the 3 empty lines and how the `&lt;p&gt;` tags have shifted leftwards?

Tested on version 1.8.1</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19391</IssueID>
    <Title>Background color not right for themes whose bgcolor is neither black or white</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: Insiders dated 2017-01-25
- OS Version: Windows

Steps to Reproduce:

1. Change theme to anything which doesnt have a black or white background. Like
- Tomorrow night blue
- Red
- Solarized Dark
- Solarized Light

The foreground colors match between stable and insiders.
But the background color in insiders is only either black or white.

Its black.. or white... feel like breaking into MJ's song here...
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19383</IssueID>
    <Title>The refresh button in left side bar (EXPLORER) is not working properly. When click, it doesn't refresh!</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 16.4.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-docker|PeterJausovec|0.0.11|
|llvm|RReverser|0.0.1|
|cpptools|ms-vscode|0.9.3|
|cmake|twxs|0.0.15|
|clang-format|xaver|1.0.0|

---

Steps to Reproduce:

1. Open a folder. Open the EXPLORER.
2. Remve some files in the folder.
3. Click the refresh button in EXPLORER, you will find the deleted files are still displayed.</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19379</IssueID>
    <Title>Split Command Terminals</Title>
    <Description>Along with selecting different terminal instances with the available drop down menu, having the option to visually split command terminals would facilitate for more precise monitoring and control.

![vscodeterminals](https://cloud.githubusercontent.com/assets/933921/22298778/c0f1c4a0-e2ef-11e6-95a0-d967e4e12767.png)
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19378</IssueID>
    <Title>Integrated terminal's width not adjusted correctly when window is maximized</Title>
    <Description>- VSCode Version: 1.9.0-insider
- OS Version: Windows 10 14986

Steps to Reproduce:

1. Open VSCode (restored)
2. Open integrated terminal (I am using WSL Bash in it, not sure if it matters)
3. Maximize the window
4. Type a long line in the integrated terminal.

As a result, the line will wrap at that point where it would have wrapped in the non-maximized window, but it won't even wrap into the next line, but just start at the left side of the same line again.

Screenshot: https://i.imgur.com/XXy0nl5.png

Note that resizing the window while it is not maximized will work fine.</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19376</IssueID>
    <Title>Black rectangles which disappear on hover-induced repaint</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 16.3.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|base16-themes|AndrsDC|1.0.6|
|vscode-multi-line-tricks|bigous|0.0.3|
|Theme-OceanKit|chipcollier|0.0.2|
|vscode-babel-coloring|dzannotti|0.0.4|
|theme-base16-ocean|golf1052|1.0.1|
|spacegray-vscode|ionutvmi|1.1.4|
|sublime-babel-vscode|joshpeng|0.2.4|
|theme-charcoal-oceanicnext|joshpeng|1.1.4|
|vscode-colorize|kamikillerto|0.1.2|
|Oceanic-Next|mhartington|0.0.1|
|theme-oceanicnext|naumovs|0.0.4|
|vscode-parinfer|shaunlebron|0.4.0|

---

Steps to Reproduce:

1. Open sidebar
2. Not sure exactly...
3. Close sidebar
4. A wild Black Rectangle appears on the right-hand side of the screen
5. Hover over said rectangle
6. Rectangle disappears

I'm not sure exactly what triggers it but I will update with details and screenshots if I notice it again. I'm hoping this is a known or recognizable issue from this description. Thanks for your hard work, VSCode folks! It has been a pleasure to use so far.</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19370</IssueID>
    <Title>git-bash integration truncate some multiline command outputs</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- VSCode Version: Code - Insiders 1.9.0-insider (fbea777a881523bc01a1358d115b16673dc5942e, 2017-01-25T07:12:18.506Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
fake-extension-1|author|0.0
fake-extension-2|author|0.0
---

Steps to Reproduce:

1. Install some extensions, or be sure you already have at least 2.
2. If you want you can deactivate all extensions in order to be sure none of them can interfere with the test.
3. Set in your settings:
`"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"`
4. Then open new integrated terminal
`Terminal: Create New Integrated Terminal`
5. Execute command:
`$ code --list-extensions`

As you can see only the first line is shown. You can see expected output with command `$ code --list-extensions | cat`.

I don't know why this command show bad output while others like `code --help`  works well.</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19363</IssueID>
    <Title>Git Pull command is not working</Title>
    <Description>Testing #19049 

![jan-25-2017 14-54-41](https://cloud.githubusercontent.com/assets/10746682/22293023/5416bc7c-e30e-11e6-9b81-7c5adf327132.gif)
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19361</IssueID>
    <Title>inline values: debugger UI holds onto some state which confuses future debug sessions</Title>
    <Description>while debugging #18670:

- use this program: `var x = 123;`
- set breakpoint on that line and then start debugging
- step over the line

Observe: inline value is shown for 'x'

- rename variable x to 'x1'
- start debugging
- step over the line

Observe: no inline values are shown for 'x1'

- reload window
- start debugging
- step over the line

Observe: inline values are shown for 'x1'

It seems that the VS Code UI holds onto some state which confuses future debug sessions

</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19357</IssueID>
    <Title>Auto suggestion dialog moving up &amp; down as I navigate between suggestions</Title>
    <Description>- VSCode Version:

Version 1.9.0-insider
Commit 4265f5e35cb3ea8ba7e0cf6b14ec606b6f8647ea
Date 2017-01-24T10:27:29.525Z
Shell 1.4.6
Renderer 53.0.2785.143
Node 6.5.0

- OS Version:

Ubuntu 14.04

Steps to Reproduce:

Look at the screen cap

![dancing suggestions](https://cloud.githubusercontent.com/assets/452518/22291729/dc85b9cc-e32d-11e6-95ae-c28a35fbffcf.gif)
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19338</IssueID>
    <Title>[Enhancement Request] Remove specific sub-folder from Explorer</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vim|vscodevim|0.5.2|

---

Steps to Reproduce:

1. Select a folder (A) through Open Folder...
2. From list of sub-folders of A select a folder (B).
3. Right-click to open sub-menu.
4. "Remove" option required besides "Del", that removes B from the open list but not remove from the hard-disk to Trash/Recycle bin.
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19318</IssueID>
    <Title>Strange selection behavior in markdown editor</Title>
    <Description>Testing #19089 

In the example below, double clicking at this cursor position results in an odd selection behavior where the bracket on the previous line gets selected
![image](https://cloud.githubusercontent.com/assets/762848/22273360/2d195a6c-e255-11e6-8862-d46e190904b4.png)

![image](https://cloud.githubusercontent.com/assets/762848/22273355/1fc6efb4-e255-11e6-8b8d-9ea0d51fe776.png)
</Description>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19296</IssueID>
    <Title>Double Edit icons: one for click another for hover        </Title>
    <Description>Testing #19059

Click on any of the default settings. You will get an edit icon on the left.
Now hover around. You get another

![image](https://cloud.githubusercontent.com/assets/16890566/22270364/05241fc6-e244-11e6-8fbe-6fab4f995da9.png)
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19294</IssueID>
    <Title>Formatting broken while copying settings</Title>
    <Description>Testing #19059

Have some settings set in your user/workspace settings and format the file.
Ensure one of the settings is such that it needs a json object as value.
For eg:

![image](https://cloud.githubusercontent.com/assets/16890566/22270197/5c7e5c10-e243-11e6-8e08-393ebe139255.png)

Now copy a setting from the default settings view

![image](https://cloud.githubusercontent.com/assets/16890566/22270217/6d9b51ce-e243-11e6-858f-6b82505e976d.png)


Formatting is broken :(

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19290</IssueID>
    <Title>SCM 'Sync' and 'publish' commands should be disabled when there is no remote</Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/19049

In the Git viewlet, 'sync' and 'publish' under the '...' menu are disabled when the repo has no remotes. In the SCM viewlet, when I click 'sync', I see `fatal: No remote repository specified. Please, specify either a URL or a`. In the git output log, I see that there's a newline in the message at that point. Maybe when git output is shown directly as a notification, lines should be joined.</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19288</IssueID>
    <Title>Terminal not updating view correctly. Backspace not removing all characters on screen</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|Arduino|moozzyk|0.0.4|
|cpptools|ms-vscode|0.9.2|
|cmake|twxs|0.0.15|
|cmake-tools|vector-of-bool|0.7.4|

---

User Settings:
"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"

![image](https://cloud.githubusercontent.com/assets/7513089/22269046/c202371e-e257-11e6-9fa7-a91ce22ff113.png)

I have also seen other instances where other areas of the screen are not updated correctly, for example when using vim. I do not have a screenshot of this, though.

Steps to Reproduce:

1. Open Terminal
2. Type "git status"
3. Press backspace rapidly until line is gone (leaves behind characters)</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19284</IssueID>
    <Title>No debugging without launch.json file when using debugger from extension</Title>
    <Description>Testing #18397 on Windows

- I have the Go extension installed and Go workspace opened with no launch.json file.
- There is a Go file opened in the active editor.
- I have added a breakpoint
- I click on the gear button in the debug side pane to create the launch.json file and there is a pop up asking me to choose the environment.
- I chose Go

Nothing happens. Debugger is not started.

In case you don't have Go and the Go extension installed, follow the below steps:
1. Install [Go](https://golang.org/doc/install#install)
2. Setup GOPATH
       1. Choose a folder where you will be having the Go projects
       2. Add env variable GOPATH with value as the above folder path
       3. Create 3 folders "src", "bin" and "pkg"
3. Run `go get github.com/golang/example/hello`
4. Install the Go extension by lukehoban and open the folder $GOPATH/src/GitHub.com/golang/example/hello in VS Code
5. Open the `hello.go` file. You will see "Analysis Tools Missing" in the status bar. Click on it to install the Go tools that the extension needs.

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19277</IssueID>
    <Title>"terminal.integrated.scrollback": 0 results in funny terminal behavior</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

Test: https://github.com/Microsoft/vscode/issues/19071

- VSCode Version: 1.9
- OS Version: Windows

May be we should have a minimal scrollback value. 
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19257</IssueID>
    <Title>Allow to define custom keybindings for navigation in quick peek</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.8.1
- OS Version: Windows 10

As a vim user, i'd like to change Up/Down arrows in quick peek (displayed via ```vs.window.showQuickPick```) to ctrl+p/ctrl+n but seems it's not currently possible.</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>26/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19256</IssueID>
    <Title>Unwanted line breaks in debug console output</Title>
    <Description>
- VSCode Version: VS Code Insiders 1.9

Actual:

![image](https://cloud.githubusercontent.com/assets/10532611/22261642/f824dd7c-e26d-11e6-9c8b-d515784b8a09.png)

Expected:

![image](https://cloud.githubusercontent.com/assets/10532611/22261666/146a30c2-e26e-11e6-9d01-65a0fda38313.png)
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19240</IssueID>
    <Title>Completion proposals stay after backspacing first character</Title>
    <Description>- VSCode Version: Code - Insiders 1.9.0-insider (4265f5e35cb3ea8ba7e0cf6b14ec606b6f8647ea, 2017-01-24T10:29:13.076Z)
- OS Version: Darwin x64 15.6.0
- Extensions: None

Steps to Reproduce:

1. Open empty html file
2. Type: foo`&lt;space&gt;`f
3. Completion proposal for `foo` shows
3. Type `&lt;backspace&gt;`
4. Expected: Proposal for `foo` goes away because `f` was deleted
5. Actual: Proposal for `foo` stays
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19233</IssueID>
    <Title>Typo in task info message</Title>
    <Description>while testing #19044:

"intergrated" -&gt; "integrated":
![2017-01-24_18-09-26](https://cloud.githubusercontent.com/assets/1898161/22258036/4b945a36-e260-11e6-92be-1bb5560e6a75.png)

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19230</IssueID>
    <Title>Allow having more than 3 code windows open simultaneously</Title>
    <Description>This limitation seems fairly arbitrary, and when working with "skinnier?" files it'd be nice to have more than 3 open at once. Especially with ultra-wide monitors.
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>30/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19228</IssueID>
    <Title>Integrated Shell does not match Shortcut keys in linux terminal-emulator</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `Version 1.8.1`
- OS Version: `Linux MBP 4.8.0-34-generic #36-Ubuntu SMP Wed Dec 21 17:24:18 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux`

Steps to Reproduce:

1. do `echo test@test` in ubuntu/gnome terminal emulator
2. doubleclick to select whole string
3. do `echo test@test` in vscode integrated shell
4. doubeclick only selects partial string, `@` character breaks selection

1. CTRL+K and CTRL+U works as expected in ubuntu/gnome terminal emulator
2. CTRL+K and CTRL+U has odd behaviour in vscode integrated shell
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19221</IssueID>
    <Title>How to get around "JS" debugging output limit?</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-standard-format|chenxsan|0.0.12|
|gitignore|codezombiech|0.5.0|
|javadebugger|donjayamanne|0.0.2|
|git-project-manager|felipecaputo|1.0.1|
|php-debug|felixfbecker|1.10.0|
|terminal|formulahendry|0.0.6|
|file-ext-switcher|JohannesRudolph|2.0.1|
|mssql|ms-mssql|0.2.0|
|cpptools|ms-vscode|0.9.3|
|csharp|ms-vscode|1.6.2|
|PowerShell|ms-vscode|0.9.0|
|debugger-for-chrome|msjsdiag|2.4.2|
|debugger-for-edge|msjsdiag|0.4.1|
|debugger-for-ios-web|msjsdiag|0.1.2|
|qub-xml|qub|0.3.0|
|yo|samverschueren|0.9.3|
|python-extended-snippets|tushortz|0.0.1|
|unity-debug|Unity|1.1.0|
|html-css-class-completion|Zignd|1.0.3|

---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>30/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19209</IssueID>
    <Title>Chrome debug process left lying around</Title>
    <Description>OS X
refs: https://github.com/Microsoft/vscode/issues/19110

1. Take the latest chrome debug vsix from [here](https://github.com/Microsoft/vscode/issues/19110#issue-202734053)
2. Install it in insiders and open vscode repository, choose launch vscode
3. Notice how the debugger can not attach - this is captured in a different bug
4. Stop the debug session, click on stop twice - this should kill the debug extension
5. Activity monitor - however the chrome extension is still running with 100% cpu as a code helper

Assigning to @weinand since he authored this [code](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/electron-browser/rawDebugSession.ts#L493) and @roblourens  since his extension seems to go into a weird state

![screen shot 2017-01-24 at 15 31 28](https://cloud.githubusercontent.com/assets/1926584/22251178/32726cca-e24a-11e6-8e6a-443b54279769.png)
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19202</IssueID>
    <Title>Drop of .vsix into extensions viewlet should install it</Title>
    <Description>
    </Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19179</IssueID>
    <Title>Settings: find it weird to see 2 edit icons at the same time</Title>
    <Description>This almost looks like a bug:

![image](https://cloud.githubusercontent.com/assets/900690/22246523/969e4d6e-e235-11e6-984e-7b9765df5928.png)

I suggest to just always show 1 edit icon since I can only ever click on one anyway.
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19175</IssueID>
    <Title>Welcome: shorten home path with ~ (Linux, macOS)</Title>
    <Description>Testing: https://github.com/Microsoft/vscode/issues/19111

Just an idea to maybe align our display of recent paths to use "~" if it matches the home path:

![image](https://cloud.githubusercontent.com/assets/900690/22246149/a94985ca-e233-11e6-9fde-d197ba60ed13.png)

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19165</IssueID>
    <Title>Welcome: overlay is not in sync with what is going on in the workbench</Title>
    <Description>Testing: https://github.com/Microsoft/vscode/issues/19111

Our UI is dynamic, not only in the viewlet bar but also status bar. The overlay will quickly get out of sync:

![image](https://cloud.githubusercontent.com/assets/900690/22245696/9f18ccac-e231-11e6-9fcd-dc36b2451aa8.png)

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19147</IssueID>
    <Title>I would expect tab area to shrink when tabCloseButton: "off"</Title>
    <Description>Refs #18771

1. "workbench.editor.tabCloseButton": "off"
2. Tab area still leaves an empty space in the right for the close button even though I just disabled it
3. I would expect the tab area to shrink as I believe that is the primary motive for hiding the clsoe button - to save space!

I know that you keep that space to show when a file is dirty, but if a file gets dirty the tab area should grow automatically imho
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19145</IssueID>
    <Title>Right click on tab close button immediatly closes the tab</Title>
    <Description>Refs: #18771

1. showTabs
2. right click on the tab X button. The tab is immediatly closed on mouse down
3. I would expect the context menu to be shown as is in all editors</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19139</IssueID>
    <Title>Inserting language sepcific setting uses unusal formatting</Title>
    <Description>Test: https://github.com/Microsoft/vscode/issues/19060

- VSCode Version: 1.9
- OS Version: Windows

Steps to Reproduce:

1. Insert a markdown specific language setting
2. My settings file looks like this afterwards:
```json
{
	"editor.renderWhitespace": "boundary",
	"editor.tabSize": 4,
	"editor.insertSpaces": false,
	"files.autoSave": "afterDelay",
	"files.autoSaveDelay": 1000,
	"explorer.openEditors.visible": 0,
	"tslint.enable": false,
	// "editor.fontFamily": "helvetica",
	"editor.fontFamily": "hack",
	"editor.fontLigatures": false,
	"editor.fontSize": 13,
	"editor.folding": false,
	"workbench.settings.openDefaultSettings": false,
	"workbench.editor.showTabs": true,
	"workbench.editor.enablePreview": false,
	"workbench.editor.enablePreviewFromQuickOpen": false,
	"editor.snippetSuggestions": "bottom",
	"typescript.check.tscVersion": false,
	"git.confirmSync": false,
	"window.zoomLevel": 0,
	"security.workspacesTrustedToSpecifyExecutables": {
		"P:\\mseng\\VSCode\\vscode": true
	}
,
"[markdown]": {
		
	}
}```

Would have expected:

```json
{
	"editor.renderWhitespace": "boundary",
	"editor.tabSize": 4,
	"editor.insertSpaces": false,
	"files.autoSave": "afterDelay",
	"files.autoSaveDelay": 1000,
	"explorer.openEditors.visible": 0,
	"tslint.enable": false,
	// "editor.fontFamily": "helvetica",
	"editor.fontFamily": "hack",
	"editor.fontLigatures": false,
	"editor.fontSize": 13,
	"editor.folding": false,
	"workbench.settings.openDefaultSettings": false,
	"workbench.editor.showTabs": true,
	"workbench.editor.enablePreview": false,
	"workbench.editor.enablePreviewFromQuickOpen": false,
	"editor.snippetSuggestions": "bottom",
	"typescript.check.tscVersion": false,
	"git.confirmSync": false,
	"window.zoomLevel": 0,
	"security.workspacesTrustedToSpecifyExecutables": {
		"P:\\mseng\\VSCode\\vscode": true
	},
	"[markdown]": {
		
	}
}
```

@sandy081 FYI. 
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19135</IssueID>
    <Title>Cannot open settings in non-folder mode</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.x
- OS Version: macOS

Steps to Reproduce:

1. create new window
2. open settings

Observe:
![2017-01-24_11-09-36](https://cloud.githubusercontent.com/assets/1898161/22242940/99fe357e-e225-11e6-8b32-cb7641b1ef45.png)

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19134</IssueID>
    <Title>Auto wrapping too much when using non-monospace font</Title>
    <Description>Testing #19061 

Have the following snippet in an editor buffer, with `editor.fontFamily` set to `Arial` and `editor.wrappingColumn` set to `0`.

```js
/**
 * @param {Array&lt;string&gt;} [plugins=['defaults']] - plugins to enables @param {Array&lt;string&gt;} [plugins=['defaults']] - plugins to enables @param {Array&lt;string&gt;} [plugins=['defaults']] - plugins to enables @param {Array&lt;string&gt;} [plugins=['üdefaults']] - plugins to enables plugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enablesplugins to enables
 */
define(['modules/interface'], function (i) {
  console.log(i);
})
```

You'll notice the editor is wrapping more than it should:

![image](https://cloud.githubusercontent.com/assets/22350/22242896/691f6db0-e225-11e6-84d5-0347cd4b3fd6.png)

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19129</IssueID>
    <Title>No scrollbar visible in the Markdown preview when having a vertical editor layout</Title>
    <Description>Testing  #19082

There is no vertical scrollbar in the Markdown preview

![no-scrollbar](https://cloud.githubusercontent.com/assets/5047891/22241946/c55802b2-e221-11e6-8506-5a513c6361d9.gif)
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19124</IssueID>
    <Title>Existing launch.json not recognized</Title>
    <Description>Version 1.9.0-insider
Commit 61a56dbf6e80b6732381349e4654e3ae5f0710f4
Date 2017-01-24T08:05:06.845Z

- clone https://github.com/Microsoft/vscode-css-languageservice.git
- open workspace, go to the debug viewlet

The config drop down says: 'No configurations', not recognizing the existing Node launch config.
![image](https://cloud.githubusercontent.com/assets/6461412/22241501/e809e444-e21f-11e6-9abc-6f8b6a37511a.png)
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19122</IssueID>
    <Title>cannot open settings</Title>
    <Description>on a fresh insiders install on a fresh VM (windows 8), *without* having a folder open, I see this:

![jan-24-2017 10-26-50](https://cloud.githubusercontent.com/assets/1794099/22241454/b47265fc-e21f-11e6-9eb8-712c3eb24abb.gif)

```
shell.ts:437Cannot read property 'toString' of null: TypeError: Cannot read property 'toString' of null
    at new t (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:118:5388)
    at g (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:30:23409)
    at t._createInstance (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:65:14239)
    at t.createInstance (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:65:13009)
    at t.createPreferencesRenderer (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:118:4749)
    at file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:118:3582
    at then (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:32:19172)
    at t.onModelChanged (file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:118:3537)
    at file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:118:3329
    at file:///C:/Program Files/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:30:27507e.onUnexpectedError @ shell.ts:437
winjs.base.js:45WARNING: Promise with no error callback:82
winjs.base.js:46Object
winjs.base.js:48TypeError: Cannot read property 'toString' of null
    at new t (preferencesEditor.ts:590)
    at g (types.ts:168)
    at t._createInstance (instantiationService.ts:162)
    at t.createInstance (instantiationService.ts:78)
    at t.createPreferencesRenderer (preferencesEditor.ts:560)
    at preferencesEditor.ts:504
    at then (winjs.base.raw.js:1566)
    at t.onModelChanged (preferencesEditor.ts:502)
    at preferencesEditor.ts:494
    at event.ts:217
```</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19118</IssueID>
    <Title>git reset -p : Reset line per line (and maybe per block too)</Title>
    <Description>it would be super nice to have the equivalent of `git reset -p`.

We can add and remove selectively what we want to be in staging or not, but I haven't find an option to reset lines/blocks.

Thanks for VSC, it's awesome :heart: !

</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19108</IssueID>
    <Title>False error with sass in Ionic2 project</Title>
    <Description>
![capture025](https://cloud.githubusercontent.com/assets/140737/22234942/fdbeabfe-e1b0-11e6-9995-1636ac8b1fac.PNG)

- VSCode Version:
1.8.1

- OS Version:
Windows 10

Steps to Reproduce:
See example
</Description>
    <CreatedDate>24/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19087</IssueID>
    <Title>RPM package has incomplete list of dependencies</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: CentOS 7.3 (x64)

Steps to Reproduce:

1. Install CentOS 7.3 minimal ISO to a new VM
2. sudo yum install code-1.8.1-1482158209.el7.x86_64.rpm
3. code .

Expected:
VS Code to start

Actual:
VS Code crashes, saying it cannot find libgtk-2.0.so
I then manually installed the "gtk2" rpm to meet the missing dependency.

VS Code still crashes, saying it cannot find libXtst.so.
I installed the "libXtst" rpm

VS Code still crashes, saying it cannot find libgconf-2.0.so
I installed the "GConf2" rpm

VS Code starts, but immediately and silently exits. Running with the --verbose option eventually points to a failure to locate a "sans" font.

I installed the "gnu-free-sans-fonts" rpm
VS Code successfully starts and is operational.

So it seems like the above 4 packages should be added as package dependencies, to avoid the user having to manually find/install additional packages.
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19055</IssueID>
    <Title>vscode-insiders embed terminal behavior since 1.9.0</Title>
    <Description>Hi!

I've an issue with latest update.

```
Version 1.9.0-insider
Commit 882244ea24cb0b89a9a0c6c649c8f857fb0bc408
Date 2017-01-23T07:03:07.900Z
Shell 1.4.6
Renderer 53.0.2785.143
Node 6.5.0
```

OS: Debian 8

Steps to Reproduce:

1. Launch `vim` in the embed terminal

Used to work before `1.9.0`. Now I can't do my `git commit` command anymore because it does open the `$EDITOR`. 

Nano, less etc. are still working. Therefore, I think it has to do with my vim configuration. What are recent changes that could affect this? Note that `vi` prints black on black.  
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19053</IssueID>
    <Title>Settings header links differ from panel header links</Title>
    <Description>- VSCode Version: Code - Insiders 1.9.0-insider (882244ea24cb0b89a9a0c6c649c8f857fb0bc408, 2017-01-23T07:12:16.134Z)
- OS Version: Windows_NT ia32 10.0.14986
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-svgviewer|cssho|1.3.0|
|EditorConfig|EditorConfig|0.3.4|
|git-project-manager|felipecaputo|1.0.1|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|seti-icons|qinjia|0.1.3|
|lorem-ipsum|Tyriar|1.0.0|
|terminal-tabs|Tyriar|0.1.1|
|theme-glacier|Tyriar|0.0.10|

---

Inconsistencies:

- Panel headers have title attributes showing name and keybinding
- Settings text is larger than panel text (despite being lower in the hierarchy)
- Panel has no mousedown feedback
- Active item underline differs
- Inactive item text color differs

**Panel**

Hover debug console:

![image](https://cloud.githubusercontent.com/assets/2193314/22212268/dd510b44-e144-11e6-9195-0dcab5cc4564.png)

**Settings**

![image](https://cloud.githubusercontent.com/assets/2193314/22212294/f7980ae8-e144-11e6-9639-328ee4a63301.png)

Hover workspace settings:

![image](https://cloud.githubusercontent.com/assets/2193314/22212273/e5e59e64-e144-11e6-8a49-de622ebc56a4.png)

Mouse down workspace settings:

![image](https://cloud.githubusercontent.com/assets/2193314/22212307/09c43bf6-e145-11e6-9174-b467531ab5f1.png)

User settings focused without mouse over:

![image](https://cloud.githubusercontent.com/assets/2193314/22212388/5f6d1afa-e145-11e6-9ace-3c79a6a0869b.png)
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19038</IssueID>
    <Title>Welcome inteface overivew only dismissed on mouse click</Title>
    <Description>1. Welcome experience interface overview should also be dismissed on any key down, not only on mouse press.
2. Or at least it should be dismssed on ESC as most of our UI</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19037</IssueID>
    <Title>Welcome overlay does not respect if I have viewlets hidden</Title>
    <Description>1. Hide explorer
2. Click on the welcome overview
3. Notice how all the arrows are pointing to the wrong viewlets -&gt; very confusing

![screen shot 2017-01-23 at 16 20 23](https://cloud.githubusercontent.com/assets/1926584/22209749/edebe698-e187-11e6-842d-0e2aa9db6e0c.png)
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19032</IssueID>
    <Title>Explorer hide empty folder?</Title>
    <Description>Hello! How to hide empty folders through files.exclude?</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19029</IssueID>
    <Title>Go to File includes files that are excluded by files.exclude/search.exclude</Title>
    <Description>My build process compiles files to public/*.html, and i'm trying to exclude the compiled files from search and Go to File.

My workspace settings looks like this:

```json
{
    "search.exclude": {
        "**/.git": true,
        "**/node_modules": true,
        "**/public": true,
        "**/bower_components": true
    },

    "files.exclude": {
        "**/public": true
    }
}
```

The settings seems to be applied to search and file explorer, but it's still appearing in the Go to File results.

I can't find any option in the default config that applies specifically to the Go to File results.

- VSCode Version: 1.8.1
- OS Version: OSX Sierra 10.12.1

Steps to Reproduce:

1. Apply the settings above to your workspace
2. Create a couple `.html` files in a folder called `public`
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19020</IssueID>
    <Title>[folding][general] New option for Code Folding Indicator [+]/[-]</Title>
    <Description>Is it already possible to make the Folding Indicators stay visual and not only show them on hovering over the Space next to the Number or not?

If it is please tell me how/where.

If not why not i think this was requested multiple times.
I think this could be done with setting:

"editor.folding" 

just make it a triple select [false, hover, always] instead of just [true, false]</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19019</IssueID>
    <Title>Customizable Explorer model</Title>
    <Description>Please allow customization of the Explorer (files &amp; folders side bar) model to allow opening files from sources other than the plain file system/directory structure.

Examples include allowing to view/edit the contents of a ZIP file containing the project files or viewing/editing code packaged in proprietary binary formats like Oracle's FMB or PLL files.
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19014</IssueID>
    <Title>Editors are identified case-sensitively on case-insensitive file systems leading to multiple editors for the same underlying file</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Windows 10

Steps to Reproduce:

On Windows:
1. Open the same file twice via the command line but using different case, ie, `code foo` and `code FOO`.
2. There will be two editors open despite being backed by the same underlying file.

This is not limited to just the command line API, ie, a debugger can open up a file with a different case than what is present on the file-system which ends up causing breakpoints to not display properly.</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19013</IssueID>
    <Title>Search &amp; Replace text with blank string does not work</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: 1.9.0 - insider
- OS Version: macOS Sierra Version 10.12.2

Steps to Reproduce:

1. Select a text to replace with blank string (zero length string).
2. Press cmd-opt-F to open search-replace box.
3. Ensure that the selected text is now in the first textbox of search-replace box.
4. Ensure nothing is typed in second textbox (Replace) of search-replace box.
5 Click on 'Replace' or 'Replace All' buttons (adjacent to replace textbox).

**Expected Result**: 
Occurrences of text on search box should get replaced by blank zero length string (regular normal behaviour in any rext editor).

**Actual Result**:
Nothing happens!
</Description>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19005</IssueID>
    <Title>Git Bash integrated terminal odd behaviour</Title>
    <Description>A few integrated terminal commands using Git Bash have some odd behavior right off the bat with this newest release of Insider.

The `clear` command results in:
```
$ clear
'bash.exe': unknown terminal type.
```

`vim` results in:
```
$ vim Vagrantfile
E437: terminal capability "cm" required
Press ENTER or type command to continue
```
Then after pressing enter, vim launches but all the spacing is messed up.

Also, backspace just adds spaces now.  And it seems like the up/down keys just keep appending previous commands rather than cycling through them.

Let me know if there is any testing needed on my end.

- VSCode Version: Code - Insiders 1.9.0-insider (ee9d91c05fa571de56c41383cceee30b05b0a2f6, 2017-01-20T15:08:19.064Z)
- OS Version: Windows_NT ia32 10.0.14986
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-instant-markdown|dbankier|0.2.1|
|python|donjayamanne|0.5.6|
|cpptools|ms-vscode|0.9.3|
|vscode-docker|PeterJausovec|0.0.11|
|vscode-icons|robertohuertasm|7.0.1|
|vim|vscodevim|0.4.11|
|vscode-todo-highlight|wayou|0.3.3|

---

Steps to Reproduce:

1.  Set C:\\Program Files\\Git\\bin\\bash.exe as integrated windows terminal
2.  Launch integrated terminal
3.  Type commands to view odd behaviour</Description>
    <CreatedDate>22/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>19000</IssueID>
    <Title>split panel</Title>
    <Description>Could u add option to have 2 panels side by side. I usually switch between problem and terminal. I would be great if u could have them side by side</Description>
    <CreatedDate>22/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18998</IssueID>
    <Title>Trimming trailing spaces based on file type</Title>
    <Description>Hi there,

I love auto trimming trailing spaces but I had to turn it off because in certain file types it breaks the syntax. For instance Jade/Pug.
It would be great if I could specify where the trimming would be disabled. Something like:

```json
files.trimTrailingWhitespaceExclude: [
    ".jade",
    ".pug",
]
```

Just simple extension recognition would do the job.

Thank you in advance.</Description>
    <CreatedDate>22/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18995</IssueID>
    <Title>how select multi file from explorer</Title>
    <Description>shift not worked. have other way?</Description>
    <CreatedDate>22/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18983</IssueID>
    <Title>[WelcomeUX]  Misaligned keyboard Shortcut in Interface Overview</Title>
    <Description>Testing #18091 

MacOS

the shortcut is not centered with the text for problems view.  All other seam ok...

![image](https://cloud.githubusercontent.com/assets/1051190/22176538/f63e4330-dfc1-11e6-9d9d-4381c4a132ac.png)
</Description>
    <CreatedDate>21/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18977</IssueID>
    <Title>Feature request: add API to add custom icons and functionality behind it to left bar.</Title>
    <Description>Currently on **left side bar** VSCode have **only 5 icons** (explorer, search, git, debug, extensions).
**Below** this icons there is really huge **empty area**.

It would we great if we will have some **API to add custom icons** to this area and assign some command to it (as I know there is _such possibility but only for bottom bar_).

 Some action require couple step to perform it (run some command):
 - _open command palette_
 - _search some command and perform it_
 - _if in current command there is subcommands we need to perform couple command selection..._

We can avoid this buy adding special icon with assigned action to left bar - **only on click** to perform some **command** (it will save us a lot of time during development).


For example on _Atom_ there is extension _"tool-bar"_ https://atom.io/packages/tool-bar that implement such functionality:

![1485005635732](https://cloud.githubusercontent.com/assets/14540860/22174786/169c74d0-dfef-11e6-91f9-0e9d09fa22eb.png)
  

**Huge empty area:**

![1485005292896](https://cloud.githubusercontent.com/assets/14540860/22174824/44fa5f62-dff0-11e6-99ff-cd9c2c197707.png)


</Description>
    <CreatedDate>21/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18968</IssueID>
    <Title>missing dependency on 'libxss1' for Debian/Ubuntu package</Title>
    <Description>Hi

- VSCode Version: 1.8.1-1482158209
- OS Version: Debian 7.11 (x86_64)

Steps to Reproduce:

1. Launch VS Code
```
doru@r2:~$ code
/usr/share/code/bin/../code: error while loading shared libraries: libXss.so.1: cannot open shared object file: No such file or directory
```

Steps to Fix:

1. Install missing package
`root@r2:~# apt-get install libxss1`

Thanks</Description>
    <CreatedDate>21/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18956</IssueID>
    <Title>"jump to bracket" doesn't scroll to reveal cursor</Title>
    <Description>- Have a file with some matched brackets:

```
function foo() {

}
```

- Scroll so that one bracket is out of the viewport
- Put the cursor on the other bracket and press cmd+shift+\

The cursor goes to the other bracket out of the viewport, but the editor doesn't scroll to bring it into the viewport. If I press an arrow key, then it's revealed.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18953</IssueID>
    <Title>Prompts aren't focused for keyboard selection.</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Windows 10 Pro

The default behaviour is for the focus is to remain on the editor and not move to the prompt for easy selection using the keyboard (i.e. left &amp; right arrow keys). This forces users to have to reach for their mouse.

Example:
![Alt Text](http://i.imgur.com/7kvh9ta.png "grr")

Steps to Reproduce:

1. Do anything that causes a prompt to be displayed (i.e. try to run a task without terminating an existing task)
2. Result, focus returns to the text editor view and not to the prompt.

This would be really great if this could be implemented and I don't think anyone would disapprove.
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18945</IssueID>
    <Title>[WelcomeUX] Interactive Playground: Click on File explorer, recent file opens</Title>
    <Description>Testing #18091

- Open the interactive playground
- Click on the icons in the side bar (Git, extensions, search, .. explorer)
- Notice that when you click on explorer, 
   - if no other file is open, then previously most recent opened file opens in a new editor.
   - if there was an editor with a file open, then that editor becomes the active editor</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18943</IssueID>
    <Title>[WelcomeUX] Create new file should make the overlay disappear</Title>
    <Description>Testing #18091 on OS X El Capitan

- Click on the interface overview and wait for the overlay to appear
- Use either the keyboard shortcut or the File menu to create a new file
- New file gets created and you can type there !! And overlay is still there too!

- Or use the command pallet to open a file (Cmd+P)
- The file opens and you can type!! And overlay is still there too!

</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18939</IssueID>
    <Title>[WelcomeUX]  Accessibilty for Welcome Page</Title>
    <Description>Testing #18091

On Mac you can use tab to navigate through the Quick Links in the Welcome page while you can't do that on Linux.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18936</IssueID>
    <Title>file is very large ....</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions:

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|CppSnippets|hars|0.0.5|
|cpptools|ms-vscode|0.9.3|

---

Steps to Reproduce:

1. Try to load 100MB text file 
2. Got this error: The file will not be displayed in the editor because it is either binary, very large or uses an unsupported text encoding.

Guys, even Notepad was able to load the file.  </Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18934</IssueID>
    <Title>[WelcomeUX] Interface overview: The pointers are not pointing to the right place</Title>
    <Description>Testing #18091 on OS X El Capitan


&lt;img width="411" alt="screen shot 2017-01-20 at 11 20 22 am" src="https://cloud.githubusercontent.com/assets/16890566/22162224/9b7b90c0-df02-11e6-8848-709caddfdd34.png"&gt;




</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18933</IssueID>
    <Title>Unable to open 'settings.json': t.toLowerCase is not a function.</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `1.9.0-insider` ee9d91c05fa571de56c41383cceee30b05b0a2f6
- OS Version: macOS Sierra `10.12.2`

Steps to Reproduce:

1. Open settings
2. Type into the search box and press enter (nothing happens -- this is another bug -- searching doesn't work)
3. Switch to another tab, and then try to switch back to settings (or close the settings tab and reopen and you will see the following
![image](https://cloud.githubusercontent.com/assets/641685/22162194/a37ee402-df1b-11e6-9349-5519b9dea7a5.png)
4. From now on until you close this window, you will get that same error when trying to open the settings -- and the settings won't open

</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18926</IssueID>
    <Title>[WelcomeUX] Search not working in settings window</Title>
    <Description>Type in setting search box and nothing happens. On Windows 10.
Might just be something wrong with that build. Current insiders build is fine.
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18918</IssueID>
    <Title>Markdown preview doesn't resize properly on zoom (Ctrl++)</Title>
    <Description>&lt;!-- Do you have a question? Please ask it on http://stackoverflow.com/questions/tagged/vscode --&gt;

- VSCode Version: `1.9.0-insider` ee9d91c05fa571de56c41383cceee30b05b0a2f6
- OS Version: macOS Sierra `10.12.2`

This also happens on vscode `1.8`

Steps to Reproduce:

1. Open markdown preview
2. Press Ctrl++ to zoom in

![image](https://cloud.githubusercontent.com/assets/641685/22161772/c7e9dfe2-df19-11e6-8050-21fea11d59ec.png)

Its a bit hard to see but the the preview content isn't filling the whole area -- there is a big empty space on both the right and bottom.

</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18917</IssueID>
    <Title>[WelcomeUX] Console error while opening any of the recent folders</Title>
    <Description>Testing #18091 on OS X El Capitan


&lt;img width="528" alt="screen shot 2017-01-20 at 11 06 41 am" src="https://cloud.githubusercontent.com/assets/16890566/22161739/903d84c2-df00-11e6-9fa5-c970c0181a01.png"&gt;


</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18910</IssueID>
    <Title>[WelcomeUX] Peek and Find All References don't seem to like small spaces</Title>
    <Description>Testing #18091
![image](https://cloud.githubusercontent.com/assets/762848/22161344/d06a435c-defe-11e6-83f9-7872841b1999.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18909</IssueID>
    <Title>[WelcomeUX] Go-to-definition opens file in separate tab rather than navigating within embedded editor</Title>
    <Description>Testing #18091

Press F12 in sandbox
![image](https://cloud.githubusercontent.com/assets/762848/22161276/78aadd70-defe-11e6-9579-d4ecb5b105ba.png)

Get navigated to separate read-only page:
![image](https://cloud.githubusercontent.com/assets/762848/22161205/37a0f6ac-defe-11e6-9b9c-378dc5c62046.png)

Also loses your place within the Walkthrough
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18908</IssueID>
    <Title>[WelcomeUX] Avoid 'thru'</Title>
    <Description>Testing #18091

"Thru" is very informal and is not appropriate on the welcome screen imo.

![image](https://cloud.githubusercontent.com/assets/2193314/22161247/64439282-defe-11e6-8bc0-5da0e288f934.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18907</IssueID>
    <Title>[WelcomeUX] Scrollbar is not a good thing for playaround sometimes</Title>
    <Description>Testing #18091

Take snippet as example

![screen shot 2017-01-20 at 10 49 42 am](https://cloud.githubusercontent.com/assets/876920/22161222/4e63b53c-defe-11e6-8854-8385a18a5627.png)

Before users type `try`, we can see five lines with an ending line `end`. After users insert the snippet

![screen shot 2017-01-20 at 10 49 52 am](https://cloud.githubusercontent.com/assets/876920/22161248/645a54e0-defe-11e6-9c7f-c8f036190e3c.png)

The ending line `end` is missing, which makes it somehow useless. Scrollbar is the catch.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18896</IssueID>
    <Title>[WelcomeUX] The bottom 50% of the bottom embedded editor lines cannot be clicked</Title>
    <Description>Testing #18091

I cannot click on the last half of the #p3 line in the first editor.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18895</IssueID>
    <Title>[WelcomeUX] Pressing ESC should hide the overlay</Title>
    <Description>Testing #18091

It requires a click right now.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18893</IssueID>
    <Title>[WelcomeUX] Scrollbars don't disappear after undoing all text changes</Title>
    <Description>Testing #18091

Type a bunch of text and new lines to make scrollbars appear
![image](https://cloud.githubusercontent.com/assets/762848/22160432/45e707be-defa-11e6-844c-434f42a8dd39.png)

After undoing  changes, scrollbars will remain in place even though content fits fine
![image](https://cloud.githubusercontent.com/assets/762848/22160498/a15f57f4-defa-11e6-982d-bc03efeb5061.png)

This also happens in the normal editor, but is more of an issue when you have limited space to work with.
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>21/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18892</IssueID>
    <Title>[WelcomeUX] command palette and sidebar behavior inconsistent in interface overview</Title>
    <Description>Testing #18091

It might not be a valid issue, I just find it annoying. In Interface Overview, pressing `ctrl+shift+p` will launch the command palette under the overlay, and I can still type in the palette. While if I want to play around with the sidebar, I have click twice, the first one dismiss the overlay and the second one does the trigger.</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18890</IssueID>
    <Title>[WelcomeUX] Introductory videos doesn't work</Title>
    <Description>Testing #18091

![image](https://cloud.githubusercontent.com/assets/2193314/22160438/51ef5142-defa-11e6-97d2-11911ecbbc46.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18889</IssueID>
    <Title>[WelcomeUX] Open Errors and Warnings is not always in the same position</Title>
    <Description>Testing #18091

![image](https://cloud.githubusercontent.com/assets/2193314/22160368/f6ebd018-def9-11e6-9477-0b29db34f073.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18888</IssueID>
    <Title>[WelcomeUX] Interface overview doesn't update when sidebar icons are rearranged</Title>
    <Description>Testing #18091 

![screen shot 2017-01-20 at 10 19 48 am](https://cloud.githubusercontent.com/assets/876920/22160385/04ae2f3e-defa-11e6-8e42-3937071d9bec.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>18884</IssueID>
    <Title>[WelcomeUX] Clicking relative link doesn't update scrollbar</Title>
    <Description>Testing #18091
Scrollbar is still at the top when it should be in the middle
![image](https://cloud.githubusercontent.com/assets/762848/22160209/4505743a-def9-11e6-8415-5682c30aeb1d.png)
</Description>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>20/01/2017</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17936</IssueID>
    <Title>Git log</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: MacOS X

VSCode has many nice git features, but one is really missing `git log`. It would be great if i could display the `git log` directly in VSCode instead of switch to the terminal or another application.</Description>
    <CreatedDate>30/12/2016</CreatedDate>
    <ClosedDate>30/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17911</IssueID>
    <Title>Regression in completion provider</Title>
    <Description>This is driving me crazy. Must be a recent regression.

Source Code:
```ts
export interface IMode {
	getId(): string;
	getLanguageIdentifier(): string;
}

let a: IMode;
let v = a.getId();
```

Steps:
* ctrl+space
* arrow down
* enter

Actual:
![completion-actual](https://cloud.githubusercontent.com/assets/5047891/21552268/15ee19aa-ce09-11e6-906e-4f8a026baf49.gif)


Expected:
![completion-expected](https://cloud.githubusercontent.com/assets/5047891/21552235/eaae2dca-ce08-11e6-8ee8-32202e9f6181.gif)
</Description>
    <CreatedDate>29/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17857</IssueID>
    <Title>Hot-close changes line breaks from CRLF to LF</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-nsp|adambaldwin|1.0.1|
|vscode-markdownlint|DavidAnson|0.6.0|
|tslint|eg2|0.7.1|
|sass-lint|glen-84|0.0.3|
|vscode-guid|heaths|1.0.0|
|typescript-javascript-grammar|ms-vscode|0.0.13|
|debugger-for-chrome|msjsdiag|2.4.1|
|sass-indented|robinbentley|1.3.0|
|require-complete|sensourceinc|0.0.3|
|sort-lines|Tyriar|1.1.0|

---

Steps to Reproduce:

1. On Windows, open a TypeScript file with CRLF line breaks. Make a change (add a space) and close VSCode without saving
2. Open VSCode. All line breaks in the file are now linux line breaks, as indicated by my TSLint plugin. 

</Description>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>27/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17856</IssueID>
    <Title>Php variables turns into HTML tags</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: osX 10.12
- Extensions installed: 
    - None, base VSC install

Steps to Reproduce:

1. Open up a .php file
2. Within a php file (in my case a functions file for Wordpress) when I go to create a variable, eg: `$sm_content`, it turns it into `&lt;1sm_content&gt;&lt;/1sm_content&gt;` upon hitting tab. Hitting space before hitting tab does not cause this, only when the cursor is right up against the variable name.
3. Restarted VSC, still same results. 

</Description>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>30/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17821</IssueID>
    <Title>[snippets] Support for regular expressions with Snippet Variables</Title>
    <Description>It'd be nice if regular expression support is added to the new snippet syntax (great work btw!! 👍). With variables such as "TM_FILENAME", the *extension* of the file is also added when the snippet is expanded, and when using snippets in code (eg. React), it's rarely the case that I'd need the extension of the file, thus I feel the need to have functionality to remove it from the replaced string.

I think this might be related closely to https://github.com/Microsoft/vscode/issues/6920?
Ref: https://manual.macromates.com/en/snippets Section 7.2</Description>
    <CreatedDate>25/12/2016</CreatedDate>
    <ClosedDate>27/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17810</IssueID>
    <Title>Hot Exit Can't undo change</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.9.3|

---

Steps to Reproduce:

When I refuse the files, I can't refuse the change before exit</Description>
    <CreatedDate>25/12/2016</CreatedDate>
    <ClosedDate>26/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17808</IssueID>
    <Title>markdown preview 无 scroll bar</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: win10

Steps to Reproduce:
1. settings.json 设置 "window.zoomLevel": -1 // 非0
2. preview 无 scroll bar

</Description>
    <CreatedDate>25/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17800</IssueID>
    <Title>Drag and drop text from another app</Title>
    <Description>- VSCode Version: Version 1.8.1 (1.8.1)
- OS Version: os x 10.11.6 (15G1108)

Steps to Reproduce:

1. Drag and drop text from some app (e.g. Google Chrome browser) to some file in VSCode

Expected:
Dragged text will be inserted into file opened in VSCode

Actual:
Nothing happens
</Description>
    <CreatedDate>24/12/2016</CreatedDate>
    <ClosedDate>24/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17791</IssueID>
    <Title>[Feature Request]: if we can support paste file or folder which copied from Desktop </Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.0.18|
|vscode-html-css|ecmel|0.0.30|
|format-php|Kasik96|1.1.2|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.2|
|debugger-for-chrome|msjsdiag|2.4.1|

---

Steps to Reproduce:
1. open vsc
2. copy file or folder from desktop
3. it can`t paste to vsc, it seems only support copy/paste from vsc to vsc
4. maybe this case is not a issue ? it`s from vsc design that only support copy/paste from vsc to vsc ? 

![01](https://cloud.githubusercontent.com/assets/19630825/21466213/fef06dea-c9fb-11e6-93dc-0818f6acaedc.gif)

Thank u.</Description>
    <CreatedDate>24/12/2016</CreatedDate>
    <ClosedDate>24/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17788</IssueID>
    <Title>EveryThing Is Good Except Live Preview</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14986
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-livescript-preview|eheitherd|1.0.1|
|mithril-emmet|FallenMax|0.5.1|
|live-html-previewer|hdg|0.0.1|
|vscode-angular2-emmet|jakethashi|1.0.9|
|Angular2|johnpapa|1.0.2|
|html5-boilerplate|sidthesloth|1.0.1|
|mixliveserver|varomix|0.0.1|
|JavaScriptSnippets|xabikos|1.2.0|

---

Steps to Reproduce:
Not a issue But a request.
1.Need to Add a little server for live preview code in a browser for web Developers.
</Description>
    <CreatedDate>24/12/2016</CreatedDate>
    <ClosedDate>24/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17787</IssueID>
    <Title>Markdown Incorrect Colorization of Fenced Code Blocks</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 15.6.0

Put some text before fenced Code Blocks and break syntax highlight of code block.

**OK**:

    # Arbitrary Piece of code

    ```c
    #include &lt;stdio.h&gt;

    int main(void)
    {
        puts("hello world");
        return 0;
    }
    ```

![test md - vscode-textlint-example 2016-12-24 11-54-29](https://cloud.githubusercontent.com/assets/19714/21464907/c4bdbbb8-c9cf-11e6-9d58-0748c685a4ae.png)


**NG**:

    # Arbitrary Piece of code

    text &lt;= break syntax highlight
    ```c
    #include &lt;stdio.h&gt;

    int main(void)
    {
        puts("hello world");
        return 0;
    }
    ```

![test md - vscode-textlint-example 2016-12-24 11-53-37](https://cloud.githubusercontent.com/assets/19714/21464901/b207ad58-c9cf-11e6-8ab8-2e2975280ca0.png)


This case is CommonMark spec's [Example 108](http://spec.commonmark.org/0.26/#example-108).

&gt; Other blocks can also occur before and after fenced code blocks without an intervening blank line:
&gt; http://spec.commonmark.org/0.26/#example-108</Description>
    <CreatedDate>24/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17769</IssueID>
    <Title>Feature Request: Save language set on hot exit</Title>
    <Description>Currently when closing unsaved tabs with hot exit, the programming language applied for those tabs will be gone and code will display with no color. Please add the feature to keep language set on hot exit</Description>
    <CreatedDate>23/12/2016</CreatedDate>
    <ClosedDate>23/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17738</IssueID>
    <Title>Vertically split code editor and integrated terminal</Title>
    <Description>Feature request for the ability to split the code editor and the integrated terminal vertically so that they are side-by-side.</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>23/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17735</IssueID>
    <Title>Word wrap only in Markdown files</Title>
    <Description>When I write my code, I want word wrapping to be disabled. When I write Markdown, I’d like to configure word wrapping at 80 characters. Is there a way to create different editor configurations for different file types?</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>23/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17724</IssueID>
    <Title>Hot exit on new file does not save language mode</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:41:20.664Z)
- OS Version: Linux x64 4.9.0-040900-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|vscode-eslint|dbaeumer|1.2.2|
|githistory|donjayamanne|0.1.4|
|javadebugger|donjayamanne|0.0.2|
|task-master|ianhoney|0.1.38|
|Angular1|johnpapa|0.1.16|
|csharp|ms-vscode|1.5.3|
|debugger-for-chrome|msjsdiag|2.4.1|

---

Steps to Reproduce:

1. Open a new tab to get an untitled, unsaved file
2. Type in some JSON
3. Set the language mode to JSON
4. Exit the application without saving the file
5. Reopen the application

Expected Results:
Untitled file is still open with the language mode set to JSON

Actual Results:
Untitled file is still open but the language mode is set back to Plain Text</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>22/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17714</IssueID>
    <Title>自动排版</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1.行内写style和onclick会自动排版后，该行以下内容会顶格，不会有缩进</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>22/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17707</IssueID>
    <Title>Save As...dialog should also include a choice to save as administrator/root</Title>
    <Description>This is a feature request :-)

VSCode Version 1.8.1
Commit ee428b0eead68bf0fb99ab5fdc4439be227b6281
Date 2016-12-19T14:41:20.664Z
Shell 1.4.6
Renderer 53.0.2785.143
Node 6.5.0
- OS Version: Ubuntu 14.04

When saving a file, I get a "Failed to save 'default': A system error occured (EACCES: permission denied, open '/etc/nginx/sites-available/default')" because I'm saving the file as a regular user, rather than admin/root. This is as it should be. But I should also get a prompt that allows me to enter root/pw so that I can go ahead and save. 

I think it makes sense to put that in the "Save As..." dialog, because I think to myself "Yeah, save as root". As for details of the process of that...I'm not sure. Maybe once you hit save and you get the permission denied, it can prompt w/ username/pw for whatever user (generally root) is needed to save in that spot. 
</Description>
    <CreatedDate>22/12/2016</CreatedDate>
    <ClosedDate>24/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17706</IssueID>
    <Title>Syntax error in scss/sass map</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 16.3.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|gitignore|codezombiech|0.5.0|
|python|donjayamanne|0.5.5|
|tslint|eg2|0.7.1|
|theme-material-theme|jprestidge|1.0.1|
|vscode-scss|mrmlnc|0.6.0|
|vscode-icons|robertohuertasm|4.2.0|

---

Steps to Reproduce:

1. Create a new scss file
2. Create a [map](https://www.sitepoint.com/using-sass-maps/). ex:
```scss
$colors: (
    home: #083b7a,
    assignments: #28abdf,
    groups: #ee5935,
    clients: #1a77b9,
    office: #902c8e,
    staff: #bc2333,
    events: #28abdf,
    library: #9c2361,
);
```
3. The syntax parser complains about it (line 34 and 35 of the following print):
![screen shot 2016-12-21 at 6 01 51 pm](https://cloud.githubusercontent.com/assets/649219/21409344/c042b55e-c7a7-11e6-9822-43de7417957a.png)
</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17703</IssueID>
    <Title>Allow getting path of a non-textual file</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Win10

Unless I'm missing something it's impossible to get file object (or simply file path as string) in extension if you have a non-textual file open.

The use case here is that you open let's say an image file, or docx file in vscode, and you want to provide a hotkey for opening this file in your default app associated with given extension. This is a case that I wanted to fix in a small extension sandcastle/vscode-open#2.

For text file it's simple because you could simply get `vscode.window.activeTextEditor.document`, but that's not a case in case of any format unsupported by VSCode.

I tried to get a inspiration using `workbench.action.files.copyPathOfActiveFile` command, so it took me to [`GlobalCopyPathAction`](https://github.com/Microsoft/vscode/blob/e179ec75abb7c3cb225001269561d4a31fe9b673/src/vs/workbench/parts/files/electron-browser/electronFileActions.ts#L89) class, but it uses `editorService` which  I believe is not exposed to extensions API.</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>27/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17702</IssueID>
    <Title>Keep Language mode when reload window after update plugin</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.6.1|
|vscode-coffeescript-preview|drewbarrett|0.1.3|
|vscode-great-icons|emmanuelbeziat|1.1.30|
|csharp|ms-vscode|1.6.0|
|PowerShell|ms-vscode|0.8.0|
|view-in-browser|qinjia|0.0.3|
|coffeescript-snippets|ronaldloyko|0.1.3|
|vscode-coffeelint|slb235|0.0.2|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. Create new file, write some code and set a language mode (in my case Batch file). The file is unsaved.
2. Update any plugin (in my case C#)
3. Click in reload label and accept message
4. The file is kept but language mode is missed when window reload</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>22/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17694</IssueID>
    <Title>[Windows] Shift+click in task bar does not open new window</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

On Windows 10 64-bit.

1. Open VS Code
2. Hold shift and click VS Code in the task bar

Expected result: new VS Code window opens (as per usual Windows shortcut)
Observed result: nothing happens

This is annoying if you have a folder open in one window, and another window showing another file (e.g. to compare/for reference). If you close the folder-based window, you can't open it again until you close all other windows, or replace the existing window, which you then have to open again afterwards.</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>22/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17693</IssueID>
    <Title>Format code with error when press  (ALT+SHIFT+F)</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.0.18|
|Angular1|johnpapa|0.1.16|
|ionic1-snippets|justinjames|1.0.1|
|bootstrap-3-snippets|wcwhitehead|0.0.9|

---

Steps to Reproduce:

1. When type HTML Tags and pressing ALT + SHIFT + F, tags fixed all on left side of screen.
2. This fact has not happen in version 1.7.2.</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>23/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17685</IssueID>
    <Title>Multiple File Manager</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Linux

Currently in vscode you can't select more then one file at a time. For example if you want to move multiple files in another folder you have to do it one by one or use the OS file manager. It would be great to have this as well in vscode.

</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17681</IssueID>
    <Title>Hot Exit forgets language mode for unsaved files</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Windows 10

Steps to Reproduce:

1. File &gt; New File
2. Select Language Mode &gt; Change to HTML (or whatever)
3. Make any edits to file
4. Quit VSCode
5. Open VSCode

The Untitled-1 file reopens, but the Language Mode is reset to Plain Text.  VSCode should remember the Language Mode that was set.
</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17679</IssueID>
    <Title>Html Formatter not working when use style attribute</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: win8.1

Html formatter is not working when attribute style is applied to an element.
</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17677</IssueID>
    <Title>codefix key-chord doesn't work when  the caret is at the end of the </Title>
    <Description>- VSCode Version: 1.9.x insider's preview
- OS Version: Windows 10

Steps to Reproduce:

1. create a situation for a codefix
2. observe a piece of code with a wiggly line and a codefix icon
3. place the caret at the very end of the wiggly line
4. hit `Ctrl + .` (current combination for engaging codefixes)
5. observe nothing happens

expected: a popup with codefix choices should be displayed</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17675</IssueID>
    <Title>[Fedora 25] Release notes window doesn't cover entire page</Title>
    <Description>- VSCode Version: 1.7, 1.8
- OS Version: Fedora 25

Steps to Reproduce:

1. Check for new version
2. See the release notes page

The release notes doesn't cover entire window, but only a quarter. See the picture.

![schermata del 2016-12-21 14-50-25](https://cloud.githubusercontent.com/assets/5095918/21391650/d8a641e4-c78c-11e6-82e0-946edf4636ac.png)

</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17669</IssueID>
    <Title>Middleclick in Ubuntu Unity Launcher does not open a new window</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Ubuntu 16.10

Steps to Reproduce:

1. Middle-click on the Unity Launcher Icon.
2. The load mouse indicator appears and disappears again. Then nothing happens.

This is breaking Ubuntus default behaviour of opening a new instance of the application upon a middle click. A left click brings the running app instance to the front or launches a new one (works) and a right click opens the context menu (works).

As a workaround I have to spawn a new window from the file menu each time I need a new instance, which feels really broken.
</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17659</IssueID>
    <Title>Tag HTML with style attribute</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 16.3.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|angular-material-snippets|4tron|0.3.1|
|crane|HvyIndustries|0.2.2|
|format-indent|Kasik96|1.3.0|
|Bookmarks|alefragnani|0.10.1|
|python|donjayamanne|0.5.5|
|php-debug|felixfbecker|1.10.0|
|Angular1|johnpapa|0.1.16|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. create tag html with attribute style
2. Format code

The code is unformatted after this tag.</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17652</IssueID>
    <Title>Message box is cramped</Title>
    <Description>- VSCode Version: Code - Insiders 1.9.0-insider (04f541160e0d41be95df9a964b1b570aec549157, 2016-12-20T07:05:16.928Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.2.2|
|debugger-for-chrome|msjsdiag|2.4.1|
|vetur|octref|0.1.2|
|language-stylus|sysoev|1.6.0|
|vim|vscodevim|0.4.9|

---

At half screen size:

![image](https://cloud.githubusercontent.com/assets/4033249/21383260/c45f155e-c79f-11e6-88b9-a3c315aa6ad3.png)
</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17633</IssueID>
    <Title>add suppor for codefixes in TypeScript</Title>
    <Description>per https://github.com/Microsoft/TypeScript/issues/13068#issuecomment-268406440</Description>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17624</IssueID>
    <Title>"Restart Window" option for extension updates does not restart all  instances of VS Code</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Windows 10 Enterprise

Steps to Reproduce:

1. Update Extension
2. Click "Restart" button
3. Only the active window of VS Code restarts, leaving other windows loaded with old plugin versions
</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17620</IssueID>
    <Title>Scrollbar jump in font increase</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:41:20.664Z)
- OS Version: Linux x64 4.4.0-53-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.6.0|
|EditorConfig|EditorConfig|0.3.4|
|jslint|ajhyndman|1.2.1|
|jshint|dbaeumer|0.10.15|
|vscode-eslint|dbaeumer|1.2.2|
|tslint|eg2|0.7.1|
|cpptools|ms-vscode|0.9.3|
|Spell|seanmcbreen|0.9.1|
|vim|vscodevim|0.4.9|

---

Steps to Reproduce:

1. Open preview on a markdown file
2. Press CTRL + to increase font size

Notice the scrollbar has moved considerably from where it was.
![jump](https://cloud.githubusercontent.com/assets/439226/21362437/5b79e580-c6b6-11e6-8a25-299a2a8ac32a.png)
</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17614</IssueID>
    <Title>when at zoom &lt; 0, line breaks in html pages are offscreen. </Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:42:49.304Z)
- OS Version: Darwin x64 14.5.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-markdownlint|DavidAnson|0.6.0|
|xml|DotJoshJohnson|1.6.1|
|material-icon-theme|PKief|1.1.5|
|code-settings-sync|Shan|2.3.8|
|Bookmarks|alefragnani|0.10.1|
|project-manager|alefragnani|0.12.2|
|vscode-color|anseki|0.2.2|
|QML|bbenoist|1.0.0|
|vscode-eslint|dbaeumer|1.2.2|
|vscode-instant-markdown|dbankier|0.2.1|
|line-counter|Dollyn|0.1.2|
|githistory|donjayamanne|0.1.4|
|python|donjayamanne|0.5.5|
|vscode-great-icons|emmanuelbeziat|1.1.29|
|vscode-npm|fknop|3.3.0|
|rib|glowtree|0.1.1|
|badges|idleberg|1.0.5|
|textile|idleberg|0.1.0|
|restructuredtext|lextudio|0.0.19|
|vs-color-picker|lihui|0.3.2|
|vscode-clang|mitaki28|0.2.1|
|cpptools|ms-vscode|0.9.3|
|sublime-keybindings|ms-vscode|1.8.0|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|4.2.0|
|todotasks|sandy081|0.4.0|
|mel|sator-imaging|0.1.1|
|Spell|seanmcbreen|0.9.1|
|preview-vscode|searKing|1.1.1|
|perforce|slevesque|0.1.10|
|shader|slevesque|0.2.2|
|theme-monokaigraypixar|plp|0.0.1|
|change-case|wmaurer|1.0.0|

---

Steps to Reproduce:

1. split the workspace to get 2 side by side columns
2. got to Help -&gt; Release Notes to display the release notes.
3. if zoom == 0, the lines are wrapping correctly. no off-screen words. (good)
4. set zoom to -1: some lines are cut on the right side. (bad)

![zoom_out_reformating](https://cloud.githubusercontent.com/assets/10943552/21355133/bcc5e150-c6c4-11e6-8660-83a0062e5079.jpg)

Keep up the good work, guys !</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17602</IssueID>
    <Title>Release notes do not use full windows area when zooming</Title>
    <Description>- VSCode Version: Code 1.8.1 (ee428b0eead68bf0fb99ab5fdc4439be227b6281, 2016-12-19T14:49:23.350Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vim|vscodevim|0.4.9|

---

Maybe duplicate of #17580. Sorry should have searched before posting.


Steps to Reproduce:

1. Open Release Notes
2. Zoom with ctrl-+
3. When zooming further the effect is more prominent.</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17601</IssueID>
    <Title>*.txt file save and open bug</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-babel-coloring|dzannotti|0.0.4|
|vscode-great-icons|emmanuelbeziat|1.1.25|
|cpptools|ms-vscode|0.9.2|

---

Steps to Reproduce:

1.Create a txt file ,
2.type some thing and don't save.
3.click the close button
4.doubleclick the file ,open it
5.now VSCode open the file twice(two windows),but it should be one.</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17600</IssueID>
    <Title>When debugging NodeJS code, can not step into functions</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: macOS Sierra

Steps to Reproduce:

1. Open project
2. Setup breakpoint
3. Click "Start Debugging" button
4. Code stop at the breakpoint
5. Click the "Step Into" button, the code will execute until next breakpoint.

Anyone meet this issue?

</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17599</IssueID>
    <Title>Feature Request: Terminal Tabs</Title>
    <Description># Feature Request
## Terminal Tabs
There's already a plug-in worth mentioning which enables tabs in the blue bar below the terminal but they are merely just small icons. 

## Suggestions
- Tabs Located Beside "Terminal" That Are Actually Tabs.
  - Or Include The "Terminal" Name as a Tab(Which Can Be Renamed), And A (+) Icon To Add More Tabs Which Can Be Renamed.
- Optional Coloured Tabs
- Quick Switching Between Tabs (alt 1-9)
- Ability To Name, and Rename, Close Button
- Save Tabs For Better Workflow

## Possibly Not Related
### A Way To Autostart A Command When VSCode has started.

**Example**: -- I'd like to automate sass starting within a tab

Running From A Directory
&gt;  sass --watch example.scss example.css

Watching A Directory Where SCSS Files Are:
&gt; sass --watch /example/to/watch/directory</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17580</IssueID>
    <Title>Built in webview incompatible with zoom</Title>
    <Description>- VSCode Version: 1.8.1
- OS Version: Windows 10 Version 1607

Steps to Reproduce:

1. May require a Hi-DPI screen with 125% scale?
2. Press Ctrl + "+" zoom Code
3. Open release note or markdown preview

![snipaste20161220_120835](https://cloud.githubusercontent.com/assets/19658647/21338049/833593ac-c6ad-11e6-9ab0-1d176833639f.png)

</Description>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17556</IssueID>
    <Title>Allow to dock the panel to the right hand side vertically</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: macOS 10.12.2

My monitor is almost twice as wide as it is tall. It'd be really nice to have the option to display the list on the side of the display similar to the way the panels work since the right half of my display is often almost entirely empty.</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17551</IssueID>
    <Title>formatting of HTML code when using style attribute</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1. write some simple HTML code like 
&amp;lt;div&amp;gt;
    &amp;lt;div style="color:red"&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

2. format the code -&gt; the HTML formatting is different when you don't add the style attribute</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>21/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17548</IssueID>
    <Title>Hot-Exit: works only if there is one instance (window) of VS Code open</Title>
    <Description>- VSCode Version: 1.9.0-insider (also reproducible in 1.8.0)
- OS Version: Windows 10

Steps to Reproduce:

1. Open VS Code anywhere, create new file, write something but don't save
2. Open another VS Code window ( Ctrl+Shift+N ), create new file, write something but don't save
3. Close either window

The expected behavior would be for the hot-exit feature to kick in and not to display the file-save prompt.
I'm not sure if this is a bug or a missing feature.

Well, probably a more common and practical use case would be to open two folders into separate VS Code windows.</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17546</IssueID>
    <Title>workbench.editor.showTabs does not show tabs anymore</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Mac OS Sierra (10.12.1)

Steps to Reproduce:

1. open VS Code
2. open a project
3. open a new window (&amp;#x21E7; &amp;#x2318; + N)

You can see that the window opens as a new window, not as a new tab in the workbench.
Changing the `workbench.editor.showTabs` seems to have no effect whatsoever.
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17535</IssueID>
    <Title>Preferences: pressing ESC in search box should clear search</Title>
    <Description>
    </Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17528</IssueID>
    <Title>Ridiculously slow at handling files without line breaks (e.g. minified js, css...)</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: macOS Sierra 10.12.2

Steps to Reproduce:

1. Open a minified file
2. Try stuff like scrolling, select all, paste...
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17523</IssueID>
    <Title>warn when (Ctrl+C) in file (after select text in terminal)</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions:

|Extension|Author|Version|
|---|---|---|
|theme-karyfoundation-themes|karyfoundation|10.1.0|
|Go|lukehoban|0.6.51|
|vscode-terminal-here|Tyriar|0.0.5|
|language-1c-bsl|xDrivenDevelopment|1.8.6|

---

Steps to Reproduce:

1. Open terminal (Ctrl+`)
2. Select some text in terminal (don't do Ctrl+C)
3. Return to file (terminal lose focus)
4. Select some text in file
4. Ctrl+C

get:
"WARN cannot copy terminal selection when terminal does not have focus"</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17522</IssueID>
    <Title>How to append more folder into the workspace?</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eclipse-keybindings|alphabotsec|0.8.0|
|tortoise-svn|fantasytyx|0.1.1|
|php-intellisense|felixfbecker|0.0.12|
|composer|ikappas|0.5.0|
|material-icon-theme|PKief|1.1.5|

---

Steps to Reproduce:

1. How to append more folder into the workspace?  I dont't like open multiple window to edit project
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17520</IssueID>
    <Title>Hot Exit: Remember File Language mode</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Windows Server 2012 R2

Steps to Reproduce:

1. Open VS Code
2. Create a new file (don't save)
3. Change language mode (i.e. to SQL)
4. Type some text
5. Exit
6. Launch VS Code Again

The language mode selected before closing is lost.
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17509</IssueID>
    <Title>How to configure the colors in command palette?</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.6.0|
|auto-close-tag|formulahendry|0.3.6|
|auto-rename-tag|formulahendry|0.0.8|
|green-theme|vscode|0.1.0|
|beautify|HookyQR|0.6.2|
|theme-material-theme|jprestidge|1.0.1|
|cpptools|ms-vscode|0.9.3|
|vscode-icons|robertohuertasm|4.2.0|

---

Steps to Reproduce:

1. Ctrl+Alt+P
2. Press something, for example: rel
3. The gray text and navy highlight is hard to distinguish in dark theme.
4. I cannot find the setting entry in settings.json and tmTheme.</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17507</IssueID>
    <Title>'Real' Files not Being Reopened</Title>
    <Description>- VSCode Version: 1.9.0-insider
- OS Version: Windows 10 x64 Pro

I noticed that when I have a bunch of untitled-unsaved files with hotexit enabled and if I open a file from explorer, if I close VSCode and open it only the untitled-unsaved files will be restored and not the file I opened from explorer.

Steps to Reproduce:

1. Create new untitled-unsaved tabs 
2. Click File -&gt; Open File -&gt; and choose a random file
3. Close VSCode
4. Reopen VSCode and notice how the file you chose in step 2 is not restored

Video: https://dl.dropboxusercontent.com/u/91292881/ShareX/2016/12/2016-12-18_22-59-55.mp4 
</Description>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17486</IssueID>
    <Title>Make markdown links without protocol (iE /README.md) map to file system</Title>
    <Description>Yes, in markdown i can set file links using the `file://path/to/my/file.md` syntax to create file links. However, this depends on where i cloned the repo on my computer.

When I write documentation in markdown, I can link between documents in the following way

```
linked from /doc/documentation.md
* [back](../README.md) 
* [back absolute](/README.md)
```
As expected, a relative link is relative to the current file, an absolute link is resolved to the project root

Here are working examples on [github](https://github.com/fbehrens/doc-example/blob/master/doc/documentation.md) and [gitlab](https://gitlab.com/fbehrens/doc-example/blob/master/doc/documentation.md)

It would be very useful, if those links would also work in VSCODE, because this would make it possible to set and follow the links while writing the documentation in the editor.

There is a related closed issue #11518</Description>
    <CreatedDate>18/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17485</IssueID>
    <Title>New Window Behaviour broke</Title>
    <Description>- VSCode Version: 1.8.0 (1.8.0)
- OS Version: macOS Sierra 10.12.2

For me, the last months when working VSCode,
spawning a new window with Shift + CMD + n has openened a new window as a 'tab' above the editor,
but in the same instance.

I found this incredibly useful for working with multiple projects in the same VSCode window.

However, this was removed in 1.8, now a new window is openened.
Was this removed, or can i somehow enable this behaviour again?
I've read through the docs &amp; the settings but couldn't find anything related.

thanks in advance</Description>
    <CreatedDate>18/12/2016</CreatedDate>
    <ClosedDate>18/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17478</IssueID>
    <Title>Format code doesnt work anymore</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T18:03:00.506Z)
- OS Version: Linux x64 4.8.0-30-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|aessoft-class-autocomplete|AESSoft|0.1.0|
|calc|BorisA|0.0.1|
|vscode-qrcode|Compulim|0.2.0|
|format-php|Kasik96|1.1.2|
|vscode-docker|PeterJausovec|0.0.10|
|ActiveFileInStatusBar|RoscoP|1.0.2|
|code-settings-sync|Shan|2.3.8|
|vscode-wakatime|WakaTime|1.0.6|
|vscode-file-peek|abierbaum|1.0.1|
|Bookmarks|alefragnani|0.10.1|
|code-gnu-global|austin|0.2.1|
|path-intellisense|christian-kohler|1.2.0|
|regex|chrmarti|0.0.7|
|vscode-simpler-icons|davidbabel|1.3.0|
|vscode-stylesheet-formatter|dbalage|0.2.0|
|vscode-hasher|deerawan|1.0.1|
|githistory|donjayamanne|0.1.4|
|javadebugger|donjayamanne|0.0.2|
|code-runner|formulahendry|0.6.3|
|RelativePath|jakob101|0.11.0|
|Go|lukehoban|0.6.51|
|font-awesome-codes-html|medzhidov|0.0.3|
|gitignore|michelemelluso|1.0.1|
|prettify-json|mohsen1|0.0.3|
|easy-less|mrcrowl|1.2.5|
|cpptools|ms-vscode|0.9.3|
|java|redhat|0.0.7|
|bash-debug|rogalmic|0.0.2|
|partial-diff|ryu1kn|0.2.0|
|mixliveserver|varomix|0.0.1|

---

After the latest update I can no longer format my c and go code I get the error `Cannot read property 'substring' of undefined`</Description>
    <CreatedDate>18/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17467</IssueID>
    <Title>Markdown preview rendering width does not consider window.zoomLevel correctly</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Linux Mint LMDE2 Cinnamon 64-bit, Cinnamon 3.2

Depending on the value of window.zoomLevel or  on the fly with Ctrl-'+' or Ctrl-'-', the Markdown preview width might not fit within its display area:
- for `"window.zoomLevel": 1`, the lines are visibly shorter than the editor area, and the scroll bar sits left of the right border.
![zoomlevel-up](https://cloud.githubusercontent.com/assets/5325416/21288703/4075c584-c48a-11e6-8a5e-acbe06a327fe.png)
- for `"window.zoomLevel": 0`, the lines just fill the editor area.
- for `"window.zoomLevel": -1`, the lines are overflowing the editor area, no scroll bar is visible, no horizontal scroll bar is displayed.![zoomlevel-down](https://cloud.githubusercontent.com/assets/5325416/21288709/585b0060-c48a-11e6-9ffd-b6cb33b3bebc.png)

If `window.zoomLevel` is changed in settings.json during runtime, the scrollbar disapears.

Changing fonts or font sizes does change the effective line breaks, but they still try to fit into the same faulty width.
</Description>
    <CreatedDate>17/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17451</IssueID>
    <Title>Cannot use Ctrl + C / Ctrl + V anymore</Title>
    <Description>- VSCode Version: 1.8
- OS Version: Windows 10
Steps to Reproduce:

1.  Write something in the textfield.
2.  Open a terminal

When you now try to copy something from the textfield a warning will pop up, informing you that the terminal is not in focus.
</Description>
    <CreatedDate>17/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17425</IssueID>
    <Title>Release notes display</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions:

|Extension|Author|Version|
|---|---|---|
|Theme-Flat|gerane|0.0.2|
|easy-less|mrcrowl|1.2.5|
|csharp|ms-vscode|1.5.3|
|vs-keybindings|ms-vscode|0.1.1|
|sass-indented|robinbentley|1.2.1|

---

Steps to Reproduce:

1.  View the release notes (November 2016)
2.  Scroll down as you read them
3.  Switch to another tab to view some code
4.  Switch back to the release notes
5.  The release notes reload and are at the top of the display.

This makes it very hard to read, as it continually reverts to the top of the long document and reloads every time the tab is switched.</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17422</IssueID>
    <Title>Explorer File/Folder Filter</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Ubuntu 16

With npm 3, the `node_modules` folder gets fairly large, so it would be nice if there was an input box in the `explorer` menu that I could type into and it would hide items that don't match the search.

For example when I am looking for a particular folder such as `materialize-css` I could just type `material` into the search box and all matching files/folders would be left in the view and everything would get hidden.</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17418</IssueID>
    <Title>Interface Implementation (Stubbing Functionality)</Title>
    <Description>- VSCode Version: Any
- OS Version: Any

Feature Request:
Add the ability in TypeScript and other Object-Oriented languages to implement (stub out) an inherited interface automatically.
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17414</IssueID>
    <Title>Render Markdown of JSDoc </Title>
    <Description>_From @waderyan on November 11, 2016 22:34_

_From @mohsen1 on November 7, 2016 18:37_

- VSCode Version: 1.7.1
- OS Version: macOS

I'm expecting 

```ts
/**
 * This is foo
 * Foo is great! Use it like this:
 * 
 * ```ts
 * const foo = new Foo(); 
 * ```
 */
function Foo() {

}


var f = new Fo
```

I was expecting my Markdown to be rendered here: 

![screen shot 2016-11-07 at 10 35 41 am](https://cloud.githubusercontent.com/assets/543633/20070625/f73a3fb8-a4d5-11e6-93f2-393b0d057e2f.png)





_Copied from original issue: Microsoft/vscode#15117_

_Copied from original issue: Microsoft/TypeScript#12185_</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17409</IssueID>
    <Title>Go to definition is broken on recusive function references</Title>
    <Description>_From @zhengbli on October 15, 2016 8:8_

&lt;!-- BUGS: Please use this template. --&gt;

&lt;!-- QUESTIONS: This is not a general support forum! Ask Qs at http://stackoverflow.com/questions/tagged/typescript --&gt;

&lt;!-- SUGGESTIONS: See https://github.com/Microsoft/TypeScript-wiki/blob/master/Writing-Good-Design-Proposals.md --&gt;

**TypeScript Version:** nightly (2.1.0-dev.20161014)

**Code**

``` ts
function tttt() {
    /*cursor position*/tttt(); // &lt;- "go to definition" doesn't go to the function declaration
}
```


_Copied from original issue: Microsoft/TypeScript#11657_</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17402</IssueID>
    <Title>Hot Save Restores Only File Content</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.0.18|
|vscode-eslint|dbaeumer|1.2.2|
|githistory|donjayamanne|0.1.4|
|xml|DotJoshJohnson|1.6.0|
|EditorConfig|EditorConfig|0.3.4|
|tslint|eg2|0.7.1|
|vs-code-xml-format|fabianlauer|0.1.4|
|Angular1|johnpapa|0.1.16|
|Angular2|johnpapa|1.0.2|
|mssql|ms-mssql|0.1.5|
|csharp|ms-vscode|1.5.3|
|PowerShell|ms-vscode|0.7.2|
|typescript-javascript-grammar|ms-vscode|0.0.12|
|annotator|ryu1kn|0.10.1|
|Spell|seanmcbreen|0.9.1|
|code-settings-sync|Shan|2.3.8|
|bootstrap-3-snippets|wcwhitehead|0.0.8|
|JavaScriptSnippets|xabikos|1.2.0|

---

Steps to Reproduce:
Note: Hot save is enabled

1. Create a new file
2. Set language
3. Close VS Code
4. Open VS Code
Expected: VS Code hot save should restore not only file content, selected language as well
Actual: VS Code restores only file content</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17388</IssueID>
    <Title>Icons in Explorer Panel messed up</Title>
    <Description>After updating to 1.9.0 Insider version, icon's in Explorer Panel seems off.

![explorer-panel](https://cloud.githubusercontent.com/assets/118744/21259316/8241b402-c389-11e6-8ae5-5f86e77734a8.png)

- VSCode Version: Code - Insiders 1.9.0-insider (89bdb7c35a89535612d386199ee33e6bd74ee068, 2016-12-15T07:11:14.563Z)
- OS Version: Windows_NT ia32 10.0.14986
- Extensions:

|Extension|Author|Version|
|---|---|---|
|path-intellisense|christian-kohler|1.2.0|
|python|donjayamanne|0.5.5|
|cpptools|ms-vscode|0.9.3|
|csharp|ms-vscode|1.5.3|
|typescript-javascript-grammar|ms-vscode|0.0.12|
|debugger-for-edge|msjsdiag|0.4.1|
|vscode-docker|PeterJausovec|0.0.10|
|autoimport|steoates|1.2.2|
|unity-debug|Unity|1.1.0|
|cordova-tools|vsmobile|1.2.4|
|vscode-react-native|vsmobile|0.2.4|

---

Steps to Reproduce:

1. Open VS Code latest Insider version
2. Use Seti as File Icon Theme
3. Add files to folder</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17386</IssueID>
    <Title>Navigation does not work for typing (not in search box) in folder explorer view </Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-theme-onedark|akamud|0.2.14|
|python|donjayamanne|0.5.0|
|xml|DotJoshJohnson|1.6.0|
|tslint|eg2|0.7.1|
|Theme-GitHubCleanWhite|gerane|0.0.2|
|beautify|HookyQR|0.6.2|
|Ionide-FAKE|Ionide|1.2.3|
|Ionide-fsharp|Ionide|2.13.2|
|Ionide-Paket|Ionide|1.4.0|
|Go|lukehoban|0.6.51|
|cpptools|ms-vscode|0.9.3|
|csharp|ms-vscode|1.5.3|
|PowerShell|ms-vscode|0.7.2|
|debugger-for-chrome|msjsdiag|2.4.0|
|java|redhat|0.0.7|
|vscode-icons|robertohuertasm|4.1.0|
|yo|samverschueren|0.9.1|
|Spell|seanmcbreen|0.9.1|
|code-settings-sync|Shan|2.3.8|
|vim|vscodevim|0.4.0|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. Open any folder in VS code
2. In the File explorer, type any first few characters of folder name. (not in the search box).

Issue:
1. Navigation does not work for typing in folder explorer view

Expectation:
1. It should work as FileExplorer handle the input. Typing few character should navigate to the folder. This would really help a lot. </Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17385</IssueID>
    <Title>Flickering and weird color blocks in editor</Title>
    <Description>- VSCode Version: 1.8
- OS Version: MacOS Sierra 10.12.1

Steps to Reproduce:

1. Open the command palette and start typing or click a line anywhere
2. Blocks either start to flicker (when typing) or are just present

This behavior is particularly visible when using themes. For instance, here's a screenshot using Solarized Dark:

![screen shot 2016-12-16 at 10 59 36](https://cloud.githubusercontent.com/assets/1923346/21258783/df7a7574-c37e-11e6-9277-00ac15effa47.JPG)

And here, using Atom One Dark:

![screen shot 2016-12-16 at 10 49 52](https://cloud.githubusercontent.com/assets/1923346/21258729/99174710-c37e-11e6-97a1-68036fbccdd6.JPG)

It's also present when using Code's default theme, but a bit more subtle.
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17384</IssueID>
    <Title>Stepping in code always tries to center the current line vertically</Title>
    <Description>- VSCode Version: 1.9 Insiders
- OS Version: macOS

Steps to Reproduce:

1. start debugging on a program that has a loop and about 40 lines before and after the loop
2. step through the loop

Observe: the source is always scrolled so that the current line (yellow) stays at the same position vertically.

This is a regression from the stable build. 
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17382</IssueID>
    <Title>VSCode started to lag wtih CSS in Head</Title>
    <Description>- VSCode Version:  1.8.0
- OS Version: Windows 10

Steps to Reproduce:

1.  Inline compiled css (about 500 lines) from sass into page head
2.  Try to scroll

After updating to 1.8.0 version, it started to lag while scrolling into &lt;head&gt; with css injected in &lt;style&gt; tag.  Currently if css inlined in head, I am unable to scroll top of the .html page.

![vscode](https://cloud.githubusercontent.com/assets/8975621/21257845/dde0f0ae-c382-11e6-84cc-47d7b7bf9ec6.gif)
</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17378</IssueID>
    <Title>Cannot display all symbols of Default Settings (1.8)</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:38:28.425Z)
- OS Version: Darwin x64 15.6.0
- Extensions: none

With the new appareance of Default Settings, we loose the possibility to view all settings (symbols) using `cmd+shift+O`.

Moreover, the commands `Fold All` and `Unfold All` are not more applicable to Default Settings, only to User/Workspace Settings.</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17364</IssueID>
    <Title>Stepping centers the viewport for every step</Title>
    <Description>I'm seeing the same as #12438, but for every file. Just started in Insiders today for node2 and node</Description>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17349</IssueID>
    <Title>Cannot Paste between files</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: 10.12.1

I can copy and cut, but not paste from one file to another. Sometimes it helped to restart VSCode, but in the past two days, not so much. I run 10.12.1 and VSC 1.8.0. I love VSC otherwise, but this is quite irritating. Pasting in other Apps (Atom/TextEdit) works fine.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17339</IssueID>
    <Title>Bug of Intellisense with JavaScript</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Windows 10.0.14393

Steps to Reproduce:

1. Create a project folder and create `func.js`, `main.js`, and `jsconfig.json` in it.

`jsconfig.json`:
```json
{
    "compilerOptions": {
        "target": "ES6"
    },
    "file": [
        "func.js"
    ]
}
```
`func.js`:
```javascript
function Test() {
    // ...
}
// ...
Test.a = function() {
    // ...
    var k = require('n');
    // ...
    return 0;
};
// ...
Test.prototype.b = function() {
    // ...
    var k = require('n');
    // ...
    return 1;
};
```
`main.js`:
```javascript
Test.a();
var test = new Test();
test.b();
```
2. Open main.js, and move mouse on `Test` or `a()` at line 1, the ToolTip shows `any`, move mouse on any words, the ToolTip shows the sentence that have `any`. Also autocomplete do not show `a` when I type `Test.` and `b` when I type `test.`.

3. Edit `func.js`, make lines which has `require` as comment, like :
```javascript
function Test() {
    // ...
}
// ...
Test.a = function() {
    // ...
    //var k = require('n');
    // ...
    return 0;
};
// ...
Test.prototype.b = function() {
    // ...
    //var k = require('n');
    // ...
    return 1;
};
```
4. Open main.js, and move mouse on `Test` at line 1 and line 2, the ToolTip shows `function Test(): void`, but move mouse on  `a()` at line 1, the ToolTip still shows `any`, move mouse on any words at line 2 and line 3, the ToolTip shows the sentence that haven't `any`. For example, `test` shows
```javascript
var test: {
    b: () =&gt; number;
}
```
5. Output `Test.a()` can get `0`, `test.b()` can get `1`. At Step 4, Visual Studio Code found the definition of `test.b()` as `Test.prototype.b` (move mouse on `b()` at line 3 and the ToolTip shows `(property) Test.b: () =&gt; number`), but not found the definition of `Test.a()` because move mouse on `a()` at line 1 and the ToolTip shows `any`. Also autocomplete show `b` when I type `test.`, but not show `a` when I type `Test.`.

Conclusion:
If the definition of the method or prototype of function in JavaScript have method `require()` in it, Intellisense in Visual Studio Code cannot find the definition of "that function, the prototype of that function, and the method of that function" at another JS file.
If the definition of the method or prototype of function in JavaScript do not have method `require()` in it, Intellisense in Visual Studio Code can find the definition of "that function, and the prototype of that function" at another JS file, but still cannot find the definition of method of that function at another JS file.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17336</IssueID>
    <Title>Question: How do I remove `Microsoft` folder from my `$HOME`?</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Ubuntu 14.04

Every time I start vscode this directory structure is being created inside my home folder:
```
~/Microsoft $ tree
.
└── TypeScript
    ├── node_modules
    │   └── types-registry
    │       ├── index.json
    │       ├── package.json
    │       └── README.md
    └── package.json

3 directories, 4 files
```

How do I change it's path, so it will be created somewhere else, or how do I prevent it from being created at all?
It ruins alignment of my other folders inside $HOME, and makes me feel uneasy.
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17321</IssueID>
    <Title>Resizing the files area / main area causes flickering and inaccurate resizing</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Win10

Steps to Reproduce:

1.  Open a vscode project
2.  Resize the files section

![image](https://i.gyazo.com/55d00e11a28a83f081473402fd9f39f5.gif)</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17319</IssueID>
    <Title>Hot exit does not preserve the Language mode for unsaved files</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Windows 7 x64

Steps to Reproduce:

1. Create new file in VSCode and do not save it
2. Change the **Language Mode** to something other than **Plain Text**
3. Restart the editor with **Hot Exit** enabled.

The reopened **Untitled-1** tab will have Plain Text as Language, even though another one was selected previously.
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>17/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17310</IssueID>
    <Title>code formatting</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.5|
|nativescript|Telerik|0.5.1|

---

Steps to Reproduce:
I just updated to the latest version of vscode (1.8) today.

When I formatted (Alt + Shift + F) code for a .html page,
the results were **unexpected**, not properly aligned, and 
**not** the behavior of code formatting prior to 1.8.

The .html page is a part of an ionic 2 project and so has 
ionic 2 components along with typical html elements such as `&lt;div&gt;`.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17309</IssueID>
    <Title>Error formatting code when using inline style atributtes</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|swagger-viewer|Arjun|1.2.0|
|vscode-svgviewer|cssho|1.2.0|
|Angular2|johnpapa|1.0.2|
|debugger-for-chrome|msjsdiag|2.4.0|
|change-case|wmaurer|1.0.0|

---

Steps to Reproduce:

1. produce HTML code
2. \t &lt; table class="info-obj bottom" style="border-top: 0"&gt;
    \t\t\t\t(not indent) &lt;tr *ngIf="response"&gt;
3. use shortcut: { "key": "shift+alt+f", "command": "editor.action.formatDocument", "when": "editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly" },

Expect: 
\t &lt; table class="info-obj bottom" style="border-top: 0"&gt;
\t\t(cool format) &lt;tr *ngIf="response"&gt;

Actual Result:
\t &lt; table class="info-obj bottom" style="border-top: 0"&gt;
(no tabs/spaces) &lt;tr *ngIf="response"&gt;</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17304</IssueID>
    <Title>Error when running type 'node2' in vscode 1.8</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:38:28.425Z)
- OS Version: Darwin x64 15.6.0
- Extensions: none

launch.json
```
{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "node",
      "program": "${workspaceRoot}/app.js",
      "cwd": "${workspaceRoot}"
    },
    {
      "type": "node2",
      "request": "launch",
      "name": "node2",
      "program": "${workspaceRoot}/app.js",
      "cwd": "${workspaceRoot}"
    }
  ]
}
```

app.js
```
let msg = "Hello World !";
console.log(msg);
```

Run (cmd+F5) `node` session:
```
node --nolazy app.js 
Hello World !
```

Run (cmd+F5) `node2` session:
```
node --debug-brk app.js 
Error processing "evaluate": TypeError: Cannot read property 'api' of undefined
    at ChromeConnection.get api [as api] (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeConnection.js:56:28)
    at NodeDebugAdapter.get chrome [as chrome] (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:40:38)
    at NodeDebugAdapter.globalEvaluate (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:1021:20)
    at NodeDebugAdapter.globalEvaluate (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/out/src/nodeDebugAdapter.js:403:22)
    at NodeDebugAdapter.evaluate (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:943:32)
    at dispatchRequest (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugSession.js:123:68)
    at ProtocolServer._handleData (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug2/node_modules/vscode-chrome-debug-core/node_modules/vscode-[...]
Debugger listening on 127.0.0.1:5858
```
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17297</IssueID>
    <Title>Zen mode should center page content or have configurable margins in percent of viewing area</Title>
    <Description>The purpose of Zen mode is to get rid of all distractions and make it easy to read/write/scroll through code (most often a single file). Sadly without centering on large screens the current implementation is not fulfilling that purpose for me. 

It is not adding a margin or centering the defined number of columns on screen or inside the tab area thus I have to constantly turn my head left to read. 

On my 30 Inch main monitor this is how zen mode can be configured to look in Sublime:

![image](https://cloud.githubusercontent.com/assets/231889/21224091/bcd51a7e-c2ca-11e6-90ef-3eaf0b03d32c.png)

this is it under vs code

![image](https://cloud.githubusercontent.com/assets/231889/21224127/db754d32-c2ca-11e6-9a00-a96adb11876f.png)

PS: Keep up the good work :) great editor all in all.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17286</IssueID>
    <Title>Feature Request: Auto hiding tabs</Title>
    <Description>Would be amazing if there was an option to hide tabs and show them on mouse hover
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17284</IssueID>
    <Title>files.excludes not work</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: win10


![screenshot](https://cloud.githubusercontent.com/assets/6769037/21218758/c846e44c-c2ec-11e6-824a-60d50ea1e887.png)

</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17277</IssueID>
    <Title>Seti theme icons only show half of the icon</Title>
    <Description>- VSCode Version: Code - Insiders 1.9.0-insider (89bdb7c35a89535612d386199ee33e6bd74ee068, 2016-12-15T07:11:14.563Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.1.0|
|python|donjayamanne|0.4.2|
|tslint|eg2|0.7.1|
|restructuredtext|lextudio|0.0.19|
|gitignore|michelemelluso|1.0.1|
|cpptools|ms-vscode|0.9.3|
|csharp|ms-vscode|1.5.3|
|PowerShell|ms-vscode|0.7.2|
|vscode-docker|PeterJausovec|0.0.10|
|vscode-icons|robertohuertasm|4.1.0|
|yo|samverschueren|0.9.3|
|python|tht13|0.2.3|
|rst-vscode|tht13|1.3.0|

---


Steps to Reproduce:

1.  Load a project:

![seti_theme](https://cloud.githubusercontent.com/assets/13338401/21217729/9b943ae0-c2a5-11e6-84ba-7f17820eafcc.png)
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>29/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17275</IssueID>
    <Title>Add hotkey to step through search results</Title>
    <Description>In Visual Studio you can step through search results with F8. It would be nice to have a similar functionality in VS Code. Right now you have to click with the mouse, which is slow and cumbersome.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17272</IssueID>
    <Title>VSCode freeze at markdown preview page</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Win10

Steps to Reproduce:

1.  open markdown preview page
2.  select text and drag
3.  switch to another tab and return to markdown preview tab
4.  select text and drag, then VSCode freeze
[md-freeze.zip](https://github.com/Microsoft/vscode/files/654129/md-freeze.zip)


</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17270</IssueID>
    <Title>Softwrap for markdown</Title>
    <Description>I find it very hard to edit markdown files. There is no softwrap that makes the line continue on the next line if it's "overflowing" the current line. You have to scroll right, which is not the most UX friendly option.</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17265</IssueID>
    <Title>Copy shortcut not working in editor after making a selection in terminal.</Title>
    <Description>- VSCode Version: 1.8.0 
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Select some text in terminal
2. Select some text in one of opened editor
3. Press CTRL+C

Displays warning message saying 'Cannot copy terminal selection when terminal does not have focus'
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17253</IssueID>
    <Title>"Open editors" can't be hidden when no folder is opened</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: Windows 10

Steps to Reproduce:

1. Open a new window without opening a folder
2. Set "explorer.openEditors.visible" to 0

Expected:
"Open editors" hidden in explorer.

Actual:
One open editor is shown (same as "explorer.openEditors.visible" being set to 1).
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17241</IssueID>
    <Title>Reindent HTML ugly</Title>
    <Description>- VSCode Version: Code 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d, 2016-12-13T17:45:32.595Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions:

|Extension|Author|Version|
|---|---|---|
|auto-close-tag|formulahendry|0.3.6|

---

Steps to Reproduce:
still good...
![1](https://cloud.githubusercontent.com/assets/10414213/21213237/a2cda2c2-c2c5-11e6-9e6e-99ebdec4c283.png)
auch...
![2](https://cloud.githubusercontent.com/assets/10414213/21213240/a4c3fa04-c2c5-11e6-8542-72f8a1ab4837.png)
</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17235</IssueID>
    <Title>markdown preview - layout breaks on font zoom</Title>
    <Description>- VSCode Version: 1.8 release
- OS Version: Windows 8.1

Steps to Reproduce:

1. Open markdown (*.md) document in editor.
2. View markdown in preview mode.
3. Press Ctrl + "+" to zoom.

When previewing markdown documents in vscode, zooming the font causes the markdown window to shrink. The window gets visibly smaller with each zoom level.

![issue](https://cloud.githubusercontent.com/assets/3048342/21212887/7cecc42c-c2f5-11e6-8d68-be76ec1ec4df.png)

Many Thanks


</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17231</IssueID>
    <Title>Usability: NVDA is not announcing the name of the editor groups.</Title>
    <Description>VS Code Version: 1.6.1
OS Version:1607
NVDA version:-2016.2.1

Steps to Reproduce:
Prerequisite: NVDA need to be opened.
1.Open Visual studio code editor.
2.Using "Ctrl+1" key navigate to the left editor.
3.Using "Ctrl+2" key navigate to the side editor. 
4.Using "Ctrl+3",key navigate to the Right editor.

**Expected Result:**
NVDA should announce the name of the editor group  while navigating to 
Ex: NVDA should announce "app.js text editor 1" when the user is navigated to first editor.

**Actual Result:**
NVDA is not reciting the name for the editor groups while navigating to it.

User Impact:
Screen Reader user doesn't get to know the which Editor they are in and on pressing "Ctrl+1" they are navigated to the editor or not is not known.

![inspectinformation_visualstudiocodeeditor_editor](https://cloud.githubusercontent.com/assets/22956130/21212700/289d2b04-c2b5-11e6-9680-3f2e5cfd4bcb.jpg)
![nvda_speechviewerinformation_vscodeeditor_editor](https://cloud.githubusercontent.com/assets/22956130/21212702/2c221a3c-c2b5-11e6-8a63-01d97de999c8.jpg)




</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17218</IssueID>
    <Title>feature-request: touch emulation</Title>
    <Description>support touch emulation when previewing html</Description>
    <CreatedDate>15/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17212</IssueID>
    <Title>Markdown preview doesn't word wrap</Title>
    <Description>- VSCode Version: 1.8.0 (38746938a4ab94f2f57d9e1309c51fd6fb37553d)
- OS Version: Ubuntu 14.04.5 LTS

Steps to Reproduce:

1. Open a file.md
2. Open the preview w `ctrl+k v`
3. No word wrap.. let's try toggling word wrap w `ctrl-z` or `alt-v w`
4. Still no word wrap

This problem is present in the release notes too ie `f1 s r n enter`
</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>14/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17209</IssueID>
    <Title>Background color changes in "blocks" in editor</Title>
    <Description>- VSCode Version: 1.8.0
- OS Version: macOS Sierra 10.12.2

Steps to Reproduce:

1. Open an editor window.
2. You should be able to see that the background color of the editor window is not consistent. This happens for all themes.

![image](https://cloud.githubusercontent.com/assets/1090861/21205237/b77c47f0-c220-11e6-848c-40bdb0327607.png)

</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17206</IssueID>
    <Title>Give option to turn off “format-on-save” for specific file formats, like HTML</Title>
    <Description>Because spaces MATTER in HTML.</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>14/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17203</IssueID>
    <Title>Zen mode code centre</Title>
    <Description>- VSCode Version: 1.8
- OS Version: OS X 10.12.1

Zen mode is in! I love you guys, thanks for that, been looking forward to it! However, everything tends to hang to the left super heavily, which is not so fun in large monitors. Although I bet it works great on a vertical setup:

![VS Code Zen](https://cloud.githubusercontent.com/assets/3832380/21203753/9c834220-c219-11e6-892a-a3c193df2538.png)

I would love it if there were a way to add some left padding of sorts. For now I just turned off the Fullscreen option, changed the background color of my Desktop to match VS Code, and that works to some degree:

&lt;img width="2560" alt="Zen workaround" src="https://cloud.githubusercontent.com/assets/3832380/21203927/7d67c52c-c21a-11e6-9965-827a79b7aa01.png"&gt;

How other people are doing it:

Distraction free mode in IntelliJ tries to centre the code a bit: 

![IntelliJ family distraction free mode](https://stanfy.com/wp-content/uploads/2016/06/Distraction-Free-Mode-Android-Studio.png)

The Atom Zen mode plugin does something similar:

![Atom Zen](https://i.github-camo.com/6dbae0fe77e4492d6aa9a2c93f39ca4db79c6271/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f322f323239303435352f63653939653937652d613031642d313165332d383830382d6562656334306539353962342e706e67)

If there is a way to do this already and my google-fu failed me I do apologize for that.</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>14/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17149</IssueID>
    <Title>CoffeeScript parser error with forward slash</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: OS X

Steps to Reproduce:

1. Create a .coffee file
2. Use a forward slash without a trailing space makes the rest of the file turn red.

Possibly assumes it is a  reg exp?

![screen shot 2016-12-14 at 11 12 08](https://cloud.githubusercontent.com/assets/17428768/21167215/3772d33a-c1ee-11e6-93d5-b8bf418bfab7.png)

I see the issue below is exactly the same as this, but closed in April?
https://github.com/Microsoft/vscode/issues/499
</Description>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17124</IssueID>
    <Title>VS code requires a restart after installing ftp-simple</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10 Pro Version 1607 Build 14393.479

VS code requires a restart after installing ftp-simple before the startup instructions (at https://github.com/humy2833/FTP-Simple)  become applicable; the ftp-simple commands don't show up until after a restart. Don't know if this is a VS Code problem or ftp-simple problem.

VS Code version:  1.7.2
FTP-simple: 0.4.14

related: https://github.com/humy2833/FTP-Simple/issues/22</Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17122</IssueID>
    <Title>Not all keystrokes recorded when using git bash for Windows as the integrated shell</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|tslint|eg2|0.5.33|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.1|
|prettify-json|mohsen1|0.0.3|
|vscode-icons|robertohuertasm|1.5.2|
|vim|vscodevim|0.4.2|

---

Steps to Reproduce:

1. Install git for windows (https://git-for-windows.github.io/)
2. Setup the git bash shell as the integrated terminal for vscode (workspace settings: "terminal.integrated.shell.windows": "C:\\progra~1\\Git\\bin\\bash.exe")
3. Type text into the integrated shell window (quickly, typed). 
4. When you press return to send the command, some of the text isn't sent to the command window. I'm not sure if this behavious occurs more frequently when backspace is used. </Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17116</IssueID>
    <Title>http web page window is small when (Ctrl+= )resize font size.使用缩放功能时网页窗口区域太小了</Title>
    <Description>- VSCode Version: Code 1.7.1 and 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|debugger-for-chrome|msjsdiag|2.3.2|

---

Steps to Reproduce:

1.Ctrl+= 
2.open any window that contains web page, extension details page for example.</Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17109</IssueID>
    <Title>Support auto detect of file encoding</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: 6.1.7601

</Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>18/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17105</IssueID>
    <Title>Default new window position and size</Title>
    <Description>When I open a new window in VS Code (Ctrl/Cmd+Shift+N), the new window takes about 1/3 of the screen and I need to manually resize it to make it bigger.  (On Windows this may not be a huge issue since there's the maximize button. But on a Mac, laborious manual resizing is needed to keep windows in the same space.)

Wanted behavior: The window is sized and positioned with the size and position taken from the last user-sized and the last user-positioned window.

Possible workaround if this is hard to implement: add an option to specify new default window size and an option to specify a new default window position, both in pixels.

This is **NOT** a duplicate of #9534 **nor** a duplicate of #422.</Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17096</IssueID>
    <Title>High CPU usage when just opening project folder</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 7 64bit

Steps to Reproduce:

1.  Open the project folder, and do nothing. (The project mainly consists of .java files)
2.  Can observe the CPU usage will jump from 10% to as high as 60%
3.  If more vscode window open with other project folder, the CPU usage will jump to more than 90%


the devtools console reports:
```
Failed to clear temp storage: It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources. SecurityError

(1150) workbench.main.js:126 [FileWatcher] terminated unexpectedly (code: 2148734720, signal: null)
workbench.main.js:126 
e.onUnexpectedError @ workbench.main.js:126
(anonymous function) @ workbench.main.js:126
e.onUnexpectedError @ workbench.main.js:29
r @ workbench.main.js:29
e.onFileServiceError @ workbench.main.js:90
errorLogger @ workbench.main.js:90
e.onError @ workbench.main.js:89
(anonymous function) @ workbench.main.js:89
t.onExit @ workbench.main.js:89
(anonymous function) @ workbench.main.js:89
emitTwo @ events.js:106
emit @ events.js:191
ChildProcess._handle.onexit @ internal/child_process.js:215
```
note that the error number 1150 is continuous increasing at rate about 1/s.

the devtool CPU profile result for certain time period is as below:
```
22504.3 ms	22504.3 ms	(idle)	
1902.5 ms73.70 %	1902.5 ms73.70 %	spawn	
261.2 ms10.12 %	261.2 ms10.12 %	(program)	
102.1 ms3.96 %	106.9 ms4.14 %	normalizeSpawnArgumentschild_process.js:320	
24.6 ms0.95 %	1960.3 ms75.94 %	ChildProcess.spawninternal/child_process.js:267	
24.6 ms0.95 %	1960.3 ms75.94 %	exports.spawnchild_process.js:1	
24.6 ms0.95 %	1960.3 ms75.94 %	t.startWatcherworkbench.main.js:89	
24.6 ms0.95 %	1960.3 ms75.94 %	t.onExitworkbench.main.js:89	
24.6 ms0.95 %	1960.3 ms75.94 %	(anonymous function)workbench.main.js:89	
24.6 ms0.95 %	1960.3 ms75.94 %	emitTwoevents.js:1	
24.6 ms0.95 %	1960.3 ms75.94 %	emitevents.js:136	
24.6 ms0.95 %	1960.3 ms75.94 %	ChildProcess._handle.onexitinternal/child_process.js:181	
21.8 ms0.84 %	39.0 ms1.51 %	Socket._destroynet.js:459	
17.3 ms0.67 %	18.2 ms0.70 %	error	
12.9 ms0.50 %	12.9 ms0.50 %	(garbage collector)	
12.4 ms0.48 %	12.4 ms0.48 %	close	
12.4 ms0.48 %	64.7 ms2.50 %	emitNoneevents.js:1	
10.8 ms0.42 %	29.0 ms1.12 %	e.onUnexpe
```
</Description>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17087</IssueID>
    <Title>Behavior of Shift + End changed</Title>
    <Description>- VSCode Version: 1.8.0-insiders

Steps to Reproduce:

1. Select one line up with &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;↑&lt;/kbd&gt;
2. Try to only select till the line end with &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;End&lt;/kbd&gt;

Expected:
The cursor jumps to the end of the line where the cursor currently is (like in stable)
![stable](https://cloud.githubusercontent.com/assets/10532611/21110045/f8191c2e-c09b-11e6-999b-0e7048cdb228.gif)

Actual:
The cursor jumps to the end of the line where the selection ends
![insiders](https://cloud.githubusercontent.com/assets/10532611/21110059/0d4877f2-c09c-11e6-93cb-16c3a2075136.gif)
</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17083</IssueID>
    <Title>Ctrl+click navigation to static class method in JavaScript is broken</Title>
    <Description>See the sample below.
Current behavior when I Ctrl+click the "initHistoryItem" name on line 3: nothing happens.
Expected behavior: VS Code should navigate to the actual static method initHistoryItem on line 5.

Similar problem, when I click on line 3 on the History name, VS navigates to strange definition in lib.es6.d.ts instead of focusing the current class name on line 1.

```
class History {
    search(items) {
        var urls = items.map(History.initHistoryItem); // &lt;-- ctrl+click here
    };
    static initHistoryItem(hi) {
        hi.info = new URL(hi.url);
        return hi;
    };
};
```

- VSCode Version: 1.7.2
- OS Version: Windows 10 Anniversary Update</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>14/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17075</IssueID>
    <Title>Show search results "incrementally" while searching</Title>
    <Description>### Feature request

Current behavior: vscode currently gathers all search results and when the search is fully complete, the UI is updated with all the results.

Desired behavior: I wish that vscode would update the UI while searching with results that have thus far been found. In my opinion this is a much nicer user experience, especially in larger projects where full project searches can take up a long time to complete. If the desired result is found early in the search, the user should be able to select the result and jump to the code (the search should just keep going until it is completed, or if the user aborts it).

Relates to #16403</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17072</IssueID>
    <Title>Customize peek</Title>
    <Description>It's more of a feature request. I am referring to the peek display zone (the one on blue background).
It's quite a great thing, but it's annoying that uses all the horizontal space. 
In my case I like to use the right side where there is a lot of empty space (no code) to display something. And keep the code from the current file visible and unchanged (when peek is used it shifts the code a few lines lower.  
It would be great if we could change its size and even position anywhere. That way we can see both the peek version and the current file however we like.

</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17062</IssueID>
    <Title>Duplicate Key Warnings when opening Problems View and the Settings editor</Title>
    <Description>(likely a duplicate, filed again for discussion)

![image](https://cloud.githubusercontent.com/assets/172399/21093220/edab7692-c050-11e6-8eb3-e65d16bb3db6.png)
</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17061</IssueID>
    <Title>output window:The compiler output Chinese garbled</Title>
    <Description>- VSCode Version:1.7.2
- OS Version:win7

Steps to Reproduce:

1. output window:The compiler output Chinese garbled.
2. output:
running command&gt; cmd /c cl /Zi /EHsc d:\test\cpp\tmp.cpp 
���� x86 �� Microsoft (R) C/C++ �Ż������� 19.00.24210 ��
��Ȩ����(C) Microsoft Corporation����������Ȩ����
tmp.cpp
</Description>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17051</IssueID>
    <Title>Multiple Emmet Selections only expands the first one</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 7 x64

#### Steps to Reproduce:

Video: https://youtu.be/pc2wjBBF2p0

1. Select a word/tag multiple times using Ctrl+D
2. Press Tab or use `Emmet: Expand` from the Quick Menu.</Description>
    <CreatedDate>11/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17050</IssueID>
    <Title>Graphic glitch after upgrading to MacOs Siera</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|bracket-pair-colorizer|CoenraadS|0.2.1|
|material-icon-theme|PKief|1.1.4|
|indenticator|SirTori|0.2.1|
|unity-tools|Tobiah|0.1.9|
|unity-debug|Unity|1.1.0|
|unity-snippets|YclepticStudios|0.1.2|
|TabOut|albert|0.1.4|
|one-monokai|azemoh|0.2.3|
|theme-onedark|azemoh|0.4.0|
|vscode-icontheme-nomo-dark|be5invis|1.2.1|
|theme-dracula|dracula-theme|1.2.5|
|extension-leaderboard|formulahendry|0.0.2|
|csharpextensions|jchannon|1.1.0|
|theme-material-theme|jprestidge|1.0.1|
|csharp|ms-vscode|1.5.3|
|mono-debug|ms-vscode|0.12.0|
|vscode-icons|robertohuertasm|4.0.6|
|theme-obsidian|rprouse|0.2.0|
|Spell|seanmcbreen|0.9.1|

---

Steps to Reproduce:

1.There are no steps to reproduce this problem.
After i installed MacOsSiera there's a weird graphical glitch in the background.
I tried re-installing but the issue didn't got fixed.
![screen shot 2016-12-11 at 9 28 41 pm](https://cloud.githubusercontent.com/assets/23614722/21082667/db69c712-bfe8-11e6-8934-3004df4807ee.png)
</Description>
    <CreatedDate>11/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17043</IssueID>
    <Title>CMD+Left with selection issue</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (40243d1e01f426f54670f3dbaa6b77d18469310d, 2016-12-09T12:06:36.411Z)
- OS Version: Darwin x64 16.1.0


Steps to Reproduce:

1. TS example of code:
```ts
const test = {
    a: 'b',
    c: 'd'
}
```

2. This works ok: put cusror at `3:11` 
![image](https://cloud.githubusercontent.com/assets/1723815/21080044/bdc466d4-bf72-11e6-894f-75c3398f68cd.png)

3. and hit `Cmd+Left`:
![image](https://cloud.githubusercontent.com/assets/1723815/21080046/ca844e52-bf72-11e6-8622-d44ba9fecdb5.png)


4. This does not work: (select text like this)
![image](https://cloud.githubusercontent.com/assets/1723815/21080052/f898494c-bf72-11e6-8a2b-7d91a231ab5b.png)

5. Holding `Shift` hit `Cmd+Left`, here is the result:
![image](https://cloud.githubusercontent.com/assets/1723815/21080058/224d59d0-bf73-11e6-9a4c-cdee8b790c9a.png)

Should be (this is result from Sublime, works the same in Atom):
![image](https://cloud.githubusercontent.com/assets/1723815/21080060/335fefda-bf73-11e6-98b1-4ad973133cfd.png)


Looks like it might have change recently because I'm pretty sure I was using this combination in the past (but I might be wrong)
</Description>
    <CreatedDate>11/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17017</IssueID>
    <Title>Feature Request: Git Diff/Undo from gutter</Title>
    <Description>Hello

vscode 1.7.2

VSCode displays changed lines in the gutter. However to 'undo' a change, we have to first stage all the changes we want, and then undo whatever is left.

However this requires many clicks and context changes.
1. Git  
2. Diff   
3. Click Lines you want to keep  
4. Click undo on non-stages lines   

In Visual Studio I have an extension that allows me to undo lines/hunks by clicking that git gutter decoration:

![diff margin example](https://cloud.githubusercontent.com/assets/5593825/21073237/066e5ccc-bed9-11e6-867f-22029b887a93.gif)

I do not think it is possible to create a similar extension because there is no public api to hook the click event. So I am requesting it either be integrated into VS, or expose click events as an API.</Description>
    <CreatedDate>10/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>17013</IssueID>
    <Title>Build fails for 1.7.2 on a Ubuntu 14.04 Travis CI instance: Error: Cannot find module 'gulp-watch'</Title>
    <Description>Hi,

- VSCode Version: 1.7.2
- OS Version: Ubuntu 14.04

Steps to Reproduce:

1. Run:

```bash
apt-get update
apt-get install -y wget curl build-essential libx11-dev git

curl -sL https://deb.nodesource.com/setup_7.x | bash -
apt-get install -y nodejs

npm install -g gulp

CODE_VERSION=$(wget -cq https://github.com/Microsoft/vscode/releases -O - | grep ".tar.gz" | head -n 50 | cut -d '"' -f 2 | cut -d '/' -f 5 | sed 's|.tar.gz||g' | grep "[0-9]" | sort -u | tail -n 1)
printf "VERSION is $CODE_VERSION\n"

wget -cqO- https://github.com/Microsoft/vscode/archive/${CODE_VERSION}.tar.gz | tar xz --transform="s/vscode-${CODE_VERSION}/vscode/"
cd vscode
scripts/npm.sh install
node --max_old_space_size=2048 /usr/bin/gulp vscode-linux-x64
```

as root in a Ubuntu 14.04 Travis CI build instance. You'll get the error documented [here](https://travis-ci.org/fusion809/Code-OSS.AppImage/builds/182812418). Most importantly I get the message: 

`Error: Cannot find module 'gulp-watch'`

Thanks for your time,
Brenton</Description>
    <CreatedDate>10/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16997</IssueID>
    <Title>Deleted files show up in quick open if they were deleted when vscode was closed with the file not open</Title>
    <Description>One case from #14761:

- Open folder A
- Create a file 'foo.txt'
- Close the tab (ie cmd+w)
- Quit vscode
- Delete foo.txt
- Reopen folder A in vscode
- See that foo.txt is in quick open. If I try to open it, I get an error message

If foo.txt was open when I quit vscode, this doesn't repro (due to looking for it when vscode opens?) If I delete the file when vscode is open, this doesn't repro. I see this on MacOS and Windows.</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>10/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16996</IssueID>
    <Title>Searching settings which are not listed in Most Commonly Used expands sections incorrectly</Title>
    <Description>- VSCode Version: 1.8.0-Insiders
- OS Version: macOS

Steps to Reproduce:

1. Search any setting directly by pasting the setting name into the search bar, for example `diffEditor.renderIndicators`
2.  The expansion icon shows the section is expanded while actually it's not.
![screen shot 2016-12-09 at 10 33 47 am](https://cloud.githubusercontent.com/assets/876920/21060303/7e648226-bdfb-11e6-8b01-4991ea8259bc.png)

</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16993</IssueID>
    <Title>Git colored files for staged and not staged</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|Angular2|johnpapa|1.0.2|
|csharp|ms-vscode|1.5.3|

---

Just a suggestion, colored files for git staged status will be great. Green for staged and red for not staged. It's visually comfortable and intuitive to commit.</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16991</IssueID>
    <Title>[macOS] Properly handle Window Restoration during Sudden Termination (for Spaces)</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.5|
|debugger-for-chrome|msjsdiag|2.3.2|

---

### Steps to Reproduce:

1. [Create multiple Spaces](https://support.apple.com/kb/PH21872) for the current User.
2. Open Visual Studio Code on macOS (any version 10.7+).
3. Open a Folder (or new window) multiple times: once, at least, in each Space you created in Step 1.
    - Ensure you have the `window.reopenFolders` [setting](https://code.visualstudio.com/docs/editor/codebasics#_window-management) set to `all`.
4. Perform one of the following [_Sudden Termination_](https://developer.apple.com/library/content/documentation/General/Conceptual/MOSXAppProgrammingGuide/CoreAppDesign/CoreAppDesign.html#//apple_ref/doc/uid/TP40010543-CH3-SW22) actions:
    1. **Logout** of the current User. Log back into the same user.
    2. **Shut Down** the computer. Turn the computer back on.
    3. **Restart** the computer.

### Expected Results:

Visual Studio Code's windows restore to the Spaces they were in when the action in Step 4 took place.

### Actual Results:

Visual Studio Code restores all windows to the current Space (typically "Desktop 1") when the user is properly logged back in. They must be manually reassigned to the previous spaces.

### Errata:

- Compare Visual Studio Code's results with that of Apple's built-in applications: all windows of Apple-built apps correctly restore to the Space they existed in prior to the `Sudden Termination` event.
- Apple _does_ offer the ability to [**Assign apps to Spaces**](https://support.apple.com/kb/PH21872). However, this only adjusts what Space the Windows start in. If a user intentionally moves the windows to different Spaces then all Windows would recollect to _that_ space upon restart instead of the previously assigned Space (as expected). In short, this is not a solution to the problem.
- **Use Case:** A developer creates three Spaces and opens a folder in a unique Visual Studio Code window on each Space. These Spaces serve different development contexts for the developer. When restarting (say from OS update), the developer expects the windows to restore to the previously used Space.
- According to _Apple Developer Relations_, apps that wish to support this feature must "use NSWindow’s [encodeRestorableStateWithCoder:](https://developer.apple.com/reference/appkit/nsresponder/1526236-encoderestorablestatewithcoder) and [restoreStateWithCoder:](https://developer.apple.com/reference/appkit/nsresponder/1526253-restorestatewithcoder)" (those APIs are part of [NSResponder](https://developer.apple.com/reference/appkit/nsresponder)). This is also somewhat outlined [here](https://developer.apple.com/library/content/documentation/General/Conceptual/MOSXAppProgrammingGuide/CoreAppDesign/CoreAppDesign.html#//apple_ref/doc/uid/TP40010543-CH3-SW26).</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16990</IssueID>
    <Title>Changing a selection to the end or beginning of a line while selecting multiple lines behaves wrong</Title>
    <Description>- VSCode Version: 1.8.0-insider 40243d1e01f426f54670f3dbaa6b77d18469310d
- OS Version: macOS 10.11.6

Steps to Reproduce:

1. Open a file with multiple lines of text (for simplicity assume 2 lines of text in here)
2. Place cursor in the middle of line 1
3. Start selection with Shift + Down (now the text from the start column, line 1 until start column, line 2 is selected, which is as intended)
4. Now change the selection to the start of line with Cmd + Shift + Left
5. Selection now goes from start column, line 1 to column 1, line 1 (expected selection: start column, line 1 to column 1, line 2)

This gif should clarify the problem:

![lineselection](https://cloud.githubusercontent.com/assets/5306662/21056760/43690b6a-be37-11e6-803a-35f57ad64747.gif)

Here is the selection I would expect: 
&lt;img width="250" alt="screen shot 2016-12-09 at 17 50 40" src="https://cloud.githubusercontent.com/assets/5306662/21056977/0969bf62-be38-11e6-8ba1-4f9a3cf24690.png"&gt;

This problem appears in different scenarios based on if you started your selection upwards or downwards and if you want to change the selection to the start or the end of a line.</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16989</IssueID>
    <Title>Feature Request: API: Subscribe to the "data" event on a terminal</Title>
    <Description>Hi everybody,

I suggest to add a new function `on` to the class `Terminal`.

## Motivation
There is an extension for Rust [RustyCode](https://github.com/saviorisdead/RustyCode).
There is a command **build**.
When build is finished, we parse output and show warnings, errors and etc. in user's code.
Currently it is made via the class `OutputChannel`, which doesn't support input.

## Example
```typescript
let terminal = vscode.window.createTerminal('Build');
terminal.on('data', data =&gt; {
    let buildProgress = this.parseBuildProgress(data);
    this.updateBuildProgress(buildProgress);
});
terminal.show();
terminal.sendText('make');
```

## Alternatives
### Write to a file
```typescript
let terminal = vscode.window.createTerminal('Build');
terminal.show();
terminal.sendText('make |&amp; tee /tmp/some_file');
```

I will implement it myself.
I am opening this issue to receive opinions.

Regards,
Alexey</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16986</IssueID>
    <Title>Inside built-in terminal - tabbing through folders makes text jump</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10 / 1607 / 14393.447

Steps to Reproduce:

1. Open up built-in terminal
2. Type `cd&lt;space&lt;`
3. Hit &lt;tab&gt; a couple of times - and try &lt;shift&gt;+&lt;tab&gt;
4. Observe how text jumps around in the window

See below

![vs_code_tabbing_through_dirs_in_console](https://cloud.githubusercontent.com/assets/17111555/21053702/e7a4926a-be2a-11e6-920e-67d9f97f610f.gif)

**Note** Don't mind the white cursor block - that wasn't really there, that turned up after rendering the GIF</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16983</IssueID>
    <Title>Per language settings are needed</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Win10

Steps to Reproduce:

1. Open a Markdown file and begin writing an article.
2. Code begins offering text suggestions which get in the way of writing.

For example, I type 'te' and it suggest 'test' and 'testing' and if I try to hit enter because I'm at the end of the line and want to go to the next line, Code enters a word I didn't want.

Basically I want to turn off autocomplete for markdown, which would be easy if I could specify settings on a per language basis that override the system defaults. 
</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16981</IssueID>
    <Title>smoketest: seeing 'Duplicate object key' warning for settings.json</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (40243d1e01f426f54670f3dbaa6b77d18469310d, 2016-12-09T12:06:36.411Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

---

Steps to Reproduce:

1. open user settings.json
1. open problems view

Observe: 10 'Duplicate object key' warnings are showing up. This looks silly for the OOTB experience.</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16978</IssueID>
    <Title>smoketest: switching projects results in a black window</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (40243d1e01f426f54670f3dbaa6b77d18469310d, 2016-12-09T12:06:36.411Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

Steps to Reproduce:

1. follow smoketest setup (launching VS Code with `&lt;code executable&gt; --user-data-dir &lt;new user data dir&gt; --extensions-dir &lt;new extensions dir&gt;`)
1. set theme to 'Light+'
1. open another project

Observe: while switching projects the window turns black for half a second.</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16974</IssueID>
    <Title>Is there a way to disable Ctrl Click go to reference feature?</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Ubuntu 16

Steps to Reproduce:

1. Have a reference (TypeScript) (`import * as moment from 'moment';`)
2. Ctrl click `moment` to select the word

**Expected**: Select the word `moment`

**Actual**: It goes to moment definition file


Note, the following keybinding **did not** change the behavior at all:

```json
    {
        "key": "ctrl+[mouse button]",
        "command": "cursorWordLeft",
        "when": "editorTextFocus"
    }
```</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16966</IssueID>
    <Title>diff display does not work (1.8.0-insider 2016-12-09T07:02:57.714Z)</Title>
    <Description>- VSCode Version: 1.8.0-insider (1.8.0-insider) 46e96d6d73bcf731c9907955e89c9a154f7a9050 2016-12-09T07:02:57.714Z
- OS Version: macOS Sierra 10.12.1（16B2657）

Steps to Reproduce:

1. code-insiders --disable-extensions
2. `Select for Compare` and  `Compare with ...` or GIT view

Indicator showing difference is not displayed

&lt;img width="1920" alt="2016-12-09 18 06 13" src="https://cloud.githubusercontent.com/assets/13635244/21043513/96ed340c-be3a-11e6-8377-46118c706412.png"&gt;</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16956</IssueID>
    <Title>ERR_FILE_NOT_FOUND for nls.js and editorSimpleWorker.js</Title>
    <Description>- VSCode Version: 1.8 insiders dated 12/8 around 2PM PST
- OS Version: Any

Steps to Reproduce:

1. Open a workspace and then open any file

![image](https://cloud.githubusercontent.com/assets/16890566/21033986/59f80a76-bd69-11e6-8258-9ebfe1ae833b.png)

</Description>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16948</IssueID>
    <Title>Fresh install of Visual Studio Code does not launch</Title>
    <Description>- VSCode Version: 1.7.2-1479766213
- OS Version: CentOS7 (64)

Steps to Reproduce:

1. Install VS Code via .rpm
2. Open a terminal and run "code ."
3. See that it returns `/usr/share/code/bin/../code: error while loading shared libraries: libXss.so.1: cannot open shared object file: No such file or directory`.
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16947</IssueID>
    <Title>Zooming UI </Title>
    <Description>- VSCode Version: 1.8.0 - insider
- OS Version: Windows


-- Sorry for the English, I used Google Translator --

Based on issue #14979 with  [comment](https://github.com/Microsoft/vscode/issues/14979#issuecomment-259390808).


1- Ctrl + + It should zoom in on the editor, the file we're moving, not the zoom of the whole program.
2- Ctrl + - You should zoom out within the editor, the file you are moving, not the zoom of the entire program.
3- Ctrl + 0 You should zoom back to the default, the file you are moving, not the zoom of the entire program.

4- Ctr + +, Ctr + - should work the same way when we use "editor.mouseWheelZoom", by only zooming the file. And using Ctrl + 0 returns to the default.

5- Ctr + = You should do nothing. The zoom continues. You must unlink this function.
6- Ctrl + 0 of the non-numeric keyboard does not reset the zoom.


These shortcut keys should be valid for both numeric and non-numeric keys. In the menu you should change the registration `Ctr + =` by `Ctrl + +`


Why not set specific sizes for the UI? Maybe some [problems ](https://github.com/Microsoft/vscode/issues/14979#issuecomment-265772474)mentioned by @alexandrudima would decrease!!

&gt;In fact I am 100% in favor of eliminating the entire UI zoom we're shipping with, it causes many issues with font anti-aliasing for example and I have to maintain extraneous code to work around it (i.e. not using translate3d when the UI zoom is not 100%)



Example: Small, Normal, Large, Extra large. To set proportions, do a search with someone who uses sizes other than their normal size.</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16946</IssueID>
    <Title>Launch drop down no longer updates</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (e0871329738682651367be4e8a618912ad693e03, 2016-12-08T07:05:13.731Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|autofilename|JerryHong|0.1.3|
|vscode-docker|PeterJausovec|0.0.7|
|regex|chrmarti|0.0.7|
|vscode-eslint|dbaeumer|1.1.0|
|ghlink|dt|0.0.4|
|tslint|eg2|0.6.0|
|vscode-scss|mrmlnc|0.6.0|
|PowerShell|ms-vscode|0.7.2|
|debugger-for-chrome|msjsdiag|2.2.2|
|diff|rafaelmaiolla|0.0.1|
|vscode-open-in-github|sysoev|1.2.1|

---

This was working in yesterdays insiders:
![dec-08-2016 11-21-31](https://cloud.githubusercontent.com/assets/9205389/21024247/8802c6f8-bd38-11e6-8609-de02b8fe1951.gif)

Also when adding a launch config manually.</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16932</IssueID>
    <Title>Debug dropdown: selecting an entry should not launch it</Title>
    <Description>Steps to Reproduce:

1. make a selection change in the debug viewlet launch dropdown 
2. the selection change seems to trigger a start?

From the looks of that widget, this is not what I would expect.
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16916</IssueID>
    <Title>Having an invalid configuration in compound behaves randomly</Title>
    <Description>Verifying #16614

- Open launch.json in VS Code
- Put following compound configuration
```
"compounds": [
		{
			"name": "Compound1",
			"configurations": [
				"abcs"
			]
		}
	]
```
- Select above compound from the dropdown
- It runs Mocha unit tests</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16914</IssueID>
    <Title>In Integred Terminal, press Tab to next file, leaves blank space and traces</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10

Steps to Reproduce:

1.  Open terminal integred
2.  Press Tab many times to next files


See GIF:

![20161208_091540](https://cloud.githubusercontent.com/assets/5774595/21008143/89f5c4a8-bd27-11e6-9687-f2bfb727324f.gif)

</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16907</IssueID>
    <Title>[regression] Cannot navigate from output panel to editor anymore</Title>
    <Description>When having a hygiene fail in the precommit hook, I would navigate to the file using ctrl+click in the output editor. This appears to be no longer working for me.

The hover shows I can ctrl+click, but it has no effect:

![image](https://cloud.githubusercontent.com/assets/5047891/21005067/a3a520ea-bd33-11e6-9c5a-d5d6dbe868cb.png)
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16906</IssueID>
    <Title>banckground color broken</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|xml|DotJoshJohnson|1.6.0|
|matlab|Gimly81|0.4.0|
|beautify|HookyQR|0.6.2|
|html-snippets|abusaidm|0.0.18|
|vscode-css-formatter|aeschli|0.0.2|
|jquerysnippets|donjayamanne|0.0.1|
|python|donjayamanne|0.5.5|
|vscode-html-css|ecmel|0.0.30|
|vscode-csscomb|mrmlnc|3.2.4|
|cpptools|ms-vscode|0.9.2|
|qub-xml|qub|0.3.0|
|vscode-icons|robertohuertasm|4.0.5|
|sass-indented|robinbentley|1.2.1|
|jinja|wholroyd|0.0.7|

---

Steps to Reproduce:

1. change all setting to defaut
2. find that background is broken 

![2016-12-08 5 38 06](https://cloud.githubusercontent.com/assets/22286839/21004897/a33b8952-bd6d-11e6-9cbc-6429f7bdf8eb.png)
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16899</IssueID>
    <Title>When input non-english like Chinese the input box will blink</Title>
    <Description>
![vscodebug1](https://cloud.githubusercontent.com/assets/4171188/21003411/292c77fe-bd66-11e6-8df2-548e53d8efa4.gif)


- VSCode Version: 1.7.2
- OS Version: MAC OS 10.11.6

Steps to Reproduce:

1. Use Chinese input source
2. Input something
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16898</IssueID>
    <Title>Open Output window to the side?</Title>
    <Description>I develop on a laptop with a small widescreen monitor. I use the output window to display test output.

Having it open at the bottom of the monitor means that I have lots of empty space to the right in both my code window and my output window.

Surely it must be possible to open the output window to the side?</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16897</IssueID>
    <Title>VS debug console does not debug Destructuring assignments</Title>
    <Description>- VSCode Version: 1.7.2 
- OS Version: Windows 8.1
- Node: v6.9.1

Steps to Reproduce:

1. 
Create an index.js file containing the following code:

```
let [,, a,b] = [0,1,2,3];
console.log(a);
console.log(b);
```

2. 

Use the default created launch.json for debuggin in VS debug console, example of launch.json

   ```
     {
            "type": "node",
            "request": "launch",
            "name": "Launch Program",
            "program": "${workspaceRoot}\\index.js",
            "cwd": "${workspaceRoot}",
            "args": [ "/test.css", "/test.json" ]
        },
```
3. 

Start debugging using VS debug console ("Launch Program"), at first line an  error is thrown
`
TypeError: Cannot read property 'next' of undefined`

Basically I am not able to debug a Destructuring assignment
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16887</IssueID>
    <Title>Markdown internal links not render correctly</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|azuretoolsforvscode|bradygaster|0.0.11|
|vscode-eslint|dbaeumer|1.1.0|
|tslint|eg2|0.7.1|
|azure-iot-toolkit|formulahendry|0.0.6|
|mssql|ms-mssql|0.1.5|
|cpptools|ms-vscode|0.9.2|
|csharp|ms-vscode|1.5.3|
|PowerShell|ms-vscode|0.7.2|
|vscode-azureextensionpack|ms-vscode|0.0.3|
|azurerm-vscode-tools|msazurermtools|0.3.2|
|debugger-for-chrome|msjsdiag|2.3.2|
|debugger-for-edge|msjsdiag|0.4.1|
|vscode-docker|PeterJausovec|0.0.9|
|usql-vscode-ext|usqlextpublisher|0.1.9|
|vscode-react-native|vsmobile|0.2.3|

---

Steps to Reproduce:

1. Open a Markdown file with internal links.
2. When you open a internal link, vscode render this:
![2016-12-07 4](https://cloud.githubusercontent.com/assets/18619074/20995775/427f3e5c-bcc7-11e6-952b-11369f723216.png)
![2016-12-07 5](https://cloud.githubusercontent.com/assets/18619074/20995774/427b080a-bcc7-11e6-815e-0b84cec4e207.png)
</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16880</IssueID>
    <Title>"Unable to write user settings" info bar should include a link to user settings</Title>
    <Description>Testing #15811

We're asking people to go there, so might as well remove a step and link them there. 

![image](https://cloud.githubusercontent.com/assets/762848/20993102/072fb6d0-bc9d-11e6-8299-2769bf850fd1.png)

&lt;hr&gt;

- VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:16:15.865Z)
- OS Version: Windows_NT ia32 10.0.14965</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16875</IssueID>
    <Title>Menu items should get greyed out if they are are no longer applicable</Title>
    <Description>Testing #15811

Menu items should get greyed out if they are are no longer applicable. E.g. Undo/Redo commands should not be displayed if we are at the bottom/top of the undo stack. Same with back/forward. In the cases below, "back" and "redo" both appear to be valid commands, even though they won't do anything. 

![image](https://cloud.githubusercontent.com/assets/762848/20992573/bbcb15a2-bc99-11e6-9c4a-39fd82187dab.png)

![image](https://cloud.githubusercontent.com/assets/762848/20992539/89d0cbdc-bc99-11e6-930f-bf5723d02b99.png)

&lt;hr&gt;

- VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:16:15.865Z)
- OS Version: Windows_NT ia32 10.0.14965</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16873</IssueID>
    <Title>User Settings in Problem view error</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (af81c48568ce7419eb01e730fb830db93a105bbb, 2016-12-07T13:52:32.130Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-color|anseki|0.2.2|
|output-colorizer|IBM|0.0.8|
|cpptools|ms-vscode|0.9.2|
|vscode-icons|robertohuertasm|4.0.5|
|vscode-hexdump|slevesque|1.1.4|

---

Steps to Reproduce:

1. 
2.

![111](https://cloud.githubusercontent.com/assets/8591065/20992403/d5ceaa60-bd1e-11e6-9303-5d50af644485.gif)</Description>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16862</IssueID>
    <Title>"Unable to write settings" message bar should have button to open User Settings</Title>
    <Description>- VSCode Version:1.8.0 Insiders
- OS Version:Windows 10
Steps to Reproduce:

1. Add an extra trailing comma to user settings.json.
2. Close the settings file.
3. Try to toggle File &gt; AutoSave.

You see the "Unable to write settings. Please open User Settings to correct..." message. 
We should add a button to open User Settings next to Close.
</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16859</IssueID>
    <Title>[Feature Request] Loading git executable from WSL</Title>
    <Description>- OS Version: Windows 10 (Anniversary Update)

Hi, since WSL is now available to provide easier access to multiple command line utilities that were normally only available as workaround for windows, is there a possibility to allow VSCode to access the git executable installed on Bash instead of either being forced to maintain two git updated with ssh keys or start vscode from the bash command line (which is currently not supported but would completely solve this issue)
</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16856</IssueID>
    <Title>Just my code debugging is ignoring a skip file in the workspace root when using node</Title>
    <Description>#16208

- VSCode Version: Code - Insiders 1.8.0-insider (0d65ced0fa7398dc9d50c39a23a2a8cc8406ff18, 2016-12-07T07:04:22.691Z)
- OS Version: Linux x64 4.8.0-27-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|python|donjayamanne|0.5.5|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|Go|lukehoban|0.6.50|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|java|redhat|0.0.7|
|annotator|ryu1kn|0.10.1|

---

1. Clone and open https://github.com/Microsoft/vscode-smoketest-express.git
2. Created the launch.json:

    ```js
    {
        // Use IntelliSense to learn about possible Node.js debug attributes.
        // Hover to view descriptions of existing attributes.
        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
        "version": "0.2.0",
        "configurations": [
            {
                "type": "node2",
                "request": "launch",
                "name": "Launch Program",
                "program": "${workspaceRoot}/bin/www",
                "cwd": "${workspaceRoot}",
                "skipFiles": [
                    "file.js"
                ]
            },
            {
                "type": "node",
                "request": "attach",
                "name": "Attach to Process",
                "port": 5858
            }
        ]
    }
    ```

3. Create `bin/file.js`:

    ```js
    module.exports = {
        test: function() {
            console.log('foo');
        }
    };
    ```

4. Add this to bin/www:

    ```js
    var file = require('./file');
    file.test();
    ```

5. Put a breakpoint on the `file.test()` call
6. Start debugging
7. Hit the breakpoint
8. Step in, the code is skipped correctly
9. Change `type` to `node`
10. Repeat 6-8, the debugger will incorrectly go inside file.js</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16854</IssueID>
    <Title>Debug: Having skipFiles will skip native node APIs when using node but not with node2</Title>
    <Description>#16208

- VSCode Version: Code - Insiders 1.8.0-insider (0d65ced0fa7398dc9d50c39a23a2a8cc8406ff18, 2016-12-07T07:04:22.691Z)
- OS Version: Linux x64 4.8.0-27-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|python|donjayamanne|0.5.5|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|Go|lukehoban|0.6.50|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|java|redhat|0.0.7|
|annotator|ryu1kn|0.10.1|

---

1. Clone and open https://github.com/Microsoft/vscode-smoketest-express.git
2. Created the launch.json:

    ```js
    {
        // Use IntelliSense to learn about possible Node.js debug attributes.
        // Hover to view descriptions of existing attributes.
        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
        "version": "0.2.0",
        "configurations": [
            {
                "type": "node",
                "request": "launch",
                "name": "Launch Program",
                "program": "${workspaceRoot}/bin/www",
                "cwd": "${workspaceRoot}",
                "skipFiles": [
                    "node_modules/**" // Intentionally doesn't match `http` module
                ]
            },
            {
                "type": "node",
                "request": "attach",
                "name": "Attach to Process",
                "port": 5858
            }
        ]
    }
    ```

3. Put a breakpoint at `bin/www:28` on `server.listen`
4. Start debugging
5. Hit the breakpoint
6. Step in, notice `http` *is* skipped
7. Change `type` to `node2` in `launch.json`
8. Start debugging
9. Hit the breakpoint
10. Step in, notice `http` *is not* skipped</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16842</IssueID>
    <Title>Most commonly used settings cause workspace problems</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (0d65ced0fa7398dc9d50c39a23a2a8cc8406ff18, 2016-12-07T07:05:09.124Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-docker|PeterJausovec|0.0.8|
|theme-toothpaste|aalaap|0.0.1|
|vscode-eslint|dbaeumer|1.2.0|
|githistory|donjayamanne|0.1.2|
|tslint|eg2|0.6.7|
|vscode-npm-script|eg2|0.1.2|
|vsc-travis-ci-status|felixrieseberg|1.0.5|
|csharp|ms-vscode|1.5.3|
|debugger-for-chrome|msjsdiag|2.3.2|
|Ruby|rebornix|0.10.3|
|java|redhat|0.0.7|
|kustovscode|seanmcbreen|0.0.1|
|autoimport|steoates|1.2.2|
|gitblame|waderyan|1.3.0|
|vscode-open-in-github|ziyasal|1.2.2|

---

Steps to Reproduce:

1. Open View&gt;Problems
2. Open Code Insiders&gt;Preferences&gt;User Settings

![screen shot 2016-12-07 at 11 12 39 am](https://cloud.githubusercontent.com/assets/4674940/20982753/a92c5c24-bc6e-11e6-9356-d95541fac6d7.png)

All keys that are in the **Most Commonly Used** section are reported as duplicated keys.</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16841</IssueID>
    <Title>[Feature] Copy entire output from Debug Console</Title>
    <Description>- VSCode Version: **1.7.2**
- OS Version: **Windows**

Steps to Reproduce:

*  Try `Ctrl-A` so you can select everything to copy, 
*  Or try highlighting and scrolling in the Debug Console output to get everything.

Either situation *won't* work you can only select by highlighting text that's currently visible within the Output window in the debug console. Ctrl-A (select all) doesn't work in the debug window for some reason either.

It'd be great to be able to either have a button, or just be able to do Ctrl-A (whichever) so you could copy/paste and look through some large output that came out.

</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16840</IssueID>
    <Title>Intellisense reports type of imported modules as "import &lt;...&gt;" instead of actual type</Title>
    <Description>- VSCode Version: 1.8.0-insider
- OS Version: Mac OSX 10.11

&lt;img width="340" alt="screen shot 2016-12-07 at 11 05 12 am" src="https://cloud.githubusercontent.com/assets/1571667/20982365/0f0824b2-bc6d-11e6-9770-49335218cc89.png"&gt;

&lt;img width="352" alt="screen shot 2016-12-07 at 11 07 52 am" src="https://cloud.githubusercontent.com/assets/1571667/20982452/723d6b0a-bc6d-11e6-97c0-b5e39242c581.png"&gt;


Where TStep is defined, Intellisense reports the type as `React.Requirable&lt;any&gt;`</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16824</IssueID>
    <Title>Duplicate entries in quick open</Title>
    <Description>No exact steps on how I ended up in this state but from today I am seeing duplicate entries in quick open

![screen shot 2016-12-07 at 15 40 06](https://cloud.githubusercontent.com/assets/1926584/20971918/806b33c6-bc93-11e6-9a3e-87aa72ede4d5.png)

</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16822</IssueID>
    <Title>Hot Exit: Editor view state is not restored</Title>
    <Description>Testing #16544

* run `code-insiders notes2.txt` where `notes2.txt` does not exist on disk
* type something in it
* close the window
* start Code Insiders from the taskbar
* switch from the Untitled file to `notes2.txt`
&gt; Observe: cursor position is at (1;1), the scroll state, the folding regions, etc. are not maintained.</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16808</IssueID>
    <Title>gulp-tsb warning while npm installing</Title>
    <Description>I get the following warning when running `./scripts/npm.sh install`:

```
npm WARN gulp-tsb@2.0.3 requires a peer of typescript@^2.0.10 but none was installed.
```

AFAIK `typescript@2.0.10` will break our formatter: #14519.

But if `gulp-tsb@2.0.3` really requires `typescript@2.0.10` and we are not installing it... then couldn't `gulp-tsb` break?</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16805</IssueID>
    <Title>Title doesn't refresh when we jump into other tabs</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|angular2-snippets|danwahlin|1.0.5|

---

Steps to Reproduce:

1. open a file you can see application name prefixed with current open file name in Title field of VS code.
2. open another file. Title doesn't refreshes with  current opened file name.
3. jump to another window and return back name title will be refreshed.</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16800</IssueID>
    <Title>Settings: edit action seems to be in my way often</Title>
    <Description>I do like that we have an action but I find that it is in my way often when editing the right hand side. In other words it is hard to click at the end of a line:

![screen shot 2016-12-07 at 11 19 43](https://cloud.githubusercontent.com/assets/900690/20963786/2a16d666-bc6f-11e6-91d9-a40609013fa4.png)

I am not sure if this is planned but wasn't the idea once to show the action to the left?
</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16789</IssueID>
    <Title>Moving Settings to New Tab Causes Default Settings to Go Empty</Title>
    <Description>1.8 insiders

Steps to Reproduce:

1. Have two tabs open.
2. Open settings
3. Drag settings to other tab

See default settings area go blank

![dec-06-2016 17-34-20](https://cloud.githubusercontent.com/assets/12821956/20951377/3cc1bb0e-bbda-11e6-8cb2-f973a6f97f9a.gif)
</Description>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16769</IssueID>
    <Title>"Open Folder" command displays as "unbound" in watermark</Title>
    <Description>Testing #16560

Doesn't appear that there's actually a keyboard shortcut? Also notice that the text is misaligned, so worth verifying that this wouldn't happen for other cases

Steps to reproduce:
1. launch vscode from terminal using `code-insiders -n`
2. close empty file that comes up to view watermark

![image](https://cloud.githubusercontent.com/assets/762848/20946712/b9feb29e-bbc0-11e6-8ce6-dc75100fbc28.png)

&lt;hr&gt;

- VSCode Version: Code - Insiders 1.8.0-insider (7499a9f3c565f4fbe5205e30c8664e5a5a11ae94, 2016-12-06T16:16:15.865Z)
- OS Version: Windows_NT ia32 10.0.14965</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16763</IssueID>
    <Title>Intellisense has an unusable scrollbar</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z)
- OS Version: Linux x64 4.8.0-28-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.1.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|vscode-eslint|dbaeumer|1.1.0|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|typescript-javascript-grammar|ms-vscode|0.0.10|
|sass-indented|robinbentley|1.2.1|
|dark-plus-material|vangware|0.1.4|

---

![image](https://cloud.githubusercontent.com/assets/2193314/20946953/b9c8f6f8-bbc1-11e6-9494-6206fe7b71a9.png)

</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16759</IssueID>
    <Title>Searching inconsistently searches everything or a subset</Title>
    <Description>#16416

- VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z)
- OS Version: Linux x64 4.8.0-28-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.1.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|vscode-eslint|dbaeumer|1.1.0|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|typescript-javascript-grammar|ms-vscode|0.0.10|
|sass-indented|robinbentley|1.2.1|
|dark-plus-material|vangware|0.1.4|

---

Searching for `t` searches for about a minute with no popup:

![image](https://cloud.githubusercontent.com/assets/2193314/20946611/49751180-bbc0-11e6-9901-dd9c529f4cc3.png)

Searching for `test` searches for ~4 seconds and gives this popup when it obviously would have less results than `t`:

![image](https://cloud.githubusercontent.com/assets/2193314/20946662/79ab14da-bbc0-11e6-8474-c811d82b310c.png)
</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16754</IssueID>
    <Title>Debug dropdown is not keyboard accessible</Title>
    <Description>#16494

- VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z)
- OS Version: Linux x64 4.8.0-28-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.1.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|vscode-eslint|dbaeumer|1.1.0|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|typescript-javascript-grammar|ms-vscode|0.0.10|
|sass-indented|robinbentley|1.2.1|
|dark-plus-material|vangware|0.1.4|

---

When tabbing through the debug viewlet there are a few issues:

- The dropdown and button only take a single tab index
- Interacting with it via enter does nothing
- The focus for this single element is not visible

As part of this I recommend making `.start-debug` a styled `button`.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16745</IssueID>
    <Title>Unknown error in console while opening ts file</Title>
    <Description>- VSCode Version: 1.8 insiders dated 12/6
- OS Version: All

Steps to Reproduce:

1. Open any workspace with a ts file 
2. Toggle Developer Tools to keep the dev tools open
3. Open the ts file

You will see the below in the console:

![image](https://cloud.githubusercontent.com/assets/16890566/20945468/4462cee8-bbbc-11e6-84ec-f01bf6f84735.png)

</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16713</IssueID>
    <Title>New settings does not respect `"window.showFullPath": true`</Title>
    <Description>#16530

- VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T17:07:24.668Z)
- OS Version: Linux x64 4.8.0-28-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|lorem-ipsum|Tyriar|1.0.0|
|sort-lines|Tyriar|1.1.0|
|theme-glacier|Tyriar|0.0.10|
|vscode-svgviewer|cssho|1.2.0|
|vscode-eslint|dbaeumer|1.1.0|
|tslint|eg2|0.7.1|
|git-project-manager|felipecaputo|1.0.0|
|Theme-Wombat|gerane|0.0.2|
|md-navigate|jrieken|0.0.1|
|vscode-scss|mrmlnc|0.6.0|
|csharp|ms-vscode|1.5.3|
|typescript-javascript-grammar|ms-vscode|0.0.10|
|sass-indented|robinbentley|1.2.1|
|dark-plus-material|vangware|0.1.4|

---

1. Set `"window.showFullPath": true`
2. Notice that the title remains settings.json, it should show the full path to user or workspace settings.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16701</IssueID>
    <Title>Can not cancel when enabling the second keymap</Title>
    <Description>Testing #16559 

When install the second keymap, users start to know that multiple keymaps may have conflicts. Then they may just regret to install the second keymap, however, we don't have a way for them to cancel the installation.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16669</IssueID>
    <Title>Preview activity bar icon reordering during drag operation (and let me be sloppy)</Title>
    <Description>Testing #16326

To reorder icons in the activity bar, I have to drag and drop the icon directly on the position I would like it to occupy.  I can't drop it between two icons and have it position between them.

This is generally OK, but when I want to put an icon at the bottom of the list I really just want to be sloppy and drag it to the bottom/empty area of the activity bar. I don't want to have to be accurate and drop it in the last position (the horror of having to be accurate!!)

![image](https://cloud.githubusercontent.com/assets/1487073/20929228/830ab4d2-bbc9-11e6-81e0-aa2c562b8549.png)

It would be ideal if when i dragged the icon up or down you could see the other icons move around and almost preview what the activity bar will look like when it is dropped.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16664</IssueID>
    <Title>debug control screen cheese </Title>
    <Description>* use attached launch config
* start both apps
* set a breakpoint in `app.js`
* select a callstack
* 🐛 the floating UI went south

![screen shot 2016-12-06 at 15 08 58](https://cloud.githubusercontent.com/assets/1794099/20928405/fab4eaba-bbc5-11e6-8331-c6d5a8dc2efd.png)

![screen shot 2016-12-06 at 15 08 48](https://cloud.githubusercontent.com/assets/1794099/20928409/ff1cb0f6-bbc5-11e6-87e6-ba5b573c8f4d.png)</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16661</IssueID>
    <Title>Default settings is missing HTML, CSS and TypeScrpt Settings</Title>
    <Description>Version 1.8.0-insider  Linux
Commit a8d5b9281e2118c2a10098098ddaac949ce69fe0
Date 2016-12-06T07:19:06.272Z

- open the user settings
- in the default settings pane, look for the HTML section. It's missing.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16643</IssueID>
    <Title>Scroll wheel clicking (or shift-clicking) the taskbar icon does not open a new window</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-auto-open-markdown-preview|hnw|0.0.3|
|copy-markdown-as-html|jerriepelser|1.0.0|
|csharp|ms-vscode|1.5.3|

---

Steps to Reproduce:

1. Open VS Code
2. Scroll wheel click or shift click the taskbar icon
3. New window does not open

This is inconsistent behaviour with the OS.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16635</IssueID>
    <Title>Content inside style attributes should have same coloring as css style elements</Title>
    <Description>Refs #16526

Notice how the css attributes have different coloring if they are inside the style element or inside the style attributes. Ideally the coloring would be the same

![screen shot 2016-12-06 at 12 24 46](https://cloud.githubusercontent.com/assets/1926584/20923929/17be2408-bbaf-11e6-8b2c-c4c52814dcfb.png)

</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16630</IssueID>
    <Title>Debug widget broken when stopping debug while attaching to another</Title>
    <Description>Steps to Reproduce:

1. debug a node.js app 
2. start another debug session by attaching to some port that is not opened
3. while that is running stop debugging

=&gt; the debug widget looks weird

![image](https://cloud.githubusercontent.com/assets/900690/20923690/023ca5f6-bbae-11e6-854f-e6cb7961a7b4.png)

</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16619</IssueID>
    <Title>Maximum call stack size exceeded in debug</Title>
    <Description>Testing #16494

I'm not successful in reproducing this but I've seen the `Maximum call stack` error come up many times today as I experimented with the Chrome Debug extension.

The stack trace makes me think it is in our Debug world and not in the Chrome Debug extension, but I can be wrong.

![image](https://cloud.githubusercontent.com/assets/22350/20923129/55b31556-bbab-11e6-89ce-6c78634c2fb5.png)

```
shell.ts:541Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded
    at RangeError.get stack [as stack] (native)
    at Object.l [as toErrorMessage] (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:47:1905)
    at e.onUnexpectedError (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:132:26218)
    at e.unexpectedErrorHandler (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:132:24864)
    at e.onUnexpectedError (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:30:21633)
    at Object.o [as onUnexpectedError] (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:30:19992)
    at e.invoke (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:30:23029)
    at e.fire (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:31:2192)
    at e.setFocusedStackFrame (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:84:27429)
    at t.focusStackFrameAndEvaluate (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:127:28803)
    at t.run (file:///C:/Program Files (x86)/Microsoft VS Code Insiders/resources/app/out/vs/workbench/electron-browser/workbench.main.js:95:28401)
```

cc @roblourens 
</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16607</IssueID>
    <Title>Debug compounds should be suggested in Intellisense</Title>
    <Description>#16026

![image](https://cloud.githubusercontent.com/assets/22350/20922125/5a8ad626-bba7-11e6-9f46-98e3eaa84965.png)
</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16606</IssueID>
    <Title>Watermarks should automatically hide when panel opened</Title>
    <Description>Refs #16560 

Open the panel, notice how the watermarks are pushing out the logo -&gt; looks a bit broken
Users that know how to open the panel are advanced users and we they do not need watermark help imho. Thus we could automatically hide the watermark if panel is opened.

![screen shot 2016-12-06 at 11 28 47](https://cloud.githubusercontent.com/assets/1926584/20922080/33cabbe6-bba7-11e6-9489-83a0481481d8.png)
</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16602</IssueID>
    <Title>Commands in debug widget gets hidden</Title>
    <Description>Testing #16026

Have the following compound configuration in [launch.json](https://github.com/microsoft/vscode/blob/master/.vscode/launch.json) in VSCode repo

```
"compounds": [
		{
			"name": "Debug VSCode",
			"configurations": [
				"Launch VSCode",
				"Attach to Extension Host"
			]
		}
	]
```

- Start the above compound config
- Switch between two configurations in the launch widget

This will mess up the widget and there is no way to terminate it.

This could be related/similar to the issue #16596 </Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16565</IssueID>
    <Title>Double-clicking a file in Windows opens VSCode but does not load the file opened</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions:

|Extension|Author|Version|
|---|---|---|
|code-gnu-global|austin|0.2.1|
|LogFileHighlighter|emilast|1.0.0|
|vs-code-xml-format|fabianlauer|0.1.4|
|gc-excelviewer|GrapeCity|1.1.10|
|beautify|HookyQR|0.5.3|
|ecdc|mitchdenny|0.10.3|
|cpptools|ms-vscode|0.9.2|
|csharp|ms-vscode|1.4.1|
|vscode-nginx|shanoor|0.3.0|
|vscode-hexdump|slevesque|1.1.2|

---

Steps to Reproduce:

1.Double-click a .txt file that is set to open with VSCode
2. VSCode launches and opens, but at an Untitled document, not the file that was double-clicked to be opened</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16564</IssueID>
    <Title>Fold .ts .js and .js.map files into a single unit</Title>
    <Description>Similar feature is available IntelliJ where in the .ts .js and .js.map files are folded into a single unit and only .tx file available to edit by default. A user can still view .js and .js.map files if required by unfolding the unit. Currently I found a way to hide .js and .js.map files by ignoring them through settings, but having the ability to fold would be more beneficial to a developer.</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16561</IssueID>
    <Title>Mac Emoji Panel Shows in Wrong Location </Title>
    <Description>- VSCode Version: 1.8 insiders
- OS Version: OSX 10.10.6

Steps to Reproduce: 

1. Create blank file
2.  type a word and go to the end of the word.
3. Trigger the mac emoji panel

**Expected**
Popup shows from where the cursor currently is in the editor.

**Actual**
![screen shot 2016-12-05 at 5 34 54 pm](https://cloud.githubusercontent.com/assets/12821956/20909521/28fb37b8-bb11-11e6-9dda-63de9ebda218.png)



The panel is off to the side in the gutter somewhere. The cursor was on the last line in this case</Description>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16501</IssueID>
    <Title>Allow extensions to have visibility into the user's build command</Title>
    <Description>This feature request is required in order for IncrediBuild to be able to offer in its extension for VS Code the level of user experience we offer in Visual Studio.

IncrediBuild is the de-facto Visual Studio C++ \ XBox \ Android NDK **build acceleration** installed on more than 100,000 machines worldwide and as part of a partnership we've done with MS, IncrediBuild is offered as a freemium version as part of the VS2015 and soon VS2017 (any VS user can access IncrediBuild directly from within VS).

IncrediBuild is also used to accelerate a variety of compilers and build tools such as Make, Scons, ninja, Jom, Jam and many others.
 
IncrediBuild offers an extension inside IDEs allowing users to execute their builds in a distributed manner, seamlessly harnessing hundreds of idle CPUs they already own across their local network or public cloud to highly accelerate compilations \ tests \ code generation and any other compute intense process.
IncrediBuild effectively transforms the developer's 8 cores laptop into a virtual super computer with hundreds of cores and gigs of memory.

In order for IncrediBuild's VS Code extension to offer users the same seamless integration as offered in Visual Studio, we need to get as an input the build command that the user executes when compiling his project.
 
We can call VS Code's API function executeCommand to execute the 'workbench.action.tasks.build' command to build the project, however, we didn't find a way to have VS Code translate the command name to the full command line for IncrediBuild to execute.
 
We seek a way to convert the 'workbench.action.tasks.build' command to a full command line which we can feed to BuildConsole or any other way to get the full build command line to execute.
</Description>
    <CreatedDate>05/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16482</IssueID>
    <Title> Uncaught TypeError: Cannot read property 'count' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;c2f19dbb-796b-973b-5cb6-bdeb1bf19fa5&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;*Versions* &lt;br /&gt;- 1.7.2&lt;br /&gt;-  02611b40b24c9df2726ad8b33f5ef5f67ac30b44&lt;br /&gt;-  9e7d70052908b633e0d4f71e70b26714bd1d2f10&lt;br /&gt;*Stack* &lt;br /&gt;TypeError: Cannot read property 'count' of undefined&lt;br /&gt;[/vs/workbench/browser/parts/editor/tabsTitleControl.ts#L109:112 (count)](https://github.com/microsoft/vscode/blob/7ba55c5860b152d999dda59393ca3ebeb1b5c85f/src/vs/workbench/browser/parts/editor/tabsTitleControl.ts#L109:112 (count))&lt;br /&gt;[/vs/base/browser/dom.ts#L196:3 (handler)](https://github.com/microsoft/vscode/blob/7ba55c5860b152d999dda59393ca3ebeb1b5c85f/src/vs/base/browser/dom.ts#L196:3 (handler))&lt;br /&gt;</Description>
    <CreatedDate>05/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16467</IssueID>
    <Title>Save All Keyboard shortcut</Title>
    <Description>- VSCode Version: 1.8.0 Insider
- OS Version: Insider Build 14971
I would like to see a "Save All" shortcut button combo. I am usually editing and writing different files in the same project and I wish to edit like for example 5-6 files and then have a shortcut key combo that will Save All of the files at once. I don't know if this will be easy to implement since Ctrl-Shift-S is already "Save As". Its not a high priority, its just something that I would want as an easy way o save the whole project with my keyboard.
</Description>
    <CreatedDate>04/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16464</IssueID>
    <Title>Open Preview shows wrong file in preview tab (markdown)</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows

Steps to Reproduce:

1. Open a Folder with several .md files
2. Open a few of the .md files
3. click Open Preview to view the rendered markdown

The preview shown often does not match the file that was active when the Open preview command was invoked.

I've never changed settings explicitly. But here are the files:

user settings.json:
```json
{
    "git.confirmSync": false
}
```
workspace settings.json:
```json
// Place your settings in this file to overwrite default and user settings.
{
}
```
![previewtab](https://cloud.githubusercontent.com/assets/3548/20874531/ac1ee6b2-ba67-11e6-8f24-261bb138e6a3.gif)
</Description>
    <CreatedDate>04/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16448</IssueID>
    <Title>Improve search performance. </Title>
    <Description>- VSCode Version: 1.7
- OS Version: Windows 10

Steps to Reproduce:

1. Search for text in a large folder
2. Open a cmd window and search for the same text using "findstr".
3. Note how findstr is an order of magnitude faster.

Searching for stuff is a key operation. It shouldn't be this slow. 
</Description>
    <CreatedDate>04/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16438</IssueID>
    <Title>Incorrect TextMate syntax highlighting for meta category</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/1827708/20860834/6613dda4-b98a-11e6-8dfa-3914f8df4b68.png)

The names for the parentheses on the first line in the TextMate grammar file are defined as: `meta.keyword.bug.parantheses.[...]` and on the second line broken's metabug's name is defined as `meta.keyword.bug.parameter.metabug`.

On all themes included with Visual Studio Code by default don't specify anything about `meta.keyword[...]`, so it shouldn't be highlighted. (Dark+ theme is being used on the screenshot)

- VSCode Version: 1.7.2
- OS Version: Ubuntu 16.10

Steps to reproduce:
1. Clone [this reproduction sample](https://github.com/tambry/vscode_meta_bug).
2. Open the cloned folder in Visual Studio Code.
3. Press F5 to run the extension in a new instance.
4. Open the `test.metabug` file that's included in the sample's root folder in the new instance running the example syntax support extension.
5. Witness improper syntax highlighting.</Description>
    <CreatedDate>03/12/2016</CreatedDate>
    <ClosedDate>12/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16423</IssueID>
    <Title>how to reduce caret (or cursor) thickness</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Win7 (64-bit)

How to reduce the thickness of caret (or cursor) to look like as in sublime and/or notepad++. vscode caret is so thick, not as slim and trim as in sublime or notepad++. is there any setting to achieve this effect. currently I've following setting enabled:
"editor.cursorBlinking": "smooth",</Description>
    <CreatedDate>03/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16406</IssueID>
    <Title>Multiple cursors, autocomplete only works for first cursor</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (daa71ca002722c2778dc30bba151d7316e3c5e54, 2016-12-02T07:05:15.686Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|1.1.4|
|code-settings-sync|Shan|2.3.8|
|sort-lines|Tyriar|1.1.0|
|html-css-class-completion|Zignd|1.0.3|
|Bookmarks|alefragnani|0.10.0|
|project-manager|alefragnani|0.12.2|
|one-monokai|azemoh|0.2.3|
|vscode-eslint|dbaeumer|1.1.0|
|githistory|donjayamanne|0.1.2|
|tslint|eg2|0.6.7|
|vscode-great-icons|emmanuelbeziat|1.1.26|
|Angular2|johnpapa|1.0.2|
|theme-karyfoundation-themes|karyfoundation|10.0.0|
|HTMLHint|mkaufman|0.0.3|
|vscode-stylefmt|mrmlnc|2.2.0|
|Theme-1337|ms-vscode|0.1.2|
|angular2-inline|natewallace|0.0.16|
|nonbreakingspace|smlombardi|0.0.1|
|vscode-icons|robertohuertasm|4.0.4|
|stylelint|shinnn|0.20.3|
|theme-tesla|smlombardi|5.3.5|
|bootstrap-3-snippets|wcwhitehead|0.0.8|
|change-case|wmaurer|1.0.0|

---

Steps to Reproduce:

1. HTML file, have 2 tags, e.g. `td`, you want to add an attribute to, e.g. `class="foo"`
2. Click  next to the first `td`
3. Option-click in the second `td`.  You now have 2 cursors.
4. Start typing `class`.  Intellisense comes up.  
5. Choose "class"
6. only the first cursor completes.

See animated GIF below:
![dec-02-2016 15-39-00](https://cloud.githubusercontent.com/assets/835148/20849682/d9c98f18-b8a5-11e6-9488-d291fb398359.gif)

*On an unrelated note, how can I control or theme those bracket matcher indicators?  I don't like the square, I'd prefer simple underlines.
</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16391</IssueID>
    <Title>Avoid sync fs-call at startup perf</Title>
    <Description>From https://github.com/Microsoft/vscode/issues/16382

[`exthost.api.impl`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/node/extHost.api.impl.ts#L450) does a `fs.realPathSync` for each extension on startup of the extension host main.</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16382</IssueID>
    <Title>Avoid fs.sync calls in renderer and extension host</Title>
    <Description>We should try to avoid sync fs calls where possible because they just block code execution until finished. We typically never had sync fs calls in the renderer but now I am seeing more and more of them, also in the extension host:

* [x] [`SnippetsTracker`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/snippets/electron-browser/snippetsTracker.ts#L40)
* [x] [`Terminal`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/execution/electron-browser/terminal.ts#L10)
* [x] [`Emmet`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/emmet/node/actions/base64.ts#L39)
* [x] [`cli.contribution`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/cli/electron-browser/cli.contribution.ts#L41)
* [x] [`ExtensionHostMain`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/node/extensionHostMain.ts#L73)
* [x] [`Main`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-browser/main.ts#L119)
* [x] [`exthost.api.impl`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/node/extHost.api.impl.ts#L450)</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16376</IssueID>
    <Title>Links no longer clickable in HTML</Title>
    <Description>This is a regression it seems, you could always click on a path to open it even if the file does not exist. People use it to scaffold files:

![image](https://cloud.githubusercontent.com/assets/900690/20832577/3acca7a2-b88b-11e6-9bd0-378ab1ae75b8.png)

</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16373</IssueID>
    <Title>Running multiple cmd tasks in tasks.json seem too mutually excluce themselves</Title>
    <Description>Hi, I'm creating a build task to run tsc to get compilation errors and tslint to see the warnings I've got defined for project. I just can run one task at a time, if I put isBuildCommand to more than one task only the first seems to be executed.

Note: I also have TSLint extension by egamma

- VSCode Version: 1.7.2
- OS Version: Windows 10

Steps to Reproduce:

1. Use the following tasks.json:

```
{
    "version": "0.1.0",
    "command": "cmd",
    "isShellCommand": true,
    "showOutput": "always",
    "args": [
        "/C"
    ],
    "tasks": [
        {
            "taskName": "Build Type Script",
            "suppressTaskName": true,
            "isBuildCommand": true,
            "args": [
                "tsc -p ."
            ],
            "problemMatcher": "$tsc"
        },
        {
            "taskName": "tslint",
            "suppressTaskName": true,
            "isBuildCommand": true,
            "args": [
                "tslint src/**/*.ts{,x} test/**/*.ts{,x} --project tsconfig.json"
            ],
            "problemMatcher": {
                "owner": "tslint",
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "severity": "warning",
                "pattern": {
                    "regexp": "^(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            }
        }
    ]
}
```

2. Do ctrl+shift+b

3. Depending on the order of the tasks I just see errors (tsc) or warning (tslint)

Is this a bug or it's just the way it works for now?</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>05/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16353</IssueID>
    <Title>Intelligence will lead to repetition in Chinese</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (be33bcdb2beb2d01c76ec8f830a70feaaa6721f5, 2016-12-01T09:47:03.630Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-color|anseki|0.2.2|
|output-colorizer|IBM|0.0.8|
|cpptools|ms-vscode|0.9.2|
|vscode-icons|robertohuertasm|4.0.4|
|vscode-hexdump|slevesque|1.1.4|

---

Steps to Reproduce:

1.  input part content such as I want to input '计数器', firstly. I input '计数'
2. input remaining and a punctuation.  input ‘器’ and ','
![12](https://cloud.githubusercontent.com/assets/8591065/20820722/423dab2a-b878-11e6-8f4b-e87fb62362c9.gif)
</Description>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16345</IssueID>
    <Title>Multiple Build Commands are not executed</Title>
    <Description>- VSCode Version: 1.8.8.0-insider  (4721762...)
- OS Version: Windows 10

Steps to Reproduce:

1.  set tasks.json like this:
```

{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "0.1.0",
    "command": "echo",
    "isShellCommand": true,
    "showOutput": "always",
    "suppressTaskName": true,
    "tasks": [
        {
            "isBuildCommand": true,
            "taskName": "build-task1",
            "args": [
                "1"
            ]
        },
        {
            "isBuildCommand": true,
            "taskName": "build-task2",
            "args": [
                "2"
            ]
        }
    ]
}

```
2. Press ctrl+shift+b. Output should be 1 2 but it is only 1.
</Description>
    <CreatedDate>01/12/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16343</IssueID>
    <Title>Font is not changed for debug console input field.</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393

---

Steps to Reproduce:

1. Set custom font in settings
2. Run any script in debugger and open Debug Console
3. See that font is still default (Consolas on Windows)

![image](https://cloud.githubusercontent.com/assets/11872957/20811844/5becef66-b820-11e6-9e76-c16cf21e2011.png)
</Description>
    <CreatedDate>01/12/2016</CreatedDate>
    <ClosedDate>04/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16325</IssueID>
    <Title>Open Recent Folder in Windows Taskbar menu fails with spaces in folder path</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10 AU

Steps to Reproduce:

1. Create a folder with a space in the folder name (i.e. "C:\temp\Some Folder")
2. Open in Code
3. Close Code
4. Right click on VS Code icon in taskbar
5. Select C:\temp\Some Folder from Recent Folders list in taskbar popup menu
6. Code opens with two new files created: C:\temp\Some and C:\Windows\system32\Folder and no current folder
![2016-12-01_9-52-29](https://cloud.githubusercontent.com/assets/4534445/20798335/8025af04-b7ac-11e6-9c89-e956821fc5bb.png)
![2016-12-01_9-53-06](https://cloud.githubusercontent.com/assets/4534445/20798336/8026dc08-b7ac-11e6-9bdf-8dc8cba1500a.png)

</Description>
    <CreatedDate>01/12/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16307</IssueID>
    <Title>previewHTML: content reload</Title>
    <Description>If editor tab that contains `previewHTML` instance is switched off and then switched on again it reloads the content, I think I would be useful to have a mode, where it is not reloaded between switches.

Also it would be useful to have imperative update/reload feature.</Description>
    <CreatedDate>01/12/2016</CreatedDate>
    <ClosedDate>01/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16297</IssueID>
    <Title>Consider moving new Emmet menu items under Edit menu group</Title>
    <Description>- VSCode Version: 1.8.0 Insiders
- OS Version: Windows 10

Currently the two Emmet commands (Emmet: Expand Abbreviation, Emmet...) are under the new Selection menu group. The Emmet commands have nothing to do with Selection and might be better under the Edit menu group.</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>01/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16276</IssueID>
    <Title>Feature request: Allow grouping of items in the QuickPick input just like the git branches view</Title>
    <Description>It would be nice to allow grouping of QuickPickItems.
Currently one can see this in the `git checkout` branch list. There are the local and the remote branches grouped and separated with a small line.
</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16264</IssueID>
    <Title>Tab Size ignored on code auto format  (intermittent)</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:14:18.217Z)
- OS Version: Linux x64 3.13.0-101-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|puppet|Borke|0.3.0|
|jslint|ajhyndman|1.2.1|
|vscode-eslint|dbaeumer|1.1.0|
|Angular1|johnpapa|0.1.16|
|debugger-for-chrome|msjsdiag|2.2.2|
|vscode-icons|robertohuertasm|4.0.2|
|code-spell-checker|streetsidesoftware|0.12.0|

---

Steps to Reproduce (intermittent):

I have not figured out what steps exactly causing issue to happen, but I encounter it 5-6 times a day.

1. set user preferences: "editor.tabSize": 2,
2. unknown action
3. auto format file
4. file will be formatted with 4 spaces instead of 2

Observations: 
- issue happens on single file, other opened files are not affected
- pressing TAB creates correct (2 spaces) indentation
- closing file doesnt fix it, only closing whole studio</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>10/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16236</IssueID>
    <Title>Scrolling markdown preview with touch doesn't work</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.4.1|
|PowerShell|ms-vscode|0.7.2|
|vim|vscodevim|0.1.10|

---

Steps to Reproduce (probably requires touchscreen, maybe repros with a mouse?):

1. Open a markdown file
2. Open the preview to the side (Ctrl+K V)
3. Press and hold, then drag the markdown preview. It doesn't scroll. Scrolling works fine with up/down arrows though.</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>01/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16170</IssueID>
    <Title>Cannot set breakpoints where I choose</Title>
    <Description>Every time that I try to set a breakpoint it automatically moves it to another point in my file. It should just set the breakpoint on the line that I choose not whatever it thinks is best.

&lt;img width="499" alt="screen shot 2016-11-28 at 1 53 29 pm" src="https://cloud.githubusercontent.com/assets/11371200/20685598/36f3d162-b572-11e6-8824-0fe898cbabb6.png"&gt;

I chose line 307 here and it keeps moving it to line 316, which isn't even the same function. (You can see this at the bottom left of the screenshot). It should not be moving my breakpoint at all

- VSCode Version: 1.7.2
- OS Version: OSX Sierra 10.12.1
- React-Native 0.30.0
- Node 6.9.1
- Babel-Register 6.11.6

Steps to Reproduce:

1. Run Deugger
2. Add/Remove Some Code
3. Try to set a breakpoint</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16152</IssueID>
    <Title>Having the ability to move the tab close button to the left of the tab</Title>
    <Description>When `workbench.editor.showTabs` is set to `false`, the document tab fills the whole width of the window.

It would be nice to have an option to move the close button to the left of the tab, so that the control UI gets closer to the sidebar.</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15896</IssueID>
    <Title>Duplicated character when typing accented character</Title>
    <Description>- VSCode Version: Insiders Build 2016-11-22T07:03:01.551Z
- OS Version: OS X 10.12.2 (16C41b)

Steps to Reproduce:

1. Switch to English (U.S.) keyboard
2. Press `Opt-E`, `E`, `R`.

Expected Result:

Key  | Opt-E |   E   |   R
-----|:------|:-----|:----:
Text |   ´      |   é    |   ér

Actual Result:

Key  | Opt-E |   E   |   R
-----|:------|:-----|:----:
Text |   ´      |   é    |   éér
</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15815</IssueID>
    <Title>Avoid ImmortalReference (file models, untitled models)</Title>
    <Description>It seems like the workbench fails to dispose models that are requested via the `ITextModelResolverService#resolve`-method. I was always under the assumption this happens after ~5minutes, but with the snippet below I never see a *CLOSE* message. 

Do the following

* open workbench with any editor open
* run the extension command below
* see messages about models being opened/created
* 🐛 never see messages about them disappearing

```
    vscode.workspace.onDidOpenTextDocument(e =&gt; console.log('OPEN ' + e.uri.toString()));
    vscode.workspace.onDidCloseTextDocument(e =&gt; console.log('CLOSE ' + e.uri.toString()));

    vscode.commands.registerCommand('extension.sayHello', () =&gt; {

        vscode.workspace.findFiles('**/*.{json,ts,js}', undefined, 5).then(resources =&gt; {

            return Promise.all(resources.map(r =&gt; {
                console.log('fetch ' + r.toString())
                vscode.workspace.openTextDocument(r);
            }))
        });
    })
```</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>16/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15772</IssueID>
    <Title>doubling of accented foreign characters</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (9b06d4392aeac3af2e9da58838a518bba325d23a, 2016-11-18T08:59:27.025Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|aurelia|AureliaEffect|0.1.10|
|vscode-eslint|dbaeumer|1.1.0|
|Theme-MarkdownKit|ms-vscode|0.1.1|
|wordcount|ms-vscode|0.1.0|

---

Steps to Reproduce:

1. on a mac switch to the greek keyboard
2. press the two-key combination to produce the accented version of any vowel of the greek alphabet (e.g. ά, έ, ί, ό, ή, ύ, ώ)
3. you get the expected accented character
4. now press any other character or space
5. you get another copy of the accented character, followed by the character you just entered

This behaviour first appeared very recently (no more than a week, I would say) and renders VS Code nearly unusable. I'll try to check if it is also happens on Windows.

Thanks in advance for your attention 
</Description>
    <CreatedDate>20/11/2016</CreatedDate>
    <ClosedDate>02/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15616</IssueID>
    <Title>Error debuging an ES6 Proxy</Title>
    <Description>- VSCode Version: 1.7.1 (1.7.1)
- OS Version: OSX El capitan 10.11.2
- Node.js version: v7.1.0

Steps to Reproduce:

1. Defining a object as ES6 Proxy
2. Running script with the Debug tool (Shift+CMD+D)
3. Typing the object in the console

Throw this error
```
#
# Fatal error in ../deps/v8/src/runtime/runtime-debug.cc, line 1423
# Check failed: args[0]-&gt;IsJSObject().
#
==== C stack trace ===============================
    0   node                                0x0000000100bca643 v8::base::debug::StackTrace::StackTrace() + 19
    1   node                                0x0000000100bc77c9 V8_Fatal + 233
    2   node                                0x00000001007bd586 v8::internal::Runtime_DebugGetPrototype(int, v8::internal::Object**, v8::internal::Isolate*) + 438
    3   ???                                 0x00001bed7b0063a7 0x0 + 30706784822183
```
&lt;img width="1042" alt="screen shot 2016-11-17 at 12 31 30" src="https://cloud.githubusercontent.com/assets/1819888/20376477/f358abb6-acc1-11e6-9f0b-5768da987750.png"&gt;

</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>08/12/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16283</IssueID>
    <Title>VSCODE gets restart when i drop a folder in explorer part and one more is directory issue, we can only put a working directory in explorer look at sublime text guys</Title>
    <Description>- VSCode Version: latest version 1.7.2
- OS Version: windows 8 

Steps to Reproduce:
![git](https://cloud.githubusercontent.com/assets/13538433/20765024/b57972c2-b756-11e6-8cc8-d2de85584c67.jpg)


1. we want more directories to be placed in explorer 
2. and stop restarting when we drop any directory or folder
</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16266</IssueID>
    <Title>[css] syntax highlighting breaks when using @keyframes</Title>
    <Description>Using version 1.7.2 on MacOS.

[Example from `create-react-app`
](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/src/App.css)
```css
.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

.App-header {
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
}

.App-intro {
  font-size: large;
}

@keyframes App-logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
```

![image](https://cloud.githubusercontent.com/assets/2827047/20751089/4a4b8fe6-b6fa-11e6-9706-cc59417f4bbb.png)
</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16263</IssueID>
    <Title>Preview area is not flexible</Title>
    <Description>It cuts off some text when I see extensions and also on markdown previews.

![2016-11-30_16-12-19](https://cloud.githubusercontent.com/assets/650741/20748340/fae52c5a-b717-11e6-9bc4-f4a29a42d4be.png)

- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-great-icons|emmanuelbeziat|1.1.26|
|vscode-auto-open-markdown-preview|hnw|0.0.3|
|markdown-table-formatter|josa|0.0.4|
|Theme-MarkdownKit|ms-vscode|0.1.1|
|seti-icons|qinjia|0.1.3|
|vscode-icons|robertohuertasm|4.0.4|
|Spell|seanmcbreen|0.9.1|
|markdown-pdf|yzane|0.1.4|

---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16249</IssueID>
    <Title>Add support for making multiple lines to one line</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: win 7

I hope can add support for making multiple lines to one line; 
like Sublime Text's "ctrl + J" to one line;</Description>
    <CreatedDate>30/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16240</IssueID>
    <Title>Don't reversibly discard changes when renaming a file or folder</Title>
    <Description>The editor currently warns the user that their unsaved changes to an open file will be discarded if they rename the file or a folder containing the file. The dialog displaying this warning has the default action result in irreversible data loss.

I propose changing this behavior, either by changing the default action to cancel the renaming operation, or some how preventing the discarding of unsaved changes during this operation.</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16232</IssueID>
    <Title>Chinese garbled</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.9.2|
|startanyshell|remcoros|0.3.1|

---

Steps to Reproduce:

1.OutPut(Ctrl+Shift+U),Chinese garbled
E.g:task.json

&gt; {
&gt;     // See https://go.microsoft.com/fwlink/?LinkId=733558
&gt;     // for the documentation about the tasks.json format
&gt;     "version": "0.1.0",
&gt;     "command": "echo",
&gt;     "isShellCommand": true,
&gt;     "args": ["你好，世界"],//hello,world
&gt;     "showOutput": "always"
&gt; }
OutPut:

&gt; ���ã�����</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16226</IssueID>
    <Title>Add ability to exclude files from "quick open" (cmd-p)</Title>
    <Description>Similar to the way you can exclude files from search (`search.exclude`) and workspace (`files.exclude`), it would be really nice to be able to exclude files from quick open (`cmd-p`).

My use case is that I have files like I like to be able to access rarely from the explorer pane (configuration and generated code), but I don't ever want them to show up in the quick open list. 
</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16193</IssueID>
    <Title>Special keys don't work as shortcuts in dvorak layout</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:01:10.756Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|Ruby|rebornix|0.10.3|
|sass-indented|robinbentley|1.2.1|
|JavaScriptSnippets|xabikos|1.2.0|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. Set keyboard to Dvorak layout. In this layout the key marked "{" is now the "/" which is used for commenting.
2. Try to comment with the key marked "{" on the layout. It instead indents left as should be done on a US layout. 
3. Changing it does not work because in the editor pressing the pressing the key marked "{" produces "/" as it should according to the dvorak layout. 


To clarify: The dvorak keyboard layout works correctly in the editor. But not when using shortcuts. And the shortcuts cannot be re-mapped because its tied to the editor. </Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16192</IssueID>
    <Title>Give user access to a stylesheet for the editor.</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: OSX 10.11.6

It would be great if there was a stylesheet the user had access to that took precedence over the main.css file the editor uses. That way we can add custom styles without modifying the main.css file.
</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16190</IssueID>
    <Title>Avoid reloading Html Preview window when changing tabs</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: OS X

The contents displayed in the HTML preview tab window gets reloaded when tabbing off and back to the preview tab window.

Is there a way this can be avoided. 
I'm using the HTML preview window to display custom content in two separate extensions:   
- [Python](https://github.com/DonJayamanne/pythonVSCode)  
    + Displaying results from Jupyter kernel
- [Git History](https://github.com/DonJayamanne/gitHistoryVSCode/issues/51)  
    + Displaying Git log 

As you can imagine this doesn't produce the best UX (https://github.com/DonJayamanne/gitHistoryVSCode/issues/51).</Description>
    <CreatedDate>29/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16164</IssueID>
    <Title>IntelliSense does not work in tsconfig.json</Title>
    <Description>- VSCode Version: VSC Insider
- OS Version: Windows 10

Steps to Reproduce:

1. Open VSC Insider 
2. Create tsconfig.json file and press CTRL + SPACE to get suggestion
3. Observe the bug
</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16163</IssueID>
    <Title>hover help is not available on attributes</Title>
    <Description>- VSCode Version: VSC Insiders
- OS Version: Windows 10

Steps to Reproduce:

1. Open launch.json file 
2. Hover over the attributes and observe the result
</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16146</IssueID>
    <Title>Visual Code should reopen files that was closed when reloading</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 8.1 Pro N

Steps to Reproduce:

1. Open some documents
2. Install a plugin
3. Reopen Visual Code to use the new plugin

After this, every window is closed, then I need to re-open them.
</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16133</IssueID>
    <Title>Double output words when switch chinese input to english input</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (0b847998d914ff84fd9c13b2972cc8803745c24d, 2016-11-25T09:18:45.881Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|php-debug|felixfbecker|1.10.0|
|crane|HvyIndustries|0.2.2|
|cpptools|ms-vscode|0.9.2|

---

Steps to Reproduce:

1. input some chinese word
2. press `enter`
3. press `shift` to switch input to english
4. input some english, and chinese word in step1 will output again...
![153](https://cloud.githubusercontent.com/assets/7088579/20659353/08361e3c-b57e-11e6-8d95-d78195bee7c7.gif)</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16127</IssueID>
    <Title>File tree in Explorer creates some confusion</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Window 10

Steps to Reproduce:

1.  Open any project with multiple folders and files in it.
2.  Issue is folder and files on the same level looks as if files are inside (children) that folder. Check the screenshot below.
![untitled](https://cloud.githubusercontent.com/assets/5352277/20656558/3c6dc24c-b554-11e6-97d2-ba468f82088d.png)

`+config` and `shared` folder are on the same level as other files (app.component.* files). But when we look at it (`ignoring the right arrow beside folder name`) it seems the `app.component.*` files are inside `shared` folder.

</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16126</IssueID>
    <Title>Integrated terminal up and down arrow keys with bash on ubuntu on windows</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: windows 10, 1607 build

Steps to Reproduce:

1. Configure to use bash on Ubuntu on windows as mentioned in this article https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration
2. get the bash (Ctrl + `)
3. run any command (like  "ls") 
4. Press the uparrow.  
The previous command will not come.
</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16123</IssueID>
    <Title>Code structure for the current file</Title>
    <Description>Request feature:

Add a new button to the side-bar or invoke via shortcuts,
After invoking, show a brief of all the members in the current working file like below:

Class name A:
   Method A1:
   Method A2:
Class name B:
   Method B1:
   Method B2:

Associate with their signatures, to enable us jump through different blocks in a quicker manner.
Thanks :)</Description>
    <CreatedDate>28/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16121</IssueID>
    <Title>Editor change decorations don't go away after committing those changes</Title>
    <Description>- Add lines to a file and save the file
- See the green markers on the left for additions
- Commit the changes in that file
- In insiders, the green markers are still there until vscode is reloaded

In stable, they go away after the commit.</Description>
    <CreatedDate>27/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16114</IssueID>
    <Title>integrated terminal  Scroll bar error</Title>
    <Description>- VSCode Version:1.7.2
- OS Version: win 10 x64

**integrated terminal  Scroll bar error**

Steps to Reproduce:

1. Ctrl+` show the "integrated terminal"
2. Execute  command  such as "gulp"
3. Ctrl+` hide the "integrated terminal"
4. After a while  Ctrl+` show the "integrated terminal"

and resize window also has some issues 


![image](https://cloud.githubusercontent.com/assets/1540211/20648070/e5eaa74a-b4d7-11e6-8820-806728146684.png)

![image](https://cloud.githubusercontent.com/assets/1540211/20648075/10a70410-b4d8-11e6-9359-ff99561ebc88.png)

![image](https://cloud.githubusercontent.com/assets/1540211/20648080/3b0ee16e-b4d8-11e6-84e0-456f50a8e47a.png)



</Description>
    <CreatedDate>27/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16104</IssueID>
    <Title>Go to definition doesn't store the cursor location when the definition is in the same file</Title>
    <Description>After #11727 was fixed, doing 'go to definition' then 'back', would put the cursor in the correct location. But I just noticed that it still has the original behavior if the definition is in the same file as the starting position.

- Open some file `a.ts`
- Put the cursor on a reference to something that is defined in `a.ts`
- Do 'go to definition'
- Do 'back'
- See that the cursor is not on the reference, but somewhere earlier in its navigation history</Description>
    <CreatedDate>27/11/2016</CreatedDate>
    <ClosedDate>27/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16095</IssueID>
    <Title>VS CODE 1.7.2 Stop Working</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: 64-bit - VMware WorkStation 12 Pro 12.5.2 / Ubuntu 14.04 LTS with Memory 3.8GiB / 
                      Main OS Windows 10
- Processor Intel(R) Core(TM) i7-4700MQ CPU @2.4GHz (8CPUs) ~2.4GHz
- Memory: 16384MB RAM

The program was working rigth however a few days ago (3 or 4 I dont really know) , the VSC just got frozen each time more frequentely while I was coding until I decided to updgrade the program. I can not continue coding because this is just an annoying issue. I have only ONE( #1) extesion installed on it. This is Python created by Jayamanne . I disable all the EXTENSION ( A L L of them) but, the problem continue happening. When I revised on the Task Manager app, the VSC consumes more than 50% of the Disk C:
![untitled](https://cloud.githubusercontent.com/assets/8585535/20641643/8e6deb2a-b3e3-11e6-8fb1-070a86563698.png)
 memory ! 

Steps to Reproduce:
1. While coding on Python the page has stopped responding and I need to restart the virtual machine.

Well, I tried to write the more clearly english possible, sorry for that.
Please, help.
Thanks a lot.
</Description>
    <CreatedDate>26/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16085</IssueID>
    <Title>Use touch pad scroll code is not very fluent  in my surface book ,but the mouse wheel is normal</Title>
    <Description>
    </Description>
    <CreatedDate>26/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16070</IssueID>
    <Title>Chinese garbled in output -&gt; task</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Win7 zh-cn

Steps to Reproduce:

1. Run the task I created named "test"
2. Show below
![image](https://cloud.githubusercontent.com/assets/16847935/20630586/b62cad08-b36c-11e6-8825-817175186416.png)

</Description>
    <CreatedDate>25/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16054</IssueID>
    <Title>Provide auto-updates for linux</Title>
    <Description>Users on linux still have to go to website to download updates. 

This sucks :( Would be better if we could get auto-updates like windows and mac users.</Description>
    <CreatedDate>25/11/2016</CreatedDate>
    <ClosedDate>26/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16049</IssueID>
    <Title>Multiple „Do you want to save changes… ?“ dialogs</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (ced1d697f81499df60b00d3a02ab264e5e0c99e4, 2016-11-25T07:05:03.920Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|beautify|HookyQR|0.5.5|
|vscode-docker|PeterJausovec|0.0.7|
|vscode-eslint|dbaeumer|1.1.0|
|vscode-csscomb|mrmlnc|3.2.4|
|vscode-icons|robertohuertasm|4.0.1|
|vscode-nginx|shanoor|0.3.0|
|language-stylus|sysoev|1.6.0|

---

Steps to Reproduce:

1. Open/create file in VSCode
2. Change file (so its status become unsaved)
3. Press `Cmd+W` multiple times to close file (I want to close open files sequentially)
4. When „Do you want to save changes… ?“ dialog appears, press `Esc` to get rid of it (say, you changed your mind, and do not want to close it anymore)

Expected behavior:

„Do you want to save changes… ?“ dialogs dissapears and editor is available for editing again.

Actual behavior:

„Do you want to save changes… ?“ dialog for changed file is shown as many times as `Cmd+W` was presed.</Description>
    <CreatedDate>25/11/2016</CreatedDate>
    <ClosedDate>25/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16036</IssueID>
    <Title>Editor problems with latin symbols</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (6a6ab1fc5e58227b56ffc3e5bea9951e5565c314, 2016-11-24T07:05:02.837Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|1.1.3|
|jsx|TwentyChung|0.0.1|
|Bookmarks|alefragnani|0.10.0|
|stylus|buzinas|0.1.0|
|riot-tag|crisward|0.1.7|
|vscode-eslint|dbaeumer|1.1.0|
|githistory|donjayamanne|0.1.0|
|tslint|eg2|0.6.4|
|rest-client|humao|0.10.5|
|debugger-for-chrome|msjsdiag|2.2.2|
|sass-indented|robinbentley|1.2.1|
|jadeview|vivainio|1.0.0|
|vscode-react-native|vsmobile|0.2.3|
|ReactSnippets|xabikos|1.2.0|

---

Steps to Reproduce:

1. type any accented latin symbol `í`
2. press space

They will appear twice: `íí`

Also when typing ` character and space, two of them appear but the cursor is positioning at the end of both, not in between, so you end up writting 

```
``some text
```

instead of 


```
`some text`
```</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16028</IssueID>
    <Title>Faster startup/improve startup time</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10

Steps to Reproduce:

1. start VSCode from explorer with a simple 5 kb xml. Only python plugin installed.

Startup duration about 4 seconds on an i5 with SSD and 12 GB memory.

Competing editor sublime text 3 needs less than 1 second (including directly visible syntax highlighting)

Would be great, if startup time could be improved, too. (but without leaving it running in the background)</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>25/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16017</IssueID>
    <Title>Accented letters duplicated when typing next character</Title>
    <Description>- VSCode Version: **1.8.0-insider** 6a6ab1fc5e58227b56ffc3e5bea9951e5565c314
- OS Version: **macOS 10.12.1**

![output](https://cloud.githubusercontent.com/assets/2991143/20596299/1f7979c4-b23e-11e6-881c-e45fc1d19281.gif)

This error seems to appears on VSCode Insiders only, VSCode 1.7.2 does not reproduce this behaviour.

I have a French Keyboard, mapped with `U.S International - PC`.

### Steps to Reproduce:

1. Begin typing an accent (e.g. `Alt` + `E` to begin a acute)
2. Type the letter you want to put accent on
3. Type a next character
4. Accented letter is now duplicated.

&gt; This does not happen when using the macOS accented letters box by pressing the letter during a certain time. But it's slower.
</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16011</IssueID>
    <Title>VS Code can only load on folder</Title>
    <Description>Can vs code load mutiple root folder like sublime ?</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16007</IssueID>
    <Title>A bad user experience. the Debug action panel cover the file tab if we opened lots of file</Title>
    <Description>- VSCode Version:10.11.6
- OS Version:1.7.2 

Open lots of the file tab and start the Debug, The Debug action panel cover the file tab.  Although we drag the Debug action panel, But it also cover the other file tab. we don't want  repeat drag the panel.

![1124](https://cloud.githubusercontent.com/assets/5448557/20592994/6fc67d6e-b26b-11e6-974b-78820d1e9c11.jpg)</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>16005</IssueID>
    <Title>Feature Request</Title>
    <Description>
FTP Upload like NetBeans with file selection, Sync and download.</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15999</IssueID>
    <Title>注释问题</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z)
- OS Version: Darwin x64 16.1.0
- Extensions: 

Steps to Reproduce:

1.当我的js代码写在html文件中时，使用快捷键cmd+/去注释一段代码时，编辑器使用的注释方法还是html的&lt;!----&gt;方法，而不是js的//或者/**/的方法，这样是无效的。
2.虽然可以通过更改语言模式去解决，但是手动切换太麻烦了</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15998</IssueID>
    <Title>[MacOS] Background color mismatch with dark theme</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Mac OS 10.12 (16A323)

Steps to Reproduce:

1. Download any dark theme 
2. activate dark theme

Here is a screenshot of the issue. The background is lighter than the actual background used for source code. I couldn't find any more information about this issue online. Any workaround? This is used to work but recent update seems to break it.

&lt;img width="1762" alt="screen shot 2016-11-23 at 11 23 22 pm" src="https://cloud.githubusercontent.com/assets/387737/20586635/fbd80086-b1d3-11e6-8c72-d1514ba9fc3f.png"&gt;</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15994</IssueID>
    <Title>CSS syntax highlight error</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: WIN10 1607

See screenshots:

![syntax-0](https://cloud.githubusercontent.com/assets/1730277/20584393/149c1ff4-b22d-11e6-950f-112f07c5ef42.png)
![syntax-1](https://cloud.githubusercontent.com/assets/1730277/20584394/1643523c-b22d-11e6-931e-340fce31a6d1.png)
</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15992</IssueID>
    <Title>Screen doesn't use whole area to show markdown preview</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:06:37.428Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.3|

---

Steps to Reproduce:

1. select "Preview" of Markdown(or type Ctrl+Alt+V)
2. Screen doesn't use whole area to show preview.(see attachment)
![screenshot](https://cloud.githubusercontent.com/assets/604096/20583661/416ecc8c-b22f-11e6-8bd9-3af423d14d85.png)

</Description>
    <CreatedDate>24/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15990</IssueID>
    <Title>Variable expressions in template strings are no longer being highlighted</Title>
    <Description>- VSCode Version: 7ba55c5860b152d999dda59393ca3ebeb1b5c85f
- OS Version: OS X El Cap 10.11.5

Steps to Reproduce:

1. Create a `.js` file
2. Write a template string.

![VS Code Screenshot](https://cloud.githubusercontent.com/assets/829827/20582007/c94ff368-b191-11e6-9ea3-375ecdd0262d.png)

I would expect to see the `${expr}` to be highlighted separately from the rest of the string. VS Code used to do this, but has stopped with more recent releases.
</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15989</IssueID>
    <Title>Turn on ```editor.formatOnType``` for a particular language</Title>
    <Description>For the [Python](https://github.com/DonJayamanne/pythonVSCode) extension I have a custom [OnTypeFormattingEditProvider](https://github.com/DonJayamanne/pythonVSCode/blob/master/src/client/typeFormatters/blockFormatProvider.ts) that ensures certain blocks of code are properly indented.

For instance if the user were to type the following code in Python:  
```python
if x == y:
    print(x)
    else:
```
After typing in the text ```print(x)``` at line 2, the user hits enter:  
- The cursor at this point will be indented and positioned under the letter ```p```   
- Then types the string ```else:```

In Python the position of ```else:``` is incorrect. It needs to be at the same indentation level as the corresponding ```if```.  This is where the OnTypeFormattingEditProvider comes in, it will automatically format that line (by removing the unnecessary white space).

It works as expected.

However, Python users will have to manually turn on the setting ```editor.formatOnType``` in their user or workspace settings. 

**I.e. almost everyone using this extension will miss out on this (very useful and crucial) feature.**  

- Is there a way for the extension to turn this on as a default value?  
I know I could manually alter the ```enditor.formatOnType``` value via code. Is that the right approach? Would that not affect other languages as well?  
- Or is there a way to turn this on for a specific language, ```Python``` in this case?  
</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15982</IssueID>
    <Title>Better indicator of overflow in editor's tab bar</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Os X 10.11.6

See image.  There is no visual indicator of the overflow.  It is not clear that there are more open editors.  Only once moused over does  the tab bar have  a scrollbar (it was moused over as I was taking the screenshot).

&lt;img width="929" alt="screen shot 2016-11-23 at 12 58 58 pm" src="https://cloud.githubusercontent.com/assets/20231989/20573562/620116b4-b17e-11e6-9cd2-e9e6a4042b36.png"&gt;

</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>24/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15976</IssueID>
    <Title>DEBUG CONSOLE enter key showing undefined</Title>
    <Description>- VSCode Version: 1.7.2
- OS Version: Windows 10

Steps to Reproduce:

1. Open DEBUG CONSOLE to debug javascript files
2. Press ENTER key

Enter key should not trigger if there is no value input, scrolling to bottom of console should be good behavior since I have to drag my mouse to bottom of the window in order to see the latest information, not automatically :(</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15971</IssueID>
    <Title>Too easy to mistakenly move files</Title>
    <Description>Does anyone else find it's way too easy to mistakenly drag and drop files into new folders?

Please excuse if you don't. But I've found it's very easy to move files by mistake when working on big projects and can be a nightmare trying to find where you dropped the file if, especially in a large file tree structure.

Again, this might be me and my clumsy hands so apologies, but I think it would be awesome to at least turn on an option to confirm file drag and drops. That way people who don't care for the feature wouldn't have it foisted on them.
</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15956</IssueID>
    <Title>Weird box around line highlight</Title>
    <Description>This is with insiders, I see 2 boxes as line highlight:

![image](https://cloud.githubusercontent.com/assets/900690/20560646/c3e5b8ca-b17a-11e6-85c4-a0a49db08ed4.png)

</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15944</IssueID>
    <Title>Add Code Explorer </Title>
    <Description> @#- VSCode Version:
- OS Version: Windows, Mac, Linux

Request to add Code Explore from file 

Simil 
![vs code1](https://cloud.githubusercontent.com/assets/5399875/20555753/e8d596c6-b163-11e6-9d05-d551248d171b.JPG)
</Description>
    <CreatedDate>23/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15918</IssueID>
    <Title>Code Lens is all over the place</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.1.0|
|csharp|ms-vscode|1.5.2|

---

Steps to Reproduce:

1. Open any valid code 
2. Look at the UI
&lt;img width="850" alt="screen shot 2016-11-22 at 21 57 57" src="https://cloud.githubusercontent.com/assets/123748/20541769/d7f7f6c4-b0fe-11e6-9416-44cd71590595.png"&gt;
&lt;img width="592" alt="screen shot 2016-11-22 at 21 58 29" src="https://cloud.githubusercontent.com/assets/123748/20541771/d8173412-b0fe-11e6-971c-6172cbb7bfc9.png"&gt;
</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15908</IssueID>
    <Title>Sometimes Open with Code doesn't open the file</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 Enterprise

Sometimes when VS Code is already opened, trying to use the Open With Code menu on a file doesn't work (has no effect).

I'm not sure how to reproduce this, but it happens from time to time</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15902</IssueID>
    <Title>A way to distinguish open windows on the taskbar</Title>
    <Description>- VSCode Version: 1.8.0-insider
- OS Version: Windows 7 x64

Steps to Reproduce:

1. Open a couple of projects.
2. Look at the taskbar.
3. Can you quickly understand which button corresponds to which project?

![image](https://cloud.githubusercontent.com/assets/94334/20532948/dddce0ca-b0ec-11e6-8739-cfa8331c2af9.png)

You can't. Because the title has the current file name first, not the project name.

&lt;sub&gt;It'd be funny if VSCode used favicons for the taskbar buttons... :)&lt;/sub&gt;
</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15895</IssueID>
    <Title>Unable to open ... File not found</Title>
    <Description>- VSCode Version: 1.7.0
- OS Version: Ubuntu 14.04 LTS

Steps to Reproduce:

1. Run debugger or unit test that causes a stack trace to be displayed
2. View contents of debug console which look something like:

```
  0 passing (7ms)
  1 failing
  1) /app/models/plant should pass full validation:
     Error: temp
      at Context.it.only (test/app/models/test.plant.js:46:11)
```

Even though the full path to the file is shown in the parens only the part from `/app/` onwards is underlined and when clicked produces "Unable to open 'test.plant.js': File not found (/app/models/test.plant.js). Create File / Cancel"

Also tested on a Mac with same results.</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15879</IssueID>
    <Title>Cannot browse extensions gallery behind corporate proxy</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 Build 14393

This is another issue related to access the extensions gallery behind a proxy. I read all previous post here and on the web but I was not able to find a fix for my environment.

I tried to setup proxy in settings without authorization
```
    "http.proxy": "http://proxy_address:8080",
    "https.proxy": "http://proxy_address:8080",
    "http.proxyStrictSSL": false
```
and I tried also with authorization, that is usually required by our corporate proxy (BlueCoat)
```
    "http.proxy": "http://domain%5Cusername:password@proxy_address:8080",
    "https.proxy": "http://domain%5Cusername:password@proxy_address:8080",        
    "http.proxyStrictSSL": false
```
In both in this case the error message : **Error read ECONNRESET**

The very strange thing is that with Visual Studio 2015 Enterprise I can browser the extensions.
I decide so to monitor the HTTP traffic using WireShark but I was not able to find the differences the two call looks very similar but in case of VS Code the connection is dropped, in the other case it works.

I checked the two destination addresses and I can open both in HTTPS without problem with the browser on the same machine.

### WireShark Monitoring VS Code Extension Gallery HTTP Request

![image](https://cloud.githubusercontent.com/assets/1030305/20521185/47acf88e-b0aa-11e6-81d3-a302605ed89d.png)

![image](https://cloud.githubusercontent.com/assets/1030305/20521188/4bdb0e3c-b0aa-11e6-917c-b3251af56de7.png)

### WireShark Monitoring Visual Studio 2015 Extension Gallery HTTP Request

![image](https://cloud.githubusercontent.com/assets/1030305/20521192/50a69d82-b0aa-11e6-9623-a42d361b790d.png)

![image](https://cloud.githubusercontent.com/assets/1030305/20521196/556f5c64-b0aa-11e6-9b29-33bc383f46c5.png)

If you have some suggestions or you need some more debug information just let me know.

Thank you,
Marco



</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>25/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15872</IssueID>
    <Title>Markdown Preview only is display on the part of workspace</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:

1. When I use  **VSCode** for **Preview function of Markdown** , as the picture shows, the result of Preview only is display on **the part of workspace**. 
![image](https://cloud.githubusercontent.com/assets/15683489/20519200/f4c32318-b0dc-11e6-99e3-ba07b5d9fe81.png)
This is my “**Workspace settings**“. Because I just install VSCode and install "Instant Markdown" and "Markdown Theme Kit" plug-in. Beside, I try to reinstall VSCode and remove ".vscode" folder in current user directory.It likes water off a duck's back.
```
{
    // "markdown.styles": [
    //     ""
    // ]
    "window.zoomLevel": 1
}
```
2. I have use **Debugger for Chrome** plugin for a demo project which only include a html file. There exist some errors.
This is showed in the **console of Chrome**.
```
&gt;Failed to load resource: net::ERR_CONNECTION_REFUSED
&gt;Failed to load resource: the server responded with a status of 404 (Not Found)
```
This is showed in the **console of VSCode**.
```
Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:9222).

Verbose logs are written to C:\Users\tlm\.vscode\extensions\msjsdiag.debugger-for-chrome-2.2.2\vscode-chrome-debug.txt
OS: win32 ia32
Adapter node: v6.5.0 ia32
vscode-chrome-debug-core: 3.6.3
debugger-for-chrome: 2.2.1
spawn('C:\Users\tlm\AppData\Local\Google\Chrome\Application\chrome.exe', ["--remote-debugging-port=9222","--no-first-run","--no-default-browser-check","http://localhost:8080"])
Discovering targets via http://127.0.0.1:9222/json
HTTP GET failed: Error: connect ECONNREFUSED 127.0.0.1:9222
Discovering targets via http://127.0.0.1:9222/json
```
But It is no error When I try to use **IIS Express** to run the project. 

Ps:
     I use **Windows 10** and the version of **Nodejs** is v6.9.1 which the version of **npm** is 3.10.8.</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15869</IssueID>
    <Title>git bash displays wrong input characters</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 Pro

Steps to Reproduce:

1. Set git bash as default terminal:
    File -&gt; Preferences -&gt; User Settings, add 
        "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"
    at settings.json.
2. Open git bash by Ctrl + `.
3. Type some characters wrapped with ""

Expected:
 "123123123123"
Result: 
"12312"3123"123"</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>28/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15868</IssueID>
    <Title>Javascript React Emmet is not working</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: macOS 10.12.1

Steps to Reproduce:

1. Open up a `.jsx` file
2. Pressing tab now no longer autocomplete `jsx` syntaxes.

Did I miss something on the changelog? I just updated it and suddenly it stops working. Running with `--disable-extension` still does not fix the problem. Apparently no issue about this has been raised in here so I'm quite confused right now whether it's an intended change or a local problem. Thanks.

#### Edit

`vscode@1.6.1` does not have this problem.</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15855</IssueID>
    <Title>Cannot undo last commit in git viewlet?</Title>
    <Description>- VSCode Version: Code 1.7.2 (7ba55c5860b152d999dda59393ca3ebeb1b5c85f, 2016-11-21T22:14:18.217Z)
- OS Version: Linux x64 4.8.0-26-generic

Follow [smoke test](https://github.com/Microsoft/vscode/wiki/Smoke-Test), I can't seem to undo the commit I just made?

![image](https://cloud.githubusercontent.com/assets/2193314/20510982/38a907dc-b029-11e6-8115-21c36afd279a.png)

Here's the commit:

```
commit 05bca0601a672da37ff4e01214b36b0d92ab89a7
Author: Daniel Imms &lt;daimms@microsoft.com&gt;
Date:   Mon Nov 21 20:25:02 2016 -0800

    asd

diff --git a/.gitignore b/.gitignore
index 40b878d..0ec3bf9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1 @@
-node_modules/
\ No newline at end of file
+node_modules/asdasdasda
\ No newline at end of file
```

I undid that commit and tried another one (that wasn't changing node_modules in .gitignore) and it didn't allow me again:

```
commit 08183a918ed62e2768fe122b98d937f07f21a2a5
Author: Daniel Imms &lt;daimms@microsoft.com&gt;
Date:   Mon Nov 21 20:30:37 2016 -0800

    asdasd

diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 0000000..c502190
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,21 @@
+{
+    // Use IntelliSense to learn about possible Node.js debug attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "type": "node",
+            "request": "launch",
+            "name": "Launch Program",
+            "program": "${workspaceRoot}/bin/www",
+            "cwd": "${workspaceRoot}"
+        },
+        {
+            "type": "node",
+            "request": "attach",
+            "name": "Attach to Process",
+            "port": 5858
+        }
+    ]
+}
\ No newline at end of file
```</Description>
    <CreatedDate>22/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15835</IssueID>
    <Title>[Ctrl]+[D] adjacent text extends selection instead of selecting seperately</Title>
    <Description>- VSCode Version: 1.8.0-insider
- OS Version: Windows 10

Steps to Reproduce:

1. Type `aaaaa`
2. Select the first character
3. Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;D&lt;/kbd&gt; several times

Expected Behaviour:

- The editor will select the following occurrences of `a` until all individual `a`'s are selected.

Actual Behaviour:

- The editor adds the following `a` to the current selection on each time that &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;D&lt;/kbd&gt; is pressed. **This means that the second time, you are not selecting the next occurrence `a` but `aa` and the third time you are adding `aaaa` to your selection**

This is important. A common use case would be when you want to change the characters individually, or when you want to add characters _in between_ them.

With Sublime, you can select all the characters (individually) as expected:

![image](https://cloud.githubusercontent.com/assets/3329959/20498517/798e8386-affb-11e6-9120-65355521d064.png)

With VS Code, you can't even select them all, and it's one long selection (rather than several distinct ones):

![image](https://cloud.githubusercontent.com/assets/3329959/20498527/87c7aa86-affb-11e6-80c1-47e4df64c036.png)


</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15828</IssueID>
    <Title>Zooming editor view causes rendering issues with code annotations</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Open any C# project
2. Wait for intellisense/annotations to appear (ie, "references" annotation on class fields, methods, etc) 
3. Zoom editor view (Ctrl++)

Result:
Annotations appear off to the left in the margin, instead of at the proper locations. They're still clickable out there, so it's functional.
See picture http://i.imgur.com/pUsklJd.png

I couldn't figure out if this was new, or not (there seems to be a variety of zoom issues already) so apologies in advance  if this is a dupe.</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15827</IssueID>
    <Title>JS Formatter removes space in init() function</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (4ac353bfb3c3598338dad6ce8e162c67650cf2cc, 2016-11-21T07:05:04.218Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|1.1.3|
|code-settings-sync|Shan|2.3.8|
|sort-lines|Tyriar|1.1.0|
|html-css-class-completion|Zignd|1.0.3|
|Bookmarks|alefragnani|0.10.0|
|project-manager|alefragnani|0.12.2|
|one-monokai|azemoh|0.1.15|
|vscode-eslint|dbaeumer|1.1.0|
|githistory|donjayamanne|0.1.0|
|tslint|eg2|0.6.0|
|Angular2|johnpapa|1.0.2|
|theme-karyfoundation-themes|karyfoundation|7.6.0|
|HTMLHint|mkaufman|0.0.3|
|vscode-stylefmt|mrmlnc|2.1.0|
|Theme-1337|ms-vscode|0.1.2|
|angular2-inline|natewallace|0.0.16|
|nonbreakingspace|smlombardi|0.0.1|
|stylelint|shinnn|0.19.0|
|theme-tesla|smlombardi|0.0.1|
|bootstrap-3-snippets|wcwhitehead|0.0.8|
|change-case|wmaurer|1.0.0|

---

Steps to Reproduce:

Code snippet:
```
      function init () {
        _this.billingCurrencyType = _this.currencyTypes[0];
        _this.pricingCurrencyType = _this.currencyTypes[0];
      }
```
run "format code"

you get:
```
      function init() {
        _this.billingCurrencyType = _this.currencyTypes[0];
        _this.pricingCurrencyType = _this.currencyTypes[0];
      }
```
and eslint flags the missing space between `init` and the `()`</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15823</IssueID>
    <Title>Recently opened file list in pallet includes deleted files</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|ActiveFileInStatusBar|RoscoP|1.0.2|
|githistory|donjayamanne|0.1.0|
|python|donjayamanne|0.5.2|
|Go|lukehoban|0.6.49|
|cpptools|ms-vscode|0.9.2|
|Ruby|rebornix|0.10.3|
|java|redhat|0.0.6|
|vscode-proto3|zxh404|0.0.4|

---

The recently opened file list in the pallet includes deleted files.  Unfortunately, they don't seem to be going away.  An aggravating factor may be that I sometimes mistakenly select one (confusing it for one of the valid files) which seems to erroneously promote it's ranking in the "recently opened files".

Steps to Reproduce:

1. Open a file in a project
2. Delete the file (in my case, I tend to delete on the command line, not inside of vscode)
3. In Pallet, start typing the name of a similarly named file.  The deleted file will present itself in the "recently opened" section of the drop down list.</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15802</IssueID>
    <Title>Create file and nested directories at once</Title>
    <Description>It would be great, if you could create number of nested directories specifying their names separated with slashes in the dialog that opens while creating new file.

For example if you create file entering following string into dialog: `/app/some/module/api.ts`
It should create folder structure like this:
```
app/
  some/
    module/
      api.ts
```

If `some` folder  already exists, it should just create subfolder `module` into it and put `api.ts` file into it.</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15783</IssueID>
    <Title>I called two quickOpenService.input methods in sequence. But only the first appeared.</Title>
    <Description>- VSCode Version:1.7.1
- OS Version:

		let host: string;
		let user: string;
		return this.quickOpenService.input({prompt: nls.localize('inputAddress', 'Enter Address or IP of the remote host')}).then(value =&gt; {
			if (!value) {
				return;
			};
			host = value;
			return this.quickOpenService.input({prompt: nls.localize('inputUser', 'Enter user name of the remote host')}).then(value =&gt; {
				if (!value) {
					return;
				};
				user = value;
			});
		});

I called two quickOpenService.input methods in sequence. But only the first appeared.</Description>
    <CreatedDate>21/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15779</IssueID>
    <Title>Reopen files after a restart (same as for "window.reopenFolders")</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

Steps to Reproduce:

1. Open some files. Not a folder. Just some plain source code files (`Ctrl + O`)
2. Make some changes with them. Save. Don't close files. Close the editor.
3. Open the editor and observe one brand new `Untitled-1` tab only. But where are my previous files? Why were not they opened?

There is a `window.reopenFolders` option. Ok, it is not a bad option. But how about files? How about those devs who do not use folders? I never open folders. Lack of this feature in VSCode is annoying. ST3 has it so I'm compelled to use it.
</Description>
    <CreatedDate>20/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15775</IssueID>
    <Title>Display gitignored files/folders in gray (inactive) color (in left explorer tree)</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

Even that GIT integration is good in @code but in explorer it's not possible to see which **files are marked as ignored** and will not be pushed to git.
In other editors these ignored files are **displayed in gray** - so you know which are not relevant to edit (eg. some generated files, configs etc).

Probably best would be if icon themes for explorer will have ability to change look of this feature.

Example in phpstorm:
![Example in phpstorm](https://screen.jurosh.com/i16/2016_11_20_72261702821567312.png)

..having .gitignore:
```
vendor
.env
```</Description>
    <CreatedDate>20/11/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15768</IssueID>
    <Title>The integrated terminal can't input a character continuously by pressing and holding a key</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.9.2|

---

Steps to Reproduce:

1.open up the integrated terminal
2.press and hold a key, it will only echo one character</Description>
    <CreatedDate>20/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15763</IssueID>
    <Title>Preview window not expanding to available space</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

Steps to Reproduce:

1. Create a markdown file
2. Open Preview
3. The preview window does not use full screen
4. The vertical scroll bar appears in middle
![markdownpreviewwindow](https://cloud.githubusercontent.com/assets/1799587/20457972/d72110f0-ae4c-11e6-9e41-0896e01eb1f5.png)

</Description>
    <CreatedDate>19/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15751</IssueID>
    <Title>Conflict detected, command `workbench.action.debug.stepOut` cannot be triggered by shift+f11 due to workbench.action.toggleFocusMode</Title>
    <Description>
    </Description>
    <CreatedDate>19/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15739</IssueID>
    <Title>Javascript Colouring in Editor</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|php-debug|felixfbecker|1.9.7|
|cpptools|ms-vscode|0.9.2|

---

Steps to Reproduce:

1. type something like "var num = 1/(2);  var num = 1/(2);"
although the code works fine, the colouring is incorrect in the editor</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15729</IssueID>
    <Title>Can not open large files</Title>
    <Description>- VSCode Version:1.7.1
- OS Version:Debian Testing

Steps to Reproduce:

1. Generate a 50mb file, about 2000000 lines
&gt; $:bash
&gt; $:i= 0
&gt; $:while [ $i -le 3000000 ]; do echo "asdfghjjklooiyerqwuhgsdjg" &gt;&gt;hello; i=$(($i + 1)); done
2. Open a 50mb file
</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15725</IssueID>
    <Title>VSCode incorrectly treats a division as part of a regexp</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 7, x86

Steps to Reproduce:

Open any js file and insert `2 / 1 + (3 / (3))` into a single line
![r](https://cloud.githubusercontent.com/assets/7867810/20430443/495a7a4a-adcf-11e6-9ef1-49b6cd6e44c4.png)
It is obvious that it failed to judge whether it is a division operator or a mark for regexp

</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15708</IssueID>
    <Title>Breakpoints are gone</Title>
    <Description>I can no longer create a breakpoint. 😢 </Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15707</IssueID>
    <Title>Bad line number margin in diff editor</Title>
    <Description>The line number gutter seems to have been squeezed out of any padding it had. IMO the line number gutter shouldn't look any different than from a regular editor.

![image](https://cloud.githubusercontent.com/assets/22350/20423704/2f1a8b3c-ad72-11e6-991e-96c9829b98a5.png)</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15701</IssueID>
    <Title>invoking code inside bash WSL results an extra cli.js</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 14965 

Steps to Reproduce:

Im Running code command inside bash without trouble...
But it always open extra cli.js everytime i open it On Windows 10 Bash.
I dont exprience anything Funky when i run code command in CMD terminal...

may i know how to fix this? 
</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15700</IssueID>
    <Title>References in C# extension most of the time not shown correctly on wide monitor</Title>
    <Description>
![2016-11-18 1](https://cloud.githubusercontent.com/assets/23283340/20422609/b9fd64b0-ad6b-11e6-86c2-a6611a1b8e4e.png)
![2016-11-18 2](https://cloud.githubusercontent.com/assets/23283340/20422610/ba012578-ad6b-11e6-80d1-355a1dca3ca6.png)
![2016-11-18](https://cloud.githubusercontent.com/assets/23283340/20422608/b9fcf3b8-ad6b-11e6-9d6a-b002f4f33fcf.png)


- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.5.2|

---

Steps to Reproduce:

1.    I use a wide monitor 1920-1080. 
2.   References are only shown correctly on one size of font (change with CTRL +, CTRL -). See three screenprints that are included</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15692</IssueID>
    <Title>Javascript regex syntax coloring bug</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|


---

Steps to Reproduce:
![51f96435343e0f939fa35c64b63f6134](https://cloud.githubusercontent.com/assets/5215665/20418414/d4ef1390-ad7f-11e6-849c-e3d8953ee42a.png)


1. Divider symbol "/" and regex string symbol "/" is somehow conflicting with each other and causes wrong coloring and syntax highlighting errors. But the code is working perfectly, and this issue only happens on Visual Code.
2. The code is attached below:
`$scope.formatPrice = function(num) {
        if (num &gt;= 1000000) {
            return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';
        }
        if (num &gt;= 1000) {
            return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';
        }
        return num;
    }
  };`</Description>
    <CreatedDate>18/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15672</IssueID>
    <Title>Clear screen is not working correctly in the Integrated Terminal</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10.0.14393 x64

Steps to Reproduce:

1. Open Integrated Terminal
2. Write help
3. Write cls

The terminal history is not being cleared. Instead it is just scrolled down.

![cls](https://cloud.githubusercontent.com/assets/11020536/20405539/3190a1a4-ad12-11e6-9eb4-2c3e1e5f5214.gif)
</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15666</IssueID>
    <Title>Where is the most vital feature - drag and drop of source code???</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.10240
- Extensions:

|Extension|Author|Version|
|---|---|---|
|theme-monokai-dark-soda|AdamCaviness|0.0.5|
|theme-monokaiextended|Scatolina|0.0.1|
|theme-setimonokai|SmukkeKim|0.0.1|

---

Steps to Reproduce:

1. Select some part of your source code.
2. Try to drag and drop it to other line or place.
3. FAIL! It is not possible!

HOW could it happen that it is not possible yet?</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15658</IssueID>
    <Title>In Mac OS, when updating as a user other than the installer, the update never succeeds</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: MacOS 10.12.1

Steps to Reproduce:
1. Install as one user
2. Run auto-update as another

Adding the other user with read &amp; write permissions does not resolve the problem

It seems to be looking in /var/root/Library for the update package instead of the library of the user who was running VSCode.

Log file:

```
Nov 17 08:20:14 XXXX ShipIt[21393]: Installation error: Error Domain=SQRLShipItRequestErrorDomain Code=2 "Could not read update request" UserInfo={NSLocalizedDescription=Could not read update request, NSUnderlyingError=0x7fad28c083a0 {Error Domain=NSCocoaErrorDomain Code=260 "The file “ShipItState.plist” couldn’t be opened because there is no such file." UserInfo={NSFilePath=/var/root/Library/Caches/com.microsoft.VSCode.ShipIt/ShipItState.plist, NSUnderlyingError=0x7fad28c07540 {Error Domain=NSPOSIXErrorDomain Code=2 "No such file or directory"}}}}
Nov 17 08:20:14 XXXX com.apple.xpc.launchd[1] (com.microsoft.VSCode.ShipIt[21393]): Service exited with abnormal code: 1
Nov 17 08:20:14 XXXX com.apple.xpc.launchd[1] (com.microsoft.VSCode.ShipIt): Service only ran for 0 seconds. Pushing respawn out by 2 seconds.
```</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15646</IssueID>
    <Title>Renaming files before saving deletes contents</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|typescript-react-snippets|abotteram|0.1.9|
|Theme-azure|gerane|0.0.2|
|jsx|TwentyChung|0.0.1|
|vscode-react-native|vsmobile|0.2.2|
|Material-theme|zhuangtongfa|1.0.3|

---
Although this may be by design, it is different behavior compared to Visual Studio and other editors I have used. I typed a lot of code into a js file and when I renamed it prior to saving it, it wiped out all my code. It happened to me a couple times and now that I understand what is happening I'll be more careful in the future, but it would be nice if behavior didn't occur.

Steps to Reproduce:

1. Create a js file and type code in it
2. Before saving, rename the file
3. Acknowledge the prompt</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15641</IssueID>
    <Title>Autocompletion of HTML does not use cases and puts a closing tag with all lower case letters</Title>
    <Description>- VSCode Version: 1.7.1 (1.7.1) 02611b40b24c9df2726ad8b33f5ef5f67ac30b44
- OS Version: OSX 10.11.6 (15G1108)

Steps to Reproduce:

1. In a .html file open a custom tag
2. Try to close that tag with the autocomplate functionality of VS Code (Ctrl + Space &gt; Tab)
3. The closing tag is in all lower case letters and ignores the casing of the original opening tag

Example:
input:

`&lt;TestTag&gt;`

-write `&lt;`
- press "Ctrl + Space"
- press "Tab" to autocomplate the closing tag

output (result):
`&lt;TestTag&gt;&lt;/testtag&gt;`

In the previous 1.6.x version this used to work as expected leading to an output of 
`&lt;TestTest&gt;&lt;/TestTest&gt;` 

Is this a bug or a feature and if so how can I revert/fix it.

</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15631</IssueID>
    <Title>High priority of recently declared variables in Intellisense</Title>
    <Description>Most of the code I see has the following pattern a lot of the time - the variables are used shortly after they are declared. My request is that we take this into account when ordering variables in Intellisense. 


Screenshot below should show externalFileID immediately after entering just 'e' since it was just declared.
&lt;img width="674" alt="screen shot 2016-11-14 at 11 45 53" src="https://cloud.githubusercontent.com/assets/882627/20385786/bd85c2f0-acb0-11e6-83fa-151cb4b8524e.png"&gt;

Same goes with controller variable in this example
&lt;img width="787" alt="screen shot 2016-11-17 at 10 24 11" src="https://cloud.githubusercontent.com/assets/882627/20385842/fa85224a-acb0-11e6-8f5b-8406d0447add.png"&gt;
</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15627</IssueID>
    <Title>input " in terminal</Title>
    <Description>- VSCode Version:1.7.1 
- OS Version:10.11.6
- terminal : iTerm2(3.0.12)

Steps to Reproduce:

1. there are the messy code when I input " in terminal,but it is right in the iTerm2.

vs code:
![1118-1](https://cloud.githubusercontent.com/assets/5448557/20384306/47f272ac-acee-11e6-979e-8280a31cccc6.jpg)

iterm2:
![1118-2](https://cloud.githubusercontent.com/assets/5448557/20384860/4257fb30-acf0-11e6-8aa9-c12cdef9448b.jpg)

</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15626</IssueID>
    <Title>Syntax coloring gets messed up after mixing brackets and slashes.</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: none
---

Steps to Reproduce:

Take an existing .ts file and insert the following code:
```typescript
  private showPartyColors() {
    let foo = true ? (2 / 4) : (3 / (2 - 8));
    let bar = console.log('I am red, cause I am upset!');
    // here the code party is fully underway (42) ...
    let baz = (3 / 5) / 7;
    let haveParty = console.log('Now coloring of all code below this function is partially wrong.');
  }

  private mySeriousFunction(myParam: number, another: string){
    console.log('Seems I still have a hangover.');
  }
```
The current result is
![image](https://cloud.githubusercontent.com/assets/17193431/20380690/e2d0781e-aca3-11e6-8ce9-92270a00b739.png)
</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15608</IssueID>
    <Title>enlarge</Title>
    <Description>- VSCode Version:1.7.1
- OS [Version:] win10 14965

Steps to Reproduce:

1. as the picture shows
![image](https://cloud.githubusercontent.com/assets/7043494/20372904/867a1272-aca9-11e6-9d31-1439e77308d7.png)

</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15600</IssueID>
    <Title>Insiders will not load editors when not in a folder workspace</Title>
    <Description>- VSCode Version: Code 1.8.0-insiders installed on 11/16/2016 -- Report issue link not working so I've screenshotted the about dialog:
![image](https://cloud.githubusercontent.com/assets/494055/20371415/8a1e8664-ac19-11e6-9126-833e083e28d5.png)

- OS Version: Windows_NT ia32 10.0.14965
- Extensions (running with --disable-extensions)

|Extension|Author|Version|
|---|---|---|
|python|donjayamanne|0.5.0|
|cpptools|ms-vscode|0.9.2|
|csharp|ms-vscode|1.5.2|
|PowerShell|ms-vscode|0.7.2|
|rewrap|stkb|0.6.3|

---

Steps to Reproduce:

1. Open Insiders (not running a workspace folder)
2. No editor or anything else loads

![image](https://cloud.githubusercontent.com/assets/494055/20371510/2d32603c-ac1a-11e6-9aa6-9c30732a921e.png)

Opening a folder seems to work around the problem

1. Open Folder
2. Editors show up and life continues as usual
3. Close Folder
4. No editors show up again

Yesterday I added this to my user settings file:

```
"files.hotExit": true,
```

However, removing that does not seem to fix the problem.

On the plus side, hot exit seems to work when the folder is loaded.</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15599</IssueID>
    <Title>Unable to open a separate file</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (fea4db1666427b95b649614fb7c40f25e3f5cf8d, 2016-11-16T22:05:31.640Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|Bookmarks|alefragnani|0.10.0|
|tortoise-svn|fantasytyx|0.1.1|
|cpptools|ms-vscode|0.9.2|
|vscode-icons|robertohuertasm|4.0.1|

---

Steps to Reproduce:

1. Open any file by  Double-click  or right click
2. VSCode as follow
![2016-11-17_083047](https://cloud.githubusercontent.com/assets/8591065/20371490/2c44d1ce-aca0-11e6-95eb-ab384f8f1a70.png)
</Description>
    <CreatedDate>17/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15586</IssueID>
    <Title>CSS/SCSS intellisense: pseudo element adds extra colon</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (3408691c13470346a119141e57aa74b302464a4a, 2016-11-14T07:05:07.232Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|material-icon-theme|PKief|1.1.3|
|code-settings-sync|Shan|2.3.8|
|sort-lines|Tyriar|1.1.0|
|html-css-class-completion|Zignd|1.0.3|
|Bookmarks|alefragnani|0.10.0|
|project-manager|alefragnani|0.12.2|
|one-monokai|azemoh|0.1.15|
|vscode-eslint|dbaeumer|1.1.0|
|githistory|donjayamanne|0.1.0|
|tslint|eg2|0.5.40|
|Angular2|johnpapa|1.0.2|
|theme-karyfoundation-themes|karyfoundation|7.4.0|
|vscode-stylefmt|mrmlnc|2.0.1|
|Theme-1337|ms-vscode|0.1.2|
|angular2-inline|natewallace|0.0.16|
|nonbreakingspace|smlombardi|0.0.1|
|stylelint|shinnn|0.18.2|
|theme-tesla|smlombardi|0.0.1|
|bootstrap-3-snippets|wcwhitehead|0.0.8|
|change-case|wmaurer|1.0.0|

---

Steps to Reproduce:

1. type a css selector, e.g. `.pb-font`
2. type a colon.  this brings up Intellisense
3. type `bef` to scroll to `::before`
4.  choose it
5. you now have `.pb-font:::before`, which is invalid

See gif:
![nov-16-2016 14-52-08](https://cloud.githubusercontent.com/assets/835148/20363247/81c9fb90-ac0c-11e6-82b5-f79ca27b7c25.gif)

</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15580</IssueID>
    <Title>Regular expression multiple cursors bug</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|calc|BorisA|0.0.1|
|MyExtensions|none|0.0.1|
|erb|CraigMaslowski|0.0.1|
|swift|Kasik96|0.0.2|
|calculate|acarreiro|1.1.0|
|githistory|donjayamanne|0.1.0|
|prettify-json|mohsen1|0.0.3|
|Theme-TomorrowKit|ms-vscode|0.1.3|
|Ruby|rebornix|0.10.1|
|move-fast|selbh|0.1.0|
|swiftlint|shinnn|0.1.3|

---

Steps to Reproduce:

1. Open a new file and type `112233445566` into it.
2. Open the find dialog and enable regex search.
3. Type `\d\d` into the search box.
4. Notice there is correctly 6 matches and hitting enter cycles through them.
5. Hit option+enter with the intention of placing 6 cursors - one on each match: `11`, `22`, `33`, `44`, `55`, `66`
6. Notice you only get 3 cursors - one on `1122` one on `3344` and one on `5566`

![image 2016-11-16 at 10 55 21 am](https://cloud.githubusercontent.com/assets/78082/20359088/8df9a8aa-abeb-11e6-903a-259d042737d1.png)
</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>30/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15578</IssueID>
    <Title>Render whitespaces only when text is selected</Title>
    <Description>I would like an option to render whitespaces only when text is selected.
Like the default behavior in SublimeText 3

![ws](https://cloud.githubusercontent.com/assets/6805609/20357351/49afa740-ac30-11e6-98f6-aa622967290b.png)
 </Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15575</IssueID>
    <Title>Synchronization for settings</Title>
    <Description>- VSCode Version:1.7.1
- OS Version:win10 14959

Steps to Reproduce:

1. Add synchronization for both settings and extensions
</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15572</IssueID>
    <Title>Very high CPU + memory usage by "watcherService" service process + possible cause</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Ubuntu 16.04.1 64bit

There have been some (unresolved) reports about high CPU load: #14222 #10439

I'm experiencing a similar high load on Ubuntu. It's always the "--type=watcherService" process. It even happens with --extensions-disabled

top output:
```
  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND     
29275 ivo       20   0 2546512 1,579g  33836 R 115,3 10,1   2:36.30 code  
```

ps output:
```
ivo      29275  115 10.1 2588532 1667120 ?     Rl   16:40   3:06 /usr/share/code/code /usr/share/code/resources/app/out/bootstrap --type=watcherService
```

When `strace`-ing the process I noticed the following output:

```
(lots of)
futex(0x7f7c4ef2c9e0, FUTEX_WAKE_PRIVATE, 1) = 1
futex(0x7f7c4ef2ca0c, FUTEX_WAKE_OP_PRIVATE, 1, 1, 0x7f7c4ef2ca08, {FUTEX_OP_SET, 0, FUTEX_OP_CMP_GT, 1}) = 1
futex(0x7f7c4ef2c9e0, FUTEX_WAKE_PRIVATE, 1) = 1
(and then)
inotify_add_watch(35, "/home/ivo/m3r/projects/Guts/viscera/tmp/broccoli_merge_trees-output_path-rsLThmVz.tmp/modules/ember-getowner-polyfill", IN_MODIFY|IN_ATTRIB|IN_MOVED_FROM|IN_MOVED_TO|IN_CREATE|IN_DELETE|IN_DELETE_SELF|IN_MOVE_SELF) = 68357
```

Specifically the `inotify_add_watch` on some file in tmp/ which was loaded with (old) files caught my attention. There's no need to watch these files and watching all of them could very well cause the problem.

After removing tmp/ entirely the problem disappeared. After filling tmp/ again with about 20 copies of itself (resulting in appr. 400.000 files), the problem reappeared. And after removing the issue is gone again.

This happens even with 

```
    "files.exclude": {
        "tmp/": true
    }
```

Conclusion: could it be the watcherService ignores `files.exclude` and tmp/ folders in general and will happily attempt to monitor 400K+ files?

</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15569</IssueID>
    <Title>AutoSave ignores TabSize setting</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|ejs-language-support|QassimFarid|0.0.1|
---

Steps to Reproduce:

1. Set "editor.tabSize" to 2 in settings.json
2. Set "files.autoSave": "on" in settings.json
3. Edit and save a document

Expected:
Document is formatted with the set (editor.tabSize: 2) tab size .

Actual:
Document is always formatted with 4 and editor.tabSize is ignored.

</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>19/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15562</IssueID>
    <Title>Highlighting bug?</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 16.1.0
---

Any idea why there seems to be a strange block highlight in the editor? I've tried reinstalling it, changing the theme and I've removed all the extensions, but I'm still experiencing this issue.


![screen shot 2016-11-16 at 10 04 36](https://cloud.githubusercontent.com/assets/12386518/20343062/e0d3b98c-abe4-11e6-928b-f6fad0a10f5a.png)
</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15551</IssueID>
    <Title>Code Lens - Left Align (# references)</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.0.18|
|Angular2|johnpapa|1.0.2|
|csharp|ms-vscode|1.5.2|
|team|ms-vsts|1.108.0|
|vscode-icons|robertohuertasm|4.0.1|
|vscode-wakatime|WakaTime|1.0.6|
|wallaby-vscode|WallabyJs|1.0.30|

---

![image](https://cloud.githubusercontent.com/assets/2863682/20334329/4ca89344-ac0d-11e6-9cd3-d80edbc3881d.png)


Steps to Reproduce:

1. Removed C# extension
2. Added C# extension back
3. Code Lens is left aligned, please see orange rectangle</Description>
    <CreatedDate>16/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15542</IssueID>
    <Title>Markdown preview doesn't work correctly when zoomed in</Title>
    <Description>While smoke testing 1.7.2 eb1f17eff8393fa2ab0b1bd7d12bd63fc99146b6

![md](https://cloud.githubusercontent.com/assets/4033249/20327679/04510b00-ab43-11e6-8b5f-ab455606f214.gif)
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15540</IssueID>
    <Title>Menu Item has wrong text for toggling Status Bar</Title>
    <Description>While smoke testing 1.7.2 eb1f17eff8393fa2ab0b1bd7d12bd63fc99146b6

![sb](https://cloud.githubusercontent.com/assets/4033249/20327154/c4fe3a88-ab40-11e6-84e8-f026fe03c0fa.gif)

Might be related to #14448.</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15528</IssueID>
    <Title>Hot Exit Does not Open Unsaved File on Launch</Title>
    <Description>- VSCode Version: 1.8.0-Insider
- OS Version: Windows 10 x64

Steps to Reproduce:

1. Open multiple files
2.  Create new unsaved file
3. Type in mumbo jumbo
4. Close VSCode (hot exit)
5. Open VSCode

You will notice that your mumbo jumbo tab is not the tab that is it focus (it seems like there is a delay for opening hot exit'ed files?).

I can make a video if instructions are unclear.
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15519</IssueID>
    <Title>CodeLens doesn't scale together with editor</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|typings-installer|benjaminromano|0.2.0|
|cpptools|ms-vscode|0.9.2|
|csharp|ms-vscode|1.5.1|
|vscode-icons|robertohuertasm|4.0.1|
|vscode-typings|typings|0.0.5|
|Material-theme|zhuangtongfa|1.0.3|

---

Steps to Reproduce:

1. Create a new dotnet core C# project
2. Open up any C# file
3. Zoom in

CodeLens isn't scaling properly resulting in: 
![image](https://cloud.githubusercontent.com/assets/6179005/20311347/bd6a1882-ab4f-11e6-9776-fce88e926b56.png)

</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15518</IssueID>
    <Title>Emmet tag expansion no longer works by default in JSX files</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Win10

Steps to Reproduce:

1. In react render method, in return statement type a class name: `.test`
2. Pressing tab should yield: `&lt;div className='test'&gt;&lt;/div&gt;`
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15517</IssueID>
    <Title>Error in integrated console</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions:

|Extension|Author|Version|
|---|---|---|
|htmltagwrap|bradgashler|0.0.3|
|beautify|HookyQR|0.5.4|
|guides|spywhere|0.5.1|
|JavaScriptSnippets|xabikos|1.2.0|


---

Error:

[Error - 8:48:11 AM] Request textDocument/documentLink failed.
  Message: Request textDocument/documentLink failed with message: Path must be a string. Received undefined
  Code: -32603 

Steps to Reproduce:

1.  Open any htm file
2.  Save file, view console</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15507</IssueID>
    <Title>Add editor action copySelection[Up/Down]</Title>
    <Description>An action like `editor.action.copySelectionUpAction` and `editor.action.copySelectionDownAction` additional to `editor.action.copyLinesUpAction` and `editor.action.copyLinesDownAction` would make code copying even better.

E.g. you have the following code

```javascript
var user = [
    {
        name: 'Andy',
        age: 25
    }, 
    {
        name: 'Bob',
        age: 19
    }
];
```

Now I want to add some more users by copying the last user Object and editing the values.
I select the last Object with `SHIFT` + `UP` including the comma, but without the closing bracket.

```javascript
    , 
    {
        name: 'Bob',
        age: 19
    }
```

With  `editor.action.copyLinesDownAction` the whole line including the previous closing bracket is copied.
A new editor action  `editor.action.copySelectionDownAction`  would solve this.</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15503</IssueID>
    <Title>Zooming in messes up rendering of reference count adornments in C# files </Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.4.1|

---

Steps to Reproduce:

1. Open a new .NET Core project in VS Code
2. Zoom in 

![image](https://cloud.githubusercontent.com/assets/1874516/20297892/3e715fea-ab13-11e6-8c6e-4815db9c7c6f.png)
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15500</IssueID>
    <Title>Untitled files restored from backup issues</Title>
    <Description>To restore an untitled file from a backup we currently just do this:

`this.textFileService.resolveTextContent(this.restoreResource)`

That however will take the configured workspace encoding (which can easily be UTF-16) and thus might cause a corrupt content to return. 

I suggest to use the same options as for restoring files.
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15496</IssueID>
    <Title>References not showing correctly</Title>
    <Description>
![screen shot 2016-11-15 at 10 52 26 am](https://cloud.githubusercontent.com/assets/12556439/20294709/015f4cfc-ab22-11e6-9532-700a0a5a2feb.png)
- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:00.226Z)
- OS Version: Darwin x64 15.6.0
- Extensions:

|Extension|Author|Version|
|---|---|---|
|unity-tools|Tobiah|0.1.9|
|unity-debug|Unity|1.1.0|
|unity-snippets|YclepticStudios|0.1.2|
|csharp|ms-vscode|1.5.1|
|mono-debug|ms-vscode|0.11.0|
|omnisharp|ms-vscode|0.3.3|
|colonize|vmsynkov|1.0.1|

---

Steps to Reproduce:

1. Just installed c# 1.5.1 and seeing this
![screen shot 2016-11-15 at 10 52 26 am](https://cloud.githubusercontent.com/assets/12556439/20294722/188b4f2a-ab22-11e6-9391-ce29d1841395.png)

2.</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15492</IssueID>
    <Title>Tasks batch space in directory problem | Not encoding bug | bat doesn't work</Title>
    <Description>- VSCode Version: 1.7.1 (seems all versions)
- OS Version: Windows 7

It's not problem of encoding, it's doesn't matter in bat echo 1 or echo 123 or something else - bat file doesn't work at all
Issue was closed with wrong reason
https://github.com/Microsoft/vscode/issues/15444

Steps to Reproduce:

1. Create directory with space: C:/project test
2. Create start.bat in this dir with text: echo 1
3. Create empty text.txt in this dir
4. Run VSCode &amp; Open this dir as workspace
5. Ctrl+Shift+P -&gt; Tasks -&gt; Configure Task Runner -&gt; Others
6. Import this configuration &amp; save
{
	"version": "0.1.0",
	"command": "${workspaceRoot}/start.bat",
	"args": ["${file}"]
}
7. Open text.txt and compile Ctrl+Shift+B
8. Result
"c:\project" �� ����� ����७��� ��� ���譥�
��������, �ᯮ��塞�� �ணࠬ��� ��� �������� 䠩���.
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15487</IssueID>
    <Title>Wrong Comment Syntax for TSX/JSX</Title>
    <Description>From @daslicht on Microsoft/TypeScript-TmLanguage#355
When we open a ```*.tsx``` file,  VS Code shows TypeScript React in the bottom right corner.

If we now  highlight some text and call the comment shortcut, the block should be wrapped into the following:
```
	{/* ... */}
```

Currently there are just ```//``` inserted, which is wrong
</Description>
    <CreatedDate>15/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15482</IssueID>
    <Title>Zooming causing "reference" indicator to become misplaced</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: OSX

Steps to Reproduce:

1. Open any project in VS Code
2. Zoom in
3. Note Reference Indicators get shifted under the left panes

![screen shot 2016-11-14 at 3 04 31 pm](https://cloud.githubusercontent.com/assets/5638847/20281896/58f719b0-aa80-11e6-936f-e24c3bfdc065.png)


</Description>
    <CreatedDate>14/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15481</IssueID>
    <Title>Integrated Terminal with git-bash sometimes drops letters</Title>
    <Description>- VSCode Version: 1.8.0-insider 
- OS Version: Windows 10

Steps to Reproduce:

When typing out commands using the integrated terminal using git-bash ("terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"), sometimes letters aren't included in the actual command even though they're on the screen. I'm unable to reproduce it every time, but it usually occurs when I press backspace quickly and retype something. I'm running windows in a VM on macOS if that matters. In the first screenshot it dropped the 'a' from 'auth' and in the second screenshot it dropped the 'u' from 'checkout'

![auth](https://cloud.githubusercontent.com/assets/9434919/20281401/f85bffda-aa75-11e6-96e4-56282a118ad5.PNG)

![checkout](https://cloud.githubusercontent.com/assets/9434919/20281402/fc2b629a-aa75-11e6-9f7c-a49fa8f27d5e.PNG)

</Description>
    <CreatedDate>14/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15450</IssueID>
    <Title>EH debugging: reload window or open project results in two reloads </Title>
    <Description>- VSCode Version: Insider
- OS Version: macOS

Steps to Reproduce:

1. run Hello World extension from VS Code
2. in EH window reload window (e.g. 'Cmd-R') or open another project

Observe: EH reloads twice

VS Code stable does not show this behaviour.
</Description>
    <CreatedDate>14/11/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15449</IssueID>
    <Title>Limit the amount of open editors</Title>
    <Description>- VSCode Version: 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44)
- OS Version: OSX (10.11.6 (15G1108))

I'm coming from PyCharm and am used to working without tabs and the sidebar. In PyCharm i can limit it so when i open one document the other document previously opened gets closed (But it doesn't prompt to save any changes as these persist, not sure how though, and remain there when i re-open).

Is there something similar for VS Code?
</Description>
    <CreatedDate>14/11/2016</CreatedDate>
    <ClosedDate>16/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15444</IssueID>
    <Title>Tasks batch space in directory problem | Not encoding bug | bat doesn't work | Closed</Title>
    <Description>- VSCode Version: 1.7.1 (seems all versions)
- OS Version: Windows 7

Steps to Reproduce:

1. Create directory with space: C:/project test
2. Create start.bat in this dir with text: echo 1
3. Create empty text.txt in this dir
4. Run VSCode &amp; Open this dir as workspace
5. Ctrl+Shift+P -&gt; Tasks -&gt; Configure Task Runner -&gt; Others
6. Import this configuration &amp; save
{
	"version": "0.1.0",
	"command": "${workspaceRoot}/start.bat",
	"args": ["${file}"]
}
7. Open text.txt and compile Ctrl+Shift+B
8. Result
"c:\project" �� ����� ����७��� ��� ���譥�
��������, �ᯮ��塞�� �ணࠬ��� ��� �������� 䠩���.
</Description>
    <CreatedDate>14/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15427</IssueID>
    <Title>Error when using bash for windows in tasks</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 AU

Steps to Reproduce:

1. Create a tasks.json with the command "C:\\Windows\\sysnative\\bash.exe" and the parameters "-c" and "help"
2. Launch the task

The output now shows Error 0x80070057 with � after each character. Changing "isShellCommand" does nothing.

When executing the same command in cmd it works as expected.</Description>
    <CreatedDate>13/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15425</IssueID>
    <Title>previewHtml iframe does not use entire space</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

Steps to Reproduce:
1. Create a markdown file and open the preview window side by side

## Actual behaviour:
![image](https://cloud.githubusercontent.com/assets/2931520/20245601/00cc2d92-a9a5-11e6-8a16-01043ad2374e.png)
The webview developer tools window shows the following when selecting the top iframe element:
![image](https://cloud.githubusercontent.com/assets/2931520/20245613/4fd939d4-a9a5-11e6-943a-6f7d7f58cc8c.png)

## Expected behaviour:
The space on the right and on the bottom of the preview tab should be used as well. The blue selection should cover the entire white space.

This happens whenever the previewHtml command is used, not only when previewing markdown.</Description>
    <CreatedDate>13/11/2016</CreatedDate>
    <ClosedDate>21/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15421</IssueID>
    <Title>Sidebar size keeps increases when clicking on right edge of Explorer panel</Title>
    <Description>- VSCode Version: 1.7.1 stable
- OS Version: Win 10

This only happens if Explorer panel is open. Other panel like Search, Extensions work as expected. But if I keep double clicking the right edge while Explorer is open the width keeps increasing.
Steps to Reproduce:

1. Open Explorer side panel
2. Double click on panel right edge
3. Repeat step 2
</Description>
    <CreatedDate>13/11/2016</CreatedDate>
    <ClosedDate>13/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15418</IssueID>
    <Title>VSCode debugger panel overlaps tabs </Title>
    <Description>- VSCode Version: Version 1.7.1 (1.7.1)
- OS Version:  OSX 10.9

![image](https://cloud.githubusercontent.com/assets/1018196/20243651/a7b63cdc-a915-11e6-84bc-4bfa3fca6ea2.png)

It would make sense for panel to not obstruct tabs and be just above the variables tab and below launch.

I have to move that panel every now and then to access other tabs via mouse. The usability could be improved.

</Description>
    <CreatedDate>13/11/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15403</IssueID>
    <Title>No longer working with NVM and 'About' seems broken too!</Title>
    <Description>- VSCode Version:
Can't give you this!!
About throws an error:

```exception Name: NSInvalidArgumentException
Description: *** setObjectForKey: object cannot be nil (key: Credits)
User Info: (null)

0   CoreFoundation                      0x00007fff909bc52b __exceptionPreprocess + 171
1   libobjc.A.dylib                     0x00007fffa5094cad objc_exception_throw + 48
2   CoreFoundation                      0x00007fff908b937a -[__NSDictionaryM setObject:forKey:] + 1146
3   AppKit                              0x00007fff8ece22c9 +[NSSystemInfoPanel updateOptionsWithCredits:] + 323
4   AppKit                              0x00007fff8ece1c93 +[NSSystemInfoPanel updateOptions:] + 81
5   AppKit                              0x00007fff8ece1781 -[NSSystemInfoPanel setOptionsDictionary:] + 118
6   AppKit                              0x00007fff8ece15a1 -[NSApplication(NSStandardAboutPanel) orderFrontStandardAboutPanelWithOptions:] + 56
7   libsystem_trace.dylib               0x00007fffa5ba403d _os_activity_initiate + 61
8   AppKit                              0x00007fff8ecdc4e7 -[NSApplication(NSResponder) sendAction:to:from:] + 456
9   AppKit                              0x00007fff8e81ade2 -[NSMenuItem _corePerformAction] + 324
10  AppKit                              0x00007fff8e81ab4e -[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] + 114
11  libsystem_trace.dylib               0x00007fffa5ba403d _os_activity_initiate + 61
12  AppKit                              0x00007fff8e8a3b99 -[NSMenu performActionForItemAtIndex:] + 121
13  AppKit                              0x00007fff8e8a3b10 -[NSMenu _internalPerformActionForItemAtIndex:] + 94
14  AppKit                              0x00007fff8e8a393d -[NSCarbonMenuImpl _carbonCommandProcessEvent:handlerCallRef:] + 107
15  AppKit                              0x00007fff8e75a2ac NSSLMMenuEventHandler + 986
16  HIToolbox                           0x00007fff8feac0d5 _ZL23DispatchEventToHandlersP14EventTargetRecP14OpaqueEventRefP14HandlerCallRec + 1708
17  HIToolbox                           0x00007fff8feab346 _ZL30SendEventToEventTargetInternalP14OpaqueEventRefP20OpaqueEventTargetRefP14HandlerCallRec + 428
18  HIToolbox                           0x00007fff8fec0dc4 SendEventToEventTarget + 40
19  HIToolbox                           0x00007fff8ff0cc96 _ZL18SendHICommandEventjPK9HICommandjjhPKvP20OpaqueEventTargetRefS5_PP14OpaqueEventRef + 411
20  HIToolbox                           0x00007fff8ff382bb SendMenuCommandWithContextAndModifiers + 59
21  HIToolbox                           0x00007fff8ff3826a SendMenuItemSelectedEvent + 188
22  HIToolbox                           0x00007fff8ff3813d _ZL19FinishMenuSelectionP13SelectionDataP10MenuResultS2_ + 96
23  HIToolbox                           0x00007fff8ff38b77 _ZL14MenuSelectCoreP8MenuData5PointdjPP13OpaqueMenuRefPt + 702
24  HIToolbox                           0x00007fff8ff38826 _HandleMenuSelection2 + 460
25  AppKit                              0x00007fff8e74a079 _NSHandleCarbonMenuEvent + 239
26  AppKit                              0x00007fff8e9c4322 _DPSEventHandledByCarbon + 54
27  AppKit                              0x00007fff8ecda4eb -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 613
28  AppKit                              0x00007fff8e5befbd -[NSApplication run] + 926
29  Electron Framework                  0x00000001020b3636 _ZN4base8internal14NarrowingRangeIilE3minEv + 396390
30  Electron Framework                  0x00000001020b2c34 _ZN4base8internal14NarrowingRangeIilE3minEv + 393828
31  Electron Framework                  0x00000001020f5571 _ZN4base8internal14NarrowingRangeIilE3minEv + 666529
32  Electron Framework                  0x000000010281d81b _ZN4base8internal14NarrowingRangeIilE3minEv + 8171083
33  Electron Framework                  0x000000010281d670 _ZN4base8internal14NarrowingRangeIilE3minEv + 8170656
34  Electron Framework                  0x000000010281fbc2 _ZN4base8internal14NarrowingRangeIilE3minEv + 8180210
35  Electron Framework                  0x000000010281998d _ZN4base8internal14NarrowingRangeIilE3minEv + 8155069
36  Electron Framework                  0x0000000102785880 _ZN4base8internal14NarrowingRangeIilE3minEv + 7548592
37  Electron Framework                  0x0000000102784a66 _ZN4base8internal14NarrowingRangeIilE3minEv + 7544982
38  Electron Framework                  0x0000000101ed2f87 AtomMain + 71
39  Electron                            0x00000001003a2f26 main + 38
40  libdyld.dylib                       0x00007fffa5972255 start + 1```

- OS Version: Siera

Steps to Reproduce:

1. update to latest VSCode
2. Hit run in the debugger.

I now get:

```Debug adapter executable '/Users/waynedouglas/Library/Caches/com.microsoft.VSCode.ShipIt/update.WrppsYC/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.node-debug/out/node/nodeDebug.js' not found.```

here is my launch.json which was working pre-upgrade:

```{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch",
            "type": "node",
            "request": "launch",
            "program": "${workspaceRoot}/app.js",
            "stopOnEntry": false,
            "args": [],
            "cwd": "${workspaceRoot}",
            "preLaunchTask": null,
            "runtimeExecutable": null,
            "runtimeArgs": [
                "--nolazy"
            ],
            "env": {
                "NODE_ENV": "development"
            },
            "externalConsole": false,
            "sourceMaps": false,
            "outDir": null
        },
        {
            "name": "Attach",
            "type": "node",
            "request": "attach",
            "port": 5858,
            "address": "localhost",
            "restart": false,
            "sourceMaps": false,
            "outDir": null,
            "localRoot": "${workspaceRoot}",
            "remoteRoot": null
        }
    ]
}```


</Description>
    <CreatedDate>12/11/2016</CreatedDate>
    <ClosedDate>12/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15338</IssueID>
    <Title>vscode won't update anymore</Title>
    <Description>- VSCode Version: Version 1.8.0-insider (1.8.0-insider) 2016-11-10T07:03:10.419Z
- OS Version: MacOs Sierra


My vscode is in an 'update loop'.
When i start it it asks for my password to "add a new helper tool".
I put my password, then vscode tells me it s ready to update.
I choose "Update now" then Vscode closes itself, but does not restart.
Once i launch it again, the same process starts over.

I tried download vscode insider again but same issue.
</Description>
    <CreatedDate>11/11/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15327</IssueID>
    <Title>Windows VS Code will not traverse RHEL 7.2 Symlink (Really don't want to use sublime which CAN!!!)</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Win 7 Pro

Steps to Reproduce:

1.  any linux
2. target fs /opt/uid
3. ln -s /opt/uid /home/uid/myopt
4. SFTP Net Drive Win 7 to linuxserver:/home/uid
5. open folder symlink
    Path does not exist
    The path Z:/myopt does not seem to exist anymore on disk.

NOTE, sublime has NO TROUBLE traversing the symlink
I REALLY HOPE that MS does not give us the usual BS answer that it can't be done.
This is one of the most wonderful products out there.  I would hate to have to regress to sublime because I can not work in my clients secure work environment.
</Description>
    <CreatedDate>11/11/2016</CreatedDate>
    <ClosedDate>11/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15325</IssueID>
    <Title>Can't open the vscode on CentOS &amp; Arch that was due to lack of the libXss.so.1 </Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: CenOS7; Arch

Steps to Reproduce:

1. Download the vscode(.rpm or .tar.gz) and try to open the vscode
2. Open the vscode with the Command

Expected:
The vscode can be open correctly.

Actual:
The vscode can't be open. when I tried open it with command, it pop up a following error message:
![vscode](https://cloud.githubusercontent.com/assets/20184768/20201828/e21e5326-a7f5-11e6-8a62-23cb280c3b8b.PNG)

Investigation:
The issue can reproduce on CentOS and Arch, I tried install the libXss.so.1 with the 'sudo yum install libXScrnSaver libXScrnSaver-devel' in cmd, and I tried to open the vs, it can be open normally.
</Description>
    <CreatedDate>11/11/2016</CreatedDate>
    <ClosedDate>11/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15294</IssueID>
    <Title>First instance of Code opens full-screen, subsequent instances open in smaller windows</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

In a command window if I run `code .` it opens code fullscreen (which I want; it's how I left it). If I then run `code .` again from another command window, it opens in a small window (not full screen).

This is 100% reproducible for me. It's incredibly minor, but it is a little annoying (it's an extra step to maximise every time I do it) and it does feel a bit wonky.</Description>
    <CreatedDate>10/11/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15292</IssueID>
    <Title>auto format js. spacing is wrong</Title>
    <Description>starting in v.1.7.1 auto format is going crazy. This happens after the editor has been open for some time. 

With the settings as spaces,2 it always formats as spaces,4. Restarting fixes the issue and code identifies that file as spaces,4 (which was never manually set) and changing it back now works again.

- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:46.244Z)
- OS Version: Linux x64 4.4.0-38-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|beautify|HookyQR|0.5.4|
|githistory|donjayamanne|0.1.0|
|tslint|eg2|0.5.40|

---

Steps to Reproduce:

1.
2.</Description>
    <CreatedDate>10/11/2016</CreatedDate>
    <ClosedDate>15/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15291</IssueID>
    <Title>Relative path to workspace in title bar</Title>
    <Description>Since a few days it seems to be possible to show the full path in the title bar in the insider builds.  
This is already really helpful when figuring out where I am currently at in my codebase but most of the times the full path seems to be too much information in my opinion. A solution to this problem could be another option to only show the path starting from the workspace directory.

Example: I have a folder called `my-app` which is located in the folder `~/Development`. When I open a file located in `src/foo/bar/index.js` for example, I can either display the full path (`~/Development/my-app/src/foo/bar/index.js`) or just the filename (`index.js`).  
With the proposed addition the title could be reduced to `src/foo/bar/index.js` which in a lot of cases contains the information I am looking for when I look at the path of a file.</Description>
    <CreatedDate>10/11/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15271</IssueID>
    <Title>Remote Server Files Saves Close Tab</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:46.244Z)
- OS Version: Linux x64 3.13.0-100-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|EditorConfig|EditorConfig|0.3.4|
|vscode-theme-onedark|akamud|0.2.10|
|code-gnu-global|austin|0.2.1|
|cpptools|ms-vscode|0.9.2|
|Ruby|rebornix|0.10.1|

---

Steps to Reproduce:

1. open folder (git) on remote server
2. make edits
3. save (ctrl + s)

Expected Results:
File should save and remain open

Actual Results:
File saves but close (part of the time)</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15257</IssueID>
    <Title>Markdown Preview failure</Title>
    <Description>- VSCode Version: 1.8.0-insider ce6d578 (2016-11-09T08:48:03.700Z)
- OS Version: Windows 10 (1607)

Steps to Reproduce:

1. Open a markdown file
2. Open Preview
3. Get error/warn `command 'markdown.showPreview' not found`

Bug or feature?
</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>09/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15254</IssueID>
    <Title>Using Windows 7 taskbar popup menu to open recent folder name containing spaces fails probably due to lack of quoting</Title>
    <Description>- VSCode Version: 1.7.1 
- OS Version: Windows 7 x64 Professional N SP 1

Steps to Reproduce:

1. Create a folder containing a space in the name (e.g. "c:\temp\Test Folder")
2. Navigate to that folder in Windows Explorer
3. Right click in explorer to open that folder in VSCode
4. Close VSCode
5. Right click on VSCode icon on taskbar (created by pinning VSCode to taskbar but problem happens from non-pinned icon too).
6. From recent folders select c:\temp\Test Folder (no " characters shown in menu)
7. Instead of opening the folder VSCode opens 2 new files - c:\temp\Test and c:\Windows\system32\Folder

Same problem doesn't happen if:
1. selecting files with spaces in name using taskbar popup menu
2. selecting folder from File/Open Recent... menu inside VSCode
3. selecting folder names without spaces from taskbar popup menu
</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15229</IssueID>
    <Title>Hope that the built-in terminal support git bash or win10 bash</Title>
    <Description>- VSCode Version:1.7.1
- OS Version:win10 14931

Steps to Reproduce:
Cmd or powershell does not have a color highlight.
Suggest that the terminal can support git bash for windows or win10 ubuntu bash.</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>11/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15222</IssueID>
    <Title>Add function preview summary window to editor</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 7 Ent

In netbeans, there is an internal panel that will show you all the classes and functions that are found in the file currently with the focus, if you click on the function or the class within the panel, it will take you right to the defining line in the file.
I find this so extremely useful for when you are searching through a file for any given function or just overlooking the file contents. This is an easy way to look at all the classes and their members that have been defined in the file. That for programming languages,
For HTML, CSS for example it will show the file tree and the classes. This a pretty smart file preview.
It'd be nice to have this feature in VSC as well.
</Description>
    <CreatedDate>09/11/2016</CreatedDate>
    <ClosedDate>19/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15210</IssueID>
    <Title>Find command doesn't work in debug panel</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: macOS 10.12.1

Debug panel lacks ability to search for text. I expected cmd-F to work.</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>09/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15197</IssueID>
    <Title>Zooming causes strange behavior for Extension READMEs</Title>
    <Description>- VSCode Version: 1.8 - Insiders
- OS Version: macOS

Steps to Reproduce:

1. Click Extension activity bar button
2. Click an extension
3. Zoom in

I expect to be able to see the entire README. 

Instead I see only a portion of the README with scroll bar positions far in towards the center. 

![image](https://cloud.githubusercontent.com/assets/2449568/20112667/1ce5be5a-a5a2-11e6-9da9-a6f723ad8bec.png)

&gt; Note: I have searched for this issue but have not been able to find it in our repo. </Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>09/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15175</IssueID>
    <Title>Support snippets in launch configurations </Title>
    <Description>A debug extension should be able to contribute launch configurations snippets that can be added to a launch.json via Intellisense.</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15173</IssueID>
    <Title>Hover on "this" says undefined, which is wrong</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Win10

Steps to Reproduce:

1. See the screenshot, "this" inside my arraow function is "undefined" when I put my cursor on it
![2016-11-08 1](https://cloud.githubusercontent.com/assets/8457604/20101710/73dab99c-a5c3-11e6-8fd7-e5a0a7d56ed8.png)

2. In the upper left corner, we can see this: undefined

3. However, if I evalute "this", I get the right "this" in the console (as you can see in the above screenshot)

Why the difference between the "this" when I hover it, and when I evaluate it ?

Regards,
Sylvain</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15142</IssueID>
    <Title>Assign a quit command from Ctrl+Q or Ctrl+Shift+Q</Title>
    <Description>VSCode Version: 
```
Version 1.7.1
Commit 02611b40b24c9df2726ad8b33f5ef5f67ac30b44
Date 2016-11-03T13:46:46.244Z
Shell 1.3.8
Renderer 52.0.2743.82
Node 6.5.0
```

**OS Version:** Arch Linux (w/ testing repo, up to date as of this very second)

**Steps to Reproduce:**
1. Press `Ctrl-Q` or `Ctrl-Shift-Q`

**Expected**: VS Code exits.

**Actual**: VS Code does not exit.

I tried to peak around. The other relevant open issue seemed to be more related to editor-specific keyboard shortcuts whereas this seems like an OS-integration issue.

I don't know if this should work on Windows, but it was something that basically every other app I use on Linux conforms to.</Description>
    <CreatedDate>08/11/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15138</IssueID>
    <Title>Hot exit took Untitled-2 as Untitled-1</Title>
    <Description>- VSCode Version: c2418f46d20464a893dc5db6449e9d79766eadc4
- OS Version: macOS 10.11.6

![bug](https://cloud.githubusercontent.com/assets/4033249/20079410/63546b9c-a4f9-11e6-9507-7c23dfc7572d.gif)
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15133</IssueID>
    <Title>Remember cursor positions and opened editors on hot exit</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (c2418f46d20464a893dc5db6449e9d79766eadc4, 2016-11-07T21:40:57.134Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|vscode-eslint|dbaeumer|1.0.7|
|python|donjayamanne|0.5.0|
|tslint|eg2|0.5.39|

---

Steps to Reproduce:

1. Type something in an editor
2. Add a second editor side-by-side
3. Terminate task from task manager
4. Restart: Side-by-side editor is gone and cursor position in edited file is lost</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15132</IssueID>
    <Title>Hot-exit should focus on previously focused file on restart</Title>
    <Description>- VSCode Version: c2418f46d20464a893dc5db6449e9d79766eadc4
- OS Version: macOS 10.11.6

![hot](https://cloud.githubusercontent.com/assets/4033249/20078290/c36be276-a4f4-11e6-943c-19f5caf9d9d5.gif)</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15123</IssueID>
    <Title>Unexpected js code format behaviour</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version:
```
NAME="Ubuntu"
VERSION="16.04.1 LTS (Xenial Xerus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 16.04.1 LTS"
VERSION_ID="16.04"
HOME_URL="http://www.ubuntu.com/"
SUPPORT_URL="http://help.ubuntu.com/"
BUG_REPORT_URL="http://bugs.launchpad.net/ubuntu/"
VERSION_CODENAME=xenial
UBUNTU_CODENAME=xenial
```

Steps to Reproduce:

1. Create a file called test.js
2. Past this code `return &lt;span&gt;{amount} fixes&lt;/span&gt;;`
3. Press `Ctrl+Shift+I` to format the code.

Then we have `return &lt;span&gt;{amount}fixes&lt;/span&gt;;` (the white space between `{amount}` and `fixes` was removed). Why?
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15113</IssueID>
    <Title>Network share issues</Title>
    <Description>- VSCode Version:
1.7.1
- OS Version:
Ubuntu 16.04

- Problem
Intermittent issue saving files on a network (samba / cifs) share. This share is between two PC's on the same internal network.

Now and again when saving a file it will pop up an error saying it could not save, it then pops up a notice saying file has changed on disk with option to compare

When comparing the "disk" version is empty. The save has cased saving a blank file.

Closing the file and reopen and I can continue saving and editing as per usual.

![image](https://cloud.githubusercontent.com/assets/94674/20066812/dc00aa04-a50a-11e6-86f9-46fcf3526594.png)

![image](https://cloud.githubusercontent.com/assets/94674/20066837/ead54c1a-a50a-11e6-948a-6542c6942aeb.png)

I have checked with `ls -al` when this happens and the file size is 0. As this has emptied the file, there is a real chance of losing work.

Today is the first day I have been using a network share and it has happened 3 times.</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15100</IssueID>
    <Title>Console process (yarn install) runs slower then in native console</Title>
    <Description>- VSCode Version: 1.6
- OS Version: Windows 10

Noticed that `yarn install` process takes longer time in vscode console. Think this should be investigated.


Can be reproduced this way:

1.  install yarn package manager (`npm i yarn -g`)
2.  create package.json and add two dependencies:
```
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-stage-0": "^6.5.0"
```
3. run `yarn` in this directory. 

Those modules have many internal dependencies and yarn install (Link dependencies state) takes quite a long time, so it can be compared running in native console and in vscode integrated terminal.
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15092</IssueID>
    <Title>Apt/Yum repositories for Linux users</Title>
    <Description>VSCode is provided as .deb and .rpm packages for Linux users, but these are only provided as a stand-alone download, rather than from a repository.

Since VSCode updates often, having to manually download the new package and install it every time gets very old very fast. I notice that Windows users do get automatic updates which significantly improves the user experience.

It would be very much appreciated if VSCode updates were provided via repositories, rather than just as stand-alone downloads.
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15091</IssueID>
    <Title>Ability to create simple macros</Title>
    <Description>It would be nice to be able to create some kind of simple "macros" which initially could be only a set of commands running together on a specified keyboard shortcut.

Example: **F5 - Start Debug**
* View -&gt; Debug
* View -&gt; Debug Console
* Start Debugging
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15089</IssueID>
    <Title>Scrolling is not as smooth as it used to be</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|csharp|ms-vscode|1.4.1|
|PowerShell|ms-vscode|0.7.2|

---

When working with a "high precision" touch pad and using the two finger scroll it doesn't seem as "smooth" in the code editor as it did in previous versions of VS Code. When you first starting moving the fingers it takes a bit of time before it starts moving and then it "jumps". Once the scrolling is activated it is smooth, but once you let go of the fingers on the touch pad and then start again, it again has a delay before the scroll starts.

It should work just as smooth as it does in e.g. Chrome or Edge. This to me was one of the great advantages with VS Code over the full VS, so I am sad that we've lost the smooth scrolling again.

I'm on a Dell XPS15 and the touch pad should be a top-of-the-line touchpad (high precision).</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15088</IssueID>
    <Title>C# references displayed incorrectly</Title>
    <Description>- VSCode Version: 1.7.1 
- OS Version: Windows 10

Steps to Reproduce:

1. dotnet new
2. open folder
3. open .cs file
4. references displayed as in attached screen shot.

![image](https://cloud.githubusercontent.com/assets/4262917/20055499/4a0490ba-a4d9-11e6-866e-dc4bed8d18cf.png)
![image](https://cloud.githubusercontent.com/assets/4262917/20055515/58f0ee20-a4d9-11e6-8df2-2d806769fa19.png)
![image](https://cloud.githubusercontent.com/assets/4262917/20055524/6694a648-a4d9-11e6-86bf-e6d748ccf3b8.png)
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15086</IssueID>
    <Title>VS Code does not shrink the code view's horizontal scroller automatically</Title>
    <Description>- VSCode Version: **1.7.1**
- OS Version: **Windows 10 x64 version 1607**

**Steps to Reproduce:**
1. Paste a very long text.
2. Add some line breaks.

![vs code does not auto shrink horizontal scroller](https://cloud.githubusercontent.com/assets/2168227/20051221/81a851ce-a500-11e6-8f30-4118ee38ba84.gif)

</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15084</IssueID>
    <Title>Feature request </Title>
    <Description>- VSCode Version:Latest
- OS Version:Windows 8.1


1. Add Minimap and pigments and packages like [this](http://bit.ly/2euNMuy)
2. 
</Description>
    <CreatedDate>07/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15072</IssueID>
    <Title>JavaScript syntax highlighting for new expressions w/ white spaces</Title>
    <Description>- VSCode Version: 1.7
- OS Version: macOS Sierra

Steps to Reproduce:

var foo = new  Foo(whatever) → whatever is highlighted the standard way
var foo = new  Foo (whatever) → whatever is not highlighted (e.g. all teal in default light)

It's a minor thing but it'll be great if the white space before the opening parenthesis would be tolerated (some people format that way). 
</Description>
    <CreatedDate>06/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15060</IssueID>
    <Title>Provide a function to change the color of status bar</Title>
    <Description>- VSCode Version:1.6.1
- OS Version:Ubuntu

Steps to Reproduce:

Sometimes, the color of staus bar looks terrible，so I want to change it by myself. 
</Description>
    <CreatedDate>06/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15049</IssueID>
    <Title>Quotes</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10

Steps to Reproduce:

Would you kindly look into the annoyance that is writing contractions in strings and comments like "isn't, wasn't, ain't etc..." due to the automatic addition of a second ' character. Nothing big really, but really annoying none the less.</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15032</IssueID>
    <Title>CSS mixin marked as error.</Title>
    <Description>Using Polymer sometimes requires the use of mixins to style certain elements but VSCode is marking it as an error although it is valid CSS.

- VSCode Version: 1.7.1
- OS Version: Windows 10.0.14393

Steps to Reproduce:
1. Create a css file add the following:
`.mixin-test {
        --mixin: {
          /* Rules */
        };
      };`
</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>06/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15025</IssueID>
    <Title>heinous purple status bar when i do a clean install</Title>
    <Description>- VSCode Version: Code - Insiders 1.8.0-insider (dbf3ba74e6cf3b33687b7d47e321e642fc1e7562, 2016-11-04T10:15:01.593Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

Steps to Reproduce:

1. Install VS Code.
2. See purple status bar.
3. Fill barf bag.
4. Thank you.
</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15023</IssueID>
    <Title>Terminal in a Window Tab</Title>
    <Description>- VSCode Version:Version 1.7.1
- OS Version: Linux

Not an issue but a request.

Could it be possible to have the terminal open on a separate tab like a new file? I don't like having the terminal located at the bottom of the editor taking up editor space and only providing a few lines of terminal space and thought it would be a great idea to have the option to open the terminal on its own tab so you have a full page for the terminal and its out of the way when you are editing code.  </Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15019</IssueID>
    <Title>Interatd terminal error 1</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: windows 10

Steps to Reproduce:

1. Integrated terminal
2. error 	The terminal process terminated with exit code: 1


Need a solution

</Description>
    <CreatedDate>05/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15014</IssueID>
    <Title>Code hangs on VMWare Workstation 11</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 2012 R2

Steps to Reproduce:

1. Create Windows Server 2012vm in VMware Workstation.
2. Install Visual Studio Code
3. Launch Visual Studio Code
4. Watch your system hang.
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15013</IssueID>
    <Title>Toggle line comment, comment as block in scss files</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Windows 10 AU

Steps to Reproduce:

1. Open a SCSS file
2. Toggle line comment

I expect to be comment as a line with `//`, but it get surrounded by `/* */` instead.
If I have a line commented with `//` it just surround again the line with `/* */`.
If I have the line surrounded with `/* */` it toggle. 
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15005</IssueID>
    <Title>Visual tears and lagginess on 4K monitor</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:46:46.244Z)
- OS Version: Linux x64 4.4.0-45-generic
- Extensions:

|Extension|Author|Version|
|---|---|---|
|rainbow-brackets|2gua|0.0.6|
|python|donjayamanne|0.5.0|
|code-runner|formulahendry|0.4.1|
|Hg|jake-coltman|0.0.4|
|vscode-clang|mitaki28|0.2.1|
|csharp|ms-vscode|1.4.1|
|sublime-keybindings|ms-vscode|1.5.12|
|indent-rainbow|oderwat|0.4.1|
|clang-format|xaver|0.11.0|

---

Steps to Reproduce:

1. Using a very powerful laptop and a connected 4K monitor, start VS Code
2. Open a file and move the mouse around and scroll up and down (i.e.: interact with VS Code)</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>15001</IssueID>
    <Title>New Typescript grammar has alot of inconsistencies in the Dark+ theme</Title>
    <Description>- VSCode Version: 1.7
- OS Version: Windows 10

Steps to Reproduce:

1. create a new typescript .ts file.
2. write the text according to the screenshot.

The new Typescript grammar and/or Dark+ theme has alot of inconsistencies.

- Some function calls are green and some are yellow. (I think it's the 'support.class' scope that makes some 'support.function''s green.)
- Some variables are light blue and some are green. (I think it's the 'support.class' scope that makes some 'support.variable''s green.)
- In arrays, constants are uncolored but variables are colored.
- Code inside a Promise has wrong syntax highlighting. For example 'let' is green, and the arrow '=&gt;' is green.
- 'console.log', 'console.dir', etc is completely green, why?
- It's pretty much light blue everywhere, since all variables, parameters, interface keys, variablename.variablename2.variablename3, etc are light blue.
This makes almost all text light blue, which is not an improvement.
It would be better if a base variable is light blue, but all member keys in that base variable are either uncolored or have another color shade.

![image](https://cloud.githubusercontent.com/assets/3481784/20013979/75ed631c-a2b5-11e6-9dbc-da8e09303dfc.png)
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14998</IssueID>
    <Title>Git view not detect multiple project on root directory</Title>
    <Description>- VSCode Version: 1.8.0 - insider
- OS Version: ubuntu 16.04 64bit

Steps to Reproduce:

I'have two projects in my worspace : 

```
.vscode 
ConsoleApp1
      .gitignore
      Program.cs
      project.json
ConsoleApp2
     .gitignore
      Program.cs
      project.json
```

Each project have specific repository but Git view not detecte there respository in root folder.</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14994</IssueID>
    <Title>[loc][Query][VSCode] Please clarify the single-word string</Title>
    <Description>Hi, we have a question from our translator. Can you help please? Thanks!

Source:
Process

File Name:
src\vs\workbench\parts\debug\electron-browser\debugViewer.nls.resx

Resource ID:
".resx", 0; "process"

Query:

Is it a verb or a noun? Can you please provide more context? Thanks!	Cristina Carrasco	11/3/2016 8:45:42 AM</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14980</IssueID>
    <Title>Upon zooming the window, codelens positioning is lost</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: osx el capitan

Steps to Reproduce:

1. open file with codelens
2. zoom window (cmd + plus)
3. watch codelens fly away


![screen shot 2016-11-04 at 12 31 33](https://cloud.githubusercontent.com/assets/237469/20005615/36e74b30-a28b-11e6-8cf8-de7e2e7f3146.png)
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14962</IssueID>
    <Title>Emmet for jsx in js-file doesn't work anymore</Title>
    <Description>- VSCode Version: 1.71
- OS Version: Windows 10

Steps to Reproduce:

1. Open a .js file with language mode JavaScript React
2. type div and hit tab
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14961</IssueID>
    <Title>Debug console hyperlinks are not clickable</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version:  Windows 10

Steps to Reproduce:

1.   Output a hyperlink to the debug console
2.   Click on it

![image](https://cloud.githubusercontent.com/assets/966863/19998912/57c8c3ca-a267-11e6-8572-fa940fdfd22b.png)
</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14959</IssueID>
    <Title> When run build task, there are strange words in error message.</Title>
    <Description>- VSCode Version: Code 1.7.1 (02611b40b24c9df2726ad8b33f5ef5f67ac30b44, 2016-11-03T13:53:14.822Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

|Extension|Author|Version|
|---|---|---|
|html-snippets|abusaidm|0.0.18|
|vscode-javascript-snippet-pack|akamud|0.1.5|
|bower|donjayamanne|0.0.3|
|jquerysnippets|donjayamanne|0.0.1|
|xml|DotJoshJohnson|1.6.0|
|vscode-html-css|ecmel|0.0.30|
|emoji-code|idleberg|0.1.6|
|format-indent|Kasik96|1.3.0|
|vscode-JS-CSS-HTML-formatter|lonefy|0.2.1|
|phpcsfixer|makao|0.0.1|
|vscode-autoprefixer|mrmlnc|2.0.0|
|csharp|ms-vscode|1.4.1|
|js-atom-grammar|ms-vscode|0.1.10|
|debugger-for-chrome|msjsdiag|2.2.0|
|debugger-for-edge|msjsdiag|0.4.1|
|debugger-for-ios-web|msjsdiag|0.1.2|
|vscode-icons|robertohuertasm|3.0.7|
|code-bing|SirTobi|0.2.0|
|php-formatter|Sophisticode|0.1.3|
|cordova-tools|vsmobile|1.2.3|
|bootstrap-3-snippets|wcwhitehead|0.0.8|
|JavaScriptSnippets|xabikos|1.2.0|

---

Steps to Reproduce:

I try to transpiling Sass and Less into CSS by the steps from website:
[CSS, Sass and Less](https://code.visualstudio.com/Docs/languages/css)
but, on step 4, after I pressing Ctrl+Shift+B, the error message show:

&gt; 'node-sass' ���O�����Υ~���R�O�B�i���檺�{���Χ妸�ɡC


I don't know what does it means. 
How could I do to let it shows the true language words?</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14948</IssueID>
    <Title>Running node-sass inside an extension?</Title>
    <Description>I'm trying to use node-sass inside a vscode extension but I'm getting this error:

&gt; Node Sass does not yet support your current environment: OS X 64-bit with Unsupported runtime (49)

I suppose that it's because I use my local node version to install node-sass but vscode executes it with it's own node version...

Is there any way to fix that?</Description>
    <CreatedDate>04/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14942</IssueID>
    <Title>intelliSense should always show exact match first</Title>
    <Description>- VSCode Version: 1.8 Insider
- OS Version: OS X 10.11.6

![image](https://cloud.githubusercontent.com/assets/4033249/19986254/34270664-a1d3-11e6-9f86-d78908f43d26.png)

Don't really know if this is ts language service's problem or the scoring algorithm.</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14936</IssueID>
    <Title>Quiet Light theme: highlight for search result in comment is same color as text</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: Linux Mint 18

Steps to Reproduce:

1. Pick the "Quiet Light" color theme.
2. Open a JavaScript file.
3. Type "// I am a comment".
4. Ctrl-F to search for "am a".

![screnshot](https://cloud.githubusercontent.com/assets/19274678/19984186/66634fec-a1ca-11e6-9b05-b435d4a1b7e5.jpg)</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14925</IssueID>
    <Title>Feature Request: Make paths/urls in terminal output clickable</Title>
    <Description>- VSCode Version: 1.8 Insider

In iTerm you can Cmd-Click file and urls, like this:

![image](https://cloud.githubusercontent.com/assets/4033249/19980070/e88bcf5a-a1b9-11e6-8185-723e3e445bff.png)

Would be great if we can allow Cmd-Click for:

- File -&gt; Open in new tab
- Url -&gt; Open in system browser</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14918</IssueID>
    <Title>Allow "Insert Cursor" keybinding to be configurable</Title>
    <Description>- VSCode Version: 1.7.1
- OS Version: OSX Sierra

It does not appear that the Insert Cursor keybinding can be configurable. I would like to map it to the Sublimetext equivalent which is ```cmd+click```

Thanks.
</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14910</IssueID>
    <Title>Integrated debugger - highlight values for variables as 'popups' when value changes (mimic Chrome debugger)</Title>
    <Description>- VSCode Version: 1.6.1 
- OS Version: Win 10

It would be nice to replicate a feature in the Chrome debugger in the VS Code debugger if possible (it may be a requirement in the Chrome remote debug extension or the Chrome remote debug API, but not sure).

If you are stepping through code and some variables/parameters are set or change value then these values are displayed in a tooltip-like display next to the assignment. This is nice to have as it highlights where things are changing in code and saves having to manually set up watches in a lot of cases.

![image](https://cloud.githubusercontent.com/assets/23239416/19968775/de8228ba-a1cd-11e6-964a-617e168f27fa.png)


Steps to Reproduce:

1. Open developer tools in Chrome
2. Step through some code
</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14906</IssueID>
    <Title>Hope can be configured in the TAB bar continuous display file directory</Title>
    <Description>- VSCode Version:1.6.1
- OS Version:Windows 10

I found VS CODE when open the file with the same name in the TAB bar display file directory.
Hope can be configured in the TAB bar continuous display file directory.</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14903</IssueID>
    <Title>usage with css modues</Title>
    <Description>- VSCode Version: 1.7.0-insider
- OS Version: Windows 10

Steps to Reproduce:

1. in tsx file i write `import styles from './styles.css';` and editor marking with the message: "[ts] cannot find module './styles.css'.

The project compiling fine. I can omit this by this: `const styles = require('./styles.css');` But import style is working in jsx, why it doesn't work in tsx?
</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14900</IssueID>
    <Title>Custom code snippets in project folder</Title>
    <Description>I would like to share project specific code snippets with my team, just like I share my .vscode/setting.js resp .vscode/tasks.js:

![capture](https://cloud.githubusercontent.com/assets/3494407/19960647/672a47d0-a1ae-11e6-8ed0-998719f3bb1b.PNG)
</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14898</IssueID>
    <Title>How to configure a task to run in WSL?</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Version 1607 for x64-based Systems

I am running VS Code 1.6 on Windows and have configured the integrated terminal to be bash:

"terminal.integrated.shell.windows": "C:\\Windows\\sysnative\\bash.exe",

I want to build my C++ project using 'make' running in WSL. So I defined a task:

{
    "version": "0.1.0",
    "command": "make",
    "isShellCommand": true,
    "args": [""],
    "showOutput": "always"
}
How can I configure that task to run in WSL?
</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14897</IssueID>
    <Title>how to get file name and modification time in snippets json</Title>
    <Description>- VSCode Version:1.6.1
- OS Version:ubuntu gnome 16.04

I want to add an author header template by snippet
so I write a snippet like this
`	"Author info": {
		"prefix": "author",
		"body": [
			"/**",
    		"	ULSee.com Copyright(c) 2016",
    		"	${file:File name}",
    		"	Purpose: ${purpose:File description}",
			"	",
    		"	@author  ${author:collin@ulsee.com}",
    		"	@version ${version:0.10} ${day:1}/${month:10}/2016", 
			"*/"
		],
		"description": "add author info and file description at the head of file"
	}`
It's not very efficient to type file name and time once I create a file,
so, is there some ways to do this, like predefined variables.
Thanks</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14893</IssueID>
    <Title>on the one type file, vs code can't  distinguish more type language annotation</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: abusaidm.html-snippets-0.0.18, akamud.vscode-caniuse-0.5.3, bcmarinacci.theme-material-1.3.0, cssho.vscode-svgviewer-1.2.0, dbaeumer.vscode-eslint-1.0.8, dzannotti.vscode-babel-coloring-0.0.4, HookyQR.beautify-0.5.2, ionutvmi.path-autocomplete-1.1.0, johnpapa.Angular2-1.0.2, liuji-jim.vue-0.1.3, mrmlnc.vscode-jade-snippets-1.0.1, nikhilkumar80.js-patterns-snippets-0.0.5, qinjia.view-in-browser-0.0.3, robertohuertasm.vscode-icons-3.0.6, robinbentley.sass-indented-1.2.0, wcwhitehead.bootstrap-3-snippets-0.0.7, xabikos.JavaScriptSnippets-1.2.0, xabikos.ReactSnippets-1.2.0, zhuangtongfa.Material-theme-1.0.3

Steps to Reproduce:

1. open index.html
2. in style/script tag, ctrl + /, 
```html
&lt;style&gt;
	body {
		margin: 0;
	}
&lt;style&gt;
```
it will be
```html 
&lt;style&gt;
	&lt;!--body {
		margin: 0;
	}--&gt;
&lt;/style&gt;
```
I want the result
```html
&lt;style&gt;
	/*body {
		margin: 0;
	}*/
&lt;/style&gt;

```</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>07/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14892</IssueID>
    <Title>Changing Key Binding doesn't update Hotkey Hint Text in Menu until restart</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Linux Mint 17.3 Rosa

**VSCode About**
Version 1.6.1
Commit 9e4e44c19e393803e2b05fe2323cf4ed7e36880e
Date 2016-10-13T15:43:46.054Z
Shell 1.3.7
Renderer 52.0.2743.82
Node 6.5.0

**OS**
```
$ cat /etc/linuxmint/info 
RELEASE=17.3
CODENAME=rosa
EDITION="Cinnamon 64-bit"
DESCRIPTION="Linux Mint 17.3 Rosa"
DESKTOP=Gnome
TOOLKIT=GTK
NEW_FEATURES_URL=http://www.linuxmint.com/rel_rosa_cinnamon_whatsnew.php
RELEASE_NOTES_URL=http://www.linuxmint.com/rel_rosa_cinnamon.php
USER_GUIDE_URL=help:linuxmint
GRUB_TITLE=Linux Mint 17.3 Cinnamon 64-bit
```

**Steps to Reproduce:**

1. Click "File" Menu
2. Take note of the Hotkey Hint Text for "Save All" menu item
3. Click "Preferences &gt; Keyboard Shortcuts"
4. Edit JSON file to adjust hokey for "Save All" action
```
{ "key": "ctrl+shift+s", "command": "workbench.action.files.saveAll" }
```
5. Save
6. Click File Menu

**Expected Result:**
The Hotkey Hint Text for "Save All" menu item should be "Ctrl+Shift+S"

**Actual Result:**
The Hotkey Hint Text for "Save All" menu item is whatever is was before editing.

**NOTE &amp; Workaround:**
Closing VSCode and reopening will show the correct Hotkey Hint Text.</Description>
    <CreatedDate>03/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14883</IssueID>
    <Title>Inconsistency in reporting hotkey for Format Selection (Ctrl+K, Ctrl+F)</Title>
    <Description>- VSCode Version: Code - Insiders 1.7.0-insider (9e7d70052908b633e0d4f71e70b26714bd1d2f10, 2016-11-02T05:39:07.207Z)
- OS Version: Windows_NT ia32 10.0.14955
- Extensions:

|Extension|Author|Version|
|---|---|---|
|cpptools|ms-vscode|0.9.2|
|PowerShell|ms-vscode|0.7.2|
|rewrap|stkb|0.6.2|

---

Steps to Reproduce:

1. Select some source code
2. Right click
3. Observe no hotkey listed for Format Selection.

![image](https://cloud.githubusercontent.com/assets/494055/19949949/d470bdee-a111-11e6-8448-f732a130be91.png)


1. Select some source code
2. Ctrl+Shift+P (Command Palette)
3. Type: "Format"
4. Observe hotkey listed in Command Palette.

![image](https://cloud.githubusercontent.com/assets/494055/19949959/e0f920ce-a111-11e6-8ada-b66fd49c1f15.png)
</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14870</IssueID>
    <Title>Update or clean install of @code 1.6.1.0 displaying blank screen and consuming CPU</Title>
    <Description>- VSCode Version: 1.6.1.0
- OS Version: Windows Server 2012 R2

Steps to Reproduce:

1. Install or Update to 1.6.1.0
2. Run
![vscode](https://cloud.githubusercontent.com/assets/8667124/19943004/01b6a35a-a10c-11e6-8ab9-dd02d564cca3.jpg)

</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14867</IssueID>
    <Title>Clicking a validation warning in 'default settings' opens a 'settings.json' file</Title>
    <Description>- Install tslint (or some other extension that produces a validation warning in its default settings)
- Open the split settings view
- Open the problems panel
- See the warning listed under `/settings.json`
- Double click it
- It opens in a file called `/settings.json` which has the same contents as Default Settings. Can it open in Default Settings instead?

![image](https://cloud.githubusercontent.com/assets/323878/19940599/74f13e42-a0ea-11e6-80e3-7214658a3ef5.png)
</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14866</IssueID>
    <Title>IntelliSense for keybindings.json's 'when'</Title>
    <Description>- VSCode Version: Code 1.7.0 (9e7d70052908b633e0d4f71e70b26714bd1d2f10, 2016-11-02T14:34:01.691Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: None

Just that: Add IntelliSense for keybindings.json's 'when' attribute.</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14861</IssueID>
    <Title>Unexpected priority given to suggestion with interrupted substring</Title>
    <Description>I would expect that the first entry gets selected.

![image](https://cloud.githubusercontent.com/assets/5047891/19938034/d669a32e-a123-11e6-860d-058fe00e15b0.png)
</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>03/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14855</IssueID>
    <Title>Is there any API for handling Search Results?</Title>
    <Description>Hi,

I'm looking for an API that would give access to the search results, more specifically the files and line numbers/characters that _where found_. I didn't find anything like this, but instead, just the `vscode.workspace.findFiles` function.

With this in hand, it would be possible to _mark_ each result for further navigation. (Original request from my [Bookmarks extension](https://github.com/alefragnani/vscode-bookmarks/issues/7))

Thanks in advance</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14832</IssueID>
    <Title>in-product release notes blank after editor group changes</Title>
    <Description>- VSCode Version: 1.6.1, 1.7.0 insiders
- OS Version: Windows 10, OS X

Steps to Reproduce:

1. Create a least two editor groups and put the in-product release notes in a right or lower editor group.
2. Close the left or top editor group.

The in-product release notes become blank. Clicking the editor or scrolling has no effect.  Double-clicking the tab heading refreshes the release notes.

It doesn't repro if the release notes are left or above the closing editor group.

</Description>
    <CreatedDate>02/11/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14825</IssueID>
    <Title>Allow for "shellArgs" in Windows integrated terminal</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10

Steps to Reproduce:

1. Try to change `terminal.integrated.shell.windows` to pass additional parameters like variable expansion flag.
2. terminal fails with exit code 1

There is no current way to pass additional parameters to the Windows shell, it would be useful for configuration scripts and flags passed to the terminal, os other options passed to custom terminals.
In fact, the integrated terminal don't work with anything other than powershell and cmd.</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14820</IssueID>
    <Title>File tree nesting in sidebar is misaligned (Seti theme)</Title>
    <Description>- VSCode Version: 1.6.1

Example, annotated:

&lt;img width="297" alt="x1" src="https://cloud.githubusercontent.com/assets/50314/19903301/8c8c8d50-a044-11e6-96db-d1704648b061.png"&gt;

VSCode makes it look like the .go files are all inside `testdata`, but they are in `querying`. The alignment is completely misleading. 

Fixed:

&lt;img width="297" alt="x2 copy" src="https://cloud.githubusercontent.com/assets/50314/19903424/017f2be0-a045-11e6-9a1e-d00f5cf391fe.png"&gt;

Here's how Atom renders it:

&lt;img width="297" alt="x3" src="https://cloud.githubusercontent.com/assets/50314/19902914/f52db43a-a042-11e6-8af8-d2ee675951aa.png"&gt;
</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14816</IssueID>
    <Title>Be able to run code after debugging completes.</Title>
    <Description>This is a feature request. 

I am doing an experiment using VSCode around remote debugging. I use SSH port forwarding to connect to remote debugger (as part of preLaunchTask). It works great. However there is currently no way for me to shutdown the SSH after debugging completes. 

It will be great if there are something like 'postDebugTask' where I can run something to clean things up. This seems to be a common scenario for remote debugging.

- VSCode Version: 1.6
- OS Version: Linux/Windows

</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14815</IssueID>
    <Title>New project template</Title>
    <Description>Initialize a project using predefined contents provided by plugins.</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14810</IssueID>
    <Title>Flaky test: ExtHostDocumentSaveParticipant event delivery, overall timeout:</Title>
    <Description>Seen in https://travis-ci.org/Microsoft/vscode/jobs/172315446#L6894</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>17/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14807</IssueID>
    <Title>Enhancement request: text formatting access in vscode.window.showInformationMessage</Title>
    <Description>I'd like the ability to format information messages that my extension shows possibly via markdown. For example, I'd like the following input to be rendered as markdown when the alert is presented to the user:

```
vscode.window.showInformationMessage('Hi. I think *this* is really important.');
```

Just thought I'd see if this makes sense to anyone else. Thanks for your consideration and for your hard work on VS Code!</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14805</IssueID>
    <Title>No autoscroll feature and select all in integrated console</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: dbaeumer.jshint-0.10.15, gerane.Theme-Dreamweaver-0.0.2

Steps to Reproduce:

1. In the integrated console, run few commands
2. Try to copy the lines more than you can see in the integrated console. It wont auto scroll.
2. Also there is no select all feature.</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14796</IssueID>
    <Title>Terminal history is truncated after resizing the window when word wrap setting is being applied</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: macOS Sierra v. 10.12.1

Steps to Reproduce:

1. Add "editor.wrappingColumn": 0 in settings.json to apply word-wrap setting by default.
2. Resize the window - make it smaller, then maximize it again.

The terminal history is truncated:

![screenshot 2016-11-01 10 29 42](https://cloud.githubusercontent.com/assets/7524789/19883832/0f0ed646-a01f-11e6-8217-1247b72eb912.png)

</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14787</IssueID>
    <Title>Internal terminal isn't correctly wrapped bash terminal</Title>
    <Description>I cannot overwrite in settings "terminal.integrated.shell.windows": "%COMSPEC%"
![image](https://cloud.githubusercontent.com/assets/11016041/19879272/cadc1a12-a012-11e6-8387-90099482c450.png)
For `"terminal.external.windowsExec": "%CURRENT_DIR%git-for-windows\\bin\\bash.exe"`
I can

This is not help #7286, but it's dublicate: #7344 (it's not resolve)

But It's work: `"terminal.integrated.shell.windows": "D:\\git-for-windows\\bin\\bash.exe"`
Full path is working!
`SET CURRENT_DIR=%~dp0`

Found solution:
` SET COMSPEC=%CURRENT_DIR%git-for-windows\bin\bash.exe`
and after that run VSCODE

But I cannot run terminal.external.windowsExec

And I have problem with bash, there are extra characters, the console behaves is abnormally. When I run bash outside, all is correct.
![image](https://cloud.githubusercontent.com/assets/11016041/19881447/9330ef7e-a027-11e6-9349-7800f35f472c.png)
</Description>
    <CreatedDate>01/11/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14779</IssueID>
    <Title>No workbench action to hide panel</Title>
    <Description>- VSCode Version: 1.6.1

There's no editor action to hide the panel. There is only `workbench.action.togglePanel`, and there's apparently no context so you can do `when: "panelVisible"` or whatever. So there's no way to bind a key to something that hides the panel.</Description>
    <CreatedDate>31/10/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14698</IssueID>
    <Title>import completion should not triggered by dot</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows Server 2012 R2

Steps to Reproduce:

```
// type the following
import { something } form '[cursor here]

// then type in a dot (".")
```

expected: no completion. Users may want to do ".." for parent folder.
actual: completion triggered and list installed npm packages

![image](https://cloud.githubusercontent.com/assets/3254987/19831903/3911615e-9dca-11e6-8d32-c181e3e84a6e.png)

So what happen is if user wants to reference parent folder (".."), it will end up like this:

![image](https://cloud.githubusercontent.com/assets/3254987/19831910/59d135ea-9dca-11e6-8621-d1db245464bd.png)
</Description>
    <CreatedDate>29/10/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14667</IssueID>
    <Title>Format on Save, makes JSON file growing more and more</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 7

Steps to Reproduce:
1. Open Settings.json
2.  Press Alt+Shift+F, some empty lines are added between parameters
3. Press again - it's starts stretching more
</Description>
    <CreatedDate>28/10/2016</CreatedDate>
    <ClosedDate>08/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14636</IssueID>
    <Title>Automatic Update Not working</Title>
    <Description>- VSCode Version: 1.5.3 (1.5.3)
- OS Version: macOS Sierra 10.12.1 (16B2555)

Steps to Reproduce:
1. Each time it ask me to update and restart. But it never does then I have to start it manually.
2. Some of extension never updated.
</Description>
    <CreatedDate>28/10/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14588</IssueID>
    <Title>Format for tsx remove some space in string</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: macOS 10.12

Steps to Reproduce:
1. Follow this doc
2. and [Youtube](https://youtu.be/1Q7475lTzVw)
3. in the video, I also try it in vscode-insiders, and It's show a --jsx problem(I have added it in tsconfig.json)
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>23/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14524</IssueID>
    <Title>changes of tsconfig not updates error</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Win10

Steps to Reproduce:
1. have an error like https://github.com/Microsoft/TypeScript-Sublime-Plugin/issues/470 (https://twitter.com/robertSPD/status/790950380570087424)
2.  update tsconfig but error-tooltip is not leaving
3. need to restart for update

it would cool, if changes are loaded without restart
</Description>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14258</IssueID>
    <Title>MacOS: Dark Custom Title Bar</Title>
    <Description>It will be great if next versions of Visual Studio Code has a Custom title bar like [this](https://cloud.githubusercontent.com/assets/378023/19135767/24a16dde-8ba2-11e6-83a3-b6d75180fc65.png) that is on Atom 1.11.

You could see the feature in their [blog](http://blog.atom.io/2016/10/11/atom-1-11.html)
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>13/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14153</IssueID>
    <Title>All projects from "Open Recent" list are opened after a new version has been installed</Title>
    <Description>When updating VS Code to a new version, VS Code will open all projects from the "Open Recent" list on restart.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14151</IssueID>
    <Title>Code - Insiders won't start if the "%APPDATA%\Code - Insiders\Backups\workspaces.json" contains an invalid path</Title>
    <Description>While I had a folder opened as a project in _Code - Insiders_, I renamed that folder to something else. Then, an update became available and it prompted me to install it. Code closed, the update went on, but Code never came back.
After investigating a bit, I realized the `workspaces.json` still pointed to the old folder name. After removing the `workspaces.json` file, Code started normally.

---
- VSCode Version: Code - Insiders 1.7.0-insider (4dc59b7e2a9c003e17d154023d47bd94a972694b, 2016-10-21T06:11:33.710Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions:

| Extension | Author | Version |
| --- | --- | --- |
| Bookmarks | alefragnani | 0.9.2 |
| vscode-svgviewer | cssho | 1.2.0 |
| xml | DotJoshJohnson | 1.6.0 |
| php-debug | felixfbecker | 1.9.7 |
| php-intellisense | felixfbecker | 0.0.9 |
| Theme-Daily-Grind | gerane | 0.0.2 |
| Theme-Twilight | gerane | 0.0.2 |
| vscode-todo-parser | minhthai | 1.8.3 |
| vscode-apache | mrmlnc | 1.1.0 |
| PowerShell | ms-vscode | 0.7.2 |
| vscode-nginx | shanoor | 0.3.0 |
| guides | spywhere | 0.5.1 |
| Align | steve8708 | 0.2.0 |
| change-case | wmaurer | 0.4.1 |
| theme-vsicons | ionut-botizan | 0.0.1 |

---

Steps to Reproduce:

**The hard way:**
1. Create a folder `abc`
2. Open that folder as a workspace in Code - Insiders
3. Rename the `abc` folder to something else, like `xyz`, while Code is still running
4. Use your favorite method to _crash_ Code in such a way that the `%APPDATA%\Code - Insiders\Backups\workspaces.json` file doesn't get updated; hard resetting your machine works best! :)
5. After your machine restarts, try to open Code
6. Nothing happens
7. Manually delete or edit the contents of `%APPDATA%\Code - Insiders\Backups\workspaces.json`
8. Code will start normally

**The easy way:**
1. Close all running instances of _Code - Insiders_
2. Edit the contents of the `workspaces.json` file to point to an inexistent directory, like:
`{"folderWorkspaces":{"c:\\foo\\bar\\baz":[]}}`
3. Try to open Code; it shouldn't start
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>01/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13985</IssueID>
    <Title>Show error in Explorer tree file icon</Title>
    <Description>This is a request for visual feedback of errors.

If I am working on a file and make a change that causes errors in other files I would like to be able to glance over to the Explorer tree and see where the errors are.

Possibly add a red x (or circle) on the file (or parent folder) icon that has the error.

I know I can have a look at "Problems" - but that involves looking down and clicking. 
I use "Problems" if there is a large amount of issues or I want to see details.

I'm currently using VSCode 1.6.1.
</Description>
    <CreatedDate>19/10/2016</CreatedDate>
    <ClosedDate>12/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13776</IssueID>
    <Title>Non-distraction mode </Title>
    <Description>Feature Request

Brackets had a toggle non-distraction mode / hotkey: Quickly show/hide all side and bottom panels. Not a big thing but pretty useful. 
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>10/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13652</IssueID>
    <Title>Do not use setter injection for services</Title>
    <Description>I noticed that the configurationService is now getting the telemetry service injected via set method. This is against our typical rules of constructor injection and should be avoided. Please find another solution for logging changes to the configuration file, possibly by some guy on top listening to file changes and logging the related telemetry.

Related: https://github.com/Microsoft/vscode/issues/13653
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>18/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13504</IssueID>
    <Title>Path broken in output</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Windows 7 Service Pack 1

Steps to Reproduce:
1. When attempting to run a script, the path breaks, causing error.

Even in quotes. http://imgur.com/a/Oz8eF
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13066</IssueID>
    <Title>Allow to open multiple project folders in the same window</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Pro

Steps to Reproduce:
1. Open a project folder in the editor
2. Now drag and drop another project folder in the same window
3. Observe that the previously open project is replaced with the new dragged and dropped project folder

Expectation: 
1. Just like editors like Sublime Brackets Atom, multiple project folders need to hooked to the tree in the left side bar
</Description>
    <CreatedDate>30/09/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14692</IssueID>
    <Title>Bad screen partial repaint issues making VSCode very unpleasant to use</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Mac OS Sierra 10.12

Steps to Reproduce:
1. Open any file 
2. Code areas appear in dark black while huge blocks where the text is not at appear in gray black so there is not in any way a uniform background color

![image](https://cloud.githubusercontent.com/assets/98346/19830188/653d6354-9dc0-11e6-9705-2075c5d02761.png)

![image](https://cloud.githubusercontent.com/assets/98346/19830193/7cafa506-9dc0-11e6-887e-3be778bd412e.png)
</Description>
    <CreatedDate>29/10/2016</CreatedDate>
    <ClosedDate>30/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14656</IssueID>
    <Title>Scientific linux VScode install fail glibc version and libXss.so.1</Title>
    <Description>- VSCode Version: code-1.6.1
- OS Version: 2.6.32-642.6.2.el6.x86_64  / Red Hat 4.4.7-17

System
`$ gcc --version`

&gt; gcc (GCC) 4.9.1 20140922 (Red Hat 4.9.1-10)

achieved with Red Hat Software Collections / devtoolset-3 which ships with:

`$ ldd --version`
ldd (GNU libc) **2.12**
- Install via rpm:

`$ rpm -qpR code-1.6.1-1476373175.el7.x86_64.rpm`
glibc &gt;= 2.15
libXss.so.1
/bin/sh
/bin/sh
rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1
rpmlib(CompressedFileNames) &lt;= 3.0.4-1

`$ rpm -Uvh code-1.6.1-1476373175.el7.x86_64.rpm`
error: Failed dependencies:
glibc &gt;= 2.15 is needed by code-1.6.1-1476373175.el7.x86_64
libXss.so.1 is needed by code-1.6.1-1476373175.el7.x86_64
- Install via yum:

`$ yum install code-1.6.1-1476373175.el7.x86_64.rpm`

Loaded plugins: refresh-packagekit, security
Setting up Install Process
Examining code-1.6.1-1476373175.el7.x86_64.rpm: code-1.6.1-1476373175.el7.x86_64
Marking code-1.6.1-1476373175.el7.x86_64.rpm to be installed
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package code.x86_64 0:1.6.1-1476373175.el7 will be installed
--&gt; Processing Dependency: glibc &gt;= 2.15 for package: code-1.6.1-1476373175.el7.x86_64
--&gt; Processing Dependency: libXss.so.1 for package: code-1.6.1-1476373175.el7.x86_64
--&gt; Running transaction check
---&gt; Package code.x86_64 0:1.6.1-1476373175.el7 will be installed
--&gt; Processing Dependency: glibc &gt;= 2.15 for package: code-1.6.1-1476373175.el7.x86_64
---&gt; Package libXScrnSaver.i686 0:1.2.2-2.el6 will be installed
--&gt; Finished Dependency Resolution
Error: Package: code-1.6.1-1476373175.el7.x86_64 (/code-1.6.1-1476373175.el7.x86_64)
           Requires: glibc &gt;= 2.15
           Installed: glibc-2.12-1.192.el6.i686 (@sl)
               glibc = 2.12-1.192.el6
 You could try using --skip-broken to work around the problem
 You could try running: rpm -Va --nofiles --nodigest `

Are there any possible fixes that avoid the risky road of upgrading `glibc`?
</Description>
    <CreatedDate>28/10/2016</CreatedDate>
    <ClosedDate>28/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14647</IssueID>
    <Title>Repl cursor at position 0 is cropped</Title>
    <Description>Notice how the top-left corner of the cursor is cropped by a single pixel:

![image](https://cloud.githubusercontent.com/assets/22350/19799658/195a210c-9cf8-11e6-86ac-8f6f3e2c48f4.png)

This might be the _hidden_ text area.
</Description>
    <CreatedDate>28/10/2016</CreatedDate>
    <ClosedDate>28/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14612</IssueID>
    <Title>Allow users to restore files instead of just folders while restarting Code</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: OSX

Steps to Reproduce:
1. Launch VS Code, open several files separately in Code instead of any folder
2. Close VS Code
3. Launch VS Code again, Code opens a blank file instead of previous opened files

Currently folders can be restored while files can not.
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14608</IssueID>
    <Title>Tabs not rendering right</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Pro

Steps to Reproduce:
1. Open some tabs
2. Close VSCode
3. Re-open VSCode

Minor issue, I know, but still strange.
Looks like that, when opened, VSCode tries to fit all tabs in the given space.
When I click on one of the unselected tabs, the rendering starts to work and the horizontal scrollbar appears.

Freshly opened
https://i.imgsafe.org/2239ae0c43.png

After click
https://i.imgsafe.org/223ac7eb7f.png
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14591</IssueID>
    <Title>Window title not updated on Open Recent</Title>
    <Description>- VSCode Version:
  Version 1.6.0
  Commit e25fb0bc
  Shell 1.3.7
  Renderer 52.0.2743.82
  Node 6.5.0
- OS Version:
  Windows 7

Steps to Reproduce:
1. Open Visual studio code such that it opens the last opened project
2. File -&gt; Open Recent
3. Select a recent project

Expected behaviour:

Window title reflects the name of the newly opened folder

Actual behaviour: 

Window title remains as the first opened project
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14584</IssueID>
    <Title>Code intellisense should provide the variables in scopes or nearly first</Title>
    <Description>- VSCode Version: 1.7.0-insider（1.7.0-insider）9d472850269c3f7ff1043b86f823115927af1982
- OS Version: macOS 10.12

Steps to Reproduce:
1. in a express.js route 
2. input res
3. can not find req in first page of list

![2016-10-27 4 50 22](https://cloud.githubusercontent.com/assets/1487051/19760827/058d966e-9c66-11e6-9217-a7c0b8aa6202.png)
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14581</IssueID>
    <Title>VS Code requires git ssh keys to be named as "id_rsa"</Title>
    <Description>- VSCode Version: 
  
  Version 1.6.1
  Commit 9e4e44c19e393803e2b05fe2323cf4ed7e36880e
  Date 2016-10-13T15:43:46.054Z
  Shell 1.3.7
  Renderer 52.0.2743.82
  Node 6.5.0
- OS Version: Linux Mint 18

Steps to Reproduce:
1.  Create a ssh-key for github with filename something other than id_rsa (ex: github_key_id_rsa)
2. Try to push to the remote github repository

VS Code's git push fails with error messages:

&gt; Please make sure you have the correct access rights
&gt; and the repository exists.
&gt; git fetch
&gt; Permission denied (publickey).
&gt; fatal: Could not read from remote repository.

Push to repo on the command line with `git push` works. If I rename the key to id_rsa then the push operations work fine 
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14579</IssueID>
    <Title>VSCode API tests no longer run from within Code</Title>
    <Description>Mac OS X

I am not sure when that broke but I am quite sure it used to work:

![image](https://cloud.githubusercontent.com/assets/900690/19758026/91a60b12-9c26-11e6-9a6e-e0f53a35d1c3.png)
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14575</IssueID>
    <Title>No number shows how many files are found after searching</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Win 10

Steps to Reproduce:
1.  Search specified string in a folder,
2.  Return some results, but there is no number showing how many files are found after searching.
</Description>
    <CreatedDate>27/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14557</IssueID>
    <Title>Release notes tab does not zoom properly</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 7

Steps to Reproduce:
1. Open up Release notes tab 
2. Zoom some factor

The result is that the content pane's width and height are decreasing with each zoom level. E.g.

![image](https://cloud.githubusercontent.com/assets/6196260/19743576/0f7564f0-9bca-11e6-95b9-a654b731024c.png)
</Description>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14540</IssueID>
    <Title>UI Render background-colors inconsistantly</Title>
    <Description>- VSCode Version: 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e)
- OS Version: macOS 10.12

Steps to Reproduce:
1. Open VS Code

Upgraded to 10.12 last night and today am noticing inconsistent render of VS Code background colors. See screenshots below.

![screen shot 2016-10-26 at 9 50 42 am](https://cloud.githubusercontent.com/assets/1786677/19729525/446c197a-9b65-11e6-8d3c-263eed3f4d6a.png)
![screen shot 2016-10-26 at 9 50 50 am](https://cloud.githubusercontent.com/assets/1786677/19729529/484ce15a-9b65-11e6-8c28-18865fd3e1e9.png)
![screen shot 2016-10-26 at 9 55 45 am](https://cloud.githubusercontent.com/assets/1786677/19729536/4cd39a70-9b65-11e6-90e5-ceaef9f5db2b.png)

I removed VS Code and did a clean install without any extensions installed and this was the result:
![screen shot 2016-10-26 at 10 13 19 am](https://cloud.githubusercontent.com/assets/1786677/19729559/5f3629d0-9b65-11e6-9fc9-fcf53fb5efb7.png)
![screen shot 2016-10-26 at 10 13 48 am](https://cloud.githubusercontent.com/assets/1786677/19729563/6249159c-9b65-11e6-9333-dde0e1f10933.png)
</Description>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14513</IssueID>
    <Title>Consider snippets for launch.json</Title>
    <Description>Testing #13585

Right now if you want to add an additional debug configuration, you need to copy and paste an existing config. We should consider adding a couple snippets to make it easier to get started with adding an additional configuration via simple code completions.

![image](https://cloud.githubusercontent.com/assets/762848/19715150/1603de68-9b08-11e6-9c8f-c2bcab633066.png)
</Description>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14474</IssueID>
    <Title>Files opened by Drag/Drop do not appear in File &gt; Open Recent</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: ms-vscode.cpptools-0.9.2

Steps to Reproduce:
1. Drag drop a file to VS Code.
2. Edit it.
3. Close VS Code
4. Restart VS Code.
5. Click File &gt; Open Recent

BUG: File opened in step 1 isn't shown.

Also, note that Open Recent does not log SAVED files; if you open a file and save it under a new name, the new name isn't recorded in the RECENT list.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14466</IssueID>
    <Title>View menu Toggle Editor Group Layout does not show warning as Command Palette does</Title>
    <Description>Testing #14016

When there is only one editor group
- In "opened editors" view, toggle editor group button is greyed out. 
- If you try to change layout through Command palette, a warning box pops up saying `Command 'View: Toggle Editor Group Layout' is not enabled in the current context.`
- If you press `Toggle Editor Group Layout` in Menu, nothing happens.

The later two behaviors need to be consistent.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14460</IssueID>
    <Title>Update should always show before Disable/Enable for consistency</Title>
    <Description>Testing #14288

Disable outdated eslint only in one workspace:

![image](https://cloud.githubusercontent.com/assets/4033249/19696642/e54e35ea-9a9c-11e6-9a72-294bca451883.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14438</IssueID>
    <Title>Two prompts when uninstalling an extension pack</Title>
    <Description>Testing #14291
- install the '999 Martins Favourite Extensions' extension pack
- uninstall the extension pack. You are prompted with:

&gt; Are you sure to uninstall 'Martins Favourite Extensions' 

Press ok 

&gt; Would you like to uninstall 'Martins Favourite Extensions' only or its dependencies also.

A single prompt would do
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14435</IssueID>
    <Title>Improve prompt when installing extension packs</Title>
    <Description>Testing #14291
- create an extension pack (see #14291)
- install the extension pack. You are prompted with:

&gt; Installing 'Martins Favourite Extensions' also installs its dependencies. Would you like to continue?

I wonder if the prompt is useful. 
As a user, is it something to worry about? Should I say yes or no? 

I guess the prompt can be removed. Else it can be replaced with an more of an information.
Press ok to install 'Martins Favourite Extensions' and 6 dependencies.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14430</IssueID>
    <Title>Evaluating expression in the repl takes two Enter key presses</Title>
    <Description>#14171

![image](https://cloud.githubusercontent.com/assets/22350/19687072/56872812-9ac4-11e6-9254-2ff8ddb93746.png)

Since the repl now has suggest embedded it became a terrible experience since I always have to click &lt;kbd&gt;Enter&lt;/kbd&gt; twice to evaluate anything: the first to accept the automatic suggestion that came up and the second to submit the expression.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14429</IssueID>
    <Title>Repl indicator is shifted a few pixels down</Title>
    <Description>#14171

In Windows:

![image](https://cloud.githubusercontent.com/assets/22350/19686995/fedd521c-9ac3-11e6-91d1-3b9309d25f67.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>28/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14425</IssueID>
    <Title>Debug loses current line breakpoint decoration</Title>
    <Description>#14171

Create `app.js`:

``` js
setInterval(() =&gt; {
    console.log(new Date());
}, 1000);
```

Create `.vscode/launch.json`:

``` json
{
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program 1",
            "program": "${workspaceRoot}/app.js",
            "cwd": "${workspaceRoot}"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program 2",
            "program": "${workspaceRoot}/app.js",
            "cwd": "${workspaceRoot}"
        },
        {
            "type": "composite",
            "request": "launch",
            "name": "Launch Both Programs",
            "configurationNames": [
                "Launch Program 1", "Launch Program 2"
            ]
        }
    ]
}
```
1. Set breakpoint in `app.js`, line 2.
2. Press &lt;kbd&gt;F5&lt;/kbd&gt; to start debugging.
3. Press `Stop` to stop one instance.

Line 2 loses its decoration that the app has hit a breakpoint in the surviving instance, although the debug toolbar still indicates that it is running.

![image](https://cloud.githubusercontent.com/assets/22350/19686546/e3905290-9ac1-11e6-84e5-6fc4c4454ab0.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14423</IssueID>
    <Title>Hit count expression isn't validated</Title>
    <Description>Testing #13211

The hit count expression isn't validated and you can enter arbitrary text. Could at least to some lexical validation (digits and relational operators)

![image](https://cloud.githubusercontent.com/assets/172399/19686538/d7502d98-9ac1-11e6-93e1-8fff19ae2ac3.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14421</IssueID>
    <Title>Hit count input box could provide hint about expression syntax</Title>
    <Description>Testing #13211

It would be nice to show the expression syntax for hit counts in the input box

![image](https://cloud.githubusercontent.com/assets/172399/19686370/128196fa-9ac1-11e6-8da3-f6dcc7ef8505.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14415</IssueID>
    <Title>Reload button overkill</Title>
    <Description>testing #14291
- Install an extension pack, reload, 
- uninstall the extension pack
- 🐛 the extension viewlet is full of 'Reload buttons' showing that we might not be using the right UX for that...

&lt;img width="393" alt="screen shot 2016-10-25 at 13 38 41" src="https://cloud.githubusercontent.com/assets/1794099/19684622/95bdf01c-9ab8-11e6-9843-bf10b8f50c60.png"&gt;
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14405</IssueID>
    <Title>debug repl: sometimes intellisense comes into my way...</Title>
    <Description>- VSCode Version: 1.7.0

Steps to Reproduce:
- in debug console type 'process.env'
- intellisense appears and shows a rather unhelpful "env" suggestion.
- press enter: the "env" suggestion disappears but the evaluate is not triggered
- press enter again: now  'process.env' is evaluated

I would prefer not to see intellisense in this case and have the first enter start the evaluation. 
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14402</IssueID>
    <Title>Output highlights the empty line</Title>
    <Description>- VSCode Version: Insiders
- OS Version: Mac OS

Steps to Reproduce:
- Open VS Code with output view shown

![image](https://cloud.githubusercontent.com/assets/10746682/19682356/76647c32-9aad-11e6-88ab-03eb30ff68d0.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14397</IssueID>
    <Title>Disable all is quite broken if repeated</Title>
    <Description>Testing #14288

[The same is true for Enable all]

Execute Disable all three times:

![disable-all](https://cloud.githubusercontent.com/assets/5047891/19681579/30a5c4f6-9aaa-11e6-8c57-25dfe468e9a7.gif)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14389</IssueID>
    <Title>Ctrl + alt keybindings should not be used by default under Windows</Title>
    <Description>- VSCode Version: insiders
- OS Version: windows

Steps to Reproduce:
1.  Open vscode-insders, open console notice warning

![screen shot 2016-10-25 at 11 43 36](https://cloud.githubusercontent.com/assets/1926584/19681081/5d445038-9aa8-11e6-8ad0-209c389b9c88.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14362</IssueID>
    <Title>Variable not updating in variables view after setValue</Title>
    <Description>Testing #14305 (Might not be related)
- VSCode Version: Latest Insiders
- OS Version: Mac OS

Steps to Reproduce:
1. Create a snippet that contains an Array. Say:

```
let myArray = [1, 2, 3, 4, 5]
....
```
1. Put a break point after array definition. Start debugging 
2. After break point is hit, change the length of myArray to say `0`

Expected:
Array values should be updated

Actual:
Array values remain as before.
Confirmed in the debug console that array values are modified 
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14344</IssueID>
    <Title>intellisense in debug console adds extra character</Title>
    <Description>- VSCode Version: insiders 1.7 c038219f8d137b4972a15346b81ea03751d669d4
- OS Version: Mac

Steps to Reproduce:
1. new node/express app
2. npm install
3. set up debugging
4. hit breakpoint
5. in debug console, type in name of a variable and get intellisense to complete
6. accept completion by hitting enter

result: extra dupe character at beginning of line

![image](https://cloud.githubusercontent.com/assets/1487073/19673083/72f31328-9a31-11e6-81dd-6291b23391e3.png)

now press enter, note extra 'r' at beginning.

![image](https://cloud.githubusercontent.com/assets/1487073/19673091/7e48fd6e-9a31-11e6-80bb-ceb125087ab1.png)
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14343</IssueID>
    <Title>connect ETIMEDOUT 191.238.172.191:443</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. connect ETIMEDOUT 191.238.172.191:443
2. 
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14337</IssueID>
    <Title>quick pick cursor will not move to the right</Title>
    <Description>- VSCode Version: Insiders 1.7 (c038219f8d137b4972a15346b81ea03751d669d4)
- OS Version:Mac

Steps to Reproduce:
1. Cmd+P to open quick open
2. type in any number of characters that match a file name
3. press left arrow to move to the left
4. press right arrow to move to the right

result: cursor does not move to the right.
</Description>
    <CreatedDate>25/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14336</IssueID>
    <Title>configurationNames property should not be allowed on launch configurations other than "composite"</Title>
    <Description>Testing #14171

![image](https://cloud.githubusercontent.com/assets/16890566/19667168/29c64c06-9a04-11e6-8c42-ef9108c1c27a.png)
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14329</IssueID>
    <Title>Markdown Preview not filling buffer when zooming on UI</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z)
- OS Version: Darwin x64 16.0.0
- Extensions: EditorConfig.EditorConfig-0.3.4, PKief.material-icon-theme-1.1.2, eg2.vscode-npm-script-0.0.21, freebroccolo.reasonml-0.0.67, hackwaly.ocaml-0.6.3, justusadam.language-haskell-1.2.2, kube.42header-0.42.6, kube.ClangComplete-0.0.4, kube.kube-header-0.0.1, kube.theme-kay-0.0.3, lukehoban.Go-0.6.45, ms-vscode.latex-0.1.3, ms-vscode.typescript-javascript-grammar-0.0.6, vsmobile.vscode-react-native-0.2.1

Steps to Reproduce:
1. Open Markdown file with some text in it
2. Zoom on the UI multiple times (`CMD` + `+`)

Markdown preview is now not filling window.
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14321</IssueID>
    <Title>Add support for large text files</Title>
    <Description>Now when you open a file that is a bit large you get a message that the file is too large and can't be opened.

Would it be possible to still allow the file to be opened in a "stream mode"? Basically you can disable the syntax highlight (and maybe other features that would be resource intensive to implement on large files) but open and read the file in chunks of data (what's needed to be displayed on screen) and load more as you scroll (up or down)?
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14320</IssueID>
    <Title>Integrated terminal unlimited buffer</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. Run command in terminal that continuously spits output
2. Monitor memory usage with Activity Monitor

It seems as if, at least by default, vscode's integrated terminal has an unlimited buffer. Is this by design, or is there a way to limit this somehow?
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14293</IssueID>
    <Title>Watermark: toggle terminal keybinding barely readable</Title>
    <Description>See 
![image](https://cloud.githubusercontent.com/assets/900690/19650203/b4240592-9a08-11e6-80b2-c979ad847dea.png)

For it looks like Ctrl F
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14281</IssueID>
    <Title>Logo jumps up when last file is closed</Title>
    <Description>![bug](https://cloud.githubusercontent.com/assets/22350/19647266/91cd58f0-99fd-11e6-91da-059369c83255.gif)
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14271</IssueID>
    <Title>Open  Multiple folders</Title>
    <Description>When I open a new folder,last folder must be close,but at some time this isn't what we want.
So,that's so fun if I can open multiple folders which arrange like project inVS.
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14270</IssueID>
    <Title>debug repl: unhelpful intellisense</Title>
    <Description>- set breakpoint in line 1 and debug this program:

``` javascript
var x = 1;
```
- in debug repl type 'x'

Observe: proposal menu appears with item '__dirname' selected.
Pressing 'return' appends '__dirname' to 'x'.

Expectation:
- type 'x' in in editor opens proposal menu with entry 'x' selected properly.
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14257</IssueID>
    <Title>Unable to open large files (543 MB)</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: ms-vscode.csharp-1.4.1

Steps to Reproduce:
1. I wanted to compare two .reg files (exported registry files. One file was 400+MB other file 500MB+
2. I'm only be able to open it in Visual Studio 2015 and run the Tools.DiffFiles (which takes ages) but even notepad or notepad++ is unable to open these big registry files (and it is only 556 848 KB).
</Description>
    <CreatedDate>24/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14230</IssueID>
    <Title>Better handling of TSServer issues</Title>
    <Description>- VSCode Version: Code - Insiders 1.7.0-insider (788caba5a3ca1c2b137353f4384bb0e026db1a31, 2016-10-21T23:35:35.321Z)
- OS Version: Darwin x64 16.0.0

---

Steps to Reproduce:
1. I hovered the function and instead of information about function I just got `Loading ...` that was stuck forever
2. Going into Output Window:

![image](https://cloud.githubusercontent.com/assets/1723815/19627605/49fda1e6-9918-11e6-9239-698a4b38fcef.png)
1. I had to restart VSCode
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14228</IssueID>
    <Title>Intellisense completion issue in Debug</Title>
    <Description>- VSCode Version: Code - Insiders 1.7.0-insider (788caba5a3ca1c2b137353f4384bb0e026db1a31, 2016-10-21T23:35:35.321Z)
- OS Version: Darwin x64 16.0.0

---

Steps to Reproduce:
1. Type `err` and hit Enter to autocomplete (`err_1`)

![g6vnbokl56](https://cloud.githubusercontent.com/assets/1723815/19627529/dc68cddc-9916-11e6-938a-49b78b79e7aa.gif)
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14224</IssueID>
    <Title>Improve folder colors when using Ubuntu bash on Windows 10</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Pro 1607

I have configured Ubuntu bash to use as integrated terminal in VS Code.
I've noticed it that folders are marked differently from files, as if they are highlighted (selected) with green background but the font color is also some kind of green/blue shade. It is very hard to distinguish what is the name of the folder. 
Same goes for dark or light themes.
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14218</IssueID>
    <Title>The padding of markdown preview is broken when zooming up</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Home 64bit build 14393.321

Steps to Reproduce:
1. Open any Markdown file
2. Open Markdown preview (`Ctrl + Shift + V`)
3. Zoom up (`Ctrl + ;`)

![image](https://cloud.githubusercontent.com/assets/7354350/19624613/cca22ccc-9939-11e6-928f-2b5d8a911897.png)

Notes:
- The problem occurs only when zooming _up_, not zooming _down_.
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>23/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14217</IssueID>
    <Title>Copy ´patse command line</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Win10

Steps to Reproduce:
1. Paste something into integrated terminal by ctrl+v

---

Windows 10 has ctrl+c, ctrl+v support in command line. In VS code ctrl+v will enter ^V
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14214</IssueID>
    <Title>Is it possible to add project folder instead of opening a new window?</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: msjsdiag.debugger-for-chrome-2.0.0, pgourlain.erlang-0.0.9, robertohuertasm.vscode-icons-3.0.5

So that a single window could cover all projects we are working on. (similar to atom)
</Description>
    <CreatedDate>23/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14211</IssueID>
    <Title>VSCode hangs produces error when opening</Title>
    <Description>- VSCode Version: 1.61
- OS Version: Windows Server 2012 R2

Steps to Reproduce:
1. Right click vscode run as administrator
2. Takes 2 minutes to open
3. Click on src folder just shows busy indicator and unresponsive
4. Finally get error message ERROR: read ECONNRESET

Task manager shows VSCode processes one is taking over 90% CPU
VSCode unusable.
No extensions installed.
</Description>
    <CreatedDate>22/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14207</IssueID>
    <Title>Unexpected tab completion</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: OS X

I've recently added the issue regarding unexpected tab completion https://github.com/Microsoft/vscode/issues/13141

That issue is closed but still not fixed. Current behavior turns me into frustration, I suggest you to make notes on that issue (I still believe it should be fixed) and give some comments.

Thanks.
</Description>
    <CreatedDate>22/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14199</IssueID>
    <Title>comment line short cut bug</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z)
- OS Version: Darwin x64 15.6.0
- Extensions: Zignd.html-css-class-completion-1.0.3, abusaidm.html-snippets-0.0.17, donjayamanne.githistory-0.1.0, xabikos.JavaScriptSnippets-1.2.0

Steps to Reproduce:

1.
![2016-10-22 1 08 38](https://cloud.githubusercontent.com/assets/5669938/19617087/288bbecc-9859-11e6-97ad-c1af7bc6931f.png)

2.
![2016-10-22 1 08 45](https://cloud.githubusercontent.com/assets/5669938/19617089/2b537442-9859-11e6-8012-66f3f48a018a.png)
</Description>
    <CreatedDate>22/10/2016</CreatedDate>
    <ClosedDate>23/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14196</IssueID>
    <Title>when chinese in the file path, openning the integrated console error</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: windows 10

Steps to Reproduce:
1.  open a folder, there is chinese in the folder path
2. open the integraded console, the system alert a error message. 
</Description>
    <CreatedDate>22/10/2016</CreatedDate>
    <ClosedDate>22/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14194</IssueID>
    <Title>Lamp icon is not clickable at the first hover</Title>
    <Description>- VSCode Version: 1.7.0-insider
- OS Version: macOS Sierra (10.12)

In the new insiders when these lamp icons appears the first time that you hover on them they disappear for the break point to be placed and in the second time you try to click on them they let you do so. This is a bit too not user-friendly:

![icon](https://cloud.githubusercontent.com/assets/2157285/19615092/e266d450-9807-11e6-8fa8-0618d92a2f2f.gif)
</Description>
    <CreatedDate>22/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14188</IssueID>
    <Title>Request: TextDocumentWillOpenEvent</Title>
    <Description>- VSCode Version: 1.6.1 
- OS Version: macOS 10.12

Since Visual Studio Code will not open binary files (for good reasons, mostly), I was wondering if you'd consider adding something like`TextDocumentWillOpenEvent`, an event that fires before the file is opened. This would be useful for decoding a file so it _can_ be opened.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14184</IssueID>
    <Title>Integrated Terminal crashes with Exit code: 1</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: dcr30.lualinter-1.0.3, donjayamanne.python-0.5.0, fduman.vscode-nodemcu-1.0.5, formulahendry.terminal-0.0.5, keyring.Lua-0.0.8, ms-vscode.csharp-1.4.1, ms-vscode.PowerShell-0.7.2, robertohuertasm.vscode-icons-3.0.5

Steps to Reproduce:
1. Press Ctrl + ö in a german version of VS Code
   2.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14183</IssueID>
    <Title>formatOnSave converting spaces to tabs</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: MacOSX Sierra

Steps to Reproduce:
1. "editor.formatOnSave": true &amp; "editor.insertSpaces": true
2. save an HTML file with spaces for indents
3. it converts the spaces to tabs
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14173</IssueID>
    <Title>Region / EndRegion not in line with PowerShell ISE</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 7 Pro
- PowerShell Version: v5

Steps to Reproduce:
1. create #Region and #EndRegion tags at the same column tab
2. put code between region tags and make sure they line up at the same column tab
3. VSCode does not allow you to expand or collapse code between region tags when the code between the tags line up with the region tags themselves (where as it does allow you to collapse in PowerShell ISE).

Example:
![image](https://cloud.githubusercontent.com/assets/8312392/19605021/e9ede31c-9785-11e6-85a4-652f455b77ab.png)

based on the final example in screenshot above, it seems like region tagging isn't even working, and just seems to be working due to VSCode's default settings
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14160</IssueID>
    <Title>Running VSCode on a remote machine (remote display)</Title>
    <Description>- VSCode Version:

test@test:~$ code --version

1.6.1
9e4e44c19e393803e2b05fe2323cf4ed7e36880e
- OS Version:

test@test:~$ uname -a

Linux test 4.2.0-38-generic #45~14.04.1-Ubuntu SMP Thu Jun 9 09:27:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux

Steps to Reproduce:
1. Install vscode on a headless Linux machine
2. Install XMing Server on a Windows machine
3. connect to the Linux machine and export the display properly (test with xterm or any other X11 app)
4. Run vscode --verbose

Output:
[6492:1021/154155:ERROR:browser_main_loop.cc(231)] Running without the SUID sandbox! See https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the sandbox on.
[6492:1021/154158:WARNING:audio_manager.cc(314)] Multiple instances of AudioManager detected
[6492:1021/154158:WARNING:audio_manager.cc(275)] Multiple instances of AudioManager detected
[6634:1021/154158:ERROR:gl_surface_glx.cc(386)] GLX 1.3 or later is required.
[6634:1021/154158:ERROR:gl_surface_x11.cc(252)] GLSurfaceGLX::InitializeOneOff failed.
[6634:1021/154158:ERROR:gpu_child_thread.cc(369)] Exiting GPU process due to errors during initialization
{ Error: ENOENT: no such file or directory, open '/home/test/.config/Code/storage.json'
    at Error (native)
    at Object.fs.openSync (original-fs.js:640:18)
    at Object.fs.readFileSync (original-fs.js:508:33)
    at e.load (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:9:2059)
    at e.getItem (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:9:1597)
    at e.handleUpdated (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:9:11350)
    at new e (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:9:11251)
    at v (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:4:28052)
    at t._createInstance (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:8:13168)
    at t._createAndCacheServiceInstance (/usr/share/code/resources/app/out/vs/code/electron-main/main.js:8:14143)
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/home/test/.config/Code/storage.json' }
[main 3:41:58 PM] Starting VS Code in verbose mode
[main 3:41:58 PM] from: /usr/share/code/resources/app
[main 3:41:58 PM] args: { _: [],
  paths: [],
  performance: false,
  verbose: true,
  debugPluginHost: undefined,
  debugBrkPluginHost: undefined,
  logExtensionHostCommunication: false,
  'new-window': false,
  'reuse-window': false,
  goto: false,
  diff: false,
  extensionHomePath: undefined,
  extensionDevelopmentPath: undefined,
  extensionTestsPath: undefined,
  'disable-extensions': false,
  'open-url': undefined,
  locale: undefined,
  wait: false }
[6492:1021/154158:ERROR:browser_main_parts.cc(126)] X IO error received (X server probably went away)
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14158</IssueID>
    <Title>Invalid Marker Service State issue after compile task</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Microsoft Windows 10 Pro N, 64bit, anniversary update

Im using VS Code for c++ development. I am compiling with a simple makefile using the visual studio command line tool. 
Since the last update, from time to time when executing my build task, I get the error message "Invalid Marker Service State" and the little spinning bar, indicating that a task is in progress, wont stop spinning. As far as I can tell the build task completes normally and my problem matchers seem to catch all problems. Unfortunately I cant tell what exactly triggers this problem, but it happens quite frequently, about every 15 compilations, which has me restarting VS Code to reset the task in progress indicator.

![taskfile](https://cloud.githubusercontent.com/assets/7150993/19600172/19a7dbda-97a4-11e6-8e98-412fa7007404.png)

![error](https://cloud.githubusercontent.com/assets/7150993/19600183/292df6fc-97a4-11e6-8e50-331f37004d4a.png)
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14157</IssueID>
    <Title>Searching for text (CTRL+Shift+F) is too slow</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: Kasik96.format-php-1.1.2, ullissescastro.theme-bracketsdark-1.0.1

Every time I search for something in my project, the search in files hangs, sometimes longer than 10 minutes. I have tried other editors (Atom and Brackets) on same project and search is not that slow for them.

Steps to Reproduce:
1. press CTRL+Shift+F and type in some text.
2. site back and enjoy your coffee break.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14156</IssueID>
    <Title>something wrong when type Chinese character</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z)
- OS Version: Darwin x64 15.6.0
- Extensions: lukehoban.Go-0.6.45, vscodevim.vim-0.3.8

When I type Chinese character in vs code, the input method bar show everywhere instead of near my cursor.
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14152</IssueID>
    <Title>Fuzzy matching in camelCase/subwords</Title>
    <Description>Compared to Sublime counterpart, If i write "fma" in VSC to match "fuzzyMatching", no completion is given, the same is for "fuzzymatching".

Am i missing something or fuzzy matching algorithm in VS Code doesn't recognize camel case and middle letters while typing? If so, why?

Thanks
</Description>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14117</IssueID>
    <Title>Settings - fold all settings on initial open @sandy</Title>
    <Description>
    </Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14114</IssueID>
    <Title>Allow hold-down select to scroll terminal</Title>
    <Description>- VSCode Version: 1.7
- OS Version: OS X 10.11.6

![termscroll](https://cloud.githubusercontent.com/assets/4033249/19570354/7322a1be-96ae-11e6-879e-bb0404753bf9.gif)
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14081</IssueID>
    <Title>Editor doesn't insert white spaces when formatting html files.</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: macOS Sierra 10.12

Steps to Reproduce:
1. 
Make sure that you set 
"editor.insertSpaces": true
in your workspace settings
2.
Make sure you are using indentation with spaces and indentation size 2 in my case.
3. 
Try to format html file

Expected result:
Editor should preserve white spaces as tabs.

Result:
Editor converts spaces to tabs. It should not.

Additional comment:
It works fine when saving typescript file for example.
The white spaces are preserved correctly.
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14050</IssueID>
    <Title>Terminal open new line while typing</Title>
    <Description>- VSCode Version: 1.7
- OS Version: OS X 10.11.6

![term](https://cloud.githubusercontent.com/assets/4033249/19551476/2c6a64bc-9660-11e6-9e91-f332541baddf.gif)

Happens erratically. Don't know  how to repro yet.
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>22/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14047</IssueID>
    <Title>When to support javascript and typescript intellisense in .vue file?</Title>
    <Description>When to support javascript and typescript intellisense in .vue file?
There are so many web developer write vue with vscode.
</Description>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>14006</IssueID>
    <Title>Cursor goes back to starting location in "Default Settings" window</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10 Version 1607 OS Build: 14393.321

Steps to Reproduce:
1. Open "Default Settings" window by going to "File" menu &gt; "Preferences" &gt; "User Settings"
2. Drag the "settings.json" to the workspace where "Default Settings" window is present
3. Scroll down in "Default Settings" window
4. Go to another window
5. Come back to "Default Settings" window. We see the cursor at the starting location.
   Snapshot is attached as reference
   ![1](https://cloud.githubusercontent.com/assets/16834561/19529513/d4a55b4a-964d-11e6-9099-b7cd51ae6f2f.png)
</Description>
    <CreatedDate>19/10/2016</CreatedDate>
    <ClosedDate>23/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13981</IssueID>
    <Title>VSCode start very slow, and use nearly 100% of CPU</Title>
    <Description>- VSCode Version: 1.6
- OS Version: Windows Server 2008(64bit)
- CPU: Intel Xeon CPU E5-26xx v3 2.39GHz
- RAM: 1G
</Description>
    <CreatedDate>19/10/2016</CreatedDate>
    <ClosedDate>19/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13978</IssueID>
    <Title>"Not enough storage is available to process this command" in Terminal Panel.</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 2gua.rainbow-brackets-0.0.6, christian-kohler.npm-intellisense-0.1.4, christian-kohler.path-intellisense-1.1.0, dkundel.vscode-npm-source-0.0.3, donjayamanne.githistory-0.1.0, donjayamanne.jquerysnippets-0.0.1, EditorConfig.EditorConfig-0.3.3, eg2.tslint-0.5.39, emilast.LogFileHighlighter-1.0.0, fknop.vscode-npm-3.3.0, formulahendry.auto-rename-tag-0.0.7, HookyQR.beautify-0.4.1, lukehoban.Go-0.6.45, ms-vscode.typescript-javascript-grammar-0.0.5, msjsdiag.debugger-for-chrome-1.2.2, qinjia.seti-icons-0.1.2, robertohuertasm.vscode-icons-3.0.5, ronnidc.nunjucks-0.2.3, SirTori.indenticator-0.2.1

Steps to Reproduce:
1. Open the VS Code.
2. Open the Terminal.

![image](https://cloud.githubusercontent.com/assets/2168227/19508707/d3151642-9604-11e6-91e5-9cb909596cd6.png)
</Description>
    <CreatedDate>19/10/2016</CreatedDate>
    <ClosedDate>22/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13971</IssueID>
    <Title>Cannot open Visual Studio Code</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: macOS Sierra 10.12

Steps to Reproduce:
1. Open Visual Studio Code

When I launch it, the app icon appears in the dock and it closes when I click it.
Tried with `code --disable-extensions` and the same.

If I type `code --list-extensions` on console it logs the following:

![image](https://cloud.githubusercontent.com/assets/4268555/19499720/57ee27ec-956e-11e6-93c9-f7cf6207b341.png)

I have tried removing app data, uninstalling and installing again, deleting cache, and always the same result.

VSCode Insiders works well.
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13948</IssueID>
    <Title>API Feature Request: Fetch configuration default value</Title>
    <Description>You know how you have your Default Settings file and then your own User Settings file? Whenever you use the API to get configuration values, it pulls it from the User Settings file if it exists there, otherwise it falls back to the Default Settings file.

It would be nice to have the option to specifically pull configuration values from the Default Settings file. The reason is this:

Lets say you have a configuration value that is meant to be a boolean. Some sort of true/false value for your extension. And then someone copies this configuration value over to their User Settings file but they accidentally change it to a string instead of a boolean.

Now in your extension code, you need to obviously do a type check on the fetch configuration value to make sure it's a boolean. If it's not a boolean, you should probably fall back to the default value. But there is no way to fetch the default configuration value from the Default Settings. The only solution for this is to also hardcode your default value within your code and grab it from there.

I can't see a way to grab default values from configuration, so it would be really nice to have this option. Thanks,
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13934</IssueID>
    <Title>Hint drawing overflow</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:43:46.054Z)
- OS Version: Linux x64 3.19.0-28-generic

![screenshot from 2016-10-18 14 28 15](https://cloud.githubusercontent.com/assets/3497621/19476352/646d18ca-9541-11e6-8d5c-5e6e81a1e660.png)
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13921</IssueID>
    <Title>External terminal set to Cmder, "Open in Command Prompt" doesn't open in correct directory</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Win7 x64

Steps to Reproduce:
1. Added system environment path to my Cmder install
2. In settings.json I have `"terminal.external.windowsExec": "Cmder.exe"`
3. When I right click on a folder in the Explorer and select "Open in Command Prompt" it launches Cmder, but doesn't auto-navigate me to the directory I just selected on. It opens me at the default Cmder directory instead
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>22/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13917</IssueID>
    <Title>html页面中，css和js注释错误</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: anseki.vscode-color-0.1.11, be5invis.vscode-icontheme-nomo-dark-1.1.4, emmanuelbeziat.vscode-great-icons-1.1.17, hdg.live-html-previewer-0.0.1, idleberg.icon-fonts-1.0.8, idleberg.icon-fonts-legacy-1.0.7, johnpapa.Angular1-0.1.16, justinjames.ionic1-snippets-1.0.1, LaurentTreguier.vscode-simple-icons-0.1.6, PKief.material-icon-theme-1.1.1, qinjia.seti-icons-0.1.2, robertohuertasm.vscode-icons-3.0.5, SirTobi.code-bing-0.2.0, wcwhitehead.bootstrap-3-snippets-0.0.7

Steps to Reproduce:

1.html页面中，css和js注释错误
2.html页面中，css和js注释错误
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>18/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13914</IssueID>
    <Title>EPERM: operation not permitted</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:27:10.246Z)
- OS Version: Darwin x64 14.5.0

I am working on a folder with permissions 755 with user 'root' and group 'admin' respectively. I am (the current user) part of the 'admin' group. But, when I open this folder in code... and try to save something twice in a row, I get the following error.

A system error occured (EPERM: operation not permitted, utime '/Library/WebServer/Documents/...

I don't have this issue when working on the same folder from another editor like sublime. I have tried to run code as 'admin' and seem to solve the problem... however, I am greeted with a warning message that says it is not recommended to run code as admin. So what do I do?
</Description>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>18/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13908</IssueID>
    <Title>Could you add a color picker?</Title>
    <Description>You have it where it shows the colors, why not have it where you click it for a color picker?
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13894</IssueID>
    <Title>Extension readmes and Markdown previews cut off on high-DPI monitor / with zoom</Title>
    <Description>- VSCode Version: 1.6.0 / 1.7.0-insider
- OS Version: Windows 10

Steps to Reproduce:
1. Use a high-DPI monitor and/or increase zoom level
2. View an extension readme or preview markdown

![screenshot 33](https://cloud.githubusercontent.com/assets/10532611/19446505/67846016-9499-11e6-87ca-78c94a400e2c.png)
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13892</IssueID>
    <Title>JS code within HTML file does not comment correctly with 'editor.action.commentLine' key binding</Title>
    <Description>### system
- VSCode Version: 

```
Version 1.6.1
Commit 9e4e44c19e393803e2b05fe2323cf4ed7e36880e
Date 2016-10-13T15:43:46.054Z
Shell 1.3.7
Renderer 52.0.2743.82
Node 6.5.0
```
- OS Version:

```
Linux ubuntu02 4.4.0-38-generic #57-Ubuntu SMP Tue Sep 6 15:42:33 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
```
### Steps to Reproduce:
1. Write some HTML and JS in a file, index.html

```
&lt;head&gt;
    &lt;script type="text/javascript"&gt;
        alert(123);
    &lt;/script&gt;
&lt;/head&gt;
```
1. Hit `ctrl+/` or what ever `editor.action.commentLine` has been mapped to
### expected

```
&lt;head&gt;
    &lt;script type="text/javascript"&gt;
       // alert(123);
    &lt;/script&gt;
&lt;/head&gt;
```
### got

```
&lt;head&gt;
    &lt;script type="text/javascript"&gt;
        &lt;!-- alert(123); --&gt;
    &lt;/script&gt;
&lt;/head&gt;
```

Same happens for trying to comment CSS within `&lt;style&gt;` tags.

Could possibly be the same for other languages such as PHP within HTML files?
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13891</IssueID>
    <Title>No error message on failed plugin update in 1.5.1</Title>
    <Description>- VSCode Version: 1.5.1
- OS Version: OS X 10.11.6

Steps to Reproduce:
1. Install ESLint plugin https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint (1.0.8 specified as latest version).
2. Note ESLint version at 1.0.7 and there's an update badge and update button for ESLint.
3. Update ESLint plugin and restart.
4. Version of ESLint plugin still at 1.0.7

I would expect VSCode to show a message specifying the min version the plugin supports or at least an error/warning message that the update failed.

After updating to 1.6.1 the plugin updates correctly.
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13889</IssueID>
    <Title>Request: Outline view</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 7 Professional (7601)

It would be great to have an Outline view, similar to Eclipse PHP where it is also possible navigate through methods even when in different files. In my point of view this is the only feature missing on this editor.

Take a look : http://help.eclipse.org/mars/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcoutline.htm

Thank you.
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13859</IssueID>
    <Title> Cannot read property 'length' of null</Title>
    <Description>Issue Id: &lt;b&gt;a4acb4ec-f699-1fd6-73a0-6fd512131a7e&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 1.6.1&lt;br /&gt;\-  e52fb0bc87e6f5c8f144e172639891d8d8c9aa55&lt;br /&gt;\-  093d09e9e8a6b76ec09af97da45e242e317d8d95&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'length' of null&lt;br /&gt;[/vs/editor/common/model/textModel.ts#L625:31 (length)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/common/model/textModel.ts#L625:31 %28length%29)&lt;br /&gt;[/vs/editor/common/model/textModel.ts#L652:14 (_validatePosition)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/common/model/textModel.ts#L652:14 %28_validatePosition%29)&lt;br /&gt;[/vs/editor/common/model/textModelWithTokens.ts#L472:49 (validatePosition)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/common/model/textModelWithTokens.ts#L472:49 %28validatePosition%29)&lt;br /&gt;[/vs/editor/common/model/textModelWithTokens.ts#L476:28 (getWordAtPosition)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/common/model/textModelWithTokens.ts#L476:28 %28getWordAtPosition%29)&lt;br /&gt;[/vs/editor/contrib/referenceSearch/browser/referencesModel.ts#L74:27 (getWordUntilPosition)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/contrib/referenceSearch/browser/referencesModel.ts#L74:27 %28getWordUntilPosition%29)&lt;br /&gt;[/vs/editor/contrib/referenceSearch/browser/referencesWidget.ts#L390:42 (preview)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/contrib/referenceSearch/browser/referencesWidget.ts#L390:42 %28preview%29)&lt;br /&gt;[/vs/base/parts/tree/browser/treeDefaults.ts#L53:40 (render)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/parts/tree/browser/treeDefaults.ts#L53:40 %28render%29)&lt;br /&gt;[/vs/base/parts/tree/browser/treeView.ts#L286:25 (renderElement)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/parts/tree/browser/treeView.ts#L286:25 %28renderElement%29)&lt;br /&gt;[/vs/base/parts/tree/browser/treeView.ts#L1097:7 (render)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/parts/tree/browser/treeView.ts#L1097:7 %28render%29)&lt;br /&gt;[/vs/base/parts/tree/browser/treeView.ts#L1082:7 (refreshViewItem)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/parts/tree/browser/treeView.ts#L1082:7 %28refreshViewItem%29)&lt;br /&gt;
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13856</IssueID>
    <Title> Cannot read property 'dispose' of null</Title>
    <Description>Issue Id: &lt;b&gt;03273ef5-56d3-583d-8d45-d277bf88914b&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 1.6.1&lt;br /&gt;\-  e52fb0bc87e6f5c8f144e172639891d8d8c9aa55&lt;br /&gt;\-  093d09e9e8a6b76ec09af97da45e242e317d8d95&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'dispose' of null&lt;br /&gt;[/vs/editor/contrib/snippet/common/snippetController.ts#L476:28 (dispose)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/contrib/snippet/common/snippetController.ts#L476:28 %28dispose%29)&lt;br /&gt;[/vs/editor/contrib/snippet/common/snippetController.ts#L318:7 (_onStop)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/contrib/snippet/common/snippetController.ts#L318:7 %28_onStop%29)&lt;br /&gt;[/vs/editor/contrib/snippet/common/snippetController.ts#L117:10 (stopAll)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/contrib/snippet/common/snippetController.ts#L117:10 %28stopAll%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L303:9 (func)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L303:9 %28func%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L182:4 (safeInvoke1Arg)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L182:4 %28safeInvoke1Arg%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L201:8 (_emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L201:8 %28_emitToSpecificTypeListeners%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L216:8 (_emitEvents)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L216:8 %28_emitEvents%29)&lt;br /&gt;[/vs/editor/common/commonCodeEditor.ts#L857:12 (emit)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/editor/common/commonCodeEditor.ts#L857:12 %28emit%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L303:9 (func)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L303:9 %28func%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L288:3 (safeInvoke1Arg)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L288:3 %28safeInvoke1Arg%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L240:8 (_emitEvents)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L240:8 %28_emitEvents%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L229:8 (_emitCollected)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/base/common/eventEmitter.ts#L229:8 %28_emitCollected%29)&lt;br /&gt;
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13846</IssueID>
    <Title> Cannot read property 'document' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;eefc823a-7abd-976f-cbfa-8d0dd96aba81&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 1.6.1&lt;br /&gt;\-  e52fb0bc87e6f5c8f144e172639891d8d8c9aa55&lt;br /&gt;\-  17b0c8d028d3b7ceaf3b7c2c226cd0ad6b1feb51&lt;br /&gt;\-  602155bb781f509c7a4ddcd700b57cb9b9f5286d&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'document' of undefined&lt;br /&gt;[/vs/workbench/api/node/extHostLanguageFeatures.ts#L168:54 (document)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/workbench/api/node/extHostLanguageFeatures.ts#L168:54 %28document%29)&lt;br /&gt;[/vs/workbench/api/node/extHostLanguageFeatures.ts#L736:73 (provideDefinition)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/workbench/api/node/extHostLanguageFeatures.ts#L736:73 %28provideDefinition%29)&lt;br /&gt;[/vs/workbench/api/node/extHostLanguageFeatures.ts#L693:9 (callback)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/workbench/api/node/extHostLanguageFeatures.ts#L693:9 %28callback%29)&lt;br /&gt;[/vs/workbench/api/node/extHostLanguageFeatures.ts#L736:14 (_withAdapter)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/workbench/api/node/extHostLanguageFeatures.ts#L736:14 %28_withAdapter%29)&lt;br /&gt;[/vs/workbench/services/thread/common/abstractThreadService.ts#L34:16 (apply)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/workbench/services/thread/common/abstractThreadService.ts#L34:16 %28apply%29)&lt;br /&gt;[/vs/platform/extensions/common/ipcRemoteCom.ts#L269:39 (handle)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/platform/extensions/common/ipcRemoteCom.ts#L269:39 %28handle%29)&lt;br /&gt;[/vs/platform/extensions/common/ipcRemoteCom.ts#L226:25 (invokeHandler)](https://github.com/microsoft/vscode/blob/9e4e44c19e393803e2b05fe2323cf4ed7e36880e/src/vs/platform/extensions/common/ipcRemoteCom.ts#L226:25 %28invokeHandler%29)&lt;br /&gt;    at _combinedTickCallback (internal/process/next_tick.js:67:7) &lt;no sourcemaps&gt;&lt;br /&gt;    at process._tickCallback (internal/process/next_tick.js:98:9) &lt;no sourcemaps&gt;&lt;br /&gt;
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13845</IssueID>
    <Title>extension-specific setting for format on save</Title>
    <Description>Feature Request for the new setting

`
"editor.formatOnSave": true,
`

As user I want to use the new setting not only language-specific (#13547). I want also want to actively set in my workspace settings, which extension should format the content.

Example: I support 2 projects. In one project the required formatting is Javascript Standard format (chenxsan.vscode-standard-format). In my second project the format Javascript Semi Standard (homerjam.vscode-semistandard-format) is used.
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13839</IssueID>
    <Title>HTML fast typing (with TAB) stopped working, instead hinting useless [abc] thing</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: W10

Steps to Reproduce:
1. Create HTML document
2. Type div or something like that, it should appear then the tooltip.

Everything was working quite well before the last update. I'm using the extension _HTML Snippets (0.0.17)_ , but now it doesn't puts first the tooltip to just press tab; now I need to scroll down to find it and press tab to get it close automatically.

It is pissing me off.
</Description>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13833</IssueID>
    <Title>Support to launch debug adapter from extension</Title>
    <Description>Currently a debug adapter is launched by VS Code based on a declarative contribution in the package.json.
We should consider to support that a debug adapter can be launched programmatically from the extension.
</Description>
    <CreatedDate>16/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13832</IssueID>
    <Title>Support to launch debug adapter from extention</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>16/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13826</IssueID>
    <Title>Select and operate on multiple items in "Explorer" view</Title>
    <Description>Select and operate on multiple items in "Explorer" view while "Explorer" view is focused.

Expected that selection of multiple items behaves the same (or mostly the same) like in popular file-explorers (in e. g. Windows file explorer), where you can select files and folders items using shortcuts described below.

&gt; To simplify the way of explaining, what behavior I am talking about, it is assumed that the initial state is _focused explorer with one selected item in it_. However, the provided explanation is not logically full enough to use it as an algorithm.
1. `Shift + Up` — add to selection 1 item to top from the current_focused_item
2. `Shift + Down` — add to selection 1 item to bottom from the current_focused_item
3. `Shift + Mouse_Click_On_Item_In_Explorer_View` — add to selection all items between 
   - current_focused_item 
   - and that one (inclusive) which have been clicked at the moment of `Mouse_Click_On_Item_In_Explorer_View`. 
4. `Ctrl + Mouse_Click_On_Item_In_Explorer_View` — add to selection item which have been clicked at the moment of `Mouse_Click_On_Item_In_Explorer_View`. 

If item which is added to selection is is a folder-item, then add to selection all of it inner items.

Expected operations to support when multiple items have been selected:

&gt; Higher priority is at the top of the list
1. Drag and drop (to move files to another location)
2. Open (for non-folder items)
3. Delete
4. Copy

Other notes:
To make feature production-ready, it is (of course) needed to implement the corresponding behavior of deselecting items for the case when multiple items have been already selected.
</Description>
    <CreatedDate>16/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13809</IssueID>
    <Title>mongoDb shell and integrated terminal</Title>
    <Description>when i try to  use mongoDb shell in the integrated terminal, it is not possible to write brackets and curly brackets. in fact that key combinations with ALT-GR doesnt work.
- VSCode Version: 1.6.1
- OS Version: Win 8.1 x64
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13806</IssueID>
    <Title>Feature request: dock integrated terminal into dedicated tab</Title>
    <Description>Currently, the integrated terminal just sort of floats over top of code tabs; wouldn't it be a good idea to allow you to dock it into it's own dedicated tab, like you can when viewing the details of an extension?

It would look something like this:

![wow](https://i.imgur.com/tHb71WA.png)

It's a little crude, I threw it together in 5 minutes in GIMP :stuck_out_tongue: 
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13803</IssueID>
    <Title>Commenting is flawed in the new version</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: abusaidm.html-snippets-0.0.17, donjayamanne.python-0.4.2, georgewfraser.vscode-javac-0.0.23, zhuangtongfa.Material-theme-1.0.3, Zignd.html-css-class-completion-1.0.3

Steps to Reproduce:
1. Open a html page/ js file is VS code
2. select 3-4 lines of javascript 
3. Press Ctrl + / 
4. The js are not properly commented. They get considered to be HTML and gets commented in that way. 

This issue didn't exist before in old versions.
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13801</IssueID>
    <Title>Issue with HTML comments</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: None

Problem : HTML comments tags not working.

Steps to Reproduce:
1. Add &lt;!-- but longer like &lt;!-------- SOMETHING --------&gt; Will not work. Everything bellow is commented...

![comment](https://cloud.githubusercontent.com/assets/11185348/19411145/839fc8b6-92c9-11e6-854f-13ee0d6eb8df.png)
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13799</IssueID>
    <Title>When you open Visual Studio Code you get a black screen and cant see anything</Title>
    <Description>- VSCode Version: Latest Stable Release from download
- OS Version:Ubuntu 64 bit running in Virtual Box VM

Steps to Reproduce:
1. Log into Virtual Box Ubuntu VM
2. Download and install VSC .deb
3. Start Application from Developer folder
4. You get a black screen and cant see anything.
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13798</IssueID>
    <Title>Unable to open PHP files directly </Title>
    <Description>In 1.5.3 build I can open the PHP files by directly clicking the file icon. But in 1.6.\* I'm unable to open them directly. A blank VS code window appears every time. But if I try to open it by selecting open with option, works fine. 
- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: robertohuertasm.vscode-icons-3.0.4
</Description>
    <CreatedDate>15/10/2016</CreatedDate>
    <ClosedDate>20/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13782</IssueID>
    <Title>Let extensions force change language mode for a file</Title>
    <Description>I'm writing a new extension providing Hack language support. Hack files still have a .php extension, but start with `&lt;?hh` instead of `&lt;?php`. 

I added the following in the "hack" entry in the language contributes section in package.json:

``` json
    "extensions": [ ".php" ],
    "firstLine": "^&lt;\\?hh\\b.*$"
```

However, all .php files in the workspace are still auto-detected as PHP, and the extension providers (registered with `const HACK_MODE: vscode.DocumentFilter = { language: 'hack', scheme: 'file' };`) aren't triggered unless the file mode is manually changed from PHP to Hack.

I'm not sure if I'm doing something wrong, or if PHP is still getting a higher precedence. Is there any way for an extension to force this change?
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>18/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13768</IssueID>
    <Title>Multiple consecutive identical dialogs</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: macOS Sierra 10.12.1 Beta

Steps to Reproduce:
1. Open a file
2. Make some changes
3. Repeat N times `cmd+w`
4. Close the dialog
5. The same dialog will be opened N -1 more times
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13757</IssueID>
    <Title>Triggering find widget with the cursor on an empty line starts selection mode</Title>
    <Description>1. Put cursor on an empty line
2. &lt;kbd&gt;Ctrl F&lt;/kbd&gt;

The find widget will search for a selection between the empty line and the previous line, failing to actually find occurrences in the whole document.

![bug](https://cloud.githubusercontent.com/assets/22350/19388304/2580909e-921f-11e6-9b13-750df908bdad.gif)
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13753</IssueID>
    <Title>Loosing breakpoints when stepping in internal node module</Title>
    <Description>Steps to Reproduce:
1. step into a node.js function (e.g. process.send)
2. set a breakpoint into the file close to where you are
3. continue stepping

=&gt; I am loosing the breakpoint I had set when I step once
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13751</IssueID>
    <Title>Debugging through readonly internal module has weird reveal behaviour</Title>
    <Description>Steps to Reproduce:
1. debug into a node module (e.g. process.send)
2. step over the implementation in that file

=&gt; each step results in the current line to be centerd vertically which makes it hard to follow the code flow
=&gt; I would only expect the scrolling to reveal the current line if the line is out of view
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13730</IssueID>
    <Title>Support file with subitems</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Windows 10.0.14393

For webapp framework like angular2, a web component is designed to contains multiple files. For example:

mycomponent.ts
mycomponent-template.html
mycomponent-style.css

I hope there is a way to collapse these items together:
mycomponent.ts
   \_mycomponent-template.html
   \_mycomponent-style.css

Just like *.xaml, *.xaml.cs for WPF in Visual Studio 
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13727</IssueID>
    <Title>The workspace is frozen after opening any project</Title>
    <Description>- VSCode Version:
  ![2016-10-14_09h20_33](https://cloud.githubusercontent.com/assets/3082812/19377506/7939712c-91ef-11e6-86c3-e4fd6721f12b.png)
- OS Version: win7 pro

The workspace is frozen after opening any project. And the console displays the error:
_Failed to clear temp storage: It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources. SecurityError_

Steps to Reproduce:
1. Open VSCode
2. Open any project
3. In the developer console diplays an error
   
   &gt; _Failed to clear temp storage: It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources. SecurityError_
4. All workspace element does not respond to any user action
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13726</IssueID>
    <Title>Jumpy Scroll</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: donjayamanne.githistory-0.1.0, ms-vscode.PowerShell-0.7.2, xaver.clang-format-0.11.0

Steps to Reproduce:
1. Scrolling up and down using laptop scroll gesture. I have noticed it in the last 2 updates.
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13724</IssueID>
    <Title>Unable to collapse sidebar by default</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: Windows 10

Steps to Reproduce:
Before VSCode 1.6, the sidebar is collapsed by default. It works fine for smaller display, as well as non-project files. Since 1.6, the sidebar is expanded when VSCode launches. I'm yet to find any mention of this change in the release note, nor find way to set a preference to reverse this. I'm not sure if this change is intentional or a regression.
1. Launch VSCode.
2. Examine the sidebar.
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13721</IssueID>
    <Title>VSCode 1.6.1 x64 rpm require some i686 rpm</Title>
    <Description>- VSCode Version: 1.6.1
- OS Version: CentOS 7.2.1511

Steps to Reproduce:
1. Run "yum install code-1.6.1-1476373175.el7.x86_64.rpm"
Some output are
Loading mirror speeds from cached hostfile
--&gt; Running transaction check
---&gt; Package libXScrnSaver.i686 0:1.2.2-6.1.el7 will be installed
--&gt; Processing Dependency: libc.so.6(GLIBC_2.4) for package: libXScrnSaver-1.2.2-6.1.el7.i686
--&gt; Processing Dependency: libXext.so.6 for package: libXScrnSaver-1.2.2-6.1.el7.i686
--&gt; Processing Dependency: libX11.so.6 for package: libXScrnSaver-1.2.2-6.1.el7.i686
--&gt; Running transaction check
---&gt; Package glibc.i686 0:2.17-106.el7_2.8 will be installed
--&gt; Processing Dependency: libfreebl3.so(NSSRAWHASH_3.12.3) for package: glibc-2.17-106.el7_2.8.i686
--&gt; Processing Dependency: libfreebl3.so for package: glibc-2.17-106.el7_2.8.i686
---&gt; Package libX11.i686 0:1.6.3-2.el7 will be installed
--&gt; Processing Dependency: libxcb.so.1 for package: libX11-1.6.3-2.el7.i686
---&gt; Package libXext.i686 0:1.3.3-3.el7 will be installed
--&gt; Running transaction check
---&gt; Package libxcb.i686 0:1.11-4.el7 will be installed
--&gt; Processing Dependency: libXau.so.6 for package: libxcb-1.11-4.el7.i686
---&gt; Package nss-softokn-freebl.i686 0:3.16.2.3-14.2.el7_2 will be installed
--&gt; Running transaction check
---&gt; Package libXau.i686 0:1.0.8-2.1.el7 will be installed
--&gt; Finished Dependency Resolution

Then I run "rpm -qpR code-1.6.1-1476373175.el7.x86_64.rpm", the output are
glibc &gt;= 2.15
libXss.so.1
/bin/sh
/bin/sh
rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1
rpmlib(CompressedFileNames) &lt;= 3.0.4-1

I find libXScrnSaver rpm contains libXss.so.1. I remember 1.6.0 has not such problem, so I run "rpm -qpR code-1.6.0-1476123947.el7.x86_64.rpm", the output are.
glibc &gt;= 2.15
libXScrnSaver
/bin/sh
/bin/sh
rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1
rpmlib(CompressedFileNames) &lt;= 3.0.4-1

I want to keep my pure 64 bits system and don't install any unncessary i686 rpm.
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13713</IssueID>
    <Title>BUG</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T16:21:53.542Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: anseki.vscode-color-0.1.11, be5invis.vscode-icontheme-nomo-dark-1.1.4, emmanuelbeziat.vscode-great-icons-1.1.11, hdg.live-html-previewer-0.0.1, herrherrmann.angular-bootstrap-4.0.6, idleberg.icon-fonts-1.0.8, idleberg.icon-fonts-legacy-1.0.7, johnpapa.Angular1-0.1.16, justinjames.ionic1-snippets-1.0.1, LaurentTreguier.vscode-simple-icons-0.1.6, PKief.material-icon-theme-1.1.1, qinjia.seti-icons-0.1.1, robertohuertasm.vscode-icons-3.0.4, SirTobi.code-bing-0.2.0, wcwhitehead.bootstrap-3-snippets-0.0.7

Steps to Reproduce:

1."ctrl + /" in HTML
2.&lt;style&gt;&lt;/style&gt; in html
</Description>
    <CreatedDate>14/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13707</IssueID>
    <Title>Files in a folder not aligned to the folder they belong</Title>
    <Description>- VSCode Version: 1.6.1 and prev as well
- OS Version: Win10

The files in a folder are not aligned to the folder they belong. This gives the impression that the files belong to a subfolder that is actually at the same level of files.

See this sample:
![image](https://cloud.githubusercontent.com/assets/18177576/19369092/b31d6806-9179-11e6-9f84-650a6812e26b.png)
all files seem to be under the "typings" folder when they are actually at root level
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13702</IssueID>
    <Title>Auto new line in integrated terminal.</Title>
    <Description>- VSCode Version: Code 1.6.1 (9e4e44c19e393803e2b05fe2323cf4ed7e36880e, 2016-10-13T15:43:46.054Z)
- OS Version: Linux x64 3.11-2-amd64
- Extensions: AdamCaviness.theme-monokai-dark-soda-0.0.5, Nuuf.theme-hackershaze-1.2.1, Tyriar.lorem-ipsum-1.0.0, abusaidm.html-snippets-0.0.17, akamud.vscode-theme-onedark-0.2.7, andischerer.theme-atom-one-dark-0.0.1, benjaminromano.typings-installer-0.2.0, ceps.theme-darcula-0.0.4, dbaeumer.jshint-0.10.15, donjayamanne.githistory-0.1.0, eg2.tslint-0.5.39, gerane.Theme-Dark-Dracula-0.0.2, gerane.Theme-Ocean-Dark-Soda-0.0.2, joelday.docthis-0.3.5, johnpapa.Angular1-0.1.16, jrieken.tsd-recommender-0.0.2, ms-vscode.Theme-MarkdownKit-0.1.1, ms-vscode.Theme-MaterialKit-0.1.1, ms-vscode.Theme-TomorrowKit-0.1.3, ms-vscode.jscs-0.1.9, msjsdiag.debugger-for-chrome-1.1.0, rid9.datetime-1.0.5, vsmobile.cordova-tools-1.2.3, zhuangtongfa.Material-theme-1.0.3

Steps to Reproduce:
1. Open Integrated Terminal.
2. Write, for example, ls -lha
   ![code_bug](https://cloud.githubusercontent.com/assets/907275/19366310/12c30778-916d-11e6-97a3-b49a6b7f2371.png)
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13698</IssueID>
    <Title>Console height issues</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14942
- Extensions: bajdzis.vscode-twig-pack-1.0.0, dbaeumer.vscode-eslint-1.0.8

Steps to Reproduce:
1. Start a Grunt server
2. Save a file

Expected: console height be updated

Issue: the console does not update its height, if I scroll I can't see all lines. If I resize the console height it readjust itself
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13696</IssueID>
    <Title>New file doesn't open from file explorer if there is already an VSCode instance running as Admin.</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: ms-vscode.csharp-1.4.0

Steps to Reproduce:
1. Open VSCode as admin.
2. Now, try opening another file from file explorer.
   It won't open.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13694</IssueID>
    <Title>Snippet shortcuts are now buried in 1.6.0.</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:28:55.412Z)
- OS Version: Darwin x64 15.6.0
- Extensions: LaurentTreguier.vscode-simple-icons-0.1.6, PKief.material-icon-theme-1.1.1, UVBrain.Angular2-0.3.5, eg2.tslint-0.5.39, hnw.vscode-auto-open-markdown-preview-0.0.3, johnpapa.Angular2-1.0.2

My user snippet shortcuts are now so buried under other things that they take as much time to find as just typing in the snippet!

Steps to Reproduce:
1. Add a user code snippet for TypeScript
   "Import Component": {
       "prefix": "ic",
       "body": [
           "import { $2 } from \"$1\";$3"
       ]
   },
2. Now try to use that code snippet in a ts file:

![image](https://cloud.githubusercontent.com/assets/3846466/19360668/ad75cdf4-913c-11e6-90f4-c37917f30328.png)

Where is my shortcut?

If you scroll all the way down you can find it near the end of the intellisense list:

![image](https://cloud.githubusercontent.com/assets/3846466/19360644/92e559fa-913c-11e6-99b1-d18113067e55.png)

Snippets shortcuts should be the first things offered.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13691</IssueID>
    <Title>Duplicate entry in symbols view</Title>
    <Description>- VSCode Version: 1.7 Insider
- OS Version: OS X 10.11.6

This is for `vscode.d.ts`. Seems both VSCode and TS extension are providing the symbols.

![image](https://cloud.githubusercontent.com/assets/4033249/19358545/23b07f9e-912b-11e6-92b1-749247c9a08b.png)
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13687</IssueID>
    <Title>Feature Request: Incremental TypeScript Building/Transpiling</Title>
    <Description>Add task option: JS files are created/recreated only when the corresponding TS file has been added/modified.

In the meantime, I will be trying out the "Incremental build support using the language services" section of  [using the compiler api](https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API) instead of the built in typescript task.

Let me know if I there's anything I can do to help this along. If its a PR, I'm going to need a bit of help going through the PR process.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13677</IssueID>
    <Title>Unable to copy all text in debug console</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Win 10 x64 pro

Steps to Reproduce:
1. Open a python file that contains the following lines:

```
for i in range(100):
    print i
```
1. Debug it (F5).
2. Try selecting the output from the debug console, you will notice that when 'ctrl+c' it, only 10 lines or so get copied.

Any ideas?
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13674</IssueID>
    <Title>New update broke Markdown preview zoom</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: ms-vscode.cpptools-0.8.1

Steps to Reproduce:
1. Open a Markdown file.
2. Click Preview icon.
3. Use `Ctrl+=` a few times to zoom -- the child window dimensions don't scale properly, the text gets bigger but the area in which it's shown gets smaller and smaller.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13657</IssueID>
    <Title>Add MathJax support in Markdown Preview</Title>
    <Description>https://github.com/mathjax/MathJax

Right now the Markdown Preview  does not interpret the MJ syntax correctly.
![mdpreview](https://cloud.githubusercontent.com/assets/6805609/19342491/bd54da14-913a-11e6-9ed5-170c5b44ba5a.jpg)
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13656</IssueID>
    <Title>VS Code - Tabs reload when switching between them</Title>
    <Description>- VSCode Version: 1.6
- OS Version: Windows 10
- Plugins: Python , C#

Every time I switch tabs on VS Code the content of the tab is being reloaded. It might not be a problem when developing on local machine, but I'm connected to a remote a machine using WinSShFS.

Can I cache the file locally and only access the remote server on save and first load?

Steps to Reproduce:
1. Connect to a remote linux server using WinSshFS
2. Open  a folder 
3. Open a file and than another file
4. Switch between the tabs
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13654</IssueID>
    <Title>break point in typescript not stop, source map generated</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: austin.code-gnu-global-0.2.1, dbaeumer.jshint-0.10.15, dbaeumer.vscode-eslint-1.0.8, donjayamanne.python-0.4.2, eg2.tslint-0.5.39, Kasik96.format-indent-1.3.0, ms-vscode.cpptools-0.9.2, msjsdiag.debugger-for-chrome-1.1.0, tht13.python-0.2.3, vscodevim.vim-0.3.7

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13651</IssueID>
    <Title>Special character "˝" is inserted into text editor first time I type.</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Open Code
2. Press any printable key or space (for example x key)
3. See that ˝x was printed into text file.

I've verified that this issue is not related to any exptensions.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>24/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13650</IssueID>
    <Title>Unsaved file should be available after editor closed</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:30:01.819Z)
- OS Version: Linux x64 3.13.0-92-generic
- Extensions: Tyriar.lorem-ipsum-1.0.0, medzhidov.font-awesome-codes-html-0.0.3

Steps to Reproduce:

1.When closing editor unsaved files are gone
2.If unsaved files are available even after window closed that would be good
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13642</IssueID>
    <Title>About Chinese Path</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: ms-vscode.cpptools-0.9.2, ms-vscode.csharp-1.4.1, tushortz.java-snippets-0.0.1

Steps to Reproduce:

When I open VSCode at a path with chinese,shell can't work and exit code is 1;

OS:Windows 10 x64
![q](https://cloud.githubusercontent.com/assets/15842103/19335964/07aad7e0-913a-11e6-8adf-765b2d1eb117.GIF)
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13641</IssueID>
    <Title>Make it easier to create new files/folders from the explorer when many files are present</Title>
    <Description>- VSCode Version: 1.6
- OS Version: ubuntu

Steps to Reproduce:
1. create a lot of folders under a project folder (folders only, no files at project root folder).
2. then it's hard to add new file to project folder because you cannot get any empty space for this. see figure below for what I mean.

![cannot new file](https://cloud.githubusercontent.com/assets/9464825/19335658/952c7b1c-9137-11e6-8795-82c66607d677.png)
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>28/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13640</IssueID>
    <Title>Intellisense and Error Detection Not working in 1.6.0</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Mac OS Sierra 10.12
- Plugins: ms-vscode.csharp 1.4.1, EditorConfig.EditorConfig 0.3.3

After upgrading from 1.5.3, Intellisense and Error Detection seem to have stopped working.  I am coding a .NET Core project written in C#.

What happens is that Intellisense and Error Detection show up (i.e. the red squiggly underlines) when I make an edit in my C# file.  However, after a moment, they disappear again and I can't get them to stay visible.

I noticed that JS/Node/Typescript users seem to be having a similar issue, So I will mention that we do have one JS file in this project as well as a `package.json`.  The purpose of this one JS file is to do a cross-platform script that will build the whole project in one go.  Regardless, this issue happens no matter if the JS File is opened or closed in VS Code.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13638</IssueID>
    <Title>Suggestion: Quickfix should respect arrow keys if given scrollbar</Title>
    <Description>- VSCode Version: 1.6
- OS Version: OS X El Capitan (10.11.6)

![](http://i.imgur.com/YBjoBL6.gif)

Steps to Reproduce:
1. Open quick fix (`alt + .` / `cmd + .`) 
2. Use Arrow keys
3. Observe you are able to move up and down but the scroll bar doesn't move when you move past the top or bottom suggestion

Note: You are able to scroll with the mouse wheel

I honestly don't remember if this was the case pre-1.6. I thought that it showed all available suggestions in the window and didn't need to scroll.
</Description>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13630</IssueID>
    <Title>[Regression] Precision touchpad scrolling is broken</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: 

Steps to Reproduce:
1. Open Visual Studio Code 1.6.0
2. Attempt to scroll with a precision touchpad

Scrolling is now choppy and imprecise, while it worked in previous versions of VS Code. Scrolling with the scroll bar is normal.
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13628</IssueID>
    <Title>v1.7.0-insider 2016-10-12T06:11:05.325Z build unresponsive</Title>
    <Description>- VSCode Version: 1.7.0-insider
  (Commit 1889442ff090ef8170814a98698506300962dbba)
  2016-10-12T06:11:05.325Z
- OS Version: Windows 7 x64

Steps to Reproduce:
1. After updating to this latest insider version the app is unresponsive except to open the about window.  Eventually the OS displays a popup stating "The windows is no longer responding".  The only way to close the app is to kill the processes (or wait for the OS to issue the unresponsive prompt).
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13620</IssueID>
    <Title>Extension update available to older versions of VSCode</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 x64

A user has reported that an extension update for [vscode-jumpy](https://marketplace.visualstudio.com/items?itemName=wmaurer.vscode-jumpy) is available: wmaurer/vscode-jumpy#3
However the newest update requires engine ^1.6.0.

Clicking the update button doesn't apply the newest extension version (correct, as expected).

The bug is, that the newest update requiring ^1.6.0 should not be available to users of 1.5.3. Or at least a warning should be displayed saying the newest version of the extension is only compatible with newer versions of VSCode.
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13617</IssueID>
    <Title>Support to copy content in pages from integrated terminal window</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: windows10

Steps to Reproduce:
1. Execute a code(E.g.: Python) in terminal which its output more than 1 page
2. Because selection limitation, It only could copy the content in the current page, the selection is cleared when down/up page by mouse

Expectation:
step2, Refer to windows command line, the selection should not be cleared when down/up page by mouse
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13614</IssueID>
    <Title>install and list extensions via cli is not working</Title>
    <Description>I got this error when i use the cli command:

[createInstance] extensionManagementService depends on choiceService which is NOT registered.
- VSCode Version: 1.6.0
- OS Version: macOS Sierra (10.12 )

Steps to Reproduce:
1. open shell
2. &gt; code --list-extensions
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13611</IssueID>
    <Title>Uninstall extension goes back to previous version</Title>
    <Description>- VSCode Version: 1.6
- OS Version: OS X 10.11.6
1. Get Vim extension at 0.3
2. Updating it to 0.3.7
3. Uninstalling it, it goes back to 0.3. Instead should have removed Vim extension altogether.

This is caused by when upgrading packages VSCode doesn't clean up previous versions of the same extension. 

``` bash
Code &gt; ls ~/.vscode/extensions
vscodevim.vim-0.3.0  vscodevim.vim-0.3.7
```
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13608</IssueID>
    <Title>Allow to open multiple files from file quick open</Title>
    <Description>When I open Go To File (typically with Ctrl-P), I'm presented with a list of files (fuzzy filtered by the characters I type if applicable). I can arrow through the list and press Enter to open the file.

What I'd like to be able to do is Shift-Arrow to select multiple files and then press Enter to open _all_ of them.

Here's my use case: I want to add code/functionality to an existing file while also adding tests to it's corresponding test file. The code file and test file both have nearly identical names (the test file typically having `.spec` in the file name), and so are conveniently listed at the top of the list when I enter characters into the fuzzy filter. However, since I can only open a single file, I have to repeat the entire process to open both files.

Shift-Arrow selection would eliminate the issue and improve the workflow. (Reusing the existing principles of multi-select, such as discontinuous selection with Ctrl-Space, would be nice, but is not required.)
- VSCode Version: 1.6.0 (and presumably earlier)
- OS Version: Windows 7 (and presumably all others)
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>28/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13607</IssueID>
    <Title>Quote matching when writing a comment (JavaScript)</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:28:55.412Z)
- OS Version: Darwin x64 16.0.0
- Extensions: PaulOlteanu.theme-railscasts-1.0.0, bogdan-sinitsa.theme-dark-monokai-0.3.0, designbright.theme-suicidesquad-0.1.0, donjayamanne.githistory-0.1.0, humao.rest-client-0.8.5, msjsdiag.debugger-for-chrome-1.1.0, qinjia.seti-icons-0.1.1, vscodevim.vim-0.3.7, vuhrmeister.vscode-meteor-0.1.1

Steps to Reproduce:
1. Create a JavaScript File
2. Start writing a comment (either single-line with `//` or multi-line with `/*`
3. Type a single quote: `'`

The single quote will be duplicated because of the quote matching feature. This should not happen when writing a comment (so you can write proper english 😄)
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13604</IssueID>
    <Title>OSX VS Code fails to update</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. Launch VS Code
2. Get prompted to update &amp; restart VS Code
3. Click "Update Now"
4. VS Code terminates
5. VS Code does not update
6. Manually restart VS Code
7. Verify that version has not changed
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13602</IssueID>
    <Title>Incorrect highlighting for markdown block quote code blocks</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: MacOS Sierra

Steps to Reproduce:
1. Open a new file.
2. Set the syntax highlighting to “Markdown”
3. Type the following:

``````
Highlighting **works**.

&gt; ```bash
&gt; $ cat file-in.txt &gt; file-out.txt
&gt; ```

Highlighting is **broken** below the code block.
``````

Which will render:

![screen shot 2016-10-12 at 10 38 28 am](https://cloud.githubusercontent.com/assets/8282507/19314416/0c761f64-9068-11e6-9703-6f4c1c1f4bbd.png)
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13593</IssueID>
    <Title>Renaming property with space</Title>
    <Description>``` ts
interface Test {
    "alpha beta": string
}

const a : Test = {
    "alpha beta": "test"
}
```

Put cursor inside `beta` of interface and rename with F2

![image](https://cloud.githubusercontent.com/assets/1723815/19276731/574b9eba-8fa5-11e6-855a-6dc10a0d29f1.png)

Box to rename shows only `beta` - shall it show `alpha beta` ?

Rename to `beta2`

Result:

![image](https://cloud.githubusercontent.com/assets/1723815/19276764/73d7bafa-8fa5-11e6-9f84-f3cab654002f.png)

Should be `alpha beta2`

https://github.com/Microsoft/TypeScript/issues/11531
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13592</IssueID>
    <Title>Very frequently getting this error: Failed to save '....': The content on disk is newer. Click on Compare to compare your version with the one on disk.</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:28:55.412Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Open vscode
2. Open a folder on a samba shared folder
3. Edit a file and save

I am getting this error about %70 percent of time when I try editing a file on my samba shared drive (drive is on a Raspberry Pi). No one else is using my drive, content on disk cannot be newer. How do I get rid of this error?
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13580</IssueID>
    <Title>icon indentetion is wrong</Title>
    <Description>files seems belong to folder which is in the same path/dept.  You can see in the image, my index.html is not under the node modules. I think there is an indentetion problem with icons.
- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: abotteram.typescript-react-snippets-0.1.9, atefth.ruby-on-rails-snippets-0.0.1, CraigMaslowski.erb-0.0.1, g3ortega.crystal-0.1.8, rebornix.Ruby-0.9.0

Steps to Reproduce:
1. activate seti icons
2. add a folder and file to root. and see result. 

![image](https://cloud.githubusercontent.com/assets/8162657/19303103/fc49266a-906f-11e6-9d2c-f5e8008f9908.png)
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13569</IssueID>
    <Title>about git</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14936
- Extensions: azemoh.theme-onedark-0.3.1, christian-kohler.npm-intellisense-0.1.3, christian-kohler.path-intellisense-1.0.2, donjayamanne.jquerysnippets-0.0.1, ecmel.vscode-html-css-0.0.27, humao.rest-client-0.8.4, msjsdiag.debugger-for-chrome-1.1.0, nicolasalcaraz.cssclasshint-0.0.3, SirTori.indenticator-0.2.1, wcwhitehead.bootstrap-3-snippets-0.0.7

Steps to Reproduce:

1.git unavailable
2.Last version Can use
3.Prompt By exit code 1 termination Theterminal process
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13560</IssueID>
    <Title>bug report about markdown</Title>
    <Description>- VSCode Version: 1.6, 1.5.3 64bit
- OS Version: linux deepin 15.3 64bit

I like write markdown files in vscode.  Many files were opened at the same time. But when i click preview current markdown file. It will not preview current one but the last file. I click preview again on current markdown file, then it will preview current markdown file.
It should preview current markdown file everytime in my opinion.
Thank you.
</Description>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13549</IssueID>
    <Title>Can't open terminal when opening a Chinese named directory</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 7

Steps to Reproduce:
1. Create a directory `D:\呵呵da`
2. Right-click the directory, click `Open with code`.
3. &lt;kbd&gt;Ctrl + `&lt;/kbd&gt; to open terminal.
4. The error message is '通过退出代码 1 终止的终端进程'

Can't reproduce it under Linux.
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13540</IssueID>
    <Title>CTRL + C not higlighting anything will copy a blank line instead of keeping item in clipboard</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.10586
- Extensions: alefragnani.Bookmarks-0.9.2, alefragnani.numbered-bookmarks-0.5.0, azemoh.one-monokai-0.1.14, be5invis.vscode-icontheme-nomo-dark-1.1.4, hirofumii.rubyblue-theme-1.0.2, PasqNet.theme-earlytorise-0.0.4, qinjia.seti-icons-0.1.1

Steps to Reproduce:

1.CTRL + C, not higlighting anything, will copy a blank line instead of keeping current text in clipboard
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13537</IssueID>
    <Title>Narrow intellisense</Title>
    <Description>- VSCode Version: Code - Insiders 1.7.0-insider (cf203e09145586b96497eab230253d686c2b2a2d, 2016-10-11T06:04:58.177Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Split Editor
2. Hover something close to the split area

![image](https://cloud.githubusercontent.com/assets/1723815/19284933/016963da-8fc6-11e6-8d99-401dacf013f8.png)
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13535</IssueID>
    <Title>Add an option to hide files that are excluded by .gitignore in Explorer</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Windows 10 1607

Steps to Reproduce:
1. Open a folder
2. Go to Explorer

A single source file may have several corresponding generated files. For example, `foo.ts` has `foo.js`, `foo.js.map`, `foo.d.ts`. It would be convenient to hide those files in Explorer, and only show them when user chooses to.

We can use files such as `.gitignore` to determine which file to hide, or use a separate file, such as `.vscignore` in `.vscode` directory.
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13531</IssueID>
    <Title>Search on Left Side Nav is Empty</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 10.0.14393
- Extensions: eg2.tslint-0.5.38, florentulve.vstortoise-0.6.0, joelday.docthis-0.3.3, johnpapa.Angular2-0.4.4, ms-vscode.csharp-1.2.2, ms-vscode.PowerShell-0.6.2, msjsdiag.debugger-for-chrome-0.4.8, robinbentley.sass-indented-0.1.2

Steps to Reproduce:
1. Click the Magnifying Glass (nothing shows)
2. Click Edit -&gt; Find in Files "Error: cannot read property 'focus' of undefined"
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13530</IssueID>
    <Title>in-product release notes doesn't use editor.fontSize</Title>
    <Description>- VSCode Version:1.6.0
- OS Version: Windows 10

Steps to Reproduce:
1. Set "editor.FontSize": 20
2. Help &gt; Release Notes

Release notes are rendered in a font size that looks smaller than the default fontSize of 14 (maybe 12?).
For users, with poor eyesight this may be an issue. Zoom is not an option due to https://github.com/Microsoft/vscode/issues/5745 which is an external Electron issue.

Workaround: go to release notes on website
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13526</IssueID>
    <Title>Search Option isn't available</Title>
    <Description>- VSCode Version: Version 1.6.0 (1.6.0) 2016-10-10T18:26:55.336Z
- OS Version: macOS 10.12

Steps to Reproduce:
1. Update VSCode to latest version (1.6.0)
2. Click on Search Button 

When click on search option the side menu is empty, also rises an error when try to access by the keyboard shortcut

```
Cannot read property 'toCustomLabel' of undefined
```

http://imgur.com/a/eA4JB
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13525</IssueID>
    <Title>Syntax highlighting html tag incorrectly</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: macOS Sierra 10.12

Steps to Reproduce:
1. Open an HTML file in VSCode
2. Note (or add) any HTML custom tags (i.e. in Angular projects) that use dashes in the tag name. For example, `&lt;app-root&gt;Loading...&lt;/app-root&gt;`
3. Notice the syntax highlighting of any theme, how `app` is one color and `-root` is another color.

Screenshot: 

![screen shot 2016-10-11 at 11 07 31 am](https://cloud.githubusercontent.com/assets/5883616/19280563/b218358a-8fa3-11e6-9358-36f1d921bae4.png)
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13512</IssueID>
    <Title>formatOnSave make VSCode 1.6.0 going crazy on save</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Windows 10 Build 14393.222

Steps to Reproduce:
1. Open a JSON or HTML file (might apply to more files types)
2. Change something
3. Save and look at VSCode going crazy.

Quick video here : 
![formatonsavefreakoutlight](https://cloud.githubusercontent.com/assets/2490360/19272814/089588f6-8f98-11e6-8164-26d29ad5cfe0.gif)

Then, if you try to close the file, it will ask if you want to save the file, if you discard the change, sometime it will replace the whole file content with `null`.  Haven't been able to reproduce this one, happened one time when I record the video.

There's no error in the dev console and I disabled all my extension prior of making the reproduction video.
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13496</IssueID>
    <Title>Git view throws error: 'Path must be a string. Received null'</Title>
    <Description>- VSCode Version:1.6.0
- OS Version:Win 10 

Steps to Reproduce:
1.  Open Git view
2. select file to view changes
   Popup errormessage says:
   Path must be a string. Received null
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13482</IssueID>
    <Title>New version has an error that prevents "Find in Files"</Title>
    <Description>- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 6.3.9600
- Extensions: abusaidm.html-snippets-0.0.16, akamud.vscode-javascript-snippet-pack-0.1.5, christian-kohler.path-intellisense-1.0.0, dbaeumer.jshint-0.10.15, dbaeumer.vscode-eslint-1.0.7, eg2.tslint-0.5.39, florentulve.vstortoise-0.6.0, HookyQR.beautify-0.4.0, johnpapa.Angular1-0.1.16, ms-vscode.csharp-1.4.1, ms-vscode.mono-debug-0.11.0, msjsdiag.debugger-for-chrome-1.1.0, oderwat.indent-rainbow-0.4.1, qinjia.view-in-browser-0.0.3, sandcastle.whitespace-0.0.4, sandy081.todotasks-0.4.0, seanmcbreen.Spell-0.8.6, sidthesloth.html5-boilerplate-1.0.1, wcwhitehead.bootstrap-3-snippets-0.0.7

Steps to Reproduce:
1. CTRL+SHIFT+F or the Edit &gt; Find in Files option
2. Error message displays: "Cannot read property 'toCustomLabel' of undefined"
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13475</IssueID>
    <Title>Feature request: Enable/disable/configure plugins by workspace</Title>
    <Description>I've got multiple types of projects and sometimes I work with grunt &amp; angular, other ones with node, other ones with python...

My main project  was with grunt &amp; angular, I have fully configured the vscode with jshint and other features for the grunt &amp; angular, but when I change to other ones, VSCode launch me an error, because it doesn't found the jshint configuration, etc.  

Also in my house, I've been working with plantuml, and that plugin (I don't remember the name of the plugin) uses the same shortcut that markdown to do the preview, and when I've been doing something with plantuml, the shortcut doesn't work, because vscode always launch the markdown preview. 

Thanks.  
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13464</IssueID>
    <Title>这次的更新太愚蠢了！</Title>
    <Description>为了提高我的编程效率，所以我选择了vscode。
同时也是出于效率的考虑，我把需要自己常用的函数写进了lua.json里面
因为vscode愚蠢的补全排序，我不得不给自己的函数prefix加上 ` 字符以快速选中它
在今天的版本更新之前，这种做法是有效的
然而今天的更新把这一切都摧毁了！！！

现在即使我在prefix前面加上 ` 字符，也不是默认选中我自己的函数了
诅咒这次更新
- VSCode Version: Code 1.6.0 (e52fb0bc87e6f5c8f144e172639891d8d8c9aa55, 2016-10-10T18:37:40.189Z)
- OS Version: Windows_NT ia32 6.1.7601
- Extensions: XavierCHN.dota-reborn-code-0.1.3

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13457</IssueID>
    <Title>Broken code commenting in 1.6</Title>
    <Description>- VSCode Version: 1.6 September update
- OS Version: OSX Mavericks

Previously, while editing JS code in an .html file, it was possible to use the CMD /  keyboard shortcut to comment a line or block of JS code.  Now, it is broken and it inserts HTML comments instead of JS comments.

This is a problem working with Polymer components, because JS and HTML are heavily intermixed in the same .html file.
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13455</IssueID>
    <Title>Incorrect HTML syntax highlight</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: 10.0.10586

Steps to Reproduce:
1. Write an HTML file with elements whose tag names contain a `-` character.
2. Only the letters to the left of the `-` is highlighted as the tag name, and other letters, to its right and the `-` itself, is highlighted as if they were attributes.

![10](https://cloud.githubusercontent.com/assets/8168391/19255243/630e81ac-8f8e-11e6-8db3-4a596cad4b4e.png)
</Description>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13451</IssueID>
    <Title>Obscure errors when developing extension in macOS Sierra &amp; vscode 1.6.0</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: macOS Sierra

Steps to Reproduce:
1. Clone my extension: https://github.com/VSCodeVim/Vim
2. `npm install` 
3. Open it in VSCode and run the "Launch Extension" debug configuration.
4. See the following errors:

```
[warn] kq_init: detected broken kqueue; not using.: Undefined error: 0
[warn] kq_init: detected broken kqueue; not using.: Undefined error: 0
[warn] kq_init: detected broken kqueue; not using.: Undefined error: 0
[warn] kq_init: detected broken kqueue; not using.: Undefined error: 0
```

I don't know what this means, but it is concerning. 
</Description>
    <CreatedDate>10/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13416</IssueID>
    <Title>Garbled code output</Title>
    <Description>![h r v6wspvdg 3 u3zz rn](https://cloud.githubusercontent.com/assets/3353702/19233173/7c720380-8f16-11e6-9eb4-9a5a8597121d.png)
- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>10/10/2016</CreatedDate>
    <ClosedDate>10/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13376</IssueID>
    <Title> Add the outline display function</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. i wish the newest version can  add the outline display function,like in Visual Studio 2012
   ![jg p eq j1pzctgjven](https://cloud.githubusercontent.com/assets/13955666/19211574/270c1cb4-8d72-11e6-8f84-ccedd790ed1c.png)
</Description>
    <CreatedDate>08/10/2016</CreatedDate>
    <ClosedDate>10/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13375</IssueID>
    <Title>unsaved file is visible when reopen vs code</Title>
    <Description>- VSCode Version: 1.5.3 
- OS Version:10.11.3

Steps to Reproduce:
1.  create new the untitled file and don't save
2.  close VS Code and choose "Don't Save"
3.  Reopen VS Code,  File disappeared
4.  We hope the unsaved file is visible,  but  cannot be saved in the current project (e.g. Sublime)
</Description>
    <CreatedDate>08/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13369</IssueID>
    <Title>Find and replace regex match should include newlines in \s</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (98c9e612e2110cbaa6923f649c01fab3df0c9c31, 2016-10-06T18:06:29.844Z)
- OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04
- Extensions: EditorConfig.EditorConfig-0.3.3, Tyriar.lorem-ipsum-1.0.0, Tyriar.terminal-tabs-0.0.5, Tyriar.theme-glacier-0.0.10, cssho.vscode-svgviewer-1.2.0, felipecaputo.git-project-manager-0.1.15, gerane.Theme-Wombat-0.0.2, ms-vscode.csharp-1.4.1, ms-vscode.typescript-javascript-grammar-0.0.3, ryu1kn.annotator-0.10.0

Reported by @g5codyswartz in https://github.com/Microsoft/vscode/issues/313#issuecomment-252127985

For the text:

``` html
&lt;form&gt;
    &lt;fieldset&gt;
        &lt;legend&gt;abc&lt;/legend&gt;
```

`&lt;fieldset&gt;\s*&lt;legend&gt;` finds no matches but it should. `&lt;fieldset&gt;$^\s*&lt;legend&gt;` and `&lt;fieldset&gt;\n\s*&lt;legend&gt;` both work.
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13362</IssueID>
    <Title>Find and Replace dialog covers content</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Win 10 1607

Steps to Reproduce:
1. Have content as long as the window is wide in the first three lines of the window
2. Display the Find and Replace dialog

![image](https://cloud.githubusercontent.com/assets/1189638/19198376/b739d95c-8c73-11e6-9e0d-e9b0a6335cbb.png)

In some cases, like mine above, this dialog covers the content and there's no way to change that except to make changes to the content itself by adding additional empty lines at the top.

Scrolling doesn't work and neither does changing the size of the window. The content will always be covered. Additionally, stepping through matches doesn't help because the dialog doesn't move out of the way when a match is found underneath it.

What's my preferred fix? I think a good solution is to model the control after Sublime Text's implementation. In ST's case, a single row dialog slides up from the bottom of the window. If it covers a line of text at the bottom, the content becomes scrollable which allows the user to scroll the content up. Similarly, stepping through the matches will make them visible because doing that repositions the content not the dialog.

I recognize that my preferred fix completely changes the UI which might be too much to accept for the dev team and some users. (Even though I think it would be a net positive change.)

Here are some other possible fixes I came up with.
1. Display the dialog in the same place but shift the content itself down a maximum of three lines.
2. Move the dialog down up to three lines if it covers matches. If it _still_ covers matches (on lines 4,5,6) then move the dialog one line at a time when stepping through the matches. Move the dialog progressively downard, up to three lines, when stepping forward. Move the dialog back up, up to three lines, when coming from below the dialog while stepping backward. In other words, push the dialog in the direction the user is moving through the matches.

There are certainly other options out there but I've spent too much time on this at this point. :)

Thank you for your consideration!
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13352</IssueID>
    <Title>GIT could not be used</Title>
    <Description>- VSCode Version:1.5.3
- OS Version:windows 10 x64

GIT could not be used. 
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13351</IssueID>
    <Title>Terminal should be aware when a command execution finishes</Title>
    <Description>Currently we support having a `preLaunchTask` specified in 'launch.json' to run a task before a user starts debugging (more details [here](https://code.visualstudio.com/docs/editor/debugging)). There are [requests](https://github.com/Microsoft/vscode/issues/10211) that we support running a `preLaunchTask` even if a user does not have 'tasks.json' setup.

My proposal for this is that the user could specify a full command in his 'launch.json' which we would just forward to our terminal via the `send` api. The only missing piece for this would be for the terminal to be aware when a command has finished running - or when it becomes idle. Currently this problem is solved in the task framewrok by @dbaeumer so maybe we could do something similar in our terminal.

I think @jrieken might be also interested in something similar for the passing of errors from our terminal to the marker service.

@Tyriar let me know what you think and if this request makes sense
@weinand fyi
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13346</IssueID>
    <Title>Typescript suggestions very often stops working until I restart vs code</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10

Steps to Reproduce:
1.  Just doing regular work

p.s. actually this happens not only for typescript but for example auto arrange code: alt + shift  + f, or plugins like: JavaScript (ES6) code snippets, Code Beautifier
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13341</IssueID>
    <Title>make update automated in ubuntu</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:49:32.489Z)
- OS Version: Linux x64 4.4.0-38-generic

updates from vscode are very frequent and it would be better to support automated updates in deb based systems like ubuntu.

thanks.
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13333</IssueID>
    <Title>Add automatic proxy configuration support in windows</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows

Please add the ability to support proxy.pac proxy support.  
For example in browsers this is as easy as selecting this proxy automatic connection type and then adding the path of the proxy.pac file.

Perhaps this is helpful.
https://blogs.msdn.microsoft.com/ieinternals/2013/10/11/understanding-web-proxy-configuration/
</Description>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>10/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13321</IssueID>
    <Title>search.exclude not working</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: OSX 10.11.6

When I try to use the open quickly menu, my computer searches for a while (find processes appear in the activity monitor, eating up three cores) and then it stops with this error:

```
ipc.cp.ts:139 [IPC Library: Search] Uncaught Exception:  RangeError: Invalid string length(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
ipc.cp.ts:139 [IPC Library: Search] RangeError: Invalid string length
    at Array.join (native)
    at e.decodeData (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14592)
    at ChildProcess.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14370)
    at emitTwo (events.js:100:13)
    at ChildProcess.emit (events.js:185:7)
    at maybeClose (internal/child_process.js:850:16)
    at Socket.&lt;anonymous&gt; (internal/child_process.js:323:11)
    at emitOne (events.js:90:13)
    at Socket.emit (events.js:182:7)
    at Pipe._onclose (net.js:477:12)(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
ipc.cp.ts:139 [IPC Library: Search] Uncaught Exception:  RangeError: Invalid string length(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
ipc.cp.ts:139 [IPC Library: Search] RangeError: Invalid string length
    at Array.join (native)
    at e.decodeData (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14592)
    at ChildProcess.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14370)
    at emitTwo (events.js:100:13)
    at ChildProcess.emit (events.js:185:7)
    at maybeClose (internal/child_process.js:850:16)
    at Socket.&lt;anonymous&gt; (internal/child_process.js:323:11)
    at emitOne (events.js:90:13)
    at Socket.emit (events.js:182:7)
    at Pipe._onclose (net.js:477:12)(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
ipc.cp.ts:139 [IPC Library: Search] Uncaught Exception:  RangeError: Invalid string length(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
ipc.cp.ts:139 [IPC Library: Search] RangeError: Invalid string length
    at Array.join (native)
    at e.decodeData (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14592)
    at ChildProcess.&lt;anonymous&gt; (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/services/search/node/searchApp.js:25:14370)
    at emitTwo (events.js:100:13)
    at ChildProcess.emit (events.js:185:7)
    at maybeClose (internal/child_process.js:850:16)
    at Socket.&lt;anonymous&gt; (internal/child_process.js:323:11)
    at emitOne (events.js:90:13)
    at Socket.emit (events.js:182:7)
    at Pipe._onclose (net.js:477:12)(anonymous function) @ ipc.cp.ts:139emitTwo @ events.js:100emit @ events.js:185handleMessage @ internal/child_process.js:718channel.onread @ internal/child_process.js:444
internal/process/next_tick.js:103 GET file:///Users/pzuraq/.vscode/extensions/pzuraq.theme-oceanic-reef-0.0.1/preview.png net::ERR_FILE_NOT_FOUND_tickCallback @ internal/process/next_tick.js:103
```

Steps to Reproduce:
1. press cmd+p
2. type a search value and wait
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13318</IssueID>
    <Title>Add scrolling to integrated terminal</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Arch Linux

Please add scrolling to integrated terminal, because if i have many errors (i am bad at cpp) i need to stretch terminal upwards to see all output, which sometimes goes way far, so i cant see anything. 
Same situation when running console apps.
I cant check if it is zsh making a problem, but if it is, then fix it please too.

Steps to Reproduce:
0. Open integrated terminal;
1. Compile something with huge amount of errors, or print something;
2. Notice that you can't scroll in integrated terminal.
3. Cry.

![screenshot from 2016-10-07 01-58-14](https://cloud.githubusercontent.com/assets/19470159/19173651/8726b830-8c31-11e6-91fa-37fd7dbaff50.png)
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13315</IssueID>
    <Title>Enter button does not go to new line </Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14939

Steps to Reproduce:
1. Press enter 
2. Notice that cursor remains in the same place 
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13311</IssueID>
    <Title>Code Helper is consuming most of the CPU</Title>
    <Description>&lt;img width="800" alt="screen shot 2016-10-06 at 2 01 43 pm" src="https://cloud.githubusercontent.com/assets/949380/19170561/d7e84d56-8bcd-11e6-9a80-a11e68aa4eaa.png"&gt;
- VSCode Version: Version 1.5.3 (1.5.3)
- OS Version: OS X 10.11.6 (15G1004)

**Steps to Reproduce:**
Keep VS Code open for a while for a ember project.

**Doubt**
Probably due to the `tmp` folder. I tried ignoring it, but it did not help.
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13310</IssueID>
    <Title>Enter key does not work; ctrl+enter does</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14939

The enter key does not create a newline as expected. Must press CTRL+ENTER for it to work. This behavior does not exist in any other app I have.

Steps to Reproduce: Not sure how to reproduce except that restarting Visual Studio Code does not solve the problem.
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13309</IssueID>
    <Title>Indentation affects which blocks are collapsible </Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 8.1

I'm not sure if this a bug or not, but I just noticed that indentation/spacing has an affect on which blocks of code are collapsible. 

As it is right now, anything that is indented past the first line of a block will be considered as being part of that block. This makes sense for a language where indentation determines context (Python), but in languages with explicitly defined blocks (JavaScript in this case) I'd expect the collapsible regions to be aware of the defined block.

**Examples:**

![image](https://cloud.githubusercontent.com/assets/3431954/19168061/027d1136-8bd4-11e6-8247-e1141bde7773.png)

![image](https://cloud.githubusercontent.com/assets/3431954/19168063/04b9ab8a-8bd4-11e6-9947-a8d505ff92ad.png)

![image](https://cloud.githubusercontent.com/assets/3431954/19168305/33b2290c-8bd5-11e6-94ce-3b0fdec968ad.png)

![image](https://cloud.githubusercontent.com/assets/3431954/19168310/36c59ef8-8bd5-11e6-8cb7-f8c3312945cb.png)
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13303</IssueID>
    <Title>Extension update visible but not installable due to `engines`</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: macOS sierra

Steps to Reproduce:
1. Install the [final-newline](https://marketplace.visualstudio.com/items?itemName=samverschueren.final-newline) extension in VS Code 1.5.3 (this is important!)
2. It will install `final-newline@0.2.0` because that one was target to [0.10.x](https://github.com/SamVerschueren/vscode-final-newline/blob/v0.2.0/package.json#L7)
3. Enable the extension and search again for the `final-newline` extension in the extension list. It will show that their is an update available, namely `0.3.0`, but that version is targetted to [^1.6.x](https://github.com/SamVerschueren/vscode-final-newline/blob/master/package.json#L7)
4. You can try to install the plugin, which looks like it succeeds, but when restarting VS Code, it will again show up as update.

Extension list should show `0.2.0` as `0.3.0` is not supported by VS Code 1.5.3

&lt;img width="302" alt="screen shot 2016-10-06 at 19 29 29" src="https://cloud.githubusercontent.com/assets/1913805/19163165/3ead5d42-8bfb-11e6-977e-6cc29cef7d6e.png"&gt;

After installing the extension and enabling it, this is what shows up in the extension list

&lt;img width="303" alt="screen shot 2016-10-06 at 19 30 26" src="https://cloud.githubusercontent.com/assets/1913805/19163210/681d8332-8bfb-11e6-822d-a3996ca85eb4.png"&gt;

So it succesfully installs the correct version, only the notification shouldn't be showing.

FYI @joaomoreno
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>07/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13289</IssueID>
    <Title>Add mouse gesture/button binding for back/forward feature</Title>
    <Description>I think this is a great proposal for owners of Apple Magic Mouse/Trackpad or mouse where buttons can be customized or have horizontal scrolling wheel.
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13281</IssueID>
    <Title>[feature] Add a way to tell where a configuration setting exists (user vs workspace)</Title>
    <Description>- VSCode Version: `Version 1.6.0-insider (1.6.0-insider)` 782e3ad7e504c308a5f1592ca6ae2574a13b0e73
- OS Version: `macOS Sierra Version 10.12 (16A323)`

Now that there is a way to update configuration settings (at either the workspace or user level), it would be great if there was a way to tell where a configuration setting is currently saved. That way if an extension is trying to update a setting it can do so in the proper location.

Maybe `get` or `has` could have an optional `global` bool like `update` which would only check the global (i.e. user) level?
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13277</IssueID>
    <Title>code will become same while switching two files</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:
1. open two js files
2. work on one file if you switch to other file and come back suddenly both files become same code 
3. This issue occurring multiple time try to fix this ASAP 
</Description>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13269</IssueID>
    <Title>Disable Extension through api</Title>
    <Description>- VSCode Version: 1.5.x
- OS Version: 10.10.3

Is there a way to disable the extension? Upon disabling the extension we do not want any command traces in the context menu or a command palette. As of now there is a tight coupling with how the commands are declared / registered. 

For our extension we have a need to disable it if a product license or trial version is expired.

Thank you,

Ritesh
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13259</IssueID>
    <Title>Dragging in-product release notes to start a new editor group, closes notes and goes to web</Title>
    <Description>- VSCode Version:1.6.0 insiders
- OS Version: Windows

Steps to Reproduce:
1. Follow test plan to enable in product release notes in insiders https://github.com/Microsoft/vscode/issues/12520
2. Help &gt; Release Notes
3. Try to drag the release notes to the side to start a new editor group.

The release notes editor is closed and the user is directed to the release notes on the website.

This happens when the release notes are in preview mode or as a persistent editor after doing the **Keep Open** command.

This might be related to https://github.com/Microsoft/vscode/issues/13105 which has been fixed and included in the October release. Given this is likely a common action for users who want to review the release notes next to another editor group, we may want to fix this for September.

The workaround is to drag the release notes to an existing editor group.
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13258</IssueID>
    <Title>Zen Mode</Title>
    <Description>It would be nice to be able to go into a mode where the current document takes up the entire editor.

This would mean hiding everything except for:
- Menu bar
- Status bar
- Current document

Toggling zen mode could be done like so: &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;alt&lt;/kbd&gt; + &lt;kbd&gt;enter&lt;/kbd&gt;

And now for some sweet GIMP skills to show how this would look (line numbers could potentially be toggled too):

![vscode-zen](https://cloud.githubusercontent.com/assets/1571806/19124239/0083924c-8af8-11e6-8fac-16f640da8380.png)

As you can see everything is gone. This is helpful especially when you are on a smaller monitor or have multiple editors open.
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13253</IssueID>
    <Title>Console Windows as tabs rather than a drop down.</Title>
    <Description>Currently the console windows(terminal, command prompts) are all in a dropdown setting. If we can create that as tabbed. it would be great
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13249</IssueID>
    <Title>proxy - connect ECONNREFUSED 191.238.172.191:443</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: windows 7

Steps to Reproduce:
1. connect to your corporate internet
2. use the corporate internet proxy pac file
3. Click Extensions tab

connect ECONNREFUSED 191.238.172.191:443

Proxy should use the local system proxy so we don't have to mess with the settings and store a windows password in plan text.

Check for updates works properly, why doesn't the extension module use the same underlying http functionally of the check for updates routine?
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13248</IssueID>
    <Title>Would it be helpfull using Tabs instead of dropdown for  Integrated Terminal windows And feature for switching between the tabs.</Title>
    <Description>VSCode Version: 1.5.3
OS Version: Ubuntu 16.04

Current:
![a](https://cloud.githubusercontent.com/assets/10391409/19113668/5546b324-8b28-11e6-8f20-0377a7ba4ea4.png)

Same as Editor windows for Integrated terminal
![b](https://cloud.githubusercontent.com/assets/10391409/19113672/59f9fdae-8b28-11e6-8179-2b36f27706ed.png)
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13247</IssueID>
    <Title>JavaScript broken highlight</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Win10

Steps to Reproduce:
1. Open JS-file
2. add to begin: { el = data?true:false; }

Exp.: 'true' and 'false' are highlighted

Act.: 'false' is highlighted, but 'true' - not
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13234</IssueID>
    <Title>Extension comes back after uninstall</Title>
    <Description>- VSCode Version: 1.6.0
- OS Version: Mac OS X

Steps to Reproduce:
1. I saw an update for the latest TypeScript grammar
2. I applied the update and at the same time also uninstalled the go extension
3. I restarted the window
4. I got unhappy with the typescript grammar extension
5. I uninstalled the extension and reloaded
6. I noticed an update showing up in the extensions viewlet for the typescript grammar extension

=&gt; looks like I am back to the older version of the typescript grammar
</Description>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13226</IssueID>
    <Title>Return key is ignored a couple of times before being accepted.</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 (insider preview build 14939)

Steps to Reproduce:
1. open C document
2. switch away from VSCode, wait a few seconds
3. switch back to VSCode
4. press return/enter key and no new line is started, keep pressing until new line appears, then works normally until switching away again.
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13217</IssueID>
    <Title>A quality of life change: When opening an image in VSCode display dimensions</Title>
    <Description>Not a big change, but it would be quite convenient to display image dimensions in the editor instead of having to look it up in an explorer/editor for those times when you forget! 
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>04/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13213</IssueID>
    <Title>Add Electron support for theming MacOS titlebar</Title>
    <Description>Latest versions of Atom added the ability to theme or hide the MacOS titlebar, which apparently is due to the ability being added to latest versions of the Electron shell.

![screen shot 2016-10-04 at 11 42 59 am](https://cloud.githubusercontent.com/assets/835148/19081286/c0a29ad6-8a27-11e6-8261-ca44ad50a5f5.jpg)
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>04/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13200</IssueID>
    <Title>Terminal no vertical scrollbar with zsh on openSUSE</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: openSUSE Leap 42.1

Steps to Reproduce:
1. Install zsh and oh-my-zsh, and set it as default shell
2. Start VSCode, open terminal, type `cat /proc/cpuinfo`
3. No scrollbar on right

![2016-10-04 17-45-22](https://cloud.githubusercontent.com/assets/19658647/19069766/e2abf5c2-8a5a-11e6-9b60-40eb9298bac9.png)
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>04/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13195</IssueID>
    <Title>Submit a bug link not working for Edge</Title>
    <Description>I clicked submit a bug and got the following link in Edge which literally output just # on the screen.

https://github.com/microsoft/vscode/issues/new?body=-+VSCode+Version%3a+Code+-+Insiders+1.6.0-insider+(17b0c8d028d3b7ceaf3b7c2c226cd0ad6b1feb51%2c+2016-09-30T06%3a10%3a50.521Z)%0a-+OS+Version%3a+Windows_NT+ia32+10.0.14393%0a-+Extensions%3a+%60dbaeumer.vscode-eslint-1.0.7%60%2c+%60donjayamanne.githistory-0.0.12%60%2c+%60ms-vscode.csharp-1.4.1%60%2c+%60ms-vscode.PowerShell-0.7.2%60%2c+%60ow.vscode-subword-navigation-1.1.5%60%2c+%60rebornix.Ruby-0.8.0%60%2c+%60WallabyJs.wallaby-vscode-1.0.27%60%0a%0aSteps+to+Reproduce%3a%0a%0a1.%0a2.
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>04/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13192</IssueID>
    <Title>UI render Bug</Title>
    <Description>- VSCode Version:1.5.3
- OS Version: mac OS 10.12

Steps to Reproduce:
1. open a folder or some files in editor.
2. move window to external display, and toggle to full screen.
3. Unplug your Display port video line and switch to another external display with different resolution，e.g. 2K to 1080p.And editor show some strange shadow blocks.
   ![2016-10-04 15 15 48](https://cloud.githubusercontent.com/assets/9696289/19065432/14e9f076-8a46-11e6-8ea1-86a8b4b93c7e.png)
   ![2016-10-04 15 16 08](https://cloud.githubusercontent.com/assets/9696289/19065441/22003e3c-8a46-11e6-96ba-110cbcfe7692.png)
   ![2016-10-04 15 23 04](https://cloud.githubusercontent.com/assets/9696289/19065500/7d284318-8a46-11e6-83e0-1861d554630a.png)

As you see, once the UI bug shows up , it will not dismiss when I change my color theme or window size.I often use different resolution display in my office and home. So this bug is quite a confusion to me
</Description>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13175</IssueID>
    <Title>Dark text background not correct on color corrected OSX machine...</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: 10.12 Sierra

Steps to Reproduce:
1. Color correct display and use custom display profile
2. Use vscode with dark or dark+ theme

For error, see attached screen dump. Normally defining a colorspace like sRGB when drawing, will solve the problem.

![vscode-color](https://cloud.githubusercontent.com/assets/2265419/19055874/80d8a0b4-89c6-11e6-9b7a-16e61b3b4f72.png)

In the light theme the error is not visible.

Cheers, Fons.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>05/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13168</IssueID>
    <Title>Question: Minimum width for VS Code status bar icon</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Enterprise (10.0.14393 Build 14393)

Steps to Reproduce:
1. Create a typescript file in VS Code and a function to update the StatusBarItem
   Example:

``` typescript
function uiBold() {
        let statusBarItem: vscode.StatusBarItem;
        statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);
        statusBarItem.text = "$(bold) Bold";
        statusBarItem.color = "black";
        statusBarItem.show()
        statusBarItem.command = "extension.formatBold";
}
```
1. Create a new status bar item using the bold or italic Octicon icons [`statusBarItem.text = "$(bold) Bold";`]
2. Open the file in debug mode/Extension Development Host] and run the command to launch the function
3. Text (Bold) will render but icon will not.

Expected results
Using the code above, change the bold icon to pencil or gear and run step 3.  Both the icon and text will show.

Question
Is there a minimum width required for VS Code status bar icons?  I've tried a few and the ones that do not work are 10px or smaller in width (&lt;svg width="10px").  Icons that I have tested that are 14px or larger work just fine.

Thanks and please let me know if you need any additional details or if you'd like me to share the ts files for the extension I'm developing.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13163</IssueID>
    <Title>Switching to a "comparison" tab always puts the cursor back to the start of the file</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 8.1 Enterprise

Steps to Reproduce:
1. Right click on a working file and choose "Select to compare" 
2. Right click on another working file and choose "Compare with...". This will open a tab showing the comparison.
3. Scroll down to a position.
4. Open another file / switch to another tab.
5. Go back to the comparison tab - the cursor is back at the start of the document and the scroll position is lost.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>06/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13160</IssueID>
    <Title>Add Explorer right-click options to the file tab right-click options</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Win10

Steps to Reproduce:
1. Right-click the tabs for a file.
2. Compare with right-clicking the file in the Explorer.

Feature Request: Add all/more of the Explorer right-click options to the tabs for a file. My main request is Copy Path.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>03/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13156</IssueID>
    <Title>VS Code is difficult to use on a virtual file system over a network (gvfs)</Title>
    <Description>Hi, 
I use the latest version on ubuntu and I work through gvfs.
I like the editor and I am trying to totally move from sublime, but I still have two big problems 
1)  when I switch tab the editor tries everytime to update the content from the network not using the cache, it is nuisance on slow networks.
2) after I save a tab content, randomly, the tab gets closed.
These two things together, turn my working in a hell.
Is there a solution, I bet those are not  bugs but just a setting to change...
thanks
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13153</IssueID>
    <Title>Command line option -g FILE:LINE not working</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:

1.open command prompt.
2. ensure in local directory, say c:\somedirectory. Ensure c:\somedirectory contains somefile.ext
2. `code -g somefile.ext:2`      :- This works
3. `code -g c:\somedirediretory\somefile.ext:2`     :- does not work, gives error "Arguments in '--goto' mode should be in the format of 'FILE(:LINE(:COLMUMN))'.
4 `code -g "c:\somedirediretory\somefile.ext:2"`  :- does not work. gives same error as above.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>03/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13152</IssueID>
    <Title>Failed to save 'httpd.conf': A system error occured (EACCES: permission denied, open</Title>
    <Description>- VSCode Version: 1.5.3 (1.5.3)
- OS Version: EL Capitan

Steps to Reproduce:
1. In a terminal window type: open /etc/apache/httpd.conf (or a file owned by root)
2. make changes to the file and cmd+s to save.
3. Error appears on the title bar: Failed to save 'httpd.conf': A system error occured (EACCES: permission denied, open '/private/etc/apache2/httpd.conf')

I expect VS Code to ask for my password for authorization. Because if I do the same things with Atom, it opens an OSX native window asking for password. Can we have the same window asking for password instead of giving error?
Also, I noticed that this path _/private/etc/apache2_ (in the error bar) is different than what I typed.
</Description>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>03/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13139</IssueID>
    <Title>Excessive startup time (near-hang), then OK</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Win7 Ultimate 32-bit, all Windows updates installed (VMware Fusion 8.5 on OS X 10.11)
- Pristine VSCode installation (no extensions installed, default settings)

Symptoms:
- On launching, only 2 processes show up: `Code.exe` without parameters, and the GPU process (running with `--disable-gpu` to eliminate the latter makes no difference):

![image](https://cloud.githubusercontent.com/assets/588825/19022775/ce9b2a70-88ad-11e6-9ca0-4c25753b7e2b.png)

No window shows up, and the `Code.exe`-without-params process is near 100% for ca. 2.5  minutes, with very little memory activity and virtually no IO (the GPU process shows virtually no CPU or GPU activity); the I/O spike and memory increase at the end is when the window finally opens:

![image](https://cloud.githubusercontent.com/assets/588825/19022777/d326a2e0-88ad-11e6-8db7-6fd60c4f6e69.png)

Once the window is visible, additional `Code.exe` processes appear, CPU activity subsides, and things appear to work normally.
</Description>
    <CreatedDate>02/10/2016</CreatedDate>
    <ClosedDate>19/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13128</IssueID>
    <Title>Terminal window *incredibly* slow.</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10

Steps to Reproduce:
1. Open up VS Code.
2. Use the Terminal window by typing something in.

I never really noticed too much but with the latest versions of Code and Ionide (which use the Terminal window now for F# output), I've noticed that the Terminal window is really, really slow - not just for output sent to the terminal from F# but also just typing in the standard terminal - long pauses (1/2 seconds) before it "catches up" with what I'm typing etc.. It also blocks the main editor window whilst these pauses happen.

I suppose that this could be any number of things - happy to help provide more details that would help.
</Description>
    <CreatedDate>01/10/2016</CreatedDate>
    <ClosedDate>03/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13124</IssueID>
    <Title>Request for features</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Win10
1. I think we should be able to disable extensions without uninstalling them.
2. I see no obvious way to ignore files on Git. Brackets has an obvious option that is extremely easy to find. Maybe I miss something here?
3. I see no obvious way to clone repos from VSCode. I think it should be able to do this.
4. I can't find a good way to adjust the font size globally (not only in the editor). The best I found was this while trying to make fonts look more like Brackets and I don't like it much:
   "window.zoomLevel": -0.3,
   "editor.fontFamily": "arial, sans-serif"
5. All the file-icon extensions that I tried have their icon blurry. Not sure why, but I guess it has to do something with VSCode itself and its HTML.
6. Maybe the "button" for running the build tasks (and maybe also running the code) should be in a more accessible place?
7. I see no way to view the history with Git.
</Description>
    <CreatedDate>01/10/2016</CreatedDate>
    <ClosedDate>01/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13123</IssueID>
    <Title>"propfull" snippet selected before "prop" snippet</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (602155bb781f509c7a4ddcd700b57cb9b9f5286d, 2016-10-01T00:31:36.133Z)
- OS Version: Darwin x64 16.0.0
- Extensions: EditorConfig.EditorConfig-0.3.3, Shan.code-settings-sync-2.3.1, be5invis.vscode-icontheme-nomo-dark-1.1.3, chenxsan.vscode-standard-format-0.0.12, christian-kohler.npm-intellisense-0.1.3, dbaeumer.vscode-eslint-1.0.7, dbalage.vscode-stylesheet-formatter-0.2.0, dkundel.vscode-npm-source-0.0.3, eg2.tslint-0.5.39, eg2.vscode-npm-script-0.0.20, fknop.vscode-npm-3.3.0, ms-vscode.csharp-1.4.1, ricard.PostCSS-1.0.1, samverschueren.yo-0.8.5, zgudino.editorconfig-vscode-snippet-0.1.0

Steps to Reproduce:
1. In a C# file, type `prop`
2. See that the `propfull` snippet is highlighted, rather than the `prop` snippet, which matches exactly.

![image](https://cloud.githubusercontent.com/assets/594564/19015380/afefcc34-8803-11e6-8022-520adfd0d473.png)
</Description>
    <CreatedDate>01/10/2016</CreatedDate>
    <ClosedDate>04/10/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13087</IssueID>
    <Title>Custom ANSI colors in integrated terminal</Title>
    <Description>@Tyriar this issue (https://github.com/Microsoft/vscode/issues/143) mentions the ability to setup custom ANSI colors via settings.json but I haven't found how to do this yet. Is it supported?
</Description>
    <CreatedDate>30/09/2016</CreatedDate>
    <ClosedDate>30/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13054</IssueID>
    <Title>URL opener does not bring window to top on Windows</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (0f7880d7a490ba9aee2b053f3f2e46c19423e7e4, 2016-09-29T13:50:23.615Z)
- OS Version: Windows_NT ia32 10.0.14393

Found verifying #10340

Steps to Reproduce:
1. Open VSCode insider
2. Enter vscode-insiders:extension/vscodevim.vim into the browser's location bar
3. Observe the VSCode window does not come to top (unexpected), the extension's description correctly opens in an editor tab
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>30/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13048</IssueID>
    <Title>Closing Developer Tools closes entire application and skips unsaved changes prompt</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Open a new instance of VS Code.
2. Type something in the "Untitled-1" tab to set an "Unsaved Changes" state.
3. Help &gt; Toggle Developer Tools.
4. Click the 'X' in the top-right of the Developer Tools view.
5. Help &gt; Toggle Developer Tools.
6. Click the 'X' in the top-right of the Developer Tools view.
7. VS Code closes, unsaved changes prompt is not displayed, and unsaved changes are lost.
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>30/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13042</IssueID>
    <Title>Files Opening Behind Other Applications</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: WIndows 10

Steps to Reproduce:
1. When using "Open with Code" from right click dialog in Windows Explorer, VS Code opens up the file behind all other open applications. This occurs if VS Code already has other open windows. 
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>30/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13020</IssueID>
    <Title>Full file path to clipboard</Title>
    <Description>Actually it's not a bug. It should be nice to have the "Full file path to clipboard" when right clicking a tab.
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>30/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13014</IssueID>
    <Title>VSCode fails to open file when another instance of VSCode is already running as "Administrator" user.</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 8.1 Pro x64

Steps to Reproduce:
1.  Run VSCode as Administrator (Right click on icon, select "Run As Administrator")
2.  Right click on any file, select "Open with Code"
3. Nothing happens: no new instance of VSCode created with selected file opened nor selected file opened in running instance.
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13013</IssueID>
    <Title>Terminal Process terminated if the folder contains Chinese characters</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Open a folder containing Chinese Characters, such as 'D:\Workspace\project\周报'
2. press Ctrl+`, open build-in terminal, error issues: 
        The terminal process terminated with exit code: 1
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>13002</IssueID>
    <Title>Can't edit file after git revert</Title>
    <Description>![selection_015](https://cloud.githubusercontent.com/assets/760983/18956531/a0d2582c-8653-11e6-9459-ab7988621bc8.png)
- VSCode Version:1.5.3
- OS Version: Fedora 23

When I git-revert a file, it can't be edited.  File appears in tab, but selecting that tab doesn't update the body from the previously selected file.  

In attached screenshot, .ts file tab is selected, but shows .scss content (and typing updates the latter)

Steps to Reproduce:
1. Edit a file
2. revert with VSC git tool

Workaround:

Restart VSC (reopening file doesn't work)
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12998</IssueID>
    <Title>`quickOpenNavigateNext` broken?</Title>
    <Description>I have below keybinding configuration (to restore the old `cmd+e`) and it use to open a file when I release press/release `cmd+e` in the quick view. This stopped working (today?) and I have to press `enter` to open a file

```
    {
        "key": "cmd+e",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+e",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    }
```
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12995</IssueID>
    <Title>Can't scroll in embeded terminal</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T13:06:49.879Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Open an embeded terminal
2. Execute a command with a long result
3. Scroll with mouse to see result : the result will not moce
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12993</IssueID>
    <Title>Cmd-X does not delete/cut the current line</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (6746e53a611ecb3e0777fca6a4c8387dc392513f, 2016-09-29T06:04:54.045Z)
- OS Version: Darwin x64 15.6.0
- Extensions: `QassimFarid.ejs-language-support-0.0.1`, `alefragnani.project-manager-0.10.0`, `bradgashler.htmltagwrap-0.0.3`, `donjayamanne.githistory-0.0.12`, `formulahendry.auto-rename-tag-0.0.7`, `tuxtina.json2yaml-0.1.1`, `waderyan.gitblame-1.3.0`, `wcwhitehead.bootstrap-3-snippets-0.0.7`, `wmaurer.join-lines-0.1.5`

Steps to Reproduce:
1. Cmd-X does not delete (cut) the current line. You have so select the line (Shift-Down) to select and then it Cut.

It's happening from this latest build.
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12992</IssueID>
    <Title>git.path doesn't work</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 7 64bit

Steps to Reproduce:
1. Set git path to: ``"git.path": "C:\\msys64\\usr\\bin\\git.exe",`
2. You get error `ENOENT: no such file or directory, lstat 'C:\c'`

Git is not in my path and I don't want it in my path because it brings along bash which is hindering with msys and so on. 
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12959</IssueID>
    <Title>Adding a new dependency to an installed extension pack does not yield "would you like to install dependencies" prompt</Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/12658

Repro steps:
1. adding a new extension to the dependencies of a published and installed extension pack
2. increment the version of the extension pack
3. update the extension pack from VSCode

Expected: prompt asking if I also want dependencies to be installed
Actual: no prompt, which seems inconsistent with the rest of the experience
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12958</IssueID>
    <Title>Extension not appearing in @outdated list</Title>
    <Description>Testing #12658 (Windows)

After publishing [test-extension-pack-1](https://github.com/Microsoft/vscode-extension-samples/tree/master/extension-deps-sample), I updated it to add another dependency to it, and also incremented the version. After it was published, the extensions pane never updated to inform me of an updated version, and queries for `@outdated` were similarly unsuccessful. Restarting VSCode and waiting did nothing either.

Eventually, I searched the marketplace for that extension, and it popped up into the list, with the appropriate Update / Uninstall buttons, which in turn prompted the outdated list to be updated (extension appears in `@outdated` query)
</Description>
    <CreatedDate>29/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12955</IssueID>
    <Title>Installing an extension pack should also list other dependencies it intends to install</Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/12658

Right now a popup appears asking if I want to install dependencies of the extension pack, which of course begs the question... "what are the dependencies?" More visibility into this would be helpful. 
![image](https://cloud.githubusercontent.com/assets/762848/18936227/8ecba7e6-859a-11e6-92eb-52e97fd08a28.png)
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12925</IssueID>
    <Title>Allow user to pick multiple options from showQuickPick list</Title>
    <Description>I am making an extension for VSCode where I present the user with a list using `showQuickPick()` like so:

&lt;img width="908" alt="screen shot 2016-09-28 at 11 40 55 am" src="https://cloud.githubusercontent.com/assets/1553055/18927371/75c0a820-8570-11e6-9843-0dc334839170.png"&gt;

From what I understand, this way allows user to only pick one item out of the whole list. Is there a way to allow user to pick multiple items? I could not find anything for this on the [vscode namespace API](https://code.visualstudio.com/docs/extensionAPI/vscode-api).
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12921</IssueID>
    <Title>Markdown preview clipped when VS Code is zoomed in</Title>
    <Description>- VSCode Version:1.6.0 insiders
- OS Version: Windows 7

Steps to Reproduce:
1. Open and Markdown file and zoom in several levels.
2. Open Preview

The preview is clipped.

![markdownzoomin](https://cloud.githubusercontent.com/assets/12818376/18926543/12289528-856d-11e6-964b-faa5c82b0f96.png)
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12912</IssueID>
    <Title>Updating an extension should present the version of the update</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (c94c824db64a88bd4909da2e84e44316dbf8e8fb, 2016-09-28T06:23:37.103Z)
- OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04
#12647

Updating from v1 to v2 could cause issues for users.

![image](https://cloud.githubusercontent.com/assets/2193314/18925290/47cc5534-8568-11e6-8970-4c6036526254.png)
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12904</IssueID>
    <Title>Installing an extension with dependencies that are already installed still displays install dependencies dialog</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (c94c824db64a88bd4909da2e84e44316dbf8e8fb, 2016-09-28T06:23:37.103Z)
- OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04
#12647

Related to #12901

I tried installing an extension with a dependency that I already had installed, it asked me if I wanted to install the extension's dependencies and it did not do anything as far as I'm aware as I already had the extension installed.
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12903</IssueID>
    <Title>Debug console input has a large gap on the left</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/323878/18923930/14865df0-8563-11e6-8dfd-e3fbad42eb62.png)
That text is as far left as I can go
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12901</IssueID>
    <Title>Details of extension dependencies should show up in details or contributions tab</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (c94c824db64a88bd4909da2e84e44316dbf8e8fb, 2016-09-28T06:23:37.103Z)
- OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04
#12647

Publishing an extension with extension dependencies does not show the dependencies anywhere, meaning an "empty" extension with 100 dependencies could exist and radically change the environment without warning the user.
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12886</IssueID>
    <Title>Feature request: disable an extension without uninstalling</Title>
    <Description>i wonder if vscode provides a method to disable an extension without uninstalling it
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12869</IssueID>
    <Title>As a user, I should be able to see the extension dependencies in the extension editor</Title>
    <Description>Render dependencies of an extensions in the editor
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12868</IssueID>
    <Title>Preview window and zoom rendering issue.</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Use the zoom feature on the editor (Ctrl/=)
2. Open the Preview Window.
   The Preview window will not open zoomed. It will only show as much text as is visible in the editor window. Using the zoom hot keys causes the Preview Window to jump to the correct zoom.
   If you open a second Preview Window by clicking on a link the new Preview Window is correctly zoomed. However if you close the second Preview window the firs one reverts to its original unzoomed state.
   ![vs code zoom](https://cloud.githubusercontent.com/assets/16834359/18905731/68008fe8-855c-11e6-879c-33657e0ff1cf.png)
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12863</IssueID>
    <Title>"Copy Full path" and "Open Containing Folder" should also e present in on the context menu of file open</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Version 1607 OS Build: 14393.187

Steps to Reproduce: "Copy Full path" and "Open Containing Folder" should also be present as present in VS Community. Snapshots are added as attachments:
1.  This snapshot shows where the options are to be added
   ![1](https://cloud.githubusercontent.com/assets/16834561/18901966/e15e0ef0-856c-11e6-948a-52ef372bf723.png)
2.  This snapshot shows the options present in VS Community
   ![2](https://cloud.githubusercontent.com/assets/16834561/18901984/fdfd43f0-856c-11e6-88e6-d7599d36947d.png)
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12861</IssueID>
    <Title>on windows can't open line with absolute path on windows</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:

 as you can see when i use -g option with absolute path, i got error.
"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:COLUMN))`."
</Description>
    <CreatedDate>28/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12824</IssueID>
    <Title>Markdown Preview View Has Incorrect Size With Zooming</Title>
    <Description>- VSCode Version: 1.6 Insiders
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. Open markdown preview of document
2. Zoom in or out

![sep-27-2016 14-25-20](https://cloud.githubusercontent.com/assets/12821956/18892404/3f734ece-84be-11e6-80b1-5e4792203df0.gif)

When zooming in, the markdown preview pane shrinks in the editor window (see location of scrollbars). When zooming out, the preview document grows beyond the editor window and the scroll bars are hidden.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12819</IssueID>
    <Title>Asyncawait + Fibers = extension errors</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: 10.10.5

I created a new extension using `asyncawait` which utilizes `node-fibers`:

```
"dependencies": {
    "asyncawait": "^1.0.6",
    "bluebird": "^3.4.6",
    "copy-paste": "^1.3.0",
    "open": "0.0.5",
    "request": "^2.74.0"
  }
```

```
'use strict';

const vscode = require('vscode');
const request = require('request');
const copyPaste = require('copy-paste');
const open = require('open');
const async = require('asyncawait/async');
const await = require('asyncawait/await');
const Promise = require('bluebird');
```

I get the following error when starting up my extension:

```
Activating extension `MyLaptop.vscode-myextension` failed: `/Users/user1/Repos/vscode-myextension/node_modules/fibers/bin/darwin-x64-v8-4.9/fibers.node` is missing. Try reinstalling `node-fibers`?.
Activating extension `MyLaptop.vscode-myextension` failed:  `/Users/user1/Repos/vscode-myextension/node_modules/fibers/bin/darwin-x64-v8-4.9/fibers.node` is missing. Try reinstalling `node-fibers`?
Here is the error stack:  Error: `/Users/user1/Repos/vscode-myextension/node_modules/fibers/bin/darwin-x64-v8-4.9/fibers.node` is missing. Try reinstalling `node-fibers`?
    at Object.&lt;anonymous&gt; (/Users/user1/Repos/vscode-myextension/node_modules/fibers/fibers.js:16:8)
    at Module._compile (module.js:413:34)
    at Object.Module._extensions..js (module.js:422:10)
    at Module.load (module.js:357:32)
    at Function.Module._load (module.js:314:12)
    at Function.L.I.n._load (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:12:25921)
    at Module.require (module.js:367:17)
    at require (internal/module.js:16:19)
    at Object.&lt;anonymous&gt; (/Users/user1/Repos/vscode-myextension/node_modules/asyncawait/src/fibers.js:1:92)
    at Module._compile (module.js:413:34)
```

I reinstalled `node-fibers` but continued to get the same errors. I know there were some issues a while back (#1556) and I'm not sure if this is related or not. I don't see any issues related to `node-fibers`. Any clues?

Also, I'm using just plain JS. Not TypeScript for the extension.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12808</IssueID>
    <Title>`create eslint` matches nothing</Title>
    <Description>Found while testing #12601
- VSCode Version: 1.6
- OS Version: OS X 10.11.6

![eslint](https://cloud.githubusercontent.com/assets/4033249/18885977/dd84c280-84a2-11e6-8ad1-14d2a42389ec.gif)
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12799</IssueID>
    <Title>How does a user know what settings are overridden by an extension?</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (f62883f07422cae4b53c2a185b105091460a0a85, 2016-09-27T13:07:11.616Z)
- OS Version: Linux x64 4.4.0-38-generic, Ubuntu 16.04
#12614

Steps to Reproduce:
1. Set `"terminal.integrated.cursorBlinking": true` in your settings.json
2. Run an extension containing:
   
   ``` ts
   vscode.workspace.getConfiguration()
     .update('terminal.integrated.cursorBlinking', false, false);
   ```
3. Try to figure out why `"terminal.integrated.cursorBlinking": true` is not working
4. File a bug to Microsoft/vscode
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12768</IssueID>
    <Title>Terminal.processId is null immediately after creating the terminal</Title>
    <Description>Testing #12595 

```
context.subscriptions.push(vscode.commands.registerCommand('extension.createTerminal', () =&gt; {
        if (!myTerminal) {
            myTerminal = vscode.window.createTerminal('my terminal', 'bash', ['-v']);
            myTerminal.processId.then(value =&gt; {
                vscode.window.setStatusBarMessage('' + value);
            });
        }
    }));
```

Above code fails because, myTerminal.process is null. 
This is not expected because it is a promise.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12745</IssueID>
    <Title>Allow dragging extension from the extension viewlet into the extensions.json file</Title>
    <Description>- VSCode Version: 1.6.0 - Insider
- OS Version: Windows

Dragging an extension would be cool to add it to the extensions.json. Even copy &amp; paste would help. I now have to know the id which is hard to find and copy. The only place I found for the id was the URL in the browser.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12738</IssueID>
    <Title>Problems: Activity for panels not updated </Title>
    <Description>Testing https://github.com/Microsoft/vscode/issues/12643

I had 2 errors but the hover was still reading "No Problems" in the sidebar.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12731</IssueID>
    <Title>some time files code will become same</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:
1. open two files swap multiple time and change some code 
2. you will find the same code in both the file even if you close file and open again it will refer the existing open file code.
3. currently we are closing the application and opening again then it is working fine
4. This is happening so may time getting irritate because suddenly your code will be same in both the files.
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12727</IssueID>
    <Title>VScode does not run/load without internet. New window crashes when No connectivity.</Title>
    <Description>- VSCode Version: 1.5.3 
- OS Version: Windows-7 Professional

Steps to Reproduce:
1.  Open VScode without Internet connectivity.(No wifi or Lan connectivity). It does not run.
2.  Open VScode, disable lan connectivity. Open new VScode window (Ctrl+shift+N). VScode crashes.
   ![vscode_crash](https://cloud.githubusercontent.com/assets/13175348/18865914/3f5528b6-84bb-11e6-886c-f16cec662610.jpg)
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12710</IssueID>
    <Title>Ability to disable extensions</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (be5e8d5733c1c012d7e3a6c7e049b59d67c13978, 2016-09-26T06:05:01.421Z)
- OS Version: Darwin x64 16.0.0

It would be great if one could disable extension (as opposed to uninstalling it)

Something similar to how Chrome allows to Disable or Uninstall extension
![image](https://cloud.githubusercontent.com/assets/1723815/18858912/ab02ce84-843d-11e6-833e-613a1e5f6a38.png)
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12709</IssueID>
    <Title>Cannot read property 'toCustomLabel' of undefined</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (be5e8d5733c1c012d7e3a6c7e049b59d67c13978, 2016-09-26T06:05:01.421Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Started vscode
2. Hit Cmd+Shift+F

Got this:

![image](https://cloud.githubusercontent.com/assets/1723815/18858799/b8e824fa-843c-11e6-9644-3f9549132fb8.png)
</Description>
    <CreatedDate>27/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12693</IssueID>
    <Title>Cant drag select upwards in console</Title>
    <Description>- VSCode Version: latest
- OS Version: osx latest

Steps to Reproduce:
1. highlight text in bottom of debug console.
2.  drag up. 
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12672</IssueID>
    <Title>Can we get this request off the startup path, pretty pretty please</Title>
    <Description>Opening a folder when connected to VPN:

(Dev Tools doesn't want to save the profile)

`syncWithGallery`

I get it, it's a node/electron weirdo bug or something, but pretty pretty please, TPromise.timeout(5000)

btw @bpasero : I also think we do such a request in some other important process (main?) because it also takes 1-2s since I press the Open Folder until the window actually goes blank and loads something...

![image](https://cloud.githubusercontent.com/assets/5047891/18849157/50f277bc-843a-11e6-959c-ab3477cc08eb.png)
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12668</IssueID>
    <Title>Expose API to know current theme (light/dark)?</Title>
    <Description>I'd like to propose that the API which is used to determine whether the current theme is light/dark be made public (if possible) so that extensions can use it to style their components. I've felt the need for this while redesigning the [git history](https://github.com/DonJayamanne/gitHistoryVSCode) extension where the plugin itself is hosted within a webview, and thus can't access the parent's classes to determine whether the vscode editor has dark or light theme.
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12667</IssueID>
    <Title>String autocomplete issue with dots</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (be5e8d5733c1c012d7e3a6c7e049b59d67c13978, 2016-09-26T06:05:01.421Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Trying to change `../Error` to `../../Error` (by typing quickly `..`) - it puts one dot and autocompletes with first intellisense word
2. 
   ![cu5bb2zvvm](https://cloud.githubusercontent.com/assets/1723815/18846813/a77807ea-83f5-11e6-8fba-277b3d705bee.gif)
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>29/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12644</IssueID>
    <Title>Add support for side-by-side diff between branches</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: macOS Sierra

I love the git integration that let's me see the diff between my current state and the previous commit. I haven't discovered a way yet to compare a file between branches in the same side-by-side view, and I would find that very helpful.
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12606</IssueID>
    <Title>Test: Bundling extensions from Marketplace at build time</Title>
    <Description>Test for #12018
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12605</IssueID>
    <Title>Test: Release notes in the product</Title>
    <Description>Test for #10179
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12592</IssueID>
    <Title>plugin upgrade bug</Title>
    <Description>- VSCode Version:1.5.3
- OS Version: mac

Steps to Reproduce:
1. publish two version of my plugin in one hour
2. go to extensions tab
3. update plugin
4. press `enable` to restart
5. go to extensions tab and `update` is still warning.

![image](https://cloud.githubusercontent.com/assets/227713/18821808/32991342-83dc-11e6-91cf-37c7293534fc.png)

![image](https://cloud.githubusercontent.com/assets/227713/18821826/52e55034-83dc-11e6-94cd-5402bd43d939.png)
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12589</IssueID>
    <Title>Extention Update number tips</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1.  What's the meaning of three?

![2016-09-26_081100](https://cloud.githubusercontent.com/assets/8591065/18819433/86214778-83c3-11e6-9330-829f9ee307d0.png)

after i updated 
![2016-09-26_084152](https://cloud.githubusercontent.com/assets/8591065/18819547/177572e8-83c5-11e6-9b76-2b84a8e57b5d.png)
</Description>
    <CreatedDate>26/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12581</IssueID>
    <Title>Accessibility : High contrast mode, menu items not visible</Title>
    <Description>- VSCode Version: Code 1.5.3 (5be4091987a98e3870d89d630eb87be6d9bafd27, 2016-09-22T08:50:42.185Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:

1) Set High contrast black theme ( in windows : Setting -&gt; Ease of Access -&gt; High Contrast)
2) Open Vscode 

Menu items are not visible. They are only visible on hover as shown below.

![vsc](https://cloud.githubusercontent.com/assets/2761516/18817450/1e949cb2-837e-11e6-81d2-8c220eb24adc.png)
</Description>
    <CreatedDate>25/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12579</IssueID>
    <Title>Separate themes for separate windows</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Anniversary Update
## Symptom

Changing the theme in one VSCode window changes the theme for all open windows.
## Steps to Reproduce
1. Open two or more Visual Studio Code windows (keyboard: `CTRL + SHIFT + N`)
2. Change the VSCode theme in one of the windows
3. Notice that all of the windows change colors
## Expected Behavior

Only the current window's theme changes, when changing the theme.

Cheers,
**Trevor Sullivan**
Docker Captain
Microsoft MVP: Cloud &amp; Data Center Management
https://trevorsullivan.net
https://twitter.com/pcgeek86
</Description>
    <CreatedDate>25/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12545</IssueID>
    <Title>Shows number on extensions icon when no extensions installed</Title>
    <Description>- VSCode Version: Code - Insiders 1.6.0-insider (d81ee41c51cae93a5cac967e42a28660a3a7e005, 2016-09-23T06:10:40.972Z)
- OS Version: Windows_NT ia32 10.0.14393

I had two extensions which needed updating on the Insiders Build. I updated them, but skipped the "Enable" and restart part to install the new Insider build. When I did that, it still has the number 2 on the extension icon (updates?). I've tried uninstalling all extensions, and even completely uninstalling Insiders (do not have regular version even installed), and also deleted the .vsinsiders-code folder in my home folder and the one under AppData\Roaming\Microsoft. So I don't know what this number means unless it is bug. Also tried reinstalling both extensions (C# and PowerShell) after, no good. Shows no extensions need updating but still has number "2" on extension icon.

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12544</IssueID>
    <Title>VSCode automatic update fails </Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:05:12.065Z)
- OS Version: Darwin x64 16.0.0

Steps to Reproduce:
1. Click Update Now in prompt "Visual Studio Code will be updated after it restarts."
2. After VSCode restarted prompt "Visual Studio Code will be updated after it restarts." appears again and in "About Visual Studio Code" neither version nor related commit has been changed. 

Are there any update logs? And does Visual Studio Code store files outside of ~/Application Support/Code - maybe filesystem permissions are missing.
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>27/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12541</IssueID>
    <Title>Allow opening the same folder in the explorer view as another instance of VS Code</Title>
    <Description>- VSCode Version:1.5
- OS Version: Windows 10

Steps to Reproduce:
1. Open the explorer window to a folder location
2. Open a new instance of VS Code. Attempt to open the same folder in explorer and VS Code activates the previous instance.

This behavior isn't desired if I'm trying to do a find in files and I need to compare the results. A setting to disable this behavior would be nice. I would like to have two instances of VS Code open to explore the same folder location.
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>24/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12540</IssueID>
    <Title>Extension Icon showing incorrect count</Title>
    <Description>- VSCode Version: 1.6.0 Insider
- OS Version: OS X 10.11.6

Steps to Reproduce:
1. Open VSCode with some extension installed
2. All of them are up to date, but VSCode is showing 2 in the extension icon

![image](https://cloud.githubusercontent.com/assets/4033249/18795535/e423fd62-8179-11e6-9b76-72856dcbeaeb.png)
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12535</IssueID>
    <Title>Extension View icon shows outdated but no extensions are outdated.</Title>
    <Description>- VSCode Version:1.6 insiders
- OS Version:Windows 10

Note: This is a recent regression and only showed up with the latest insiders build. d81ee41c51cae93a5cac967e42a28660a3a7e005

Steps to Reproduce:
1. With just two extensions installed (DavidAnson.vscode-markdownlint-0.5.0 and seanmcbreen.Spell-0.8.6), look at Extension View icon

![outdatedext](https://cloud.githubusercontent.com/assets/12818376/18793708/e5378d12-8170-11e6-96ef-ecf512a77a11.png)

The "Show Outdated Extensions" query also doesn't show any results. 

The installed extension versions match the latest Marketplace versions.
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12523</IssueID>
    <Title>UI bug</Title>
    <Description>- VSCode Version: Version 1.6.0-insider (1.6.0-insider)
- OS Version: macOS Sierra 10.12 (16A323)

Steps to Reproduce:
1. Open the app
   ![screen shot 2016-09-23 at 10 55 23](https://cloud.githubusercontent.com/assets/13774283/18788169/473da69e-817c-11e6-9095-96ed88a39b89.png)
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12516</IssueID>
    <Title>Extension viewlet shows (1) but nothing to update</Title>
    <Description>Today's insiders:

![image](https://cloud.githubusercontent.com/assets/5047891/18786421/75dd4930-81a6-11e6-9e1e-9740c1599a6a.png)

![image](https://cloud.githubusercontent.com/assets/5047891/18786413/6c4a3752-81a6-11e6-8897-4c3684a9ac56.png)
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12502</IssueID>
    <Title>VS code not responding</Title>
    <Description>- VSCode Version: Code 1.5.3 
- OS Version: Windows 10

Hi, have a problem with my vs code after i've done this.
Steps to Reproduce:
1. Install HTML CSS completion
2. Cache css classes on workspace.
   
   Vs code completely stops working. Does any one has an idea??
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12499</IssueID>
    <Title>Colourful tasks panel output</Title>
    <Description>- VSCode Version: 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b)
- OS Version: Linux version 4.7.4-1-ARCH (builduser@tobias) (gcc version 6.2.1 20160830 (GCC) ) #1 SMP PREEMPT Thu Sep 15 15:24:29 CEST 2016

Steps to Reproduce:
1. Define some task in tasks.json - probably good if gives colorful output in term
2. Execute task to see plain colorless output which gets unreadable with size :sigh:
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12497</IssueID>
    <Title>Extension published, tested, uploaded, refuses to install - "not found".</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10

I wrote a simple extension today and published it for use. 1.0.0 apparently published successfully and appeared on the marketplace and in the extensions list, but attempts to install it failed, as per this issue. I then wondered if the publish had silently failed somehow, so I published a minor 1.0.1 update, and that seemed to work. After I used it for a few minutes, I found a minor issue that I wrote a small fix for, and then published a 1.0.2 update, and though it appeared in the marketplace as it should, I was unable to update from 1.0.1. After I restarted vs code, the extension failed to load at all and I discovered that the extension folder had only a manifest file and none of the other files in the extension package. I tried then installing it from the command line and got an HTTP 500 error.

I then tried unpublishing and republishing, to no avail. I also tried updating the version to 1.0.3 and though the publish appeared to complete successfully, VS Code refuses to download and install it locally. I have verified with a friend who lives in different country and uses a different OS, and he is experiencing the same issue.

Steps to Reproduce:
1. Verify that the extension exists in the marketplace: https://marketplace.visualstudio.com/items?itemName=NathanRidley.autotrim
2. Try to install it in vs code ("autotrim")
3. Error: "extension not found"
4. Try installing from command line
5. "Extension 'NathanRidley.autotrim' not found."

![image](https://cloud.githubusercontent.com/assets/298883/18776079/126ca270-81aa-11e6-8100-ba6db800cf78.png)

![image](https://cloud.githubusercontent.com/assets/298883/18776179/d0ca7dc8-81aa-11e6-907a-dff7233dd266.png)

![image](https://cloud.githubusercontent.com/assets/298883/18776189/e52d2fcc-81aa-11e6-990b-f01070321626.png)

![image](https://cloud.githubusercontent.com/assets/298883/18776199/fb44c0ae-81aa-11e6-9250-58260f165f78.png)
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12495</IssueID>
    <Title>Find: Replace text field clipped</Title>
    <Description>&lt;img width="998" alt="screen shot 2016-09-22 at 9 12 56 pm" src="https://cloud.githubusercontent.com/assets/37226/18771028/85306f0e-8109-11e6-9ecb-dd9f7337b8e3.png"&gt;
</Description>
    <CreatedDate>23/09/2016</CreatedDate>
    <ClosedDate>26/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12492</IssueID>
    <Title>Show recently opened folders from windows taskbar</Title>
    <Description>- VSCode Version: 1.5.3
- OS Version: Windows 10 Home (1607)

Steps to Reproduce:
1. Have Windows OS
2. Pin VSCode to taskbar
3. Open and close multiple folders
4. Right click VSCode taskbar icon
5. Notice no recently opened folders/files :(

And it would be cool if shift-clicking the taskbar icon would open another instance. But that's even more minor than this minor feature request.

Great Job on it so far though! Loving it!
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12483</IssueID>
    <Title>Terminal dont work,wenn folder is open .maestrotwors@gmail.com</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14926

**Terminal dont work,wenn folder is open**

Steps to Reproduce:

Roman Rakzin
maestrotwors@gmail.com
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12474</IssueID>
    <Title>theme background rendering problem</Title>
    <Description>- VSCode Version: Version 1.5.3 
- OS Version: macOS Sierra 10.12

Since upgrading to Sierra I see the rendering glitch in all themes except those with solid black or white background.  ##

&lt;img width="1017" alt="screen shot 2016-09-22 at 20 18 53" src="https://cloud.githubusercontent.com/assets/22377822/18760570/f2e74aca-8101-11e6-8b77-ea6121dcafaa.png"&gt;
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>22/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12450</IssueID>
    <Title>Multiple Save dialogs when pressing Save multiple times</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10

Steps to Reproduce:
1. Open New File
2.  Press Ctrl + S many times

---

Many windows to save open. It is expected that only one window open, even if I press several times
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12432</IssueID>
    <Title>URL handling doesn't work in Windows</Title>
    <Description>
    </Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>28/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12425</IssueID>
    <Title>Code is not getting a proper focus when opening from command line</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 7
- **Not** running VSCode as administrator or with any compatibility options enabled.

I'm not sure if this is a _bug report_ or a _feature request_, so please let me know if this is happening just to me / just to Windows 7 / etc.

Steps to Reproduce:
1. Use command line to open VSCode _(with or without a file being specified)_
2. Behold at the blinking Code's taskbar item and not at the Code's window, which - by my opinion - should have been thrown on the top of other windows.

**Some visual context:**

![bug](https://cloud.githubusercontent.com/assets/6860713/18738777/0ed7d596-809f-11e6-839c-9a97790fa516.gif)

This is happening when I'm trying to run Code from/using:
- WScript's `shell.exec()`
- Total Commander's command line _(as in the pic)_
- Windows' `cmd.exe`
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>22/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12416</IssueID>
    <Title>Stop and not respond</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:

1.when open the folder the VSCode is stop and not respond.
2.display in status bar this message "looking for css classes on the workspace".
</Description>
    <CreatedDate>22/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12401</IssueID>
    <Title>Make VS Code Portable</Title>
    <Description>Enable to install VS Code on portable media like USB disk. 

Request from [User Voice ](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7760061-visual-studio-code-portable)\- 946 votes. 
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>25/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12395</IssueID>
    <Title>SQL Language mode incorrectly interprets a backslash as an escape character.</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Any

Steps to Reproduce:
1.  Use a the sequence, `\'` at the end of a string literal.
2.  Observe that code following step 1. is incorrectly colorized until it hits another singlequote.

A code sample:

```
DECLARE @var nvarchar(20);

SET @var = 'C:\this\work\sok';
PRINT @var;
SET @var = 'C:\this\causes\issues\because\of\trailing\backslash\'
PRINT @var;
-- It's valid SQL, but the colorizer is puking on it, as you can see from this line and the previous;
-- the backslash is not a valid escape character in SQL.

```

![screencap](https://cloud.githubusercontent.com/assets/898803/18719883/7b89e3a0-7fe6-11e6-8454-5c4de667a252.jpg)
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12392</IssueID>
    <Title>showInputBox: Default value not returned on ENTER</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10

**Steps to Reproduce:**
1. Create an extension with the following code.

```
        vscode.window.showInputBox({ value: "A default value", prompt: "Provide some information", placeHolder: "", password: false }).then((info) =&gt; {
            if (info !== undefined &amp;&amp; info.length &gt; 0) {
                vscode.window.setStatusBarMessage(info);
            } else {
                vscode.window.setStatusBarMessage("no value provided");
            }
        });
```
1. Invoke the command but do not change the value from the default (you want to take the default value).
2. Press ENTER.

**Result:** "no value provided" is displayed in status status bar.  In the debugger, the value of info is "".
**Expected:** "A default value" is displayed in the status bar.

I get the Expected result on VS Code 1.4.0.

If you update the value but keep it the same (e.g., delete the last 'e' and then re-type the 'e', then press ENTER), "A default value" is displayed in the status bar.  If you change the value to any other value, that other value is displayed as expected.

Perhaps related to #12246?
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>22/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12363</IssueID>
    <Title>Add search function on Preview page of Markdown file</Title>
    <Description>Current VS code doesn't support Ctrl + F to do search on Preview page of Markdown file.
Could you please add it? Thanks.
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12357</IssueID>
    <Title>Cmd+Q doesn't auto-save workspace state</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Os X 10.11.6 - El Capitan

Steps to Reproduce:
1. Create a file and do not save it.
2. Hit on Cmd+Q (Quit)

Would be nice if app could just quit and when reopening just load the previous state.

This is more a Feature request than an issue.
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12355</IssueID>
    <Title>output window has no colour</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Arch linux

Steps to Reproduce:
1. Configure a build task (in my case, make), which emits output with colour
2. Execute the task

Notice that output in the output pane that should have colour, doesn't.
I feel colour blind! &gt;_&lt;
</Description>
    <CreatedDate>21/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12343</IssueID>
    <Title>Emoji characters crashing Code</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Use emojis on TSX files
2. Try to delete an emoji (sometimes Backspace inserts an unknown symbol (an ? inside a losang), most of the times, it just crashes)

Code:
`&lt;a href="javascript:void(0)"&gt;&lt;em&gt;📚&lt;/em&gt;Artigos&lt;span className="count"&gt;3&lt;/span&gt;&lt;/a&gt;`

Workaround:
1. Select and [delete] the emoji character
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12339</IssueID>
    <Title>Override theme css</Title>
    <Description>IS there any way to override theme css?

e.g. add background color or line-height to '.monaco-workbench' element?

I can see I can override a lot of coding style/highlighting from *.tmTheme file but not the editor's UI css.
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12334</IssueID>
    <Title>GoToDefinition is not available in [metadata] files</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 7 x64

Steps to Reproduce:
1. Have a C# project with the content:
   
   ``` cs
   class Foo
   {
       System.Collections.Generic.List&lt;int&gt; bar;
   }
   ```
2. Invoke &lt;kbd&gt;F12&lt;/kbd&gt; `GoToDefinition` on `List` to be taken to the metadata file for `List`1` (`public class List&lt;T&gt; : IList&lt;T&gt;...`
3. In this file, `GoToDefinition` is not an option on `IList&lt;T&gt;` and pressing &lt;kbd&gt;F12&lt;/kbd&gt; on it does nothing.

Other language service things like tooltips are also not available.
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12326</IssueID>
    <Title>Home - Go to Beginning of Line (real)</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Win10

Steps to Reproduce:
1. put cursor in line, which starting with tabs or spaces
2. press "Home"-key

Exp.: cursor in start of the line, as wrote in help ( https://code.visualstudio.com/docs/customization/keybindings ) - "Go to Beginning of Line"

Act.: cursor before first non space character.

Can you add setting for "Home" key to really "Go to Beginning of Line"?

thank you.
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12321</IssueID>
    <Title>Sub menus by extensions in explorer context menus,item menus</Title>
    <Description>![jmhsx0hmk4ogh 5i 5u1wyr](https://cloud.githubusercontent.com/assets/3353702/18671439/a8c538bc-7f76-11e6-8e40-6f7d377f2bd0.png)
1.I want to have explorer context menus like this 。how to do？I don't know how to configure the json file
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12310</IssueID>
    <Title>JavaScript code coloring break when using ES6 destructuring of Objects spread on multiple lines</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10 14393.187

Steps to Reproduce:

![image](https://cloud.githubusercontent.com/assets/5426427/18665918/b6374726-7f29-11e6-9389-cc61b5594e73.png)
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12292</IssueID>
    <Title>Artifacts in UI after Code is open for a little while</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14915

Steps to Reproduce:
1. Sorry, no specific steps to repro

After having VS Code open for a while, editing multiple tabs, etc., sometimes the UI will become corrupted as in the following screenshot, and every action taken (moving the cursor, switching tabs, typing, resizing the window, etc.) causes the black squares and unrendered text in the window to move around).

The amount of time VS Code is open before corruption can occur, or number of tabs opened before corruption occurs seems random. I've seen this start when as few as 1 tab (or even a lot of tabs) are open, or if it has been running for as little as a couple minutes, up to many hours.

The only workaround seems to be to restart VS Code which is a pain especially because it doesn't have an automatic session restore like Notepad++ does.

I've been encountering this issue periodically since Insiders 1.3 or so but I've been trying to get some kind of reliable repro before reporting -- but I've been unable to do so, so I'm reporting it now.

![image](https://cloud.githubusercontent.com/assets/494055/18653633/009c6eda-7e90-11e6-8ad1-2e57646397ea.png)
</Description>
    <CreatedDate>20/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12275</IssueID>
    <Title>Ability to auto detect encoding when opening a file which is not encoded in UTF-8</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10 1607 64bit

Steps to Reproduce:
1. Open a file which is not encoded in UTF-8(etc, contains Chinese characters, encoded in GBK)
2. the Chinese characters are not displayed correctly.
3. Reopen with encoding, and choose Chinese(GBK), the Chinese characters are displayed correctly.

I hope VSCode can auto detect the file encoding when opening, and open with the correct encoding, not need to reopen with correct encoding manually.

Thank you.
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12270</IssueID>
    <Title>ctrl-shift-f in output window does not populate the search box with text</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Arch

Steps to Reproduce:
1. Highlight text in output window
2. ctrl-shift-f (find in files)

Notice that the highlighted text has not populated the find box like it does in editor windows.
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12262</IssueID>
    <Title>Ability to listen for command events in the extensions API: `onCommand(...)`</Title>
    <Description>When creating an extension the author can activate it by listening for a specific command event, however this is the only time when an extension can seemingly respond to a command.

It would be very useful to have an `onCommand(...)` type listener option.

My use case was creating an status bar extension that could watch for build tasks `workbench.action.tasks.build`, and then also listen for `workbench.action.tasks.terminate` to be able to show an icon to illustrate the watching task, and provide and option for terminating it through the UI.

However I believe this functionality would be very useful to other extensions, as would an API for checking running task statuses etc. but that's a separate issue.
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>23/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12261</IssueID>
    <Title>Is there a plan to develop 64bit version on Windows?</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10 1607 64bit

Steps to Reproduce:

I hope there is a 64 bit version of VSCode on Windows.

Thank you .
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12258</IssueID>
    <Title>rxjs `switch()` method breaks syntax highlighting</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows

Steps to Reproduce:

1 Paste the following code into a new file `foo.ts`

```
declare const Observable: any;

const interval$ = Observable.interval(1000);

interval$
    .map(x =&gt; Observable.fromEvent(window, 'click').takeUntil(interval$.filter(x =&gt; x &gt; 10000)))
    .switch()
    .subscribe(foobar);

function foobar(x) {
}
```

2 Notice syntax highlighting for the code after the `switch()` method call no longer works:

![image](https://cloud.githubusercontent.com/assets/2899448/18627539/c5386724-7e5b-11e6-95ad-63dc3f88e22f.png)

3 Uncomment the `switch()` method call and notice all is fine with the syntax highlighting:

![image](https://cloud.githubusercontent.com/assets/2899448/18627599/206f2df8-7e5c-11e6-9f10-2c671233bfbf.png)

I believe that VSCode is getting confused because `switch` is also a Javascript statement.
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12255</IssueID>
    <Title>Debug: breakpoint doesn't work with `babel-register` and source maps</Title>
    <Description>- VSCode Version:
  1.5.2 
- OS Version:
  OS X El Capitan 10.11.6

Steps to Reproduce:
Use [this](https://github.com/yanivefraim/vscode-node-debug) example repo in order to reproduce the issue (clone + npm install + from vscode choose `launch`/`launch mocha` + F5)

When debugging node (index.js/mocha tests) using `babel-register` + source maps, breakpoint does not function (explicit `debugger` statement does work). 

See examples on those videos:
https://youtu.be/iNNb5Driawg
https://youtu.be/olBJ5HWT-Cw
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12244</IssueID>
    <Title>showInputBox does not pass preset value</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: OSX 10.11.6

Steps to Reproduce:
1. use `vscode.window.showInputBox`
2. pass a string to the `value` options field
3. Hit enter

Please have a look at the following code:

``` typescript
window.showInputBox({
    prompt: 'Please enter a variable name for the default export',
    placeHolder: 'Default export name',
    value: declaration.name,
    validateInput: s =&gt; !!s ? '' : 'Please enter a variable name'
}).then(defaultAlias =&gt; {
    if (defaultAlias) {
        console.log('something set!');
    }
}));
```

The value in the `value` field of the options hash is not passed, when the user just hits "enter". So if the user is fine with my prediction, an empty string is passed to the promise. The problem is, that this also happens when the user hits escape.

In my opinion, `showInputBox` should pass the inserted value to the promise IF the user hits enter and `undefined` when the user hits escape.

Cheers
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12236</IssueID>
    <Title>tsc output messy code</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
Win10, chinese, event change vscode local.json to locale to en, also got this problem
1. use default tsc configuration
2. CTRL+SHIFT+B
will got:
'tsc' �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12234</IssueID>
    <Title>功能建议：文档修改状态的保存</Title>
    <Description>- VSCode Version:1.52
- OS Version:win8.1

Steps to Reproduce:

 我需要一个简单而常用的功能，就是文档修改状态的保存。
平常随便记录些东西，在关闭时候不要提示我是否保存，如果我不保存，下次打开后仍然可看见编辑的内容，并且可以保存或不保存。 这样的目的是：只要我输入了内容，不管我是否保存都不会丢失（即使断电也不会丢失）。
sublime text是这种方式，这也是我一直用sublime的原因之一。
</Description>
    <CreatedDate>19/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12233</IssueID>
    <Title>VS Code won't open in xrdp session.</Title>
    <Description>- VSCode Version: 1.5.2 Linux deb version
- OS Version: Windows 10 Pro Insider Preview
- Remote Connection to: Ubuntu 16.04.1 LTS Desktop
- Linux xrdp: Xfce-session

Steps to Reproduce:
1.  On Windos 10, open Remote Desktop application
2.  Connect to Linux machine using IP Address provided.
3.  At the Xfec session, click on "Applications | Development | Visual Studio Code"

Results:
Nothing opens

Provide VS Code Verbose results:
maxt@orion:~$ code --verbose
Xlib:  extension "XInputExtension" missing on display ":10.0".
(4:29:39 PM) ### VSCode main.js ###
(4:29:40 PM) /usr/share/code/resources/app { _: [],
  paths: [],
  performance: false,
  verbose: true,
  debugPluginHost: undefined,
  debugBrkPluginHost: undefined,
  logExtensionHostCommunication: false,
  'new-window': false,
  'reuse-window': false,
  goto: false,
  diff: false,
  extensionHomePath: undefined,
  extensionDevelopmentPath: undefined,
  extensionTestsPath: undefined,
  'disable-extensions': false,
  locale: undefined,
  wait: false }
Xlib:  extension "XInputExtension" missing on display ":10.0".
Xlib:  extension "XInputExtension" missing on display ":10.0".

Try Workaround from:
https://github.com/Microsoft/vscode/issues/3451
https://github.com/Microsoft/vscode/issues/9016
https://github.com/Microsoft/vscode/issues/11873

Changing both '/usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0' and '/usr/lib/x86_64-linux-gnu/libxcb.so.1'
information: 's/BIG-REQUESTS/_IG-REQUESTS/' -&gt; Didn't work!

This issue shouldn't be resolved with a workaround. It VS Code should work like JetBrains Python Editor "PC PyCharm" in a xrdp session. 

![pycharm_2016-09-18_18-10-30](https://cloud.githubusercontent.com/assets/19892435/18619477/8f6267fc-7dcb-11e6-9795-c89446499b68.jpg)

See attached image:
![vscode_notremoting_2016-09-18_17-43-13](https://cloud.githubusercontent.com/assets/19892435/18619445/896c6b14-7dca-11e6-99c1-57ebdfc2d4a4.jpg)
</Description>
    <CreatedDate>18/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12212</IssueID>
    <Title>Add more extension-point to support more rich editor (types).</Title>
    <Description>Text editor is not enough for all. It will be much better if plugins could add more 'rich' editors, just like the extension editor.
</Description>
    <CreatedDate>18/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12199</IssueID>
    <Title>Integrated terminal is slow/laggy</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10

Steps to Reproduce:
1. Open the integrated terminal
2. Type in the console

It works as expected but every character typed in the terminal appear after 0.5~1s. I have the same setup at work but the console is responsive. So there is probably something in my home setup that don't play nicely with the integrated terminal. Note, that if I open a command prompt (or a powershell prompt) outside VSCode the prompt is responsive like I expect it to be. by the way, my computer is more than capable of running VSCode fine. To sum up, the terminal is slow only in VSCode for a reason I don't understand.
</Description>
    <CreatedDate>17/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12196</IssueID>
    <Title>Integrated terminal freezes when ever a program goes to infinite loop.</Title>
    <Description>Version 1.5.2
Commit 66f37fd2a99eb9d628dd374d81d78835b410c39b
- OS Version: Ubunutn 15.10

Steps to Reproduce:
1. Write a C program which outputs to integrated terminal in infinite loop. 
2. Run that program in integrated terminal, terminal freezes.
</Description>
    <CreatedDate>17/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12191</IssueID>
    <Title>Allow to hide the activity view bar</Title>
    <Description>- VSCode Version:1.5.2
- OS Version:Windows 10 1607 64Bit

Steps to Reproduce:
1. Open the visual studio code

I hope I can control whether to show or hide the view bar area, because I like to use the whole screen to edit.

Thank you.
</Description>
    <CreatedDate>17/09/2016</CreatedDate>
    <ClosedDate>21/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12175</IssueID>
    <Title>Open a terminal in vscode cause crash when folder 's path contain chinese character</Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: Windows 10 Pro 14383.187 

Steps to Reproduce:
1.  Open a folder which contain any chinese character in VSCode 
2.  Press `Ctrl+``
3. Terminal will exit with code 1

I don't know why, however, I think it may caused by encoding .....
</Description>
    <CreatedDate>17/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12170</IssueID>
    <Title>File name indentation is confusing when File Icon Theme is enabled</Title>
    <Description>- VSCode Version: Code 1.5.2 (66f37fd2a99eb9d628dd374d81d78835b410c39b, 2016-09-12T13:30:03.456Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Enable File Icon Theme
2. Browse files

When icons are enabled, file names are pushed right and make it look like directories are expanded:
![snip_20160916161817](https://cloud.githubusercontent.com/assets/6611598/18603764/33b8d362-7c29-11e6-815c-38d19e113ab4.png)

I believe that the file icons should line up with the directory expansion arrow icon 
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12169</IssueID>
    <Title>Show image size </Title>
    <Description>- VSCode Version: 1.5.2
- OS Version: OS X

Show image dimensions in image preview somewhere. When working with images, it's important to know their size. 
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>17/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12160</IssueID>
    <Title>Crash when debugging extension and you close the dev tools too quickly</Title>
    <Description>VSCode Version: `Version 1.6.0-insider (1.6.0-insider)` 50bb7aad57cbf1924e28472de52734be49645558
OS Version: `OS X El Capitan Version 10.11.6 (15G1004)`

Steps to Reproduce:
1. Start debugging an extension
2. After the new instance of code starts, click the restart button in the main code instance
3. When the new instance starts again its dev tools seems to open (for some reason) and if you click its close button too quickly both instances of code crash

It might take a couple of times to get it to happen, but I can reproduce it quite reliably.
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12158</IssueID>
    <Title>Resizable open editors section</Title>
    <Description>resizable open editors section

&lt;img width="664" alt="screen shot 2016-09-16 at 7 41 39 pm" src="https://cloud.githubusercontent.com/assets/1549069/18590943/e7ff8e44-7c45-11e6-815d-7dec9b4d3cbe.png"&gt;
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>19/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>12153</IssueID>
    <Title>Add file icon in file editors section</Title>
    <Description>Add File Icon in File Editors Section
for good sense (UX)

&lt;img width="443" alt="screen shot 2016-09-16 at 7 15 15 pm" src="https://cloud.githubusercontent.com/assets/1549069/18590033/8d4559b4-7c42-11e6-99ad-36696839d0a9.png"&gt;
</Description>
    <CreatedDate>16/09/2016</CreatedDate>
    <ClosedDate>16/09/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11241</IssueID>
    <Title>Task behaves different from VS built-in terminal</Title>
    <Description>- VSCode Version: 1.4
- OS Version: macOS 10.11.6

Why running the same python file with simple command: `print("данные")` shows `UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-5: ordinal not in range(128)` error if it's run as Task, while running the same file from built-in terminal shows output correctly?
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11228</IssueID>
    <Title>Editor does not open when working offline</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

I am trying to edit some php, html, css and js file on my local development machine, while working I had turnoff the internet. To my surprise it does not open when I double click on the icon from my desktop. I have also tried several other way to open it but no luck. 
I turn on the internet and it is working again. This is strange for me
Steps to Reproduce:
1. Turn off the internet
2. Open it
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11215</IssueID>
    <Title>Stop icon changes on hitting first breakpoint</Title>
    <Description>- VSCode Version: 1.5.0 insiders
- OS Version: macOS

Steps to Reproduce:
- start extension host debugging
- set and hit a breakpoint
  Observe: the stop icon changes from a red square to the crossed-plug icon.

Since the stop button really kills the extension host window, we should not use the 'disconnect' hover text and the crossed-plug icon but show the red square.
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11212</IssueID>
    <Title>No eslint configuration found</Title>
    <Description>Refs: #11100
1. Init a sample workspace with eslint
2. Delete the .eslintrc.js file
3. Notice error 'No ESLint conifguration found'
4. I would expect a more user friendly message - something that would point the user to re-initialize eslint in this repository

![screen shot 2016-08-30 at 15 18 45](https://cloud.githubusercontent.com/assets/1926584/18090462/21a795d0-6ec5-11e6-8040-6c8b0dfac4f7.png)
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11207</IssueID>
    <Title>Every restart of a node application is creating a new integrated terminal</Title>
    <Description>Testing #11091

Steps to Reproduce:
1. Clone [VS Code Smoke Test](https://github.com/Microsoft/vscode-smoketest-express) application
2. Create a Node debug launch to run the application
3. Use `integratedTerminal` as console in the launch
4. Start the launch
5. Restart the debug session

Expected: Node restart should happen on existing integrated terminal. 
Observed: For every refresh, a new terminal is being created.
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11200</IssueID>
    <Title>Node repl: consider to only show suggestions after first name segment/'.'</Title>
    <Description>When stopped in the following program at `&lt;&lt;&lt;` then `request` is not suggested

``` js
const http = require("http");
const port = 3000;

const requestHandler = function(request, response)  {
  response.end('hello);    &lt;&lt;&lt;&lt;&lt;&lt;
};

const server = http.createServer(requestHandler);

server.listen(port, function(err) {
  if (err) {
    return console.log('something bad happened', err);
  }
  console.log('server is listening on ' + port);
});
```

![image](https://cloud.githubusercontent.com/assets/172399/18088836/1aa6b34a-6ebd-11e6-83ec-311a26720770.png)

Intellisense works fine after entering `request`:
![image](https://cloud.githubusercontent.com/assets/172399/18088869/44c4deae-6ebd-11e6-98cc-aa6aed722551.png)

To reduce the number of false suggested positives I suggest that suggestions are only shown after the first segment of an expression, e.g, on the first do.
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11189</IssueID>
    <Title>Allow to disable extensions selectively</Title>
    <Description>The first thing I typically ask a user when an issue is reported is to run with all extensions disabled. However, if one extension is causing issues and 30 are installed, it is very hard to find the one causing the issue.

Ideally we have UI to disable an extension selectively (from the extensions viewlet) so that a user can easily find out which extension is causing issues. 

Optionally we could also allow to do so from the command line, e.g. "`code --disable-extension vscode-icons`"

CC'ing some folks fyi @alexandrudima @joaomoreno @jrieken @egamma 
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11178</IssueID>
    <Title>File with complete match is not shown first in Quick open</Title>
    <Description>Testing #11106 
1. Assume that you have two files **color.ts** and **color.test.ts**
2. Open **color.test.ts** so that it will be in Recently opened list
3. In Quick open type color.ts

Expected: First match should be **color.ts** file
Observed: **color.test.ts** from Recently opened sections is shown first

![screen shot 2016-08-30 at 11 33 02](https://cloud.githubusercontent.com/assets/10746682/18083913/8cc25b04-6ea5-11e6-9126-570e423f970a.png)
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11167</IssueID>
    <Title>'open in explorer' should be shown at foreground not background</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 6.3.9600

Steps to Reproduce:
1. right click a file
2. select open in explorer
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11156</IssueID>
    <Title>Chinese MSBuild output gibberish</Title>
    <Description>- VSCode Version: 1.4
- OS Version: Windows 10 14393.103 (1611)

Steps to Reproduce:
1. Press F1, input build
2. Create build task, use msbuild option
3. Run msbuild task
   ![screen shot](https://cloud.githubusercontent.com/assets/3927006/18076661/76152b90-6eb2-11e6-9da4-984f13b3c680.png)
</Description>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>30/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11101</IssueID>
    <Title>Fix lists in hover widget</Title>
    <Description>
    </Description>
    <CreatedDate>29/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11078</IssueID>
    <Title>Navigating back after a 'go to declaration' might leave the cursor in a slightly different spot</Title>
    <Description>Say you have this code -

```
function f() {



}

setInterval(f, 1000);
```
1. Click in the middle of `setInterval`, then next to `f`
2. Press F12 to go to the declaration
3. Press ctrl+- to navigate back
4. The cursor will be in the middle of `setInterval`, not where it was when pressing F12.

Looks like we don't save cursor position changes unless they are somewhat far from the previous position, so when navigating back, we end up somewhere near where we came from, but not the exact spot. Maybe when doing a navigation like for pressing F12, we should save the original position of the cursor in the history stack?
</Description>
    <CreatedDate>29/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11077</IssueID>
    <Title>There should be at least one conflict resolver or merger integrated for git hub with Visual Code</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>29/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11067</IssueID>
    <Title>Console corrupts non-latin output encoding</Title>
    <Description>Tests, programm output, etc.

```
[&lt;Theory&gt;]
    [&lt;InlineData("キ", "Ки")&gt;]
    let ``Should transcribes words from Japanese to Russian with D-form normalization``(input, output) = 
        let container = Utils.getContainer dicPath
        let ming = new Floxdc.Ming.Control.Ming(container)

        let result = ming.Transcribe(input, "d")

        Assert.Equal(output, input)
```

```
Tests.Integration.Japanese.Should transcribes words from Japanese to Russian with D-form normalization(input: "?", output: "��") [FAIL]
      Assert.Equal() Failure
                &#x19; (pos 0)
      Expected: ��
      Actual:   ?
                &#x18; (pos 0)
```
- VSCode Version: Code - Insiders 1.5.0-insider (31f1acb8c82b8a19256d5d56127d3f81edce3745, 2016-08-26T08:00:03.472Z)
- OS Version: Windows_NT ia32 10.0.14393
</Description>
    <CreatedDate>28/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11053</IssueID>
    <Title>Can't download extension:c/c</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>27/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11052</IssueID>
    <Title>Can't download extension:c/s</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>27/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11043</IssueID>
    <Title>Font color issue</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Create a .js file
2. Add multiple lines
3. Verify font colors

Expected result
The color font should be preserved

Actual result 
In some point all the fonts come in a same white color, if set all the code in a single line the colors are preserved

Some screenshots

![520_544](https://cloud.githubusercontent.com/assets/8324592/18025073/d2930578-6beb-11e6-83af-2ac4aa633868.jpg)
![544_568](https://cloud.githubusercontent.com/assets/8324592/18025074/d2935d3e-6beb-11e6-9a20-9ea278488d28.jpg)
</Description>
    <CreatedDate>27/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11028</IssueID>
    <Title>Automatic update fails</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Mac OS X El Capitan 10.11.6 
- Note: I'm logged on as a "standard" user and need to logon as administrator to install
1. I received the notification for a new version (1.4.0)
2. Quit and restarted VS Code
3. …still running the same version.
4. There was never any dialog asking for my password nor the administrator password

Had to download the app from the web and manually replace the old version.
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11011</IssueID>
    <Title>OSX: Can't undo on any text input box</Title>
    <Description>Find widget, search viewlet, git viewlet, extensions viewlet, etc...

It seems that the editor is getting the Undo command. When all editors are closed I get this message:

![image](https://cloud.githubusercontent.com/assets/22350/18002217/c82dccae-6b86-11e6-8e44-46f123da71b3.png)
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11008</IssueID>
    <Title>Implement User Setting to Allow Customizing Default Size of New Windows.</Title>
    <Description>Basically as the title says, to have some "window.defaultSize" setting to allow customizing the default size of new windows. Currently the default size is not ideal for some people, this would allow those users to customize it to their preference.
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>11002</IssueID>
    <Title>Use Sogou appear two Chinese characters</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. ![image](https://cloud.githubusercontent.com/assets/7425981/17998604/df52fac8-6ba7-11e6-9213-54a22ede3376.png)
2. press space key
3. ![image](https://cloud.githubusercontent.com/assets/7425981/17998678/348f1c56-6ba8-11e6-8e29-b58d3fdf9c36.png)
4. Repeated Chinese characters 
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10993</IssueID>
    <Title>Multiple-cursors are not visible on first column</Title>
    <Description>- VSCode Version: 1.5.0-insider  2f2d65
- OS Version: Windows 10

Steps to Reproduce:
1. select multiple lines using multiple cursors, or break a multi-line selection into multiple cursors.
2. press HOME to move all cursors to first column
3. Only the first cursor shows up, that too partly covered by the gutter.

Additional details:

Theme: Dark+

``` json
{
  "editor.cursorBlinking": "phase",
  "editor.fontFamily": "Consolas, 'Courier New', monospace",
  "editor.fontSize": 14,
  "window.zoomLevel": -1
}
```
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10986</IssueID>
    <Title>shortcut in Japanese keyboard</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Mac OS X 10.11.6
- Apple wireless Japanese keyboard
- Karabiner 10.21.0
  - "Use Japanese Keyboard as US Keyboard" turned on.
  - Some other assignments are on but I think they are not related.

Steps to Reproduce:
When I press "CMD+]" it splits the window where indent is expected.
I'm using Karabiner to match the behavior with US keyboard but it doesn't seem to work as expected. Replacing it with US keyboard worked as expected.

I don't see similar oddities when using Atom or SublimeText. I imagine VSCode is reading native keypress events?
#6020 seems to be related.

cc: @aioutecism 
</Description>
    <CreatedDate>26/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10978</IssueID>
    <Title>JavaScript code highlighting doesn't work</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Highlighting breaks in the file which has lots of nested if / functions with 37 spaces in the left
   ![image 3](https://cloud.githubusercontent.com/assets/6369486/17987844/40b6d07c-6ad7-11e6-96d2-942cbe87eb25.png)
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10973</IssueID>
    <Title>output window encoding error.</Title>
    <Description>- VSCode Version:1.4
- OS Version:windows 10

Steps to Reproduce:
1. use vscode tasks.json like below:
   {
   -----------------------------------------------------------
   // See https://go.microsoft.com/fwlink/?LinkId=733558
   // for the documentation about the tasks.json format
   "version": "0.1.0",
   "command": "cmd",
   "isShellCommand": true,
   "args": ["/c"],
   "tasks": [
       {
           "taskName": "build",
           "args": ["dotnet","build"],
           "isBuildCommand": true,
           "showOutput": "always",
           "problemMatcher": "$msCompile",
           "suppressTaskName": false
       }
   ]
   }
   ------------------------------------------------------------
   and launch.json like this:
   ---------------------------------------------------------
   {
           "name": ".NET Core Launch (console)",
           "type": "coreclr",
           "request": "launch",
           "preLaunchTask": "build",
           "program": "${workspaceRoot}/bin/Debug/netcoreapp1.0/DotnetCoreApp.dll",
           "args": [],
           "cwd": "${workspaceRoot}",
           "stopAtEntry": false,
           "externalConsole": false
       }
   -----------------------------------------------------------
2. then begin to debug. and output window like this :

'build' �����ڲ����ⲿ���Ҳ���ǿ����еĳ���
���������ļ���

---

by the way ,I found the document of tasks.json is not detailed, can u explain to me that how to run several tasks before debug or running .For example, before I run a program ,that I need to tsc the ts code,gulp and build the c# code ,finally running the program.could someone know how to do it.  
![image](https://cloud.githubusercontent.com/assets/9709973/17985455/7598e1ec-6b48-11e6-9b78-f4677c5b5688.png)
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10965</IssueID>
    <Title>WebView not scaled correctly when zooming vscode</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10

Steps to Reproduce:
1. Zoom the UI
2. Open any WebView (e.g. Extensions Details or Preview of a Markdown File)

The opened WebView is sized for a zoom, but not scaled, staying at 100%, leaving empty space in it's container.
When Zooming with the WebView being open, it is sized and scaled correctly.
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10953</IssueID>
    <Title>Need HTML Matching Keystroke</Title>
    <Description>- VSCode Version: 1.4
- OS Version: Windows 10

In HTML editor, need a keyboard mapping that allows you to jump to the matching tag.  I am aware that if you place the cursor on a tag, the matching tag is highlighted; but in a div that may sufficiently long as to not be visible on the screen, it would be useful to quickly jump to the matching tag.

It would also be extremely useful to have a keyboard mapping that selects the entire current block.  e.g., Ctrl+B within a div selects the entire div.  This facilitates quickly re-arranging elements within a document without visually hunting for the beginning/ending tags of an element.  

Thank you for this great editor and providing it as free &amp; open source!
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10950</IssueID>
    <Title>No syntax highlight at some points in js files</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OS X Yosemite 10.10.5

Hi,

using VSCode to write some javascript, sometimes it ends up with no syntax highlight at some points in the file.

Here is an example of what I'm talking about :

&lt;img width="842" alt="capture d ecran 2016-08-25 a 14 15 05" src="https://cloud.githubusercontent.com/assets/7422824/17968669/5c307636-6ace-11e6-8c4e-a013b64f1570.png"&gt;

The code is correctly formated and functional, and it actually have a correct highlight on other editors like atom for example). I'm using the dark+ theme and I've already tried to install some other themes and adding highlight snippets to see if they made a difference but the problem was still here.

Hope you can help
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10946</IssueID>
    <Title>files.exclude not respected with CMD+P</Title>
    <Description>- VSCode Version: Code - Insiders 1.5.0-insider (2f2d6502638fa108f8ddbcc5831b38a35d5a1c11, 2016-08-25T06:04:22.901Z)
- OS Version: Darwin x64 15.6.0

Steps to Reproduce:
1. Added `"common/typings/**": true,` to `files.exclude` &amp; `files.watcherExclude` &amp; `search.exclude` of Workspace Settings and restarted vscode
2. When doing `CMD+P` then files from these folders still show up - I think it should respect the setting (folder is hidden in Explorer and non searchable - just shows up in CMD+P)

![image](https://cloud.githubusercontent.com/assets/1723815/17968204/82a34436-6a99-11e6-9da8-fee90e59ac71.png)
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>27/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10936</IssueID>
    <Title>[Windows] Cannot create new vscode windows when running as administrator</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 8.1 server Enterprise editin

Steps to Reproduce:
1. Run VSCode as administrator
2. Right click icon in the taskbar and select 'New Window'
   Result : No new window is created

The 'New Window' task works as expected when not running as administrator
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10933</IssueID>
    <Title>Provide clipboard access through the VSCode API</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 7

Feature Request:
It would be great to get access to the clipboard in the VSCode API.  My use case is very simple, I want to be able to put specific text into the clipboard when a button is pressed (relative path to a file).  I'm sure other extensions would benefit from clipboard access access as well.
</Description>
    <CreatedDate>25/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10919</IssueID>
    <Title>exclude files/folders from being searched (using ctrl+P)</Title>
    <Description>- VSCode Version: insiders
- OS Version: windows 10

In `.vscode/settings.json` I have:

``` js
    "files.exclude": {
        "out": false // set this to true to hide the "out" folder with the compiled JS files
    },    
    "search.exclude": {
        "out": true // set this to false to include "out" folder in search results
    },
```

![image](https://cloud.githubusercontent.com/assets/736697/17950244/6842eac2-6a73-11e6-9add-c17597d243a1.png)

But files in out dir is still in the pick (ctrl+P) result
![image](https://cloud.githubusercontent.com/assets/736697/17950241/5a77d4c0-6a73-11e6-8aec-f16e566b7086.png)

Is it expected behaviour? Is it possible to exclude it from this list?
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>26/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10914</IssueID>
    <Title>[Missing feature] We should have an 'update all' button for the extensions </Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10910</IssueID>
    <Title>Quick file find, or jump to file in explorer by typing filename</Title>
    <Description>- VSCode Version:
- OS Version:

We are literally working with thousands of files. Currently the user is limited to a mouse scrolling through a large folder structure to find the file and manually selecting the file.

We kindly request that finding files in the Explorer be easier. The Windows Explorer is a parallel example.

For example, provide a box where you can start typing in the file name and the Explorer is limited to showing files that match. Please support wild cards.

For example, allow typing in the Explorer to jump to a file.
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10909</IssueID>
    <Title>Closing file open in 2 places opens "save" dialog</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OS X 10.11.5

Steps to Reproduce:
1. Open a project in VS Code
2. Split the editor so 2 files can be viewed side by side
3. Open the same file twice and arrange so both are visible
4. Make an edit to the file (either one - the changes should sync between the two views)
5. Try closing one of the instances of the file

**Desired behavior:** The file will close with no prompt, since there is another instance of the file still being edited
**Current behavior:** The file will prompt you to save. Not only that, if you click "Don't Save", the file will revert to the version on disk, and any work done on the file will disappear from the instance still open.
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10908</IssueID>
    <Title>Colorization fails at 9 nested JavaScript functions</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OS X 10.11.6

Steps to Reproduce:
1. Open a blank .js file
2. Create 9 nested functions following this format

```
var foo1 = function() {
    var foo2 = function() {
        ...
    }
};
```
1. Colorization stops a 9th function

Issue does not occur using this function format:
function foo1() {};

See screenshot
![screen shot 2016-08-24 at 2 25 48 pm](https://cloud.githubusercontent.com/assets/18700676/17942894/4bcf4a82-6a07-11e6-8009-888b4ee4ee30.png)
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10898</IssueID>
    <Title>Menus unreadable when Windows is in high contrast mode</Title>
    <Description>Code is not aware of the OS setting. Enable high contrast mode in Windows (not the Code theme) and all of the menus are white text on a white background

&lt;img width="533" alt="code high contrast" src="https://cloud.githubusercontent.com/assets/587960/17936641/779d8224-69ed-11e6-9ea9-364ac582f3d1.PNG"&gt;
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10888</IssueID>
    <Title>Support links in the suggestion documentation</Title>
    <Description>- VSCode Version:  0.1.0
- OS Version: All browesers

Can you please support links to external documentation inside the suggestions documentation window (and inside the further-documentation window)?

Thanks,
Anat
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10886</IssueID>
    <Title>Allow QuickPick list items be formatted with HTML</Title>
    <Description>Just as proposal:
Allow Extension QuickPick list items be formatted with HTML, this would allow extension creators:
1) Have some additional "hidden" information using tags
2) Style selection options to make it more convenient for user

So just need to treat quickPick list items as HTML, not raw text.
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10884</IssueID>
    <Title>Actions when using multiple cursors are only executed on the main one</Title>
    <Description>If I try to use Emmet's or VScode's selection expansion, emmet's wrap function or any other extension the action is only executed on the first cursor.

A use case I often use in ST3: `cmd+d` to select class names, then `ctrl+d` to expand to the container in question and finally `ctrl+w` to wrap all the containers in another container.

In VScode, any action apart from text editing (typing or deleting) will remove all secondary cursors.
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10883</IssueID>
    <Title>when I split windows to two or more mindless,  and want close one, the vscode show that whether to save the file to close, no matter what I chose, the file will close in all whidows. so my question is how to close one splited windows without any effect to other windows, like vi -O?</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.
2.
</Description>
    <CreatedDate>24/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10858</IssueID>
    <Title>Cursor in terminal prevents reading words correctly.</Title>
    <Description>VS Code is just amazing! The only problem I found is that cursor there, It's a bit annoying. I couldn't move it using mouse or keyboard arrows. I think it should be placed at end of line, because in the begining, it might prevent reading some words correctly. :confused: 
- VSCode Version: 1.4
- OS Version: Windows 10 x64bit

Steps to Reproduce:
1. Open Terminal
2. Git clone
3. You can see it there!

![VS Code Terminal Editor Cursor](https://cloud.githubusercontent.com/assets/1018975/17907523/94ae90e4-6991-11e6-81c1-fa8e1f2eba17.jpg)
</Description>
    <CreatedDate>23/08/2016</CreatedDate>
    <ClosedDate>24/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10855</IssueID>
    <Title>html block comment problem in php file</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. create an php file
2. type some html and try to comment using ctrl+/ &lt;- single line,
   alt+shift+a &lt;- block level (this is better to be default shortcut of ctrl+shift+/ used for all famous text editor so i had changed)
3. you will see html comment are not working there, without &lt;?php ?&gt; syntax getting php comments in html
</Description>
    <CreatedDate>23/08/2016</CreatedDate>
    <ClosedDate>24/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10846</IssueID>
    <Title>Feature Request : Edit last commit message</Title>
    <Description>I like the built-in Git support in Code, but I often need to switch back to SmartGit and the CLI for a specific feature: the ability to quickly edit the last commit message (unless already pushed), in one step.

Alternatively, it would be nice if undoing the last commit restored the commit message in the message field. It's almost the same feature, when you think about it. Might be a simple way to implement a first iteration of the feature.
</Description>
    <CreatedDate>23/08/2016</CreatedDate>
    <ClosedDate>24/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10796</IssueID>
    <Title>Images are never reloaded</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:41:29.513Z)
- OS Version: Darwin x64 15.6.0

Steps to Reproduce:
1. New Directory
2. run code .
3. Place an PNG file as picture.png in that directory
4. View It with VS Code (using explorer): File displays correctly
   5.Delete the file with the  explorer
5. Place a different PNG File with the same name as picture.png in directory
6. View with explorer: The first image is displayed. (Expected the new image)
</Description>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10794</IssueID>
    <Title>Restore cursor position for readonly files</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10/64
### Steps to Reproduce:
1. Open two or more files in an editor group.
2. In one of the opened files scroll down a number of lines.
3. Press `CTRL+TAB` multiple times until the editor group revolves to the original file.

=&gt; You will notice that the previous cursor position was lost and that the cursor has moved to the first column in the first line of the file.
### Suggested behaviour:

The cursor position for each opened file in the editor should be retained.

---

PS: I'd like to propose an option to have `CTRL+TAB` not only cycle through opened files within a _single_ editor group but through _all_ files in _all_ editor groups. This would reflect common Microsoft style guide and program behaviour and would increase daily VS Code usability.
</Description>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10791</IssueID>
    <Title>Feature: Ability to save regex Find/Replace patterns for future use </Title>
    <Description>### Feature Request
- VSCode Version:
  Version 1.4.0 (1.4.0)
- OS Version:
  OS X El Capitan 10.11.6 (15G31)

Steps to Reproduce:
1. Open a text document in vscode with a fair amount of text. 
2. Launch the Find/Replace dialogue "Command + F" 
3. Click the regex icon to enter a regex pattern for the find and replace forms. 
4. Observe there is no means from that dialogue to save the regex pattern or reference previously used regex patterns. 

Expected Behavior: 
1. The Find/Replace dialogue would provide a means of saving regex patterns used for future use. Please see attached screen shots of the method BBEdit uses to accomplish this as an example of this feature. 
![screenshot_1315](https://cloud.githubusercontent.com/assets/15255373/17853055/539c3e3a-681f-11e6-8d74-efb1f0b77bb5.png)
</Description>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10789</IssueID>
    <Title>Markdown Preview not correct</Title>
    <Description>- VSCode Version:1.4.0
- OS Version:win10

Steps to Reproduce:
1. open a markdown file, write ##sample
2. show preview, the preview is ##sample
</Description>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10788</IssueID>
    <Title>Feature Request: File Outline View for TypeScript</Title>
    <Description>It would be very useful to have a structural outline of the currently opened TypeScript file in VScode.

For an example of what I mean, check out this screenshot of an outline from a Java file in Eclipse:

![outline](https://cloud.githubusercontent.com/assets/16356998/16942947/4c382adc-4d99-11e6-8703-a8a64a1ca62d.png)

It displays the names of all types on top-level, and folded within them are the names of all fields and methods, including their names as well as parameter and return types. Clicking on a member in the outline jumps to the declaration. The icons indicate if the method is public (green) or protected (yellow).

As somebody who used Eclipse extensively in the past, I find it very difficult to program without such a view.
</Description>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10756</IssueID>
    <Title>communication between the extension.ts and javascript loaded by html</Title>
    <Description>- VSCode Version:1.4.0
- OS Version:win10

Depend on the [#10392](https://github.com/Microsoft/vscode/issues/10392)
I have met the same problem too , I am looking for a way to achieve the communication between the extension.ts and javascript loaded in the html for that I want to 
perceive the action of active editor(e.g selectionchange ) in the preview html page without refresh the html page. Is there some advise?
 Any help will be appreciated!
</Description>
    <CreatedDate>21/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10753</IssueID>
    <Title>Inconsistent vscode.Uri.fsPath values for the same document</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Ubuntu 16.04

I noticed an unfortunate interaction between the MS C++ extension (https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools) and one of the popular bookmark extensions (https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks) where depending on how you open a document you may get different URIs, ex. /foo/x.cpp if you open the document "normally" (selecting it from the explorer panel) vs. ///foo/x.cpp if the document is opened through "search for symbols".

Steps to Reproduce:
1. Write a simple test extension that logs the arguments to vscode.workspace.onDidOpenTextDocument
2. install the C++ extension mentioned above
3. open the same C++ source file
   a. from the project explorer
   b. search for a C++ symbol (Ctrl-T)
</Description>
    <CreatedDate>21/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10752</IssueID>
    <Title>Full debug experience clinet/backend ASP.NET</Title>
    <Description>Dear all,

I've been searching web for that, but I can't find answer.
Is it possible to debug in at the same time client (JS/TS files) and back-end (C# ASP.NET core)?

I'm looking for similar experience as in standard Visual Studio and IE.

Tired different configurations, but I can't seem to find one that:
1) runs asp.net backend in debug
2) runs chrome browser in debug
3) hit breakpoints on both

Thanks for advice!
</Description>
    <CreatedDate>20/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10743</IssueID>
    <Title>Open in command prompt opens console with lowercase Drive Letter on Windows</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Press Ctrl + Shift + C
2. The new Command Prompt now has a cwd that starts with "**c**:...." instead of "**C**:\" as when opening the command prompt from e.g. the explorer

This results in problems with webpack ( "There is another module with an equal name when case is ignored.") as the paths to the modules are inconsistent.

Although i don't use it, this issue seems to be the same with the integrated terminal.
</Description>
    <CreatedDate>20/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10728</IssueID>
    <Title>Multiple debuggers</Title>
    <Description>- VSCode Version: Code - Insiders 1.5.0-insider (3d9622208b2167921b6664e04fd1fbd51507a4a0, 2016-08-19T06:04:28.517Z)
- OS Version: Darwin x64 15.6.0

Nodejs debugger = awesome
Chrome debugger = awesome
Not sure if possible, but would be nice to be able to run both backend (nodejs) debugger and frontend(chrome debugger) at the same time. 
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10726</IssueID>
    <Title>Exclude files based on .gitignore</Title>
    <Description>if feature is enabled - files ignored by git should not be shown in file explorer as well as excluded from search and etc
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>20/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10724</IssueID>
    <Title>change the debugger controls from a floating toolbar to a more in-line one?</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: MacOS

I find that the floating debugger controls - while not taking up much space - can obscure tabs that I'm sometimes interested in seeing. I think moving the debugger controls to be in-line with the find controls would make the UI work a bit better.

&lt;img width="455" alt="screen shot 2016-08-14 at 11 35 07 am" src="https://cloud.githubusercontent.com/assets/1269969/17824923/a5ab79aa-6619-11e6-88a9-9a32610ab54e.png"&gt;

If the debugger controls were in-line with the find (and the replace) controls, they would only obscure parts of the first few lines of a file instead of parts of the editor tabs. I think this would be an improvement. That in-line control could re-size as necessary to hold the debug panel, the find panel, and the replace panel.
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10723</IssueID>
    <Title>RenameProvider should be able to signal whether a location is valid for a rename</Title>
    <Description>Currently a RenameProvider can be instructed to make renames that are not valid, eg.:

``` dart
import "dart:html";
```

Here, you can rename on the `import` which makes no sense. While it's possible for us to return no edits, it's weird to give the user a textbox pre-populated with `import`.

It would be better if a RenameProvider can be queried to see whether a rename is valid for a given location and Code can then avoid showing the rename box entirely.
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>25/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10720</IssueID>
    <Title>allow repositioning of the tooltips that pop up with code hints</Title>
    <Description>allow telling vscode to always put tooltips underneath the cursor and not above it. this is because when you are trying to write code that references code above it covers what you are trying to read, and its sooooooo bloody annoying such that i just turn all intellisense/help/tips/whatever off.

for example this code where i am attempting to fill in an SPRINTF function by seeing the tokens i used above to know what order to add my arguments...

![screen shot 2016-08-19 at 3 21 19 pm](https://cloud.githubusercontent.com/assets/881944/17823185/da388260-6620-11e6-85dc-5d398649871a.png)

the problem is this happens instead...

![screen shot 2016-08-19 at 3 20 03 pm](https://cloud.githubusercontent.com/assets/881944/17823193/e79236c2-6620-11e6-91af-5c55237edeeb.png)

![z](https://cloud.githubusercontent.com/assets/881944/17823256/29abd946-6621-11e6-9de4-9cb638a187f7.jpg)
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10700</IssueID>
    <Title>I made some modifications to the vscode .I would like to make a installer?</Title>
    <Description>- VSCode Version:1.4
- OS Version:

Steps to Reproduce:
1. I made some modifications to the vscode .I would like to make a installer? for help!!!!
2. 
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10689</IssueID>
    <Title>VS Code fails to start if current directory no longer exists</Title>
    <Description>- VSCode Version: Version 1.4.0 (commit 6276dcb)
- OS Version: Ubuntu Linux 14.04
## Steps to Reproduce:
1. On Linux (or possibly on OS X), open two separate terminal windows.
2. In both windows, run `cd` with no arguments so you're in your home directory.
3. In the first terminal, run:
   - `mkdir foo`
   - `cd foo`
   - `echo "Hello" &gt; file.txt`
4. In the second terminal, run:
   - `mkdir bar`
   - `cd bar`
   - `code ~/foo/file.txt`
5. VS Code starts up fine, and loads `~/foo/file.txt` without problems.
6. Exit VS Code.
7. In the first terminal, run `rmdir ~/bar`. This will succeed on Linux, because processes don't lock their current working directory while running. So having a terminal window open, `cd`'ed into `~/bar`, does not lock `~/bar` and it can therefore be removed by other terminals.
8. Now in the second terminal, run `code ~/foo/file.txt` again. VS Code will fail with the following error:

``` plain
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
path.js:1184
          cwd = process.cwd();
                        ^

Error: ENOENT: no such file or directory, uv_cwd
    at Error (native)
    at Object.resolve (path.js:1184:25)
    at Function.Module._resolveLookupPaths (module.js:263:17)
    at Function.Module._resolveFilename (module.js:330:31)
    at Function.Module._load (module.js:290:25)
    at Module.require (module.js:367:17)
    at require (internal/module.js:16:19)
    at Object.&lt;anonymous&gt; (/usr/share/code/resources/app/out/cli.js:5:1)
    at Module._compile (module.js:413:34)
    at Object.Module._extensions..js (module.js:422:10)
```
## Notes

I believe this could also be reproduced on OS X, because I think the OS X file system works similarly to Linux, but I don't have access to a Mac to test it. I was able to verify that this does NOT occur on Windows, because on Windows you can't remove a directory while any Command Prompt windows are open in that directory, and so this bug reproduction fails on step 7 on a Windows machine.
</Description>
    <CreatedDate>19/08/2016</CreatedDate>
    <ClosedDate>19/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10679</IssueID>
    <Title>Undoing git checkout</Title>
    <Description>This is an improvement I think:

I am used to from other editors that if I checkout some unstaged changes I don't loose that in fact. Because I can always undo them in my editor.

But with VS Code - event though I really like it - it is impossible. Because when I do `git checkout change-i-don-want.md` suddenly VS code forgets that there were some changes and "undo" (or `ctrl+Z`) is not impossible - changes are simply gone.

That is not a big deal but still - my editor should prevent me from doing mistakes and this is one very likely to happen.
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>19/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10661</IssueID>
    <Title>Add support for background tasks</Title>
    <Description>- VSCode Version: 1.4
- OS Version: Windows 10 64-Bit

VC Code tasks are currently blocking. I.e., no other task can be executed until the currently running task has finished. There are situations, though, were it makes sense execute a task while another one is still running. Consider the following example:

I am writing a TeX document using VS Code. I have two tasks. One **build** task that runs pdflatex on my document in order to generate a pdf from my tex file. And a **show** task that opens my pdf in my pdf viewer (SumatraPDF in my case). SumatraPDF supports modifications to the currently shown pdf file while the viewer is still running. I.e., I could change my tex file and run my **build** task. SumatraPDF detects this and updates as soon as the new pdf is finished. However, as the **show** task is running until I close SumatraPDF, I cannot execute the **build** task. Being able to run **show** as a background task that does not block other tasks from being executed would solve this.

I also tried to workaround this by using grunt-exec but I was not able to find a configuration that solves my use case.

Best
Frank

P.S.: Thanks for this great and fast code editor! The more I use it, the more I can imagine that it has the potential to replace a lot of other editors that I am currently using for different tasks.
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>19/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10652</IssueID>
    <Title>Unimplemented  console.clear()？</Title>
    <Description>- VSCode Version: 1.4
- OS Version:

Steps to Reproduce:
1. when I debug "runtimeExecutable": "${execPath}"
2. JS file inside the code like this ：console.clear();
3. Debug Console Panel is Unimplemented  console.clear()
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10646</IssueID>
    <Title>How to hide toolbar in the left?</Title>
    <Description>Is there a command to hide toolbar?
</Description>
    <CreatedDate>18/08/2016</CreatedDate>
    <ClosedDate>18/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10620</IssueID>
    <Title>Visual Studio Code does not save files on a remote server</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:49:32.489Z)
- OS Version: Linux x64 4.4.0-34-generic

Steps to Reproduce:
1. Open in Nautilus remote server.

```
ftp://admin@91.225.136.204/www/example.com/
```
1. Open file in Visual Studio Code.
2. Change and Save file.

Details 
http://stackoverflow.com/questions/38993537/visual-studio-code-does-not-save-files-on-a-remote-server
</Description>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>18/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10614</IssueID>
    <Title>Debug: ..watch variable menu option missing</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 6.3.9600

Steps to Reproduce:
1.  Debug code (Node.js).
2.  Set breakpoint.
3. When breakpoint is hit, select and right click on variable.
4. Menu options Debug: Evaluate and Debug: Run to Cursor are present, but Debug: Watch variable is now missing.
</Description>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>23/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10608</IssueID>
    <Title>Output windows shows Chinese character incorrectly </Title>
    <Description>- VSCode Version:1.4.0
- OS Version: Windows 10 Pro, version 1511, OS build 10586.545

Steps to Reproduce:
1. Python Code
url = r"公交"
print(url)
2. Output window shows Chinese characters incorrectly
![image](https://cloud.githubusercontent.com/assets/1937472/17732973/efa33058-64a6-11e6-9b78-4b0a366a63bc.png)
</Description>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>17/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10603</IssueID>
    <Title>VSCode cannot show whitespace correctly</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version:Windows7

I have changed the setting to diplay whitespace, but VSCode cannot show it correctly.
Attached my setting as below:
{
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,
    "editor.fontSize": 13,
    "editor.insertSpaces": false,
    "editor.renderWhitespace": true,
    "editor.renderControlCharacters": true
}

Steps to Reproduce:
1. Create a new file: click 'File' -&gt; 'New File'
2. Copy this text "  test  space  "into new file, VSCode cannot show whitespace correctly.
</Description>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>18/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10601</IssueID>
    <Title>git annotate feature</Title>
    <Description>Can we get git annotate feature  that is available in intellij flavors. 
</Description>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>17/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10594</IssueID>
    <Title>Unresponsive when expanding a folder with a lot of files</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10

Steps to Reproduce:
1.  Clone the [Microsoft/Typescript](https://github.com/Microsoft/typescript) project
2.  In the explorer expand the tests/baselines folder

Code will stop responding. There are a lot of files in it's child folder so it's unreasonable to expect it to list them immediately but having it freeze doesn't feel like the best user experience either.
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>17/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10593</IssueID>
    <Title>Signature Help shows only 2 lines of the method's comments</Title>
    <Description>Signature Help shows only 2 lines of the method's comments. Auto-complete shows a single truncated line with ellipsis and an option to expand to see the whole text. Signature Help should also have a similar feature. This happens to all extensions that implement the `SignatureHelpProvider`

_From @ahmetalpbalkan on July 12, 2016 22:25_

if I type `ioutil.TempDir(` the tooltip that comes up is only showing 2 lines of the godoc:

![image](https://cloud.githubusercontent.com/assets/159209/16785796/e94825a2-4844-11e6-842c-f17e13161e31.png)

_Copied from original issue: Microsoft/vscode-go#391_
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>17/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10585</IssueID>
    <Title>closing a Tab: Animation happens but tab is not closing</Title>
    <Description>- VSCode Version:1.4.0
- OS Version:Ubuntu 14.04

I don't really know that this is a valid bug or not . But this issue really annoy me a lot. When I close a tab from VSCode the animation happens ( the close icon goes up slightly and comes back) but the window won't close.

Steps to reproduce : 
When I click right over the close Icon everything is fine the animation happens and the window closes. but if I clicked slightly down the X mark the animation still happens made me think it will close but it never does. Does the animation means something else?
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10581</IssueID>
    <Title>Cmd + A in `Save as` input doesn't select whole text</Title>
    <Description>![screen shot 2016-08-16 at 14 11 03](https://cloud.githubusercontent.com/assets/1259644/17698393/477e047a-63bb-11e6-977b-e20deb81644c.png)
- VSCode Version: 1.4.0
- OS Version: 10.11.4 (15E65)

Steps to Reproduce:
1.  New File
2. Cmd + S (Save file)
3. Blur `Save As` input (click on folder or somewhere else)
4. Focus on `Save As` input
5. Cmd + A (try select the whole text inside `Save As` input)
6. Text is not selected
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10579</IssueID>
    <Title>Up and down arrow key does not work in integrated terminal when using ubuntu bash as an integrated terminal.</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10

Steps to Reproduce:
1. // Place your settings in this file to overwrite the default settings
   {
   **_"terminal.integrated.shell.windows": "\WINDOWS\sysnative\bash.exe"_**
   }
2. Open integrated terminal.
3. Enter some command in the terminal.
4. Try to navigate the history using up key and this does not function.
5. I also tried to navigate through a file in vi in the integrated term using up and down arrow key . This also does not function.
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10577</IssueID>
    <Title>Images saved/updated outside of VS Code aren't updated in VS Code</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OS X El Capitan 10.11.1 (15B42)

Steps to Reproduce:
1.  Open a folder that has images in it.
2. Open the image in VS Code.
3. Change the contents of the image in an editor outside VS Code.
4. Image appears the same as it did in step 2 (even if you close and re-open it in VSCode).

The only way to get the image to show the new content is to completely close the folder from vscode and re-open it.
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10575</IssueID>
    <Title>Terminal scroll to bottom does not work</Title>
    <Description>- VSCode Version: Version 1.5.0-insider (1.5.0-insider)
- OS Version: OSX - Yosemite

Steps to Reproduce:
1. Open the terminal
2. Perform some Git command
3. When command completes the terminal is not scrolled to the last line.

type something afterwards make the terminal scroll to the bottom.
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>24/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10573</IssueID>
    <Title>Params error should limit to specific call in call chain</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: OSX El Capitan
  ![image](https://cloud.githubusercontent.com/assets/3254987/17690119/644e0b88-6341-11e6-965a-a4900a2723ab.png)

In the example above, only the last call (`.option()`) has invalid parameter.
It would be better if the error only limit to that function call.
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10564</IssueID>
    <Title>Bug: quick open shows recently-opened files that should be excluded</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10 (Anniversary Update)

Steps to Reproduce:
1. Open a file in a subfolder and make some edits, then save and close
2. Add the folder to the "search.exclude" settings
3. Quick open and start typing the filename

![image](https://cloud.githubusercontent.com/assets/298883/17684915/bc1ac052-63a2-11e6-8a81-b0b7ce90c316.png)

I want to see files in my "archive" folder in the sidebar so that I can navigate to them if I need to, but I don't want them coming up in searches or to show up via the "quick open" bar. Note that the exclusion settings pictured above were put in place after the file was originally opened.

_The fact that a file was recently opened should **not** cause "search.exclude" settings to be disregarded._
</Description>
    <CreatedDate>16/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10555</IssueID>
    <Title>Open contextual window</Title>
    <Description>Is there any way to open a contextual window like `Find all references` and put inside some custom data?

![image](https://cloud.githubusercontent.com/assets/1416224/17673245/99b8153c-6320-11e6-949f-8e26b5e8f6f4.png)

Basically I wrote a test reporter and I'd like to show the results from a CodeLens command, but I cannot find the proper way to do it.
</Description>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10538</IssueID>
    <Title>Intelisense doesn't work at all</Title>
    <Description>- VSCode Version: Version 1.5.0-insider (1.5.0-insider) || Version 1.4.0 (1.4.0)
- OS Version: OSX El Captain 10.11.6

I had a project on my Macbook where the intelisense was working perfectly, then my Macbook has been sent for repair and in the meantime I am using a different one. I have cloned the project I was working on, did an `npm i` and `typings i`, then downloaded VSCode and I was ready to rock, but sadly intelisense doesn't work at all. (No code completion on imports, no go to definition, nothing.) With the very same vscode version (installed before) and same project codebase revision on my colleague Mac it works well. And with a freshly installed vscode insider too.

I know its not enough for a bug report, but sadly this is all I can tell, there are no errors, it just doesn't work for me while works for others for the very same codebase.

"Reinstall" doesn't help and there is no error in the console.

What other info should I provide to make this bug solvable?
</Description>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>17/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10532</IssueID>
    <Title>An action to update all extensions in Extensions view</Title>
    <Description>It would be nice to have an action to update all extensions which are outdated from the extensions view.
</Description>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>15/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10530</IssueID>
    <Title>Add filename color support in the explorer</Title>
    <Description>Can you please add filename  color support in the tree view?

I don't want to switch to git panel every time when i need know which file changed .

webstorm do very well. like this:

![image](https://cloud.githubusercontent.com/assets/3005433/17654513/6447b000-62d6-11e6-9c2c-b9a4ff247e14.png)

it is very clear &#x8;that use different color mark filename 
</Description>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>15/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10501</IssueID>
    <Title>vsce publish fails due to linting issue</Title>
    <Description>- VSCode Version: 1.4
- OS Version: OSX

I have an extension (https://github.com/cfjedimaster/htmlescape-vscode) that I'm trying to publish to the store. It tests fine in Code, but when I vsce publish, I get:

Executing prepublish script 'node ./node_modules/vscode/bin/compile'...
Error: Command failed: node ./node_modules/vscode/bin/compile

Ok, it would be nice if it told me the error (grin), so I tried running the command directly:

src/extension.ts(112,9): error TS4091: Loop contains block-scoped variable 'editor' referenced by a function in the loop. This is only supported in ECMAScript 6 or higher.

So... I have something that works in Code, but isn't allowed by vsce?
</Description>
    <CreatedDate>13/08/2016</CreatedDate>
    <ClosedDate>15/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10466</IssueID>
    <Title>Can't close an auto-opened window</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10 (10.0.10586)

Steps to Reproduce:
1. Create a file (name it X)
2. Delete file, but do not close the auto-opened window,
3. Create a folder with same name as the file (X)
4. Try to close the opened window.

L.E: 'Error: File is directory (c:\blabla\X)'
</Description>
    <CreatedDate>12/08/2016</CreatedDate>
    <ClosedDate>14/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10458</IssueID>
    <Title>Chinese path cannot open integrated terminal</Title>
    <Description>- VSCode Version:1.4.0
- OS Version: Windows 10 Pro

Steps to Reproduce:
1. Use VS code open with folder(chinese path).
2. Integrated terminal can't work!!!
</Description>
    <CreatedDate>12/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10449</IssueID>
    <Title>Way to hide the View Bar</Title>
    <Description>Is there a way to hide the View Bar?

see
http://stackoverflow.com/questions/36314664/how-do-i-hide-the-vs-code-view-bar
- VSCode Version: 1.4.0
- OS Version: linux mint
</Description>
    <CreatedDate>11/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10440</IssueID>
    <Title>Insiders "Restart to Update" should always check for the latest</Title>
    <Description>- VSCode Version: Code - Insiders 1.5.0-insider (3313a641ec505098c8625c459e49af3e8f5eb793, 2016-08-11T06:07:38.135Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Delay update because I'm in the middle of something
2. Forget (or not convenient to update) until the next morning
3. Help -&gt; Restart to Update &amp; Install
4. Wait for a few minutes or do Help -&gt; Check for Updates
5. Another build is available
6. Restart to update &amp; install again

It would be nice if when restarting to update, it would check for the most recent installer and install that, instead of installing and then checking again, so that I need to install again.
</Description>
    <CreatedDate>11/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10430</IssueID>
    <Title>Prompts for loss of changes when closing split</Title>
    <Description>- VSCode Version: Code 1.4.0 (6276dcb0ae497766056b4c09ea75be1d76a8b679, 2016-08-04T16:45:31.680Z)
- OS Version: Windows_NT ia32 10.0.14393

Steps to Reproduce:
1. Open a document
2. Click on the Split Editor button
3. Make a change to the file
4. Go to close one of the two splits

You now get warned about data loss and whether or not to save the changes, even though you aren't closing the file completely. If you click on "Don't save", one of the splits closes, leaving you with the file still open, but your changes are lost! This happens regardless of which split you made the changes in and which split you close.

The desired behaviour would, surely, be just to close the split, leaving the file still open, no loss of changes and no prompt of loss of changes?
</Description>
    <CreatedDate>11/08/2016</CreatedDate>
    <ClosedDate>11/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10418</IssueID>
    <Title>debugger sidebar data presentation</Title>
    <Description>this is how the PHP Debug extension is presenting output - it is the only one i have used so i do not know if this is common.

![screen shot 2016-08-10 at 7 45 03 pm](https://cloud.githubusercontent.com/assets/881944/17575926/6582d7a2-5f33-11e6-9370-b0c2af684c9a.png)

is there a better way to view this than waiting 3 seconds for the hover tooltip (which sometimes doesn't happen), like line wrapping that sidebar section, or being able to redock that section to be under the code editor similar to the integrated terminal, or some such thing.

to be honest, it would probably still need line wrapping even if redocked. those messages are long and the information needed is generally over half way in.
</Description>
    <CreatedDate>11/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10412</IssueID>
    <Title>Go back should remember line / column</Title>
    <Description>- VSCode Version: Code - Insiders 1.5.0-insider (666ed83a2d465257201cdac215a553ddee3cccbe, 2016-08-10T09:04:04.509Z)
- OS Version: Darwin x64 15.6.0

Steps to Reproduce:
1. Go to some line/column (eg. `10:30`)
2. Press `Cmd + Up`
3. Press `Cmd + Shift + Enter` to enter new line above (eg. to put new import)
4. Press `Ctrl + -` to go back to location you were editing

Cursor will jump to line number `10` and most likely column `1` (if this happens to be empty line)

Ideally if it would jump to line `11:30` so you can continue typing whatever you were typing

Sublime handles it pretty good (will go to exact location that cursor was - code wise - not line number wise)

Use case is similar to: https://github.com/Microsoft/vscode/issues/10409
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>11/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10397</IssueID>
    <Title>Delete a folder from the explorer pane doesn't work</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows Server 2008 R2

Steps to Reproduce:
1. Right-click on a **folder** that contains one or more files and folders, and select 'Delete'
2. (You'll be prompted to move to recycle bin)
3. Click 'Move to recycle bin'
4. (Notice that the folder doesn't show up in the explorer anymore)
5. Click the refresh button

Observed:
- The folder comes back, it was never moved to the recycle bin

Note: Deleting a single file works, but deleting a folder doesn't.

After looking more into it... it seems that if there is a problem deleting the folder (due to permissions), VSCode doesn't let the user know, so the problem is about reporting a problem deleting a file/folder.
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>15/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10388</IssueID>
    <Title>Do not terminate active running task when running another</Title>
    <Description>It would be nice if there would be ability to run multiple tasks without killing that once already running like in webstorm.
e.g. i Have active gulp watch task but meanwhile i need to run another gulp task (like generate some code) and vscode now suggest me to kill watch task before running another. 

If it possible can you share how because I cannot find anything on google.
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>11/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10380</IssueID>
    <Title>VSCode Task runner should be able to read scripts from package.json</Title>
    <Description>It would be nice if VSCode, if a package.json is detected in the project, reads the scripts from the package.json to run thru the task runner without the need of creating a tasks.json calling the npm run methods.

![skarmavbild 2016-08-09 kl 09 39 42](https://cloud.githubusercontent.com/assets/624182/17546143/f87b34f8-5ee0-11e6-887a-2a71fd2c5cff.png)

![skarmavbild 2016-08-10 kl 09 58 28](https://cloud.githubusercontent.com/assets/624182/17546161/0740b350-5ee1-11e6-95a5-b702812b788d.png)
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>11/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10374</IssueID>
    <Title>How to detect if a line is visible (in the Viewport)?</Title>
    <Description>Hi,

Is there any public API to detect if a `line`, `range` or `position` is currently _visible to the user_ (in the Viewport)? I'm naming _Viewport_ because that's how it appears in `vscode.TextEditorRevealType` (`InCenterIfOutsideViewport`).

Thanks in advance
</Description>
    <CreatedDate>10/08/2016</CreatedDate>
    <ClosedDate>10/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10368</IssueID>
    <Title>in the vscode'terminal,I can't use the history command</Title>
    <Description>_From @czmecho on August 9, 2016 1:35_

Please use the following bug reporting template to help produce actionable and reproducible issues:
- Your Windows build number win 10 14393.10 &amp;&amp; vscode 1.4
  when I use the powershell or cmd ,I can use the PgUp or the PgDn keys to roll back to use the history command.
  but when I call the bash.exe ,it don't work.
  ![](http://ww1.sinaimg.cn/large/7df5111fgw1f6n8s035krj2149091ta7.jpg)
  btw,can I change the background color ,I don't like the color like this.

_Copied from original issue: Microsoft/BashOnWindows#828_
</Description>
    <CreatedDate>09/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10358</IssueID>
    <Title>Hidden editors cause issues with keybinding contexts</Title>
    <Description>Causing https://github.com/Microsoft/vscode/issues/9705 and https://github.com/Microsoft/vscode/issues/10122

Current thinking is to dispose editors once they become hidden.
</Description>
    <CreatedDate>09/08/2016</CreatedDate>
    <ClosedDate>22/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10353</IssueID>
    <Title>error：The terminal process terminated with exit code: 1</Title>
    <Description>- VSCode Version: 1.4
- OS Version:1511

Steps to Reproduce:
1. create  a  folder with Chinese characters like _G:\WebFloder\project\测试_
2. then press &lt;kbd&gt;Ctrl+`&lt;/kbd&gt; to open Terminal   

3.vscode will throw error `The terminal process terminated with exit code: 1`
4.if the folder created like  _G:\WebFloder\project\test_ ,it works normally
</Description>
    <CreatedDate>09/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>10350</IssueID>
    <Title>Allow to compare folders to see changes to another folder</Title>
    <Description>- VSCode Version: 1.4.0
- OS Version: Windows 10

currently only 1 file can be viewed in a diff mode, please enable diffing folders
</Description>
    <CreatedDate>09/08/2016</CreatedDate>
    <ClosedDate>09/08/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9895</IssueID>
    <Title>GIT Commit messages</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:

I suggest the use of a combobox for selecting from a list of message used for the previous commit in GIT
</Description>
    <CreatedDate>28/07/2016</CreatedDate>
    <ClosedDate>28/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9850</IssueID>
    <Title>Can't scroll in the terminal</Title>
    <Description>- OS Version: macOS
</Description>
    <CreatedDate>27/07/2016</CreatedDate>
    <ClosedDate>28/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9829</IssueID>
    <Title>Explorer Context Menu ordering issues</Title>
    <Description>Testing #9153 (test plan #9702)

using https://github.com/chrisdias/vscode-opennewinstance

here is my menus contribution:

``` json
"menus": {
            "explorer/context": [
                {
                    "command": "extension.openNewInstance"
                    ,"group": "navigation"

                },
                {
                    "command": "extension.scopeToHere"
                    ,"group": "navigation"
                }
            ]
        }
```

This results in a menu that looks like this:

&gt; Open to the Side
&gt; Reveal in Finder
&gt; Open in Terminal
&gt; **Open New Workbench Here**
&gt; **Scope Workbench to Here**

Scenario: I want to move the second menu to the top of the list.  I set up my menus contribution to look like this:

``` json
"menus": {
            "explorer/context": [
                {
                    "command": "extension.openNewInstance"
                    ,"group": "navigation"

                },
                {
                    "command": "extension.scopeToHere"
                    ,"group": "navigation@-1"
                }
            ]
        }
```

Expected: Given that "Legacy commands have the implicit order of zero (navigation@0)" I expected only the menu item that has a weighting &lt; 0 to move to the top of the list, such as:

&gt; **Scope Workbench to Here** (@-1)
&gt; Open to the Side
&gt; Reveal in Finder
&gt; Open in Terminal
&gt; **Open New Workbench Here**  (no order specified)

However, it looks like this:

&gt; **Open New Workbench Here**  (no order specified)
&gt; **Scope Workbench to Here** (order @-1)
&gt; Open to the Side
&gt; Reveal in Finder
&gt; Open in Terminal

However, if I change the ordering as follows, where the first menu item has no ordering but the second does:

``` json
        "menus": {
            "explorer/context": [
                {
                    "command": "extension.openNewInstance"
                    ,"group": "navigation"

                },
                {
                    "command": "extension.scopeToHere"
                    ,"group": "navigation@1"
                }
            ]
        }
```

The result in this:

&gt; **Open New Workbench Here** (no order specified, why did this move to the top of the list??)
&gt; Open to the Side
&gt; Reveal in Finder
&gt; Open in Terminal
&gt; **Scope Workbench to Here** (order of @1)

I dont understand why the first menu is now at the top of the list, while i can see the second one is at the bottom of the list (because @1 is &gt; @0).
</Description>
    <CreatedDate>27/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9806</IssueID>
    <Title>Console scrollbar missing </Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10

Steps to Reproduce:
1. Open console
2. execute something like npm install
3. there is no scroll bar
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9805</IssueID>
    <Title>vim nvH and nvL do not work correctly</Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (fc167f86c1aee27951b7d4b4db51229f62d0a0ad, 2016-07-26T05:12:44.554Z)
- OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04
#9699

These do not seem to function correctly:
- nvH Select till first non white space character of nth line from the top of the view
- nvL Select till first non white space character of nth line from the bottom of the view

Both seem to select to outside the view.
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9803</IssueID>
    <Title>vim vg$ only moved the selection, it does not select</Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (fc167f86c1aee27951b7d4b4db51229f62d0a0ad, 2016-07-26T05:12:44.554Z)
- OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04
#9699

Steps to Reproduce:
1. Open a file
2. Go to the middle of a line with content
3. Type `"vg$"`, notice the cursor is only moved, no selection
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9802</IssueID>
    <Title>vim vg0, vg^ and vg$ should include the character at the end of the line in the selection</Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (fc167f86c1aee27951b7d4b4db51229f62d0a0ad, 2016-07-26T05:12:44.554Z)
- OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04
#9699

Not sure if this is an extension, sample extension or API issue?

Steps to Reproduce:
1. Open a file
2. Go to a line with content
3. &lt;kbd&gt;end&lt;/kbd&gt;
4. Type `vg0`, notice the character at the end is not included in the selection (unlike when running `vim`)
   ![image](https://cloud.githubusercontent.com/assets/2193314/17148276/5770a794-531b-11e6-8e57-cdb9c27e9f89.png)

And
1. Go to beginning `0`
2. Type `vg$`, notice that character at the end is not included

And
1. Go to beginning `0`
2. Type `vg_`, notice that non white space character at the end is included, BUT, cursor position is on next character
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9793</IssueID>
    <Title>Extenstion Information Page content display problem</Title>
    <Description>- VSCode Version 1.3.1
- Commit e6b4afa53e9c0f54edef1673de9001e9f0f547ae
- Date 2016-07-12T13:42:20.692Z
- Shell 0.37.6
- Renderer 49.0.2623.75
- Node 5.10.0
- OS Version: Ubuntu 16

Steps to Reproduce:
1. Start VS Code 
2. Increase Zoom by Ctrl + +(Plus).
3. Open Extension Tab.
4. Click on any extension.
5. On Extension Information page, scroll display in properly.
   ![screenshot from 2016-07-26 21-08-19](https://cloud.githubusercontent.com/assets/4688134/17144757/8422d56e-5375-11e6-8cce-7fe88186d1f6.png)
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9792</IssueID>
    <Title>Touch screen not supported for Extensions List Pane (left side)</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10 Enterprise

Steps to Reproduce:
1. Click the extensions icon, and in the left it will show all the extensions I've installed
2. But when I want to scroll the extensions list with my touch screen, it doesn't work. (While it works for explorer, search etc.,)
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9770</IssueID>
    <Title>Unneeded separate in editor menu </Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/172399/17137481/a5d41e28-533b-11e6-9e13-143f4da633d1.png)
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9766</IssueID>
    <Title>Got stuck in `Tab moves focus` mode</Title>
    <Description>Steps to Reproduce:
1. Have a 2 pane layout.
2. Hit &lt;kbd&gt;Cmd ,&lt;/kbd&gt; to open user settings.
3. Hit &lt;kbd&gt;Cmd 1&lt;/kbd&gt; to focus the first pane.
4. Use quick open to switch to an editable file.
5. Hit &lt;kbd&gt;Cmd 2&lt;/kbd&gt; to focus the user settings and make any **valid** change there.
6. Hit &lt;kbd&gt;Cmd 1&lt;/kbd&gt; to focus the first pane.

&lt;kbd&gt;Tab&lt;/kbd&gt; will now focus away from the editor instead of inserting a `TAB`.
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9754</IssueID>
    <Title>Terminal lacks focus indication</Title>
    <Description>Testing #9695

Through two separate situations, I've been able to get into a state in which the terminal lacks focus indication through the cursor:
- Simply disable cursor blinking (related to #9753). When moving focus to the editor and back to the terminal, there is no indication that the terminal has focus at all.
- Or, leave the blinking cursor, run the `htop` command, exit it with &lt;kbd&gt;Q&lt;/kbd&gt; and the terminal will then lack focus information when moving focus to the editor and back again.
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9749</IssueID>
    <Title>Hi! Why when i install Vscode on my pc win 10 x64, changes normal startup to selective startup, and when i try to change in run-msconfig to normal startup, won't. I tried various option but after restart reverts in selective startup, and remains until uninstall the Vscode editor?????  Thanks!</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9746</IssueID>
    <Title>[terminal] Support Ctrl+C/Ctrl+V shortcuts</Title>
    <Description>Testing #9723:

With copy/paste in the context menu, I expect also the copy/paste shortcuts to work.
I suggest to copy if there is a selection and send the Ctrl-C sequence to the terminal if there is no selection.
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9735</IssueID>
    <Title>When edit javascript in *.html, autocomplete not work</Title>
    <Description>- VSCode Version:  1.3.1
- OS Version: OSX10

When edit javascript in *.html, autocomplete not work,is a bug?
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9732</IssueID>
    <Title>cursroMove to end of wrapped line in select mode is not selecting the text</Title>
    <Description>`cursorMove(to:'wrappedLineEnd' select: true)` is not selecting the text.
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>27/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9730</IssueID>
    <Title>FATAL: laptop shut off as if plug was pulled -- in-progress file now corrupted</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
Please, god, no... I don't want to corrupt another file or make my laptop hard shut off.  

Here's what I know:

I am not going to say that the laptop shutting off is VSCode's fault -- it may have just been coincidence that I was typing in it at the same time.  The laptop is fully charged on batteries and was plugged in as well.

The file I was working on was a .js file with es6 syntax.  I was using the multi-line edit functionality at the time and had 4 slices of text in my clipboard.

When I turned the machine back on, windows came up no problems.  I signed in and all my applications were closed, so I know it completely shut off -- not just randomly sleep.

When I re-opened VSCode it looks like the rest of my files are there.  The corrupted file looks like it was completely wiped and 0-written (or something).

Possibly a bug with the auto-save?  Concurrent access?  I was typing when this happened.

Sorry I don't think I can provide a lot more, but this was BAD BAD BAD.

Corrupted file contents as opened in Sublime:

```
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 00
```
</Description>
    <CreatedDate>26/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9706</IssueID>
    <Title>openNativeConsole cannot have Custom Keybinding</Title>
    <Description>Because of issue #7904 I was needing to set a different keybinding for openNativeConsole. However, it is not respecting the keybinding being set in keybindings.json. No matter what I try to set ctrl+shift+c remains the keybinding.

This may also be happening with ctrl+shift+v and preview.
- VSCode Version: 1.4.0-insiders 7/25
- OS Version: Windows 10

Steps to Reproduce:
1. Set a new keybinding for openNativeConsole
2. test copying text in the console input.
</Description>
    <CreatedDate>25/07/2016</CreatedDate>
    <ClosedDate>26/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9674</IssueID>
    <Title>Integrated terminal error: bash: __git_ps1: command not found</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:31:10.994Z)
- OS Version: Darwin x64 15.5.0

When using a custom bash prompt for git, the first message in VS Code integrated terminal on show is:

`bash: __git_ps1: command not found`

Steps to Reproduce:
1. Modify bash prompt (from .bash_profile):

```
# Change command prompt
source ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
# '\u' adds the name of the current user to the prompt
# '\$(__git_ps1)' adds git-related stuff
# '\W' adds the name of the current directory
export PS1="$green\u$purple\$(__git_ps1)$blue \W $ $reset"
```
1. Open integrated terminal in VS Code

Note: Config works fine in Terminal application.
</Description>
    <CreatedDate>25/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9672</IssueID>
    <Title>odd behavior when editing command in internal console</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10 professional (64bit)

Steps to Reproduce:
1.  set the shell of internal console to git bash: `"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe"`
2. enter a command like `abcd efgh hijk mnop`, but don't hit `enter` to execute it
3. use `left` and `right` arrow keys to move the cursor (repeat several times)
4. the command becomes something like `abccd efgh hijk mnop`
</Description>
    <CreatedDate>25/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9650</IssueID>
    <Title>How can we reuse editor of another language in any file</Title>
    <Description>Basically it like HTML can edit css and javascript in `&lt;style&gt;` and `&lt;script&gt;` tag

I am using couchDB and have a hard time edit its document. couchdb work with javascript in json so I need to write javascript in string

something like this

``` JSON
{
  "_id": "_design/_auth",
  "language": "javascript",
  "updates": {
    "test": "function (doc, req) {\n if(!req.id)\n return [null,JSON.stringify([doc,req])];\n}"
  }
}
```

Something like this. It hard and ugly so I want to make it easy by developing vscode extension

Could you please guide me?

Also I have heard from typescript team that vscode still lack this feature so they can't put salsa editor in HTML file. If it's true then I would like to make feature request
</Description>
    <CreatedDate>23/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9648</IssueID>
    <Title>Show long file and folder names on hover in the file explorer</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Win10 Build 14393

Steps to Reproduce:
1. Expand a couple folders deep (such as the contents of `bower_components`)
2. Watch your file and folder names get cut off
3. Profit

I'd like to see a tooltip or something that displays the full file or folder name on hover if it's cut off. This also makes multiple files that start with the same value impossible to tell which is which since they're clipped.

A horizontal scrollbar in the explorer might be nice as well, but the tooltip would be enough.

![capture](https://cloud.githubusercontent.com/assets/831974/17075573/98382314-5065-11e6-98bc-25bb605a9517.PNG)
</Description>
    <CreatedDate>23/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9646</IssueID>
    <Title>internet connect failed</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: windows7

Steps to Reproduce:
1. config net proxy 
2. install extend plugin
   3.error  : connectEACCES xxxx 
</Description>
    <CreatedDate>23/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9639</IssueID>
    <Title>No immediate notification that side-loaded extension was successfully installed.</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: 10.11.3

Side-loading an extension through the `File -&gt; Open` interface does not show any notification in the interface that installation was successful. Only the extensions tab shows that the installation was successful.

Steps to Reproduce:
1. Select `File - Open`
2. Select a `.vsix` file in the file picker
3. Observe that the interface does not show any notification.

Gif of me installing a side loaded extension, `KiteCode`:
![kitecode](https://cloud.githubusercontent.com/assets/87996/17070452/df40d774-5010-11e6-8e53-586d7ce6bfa2.gif)
</Description>
    <CreatedDate>22/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9627</IssueID>
    <Title>[Bug] Html Snippet Auto-complete with multiple cursors only first line</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Ubuntu 16.04

Steps to Reproduce:
1. The easy way is to install [jhon's papa Angular 2 TypeScript Snippets](https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2) addon.
2. Open html file, add new lines, select them with multicursor and try to use any snippet.
3. It will only fill the first line with the snippet, see example output below.

Input:
![image](https://cloud.githubusercontent.com/assets/9698639/17063214/d5163b00-4ffb-11e6-9ba0-f3db5ad7d226.png)

Output after applying snippet:
![image](https://cloud.githubusercontent.com/assets/9698639/17063026/04440f16-4ffb-11e6-9acf-8ff58172d84f.png)
### Note:

The Angular 2 snippet is an easy way to test, however similar thing happens with normal tags:
![image](https://cloud.githubusercontent.com/assets/9698639/17063196/b95c04bc-4ffb-11e6-9244-a294bcb2a459.png)

Output after applying snippet:
![image](https://cloud.githubusercontent.com/assets/9698639/17063167/933d5e2a-4ffb-11e6-8a50-a39d6626e7b1.png)
</Description>
    <CreatedDate>22/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9620</IssueID>
    <Title> the terminal does not work if there is a Russian in the file path</Title>
    <Description>- VSCode Version:
  1.3.1
- OS Version:
  Windows 10 1511
  Steps to Reproduce:
1. open the folder with the name of Russian
2. press '`'+'ctrl'
3. finishhim
</Description>
    <CreatedDate>22/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9616</IssueID>
    <Title>vscode opens files from comman line in separate instances</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: 
  Distributor ID: Ubuntu
  Description:    Ubuntu 14.10
  Release:    14.10
  Codename:   utopic

If I start vscode multiple times from the command line with file as parameter it opens for every file a new instance.
Is it possible that vscode opens the files from command line in the same instance. So that I get the behavior of geany (editor on ubuntu).

Regards,

Eugen Wiens
</Description>
    <CreatedDate>22/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9608</IssueID>
    <Title>Function Keys don't work in Integrated Terminal</Title>
    <Description>- VSCode Version: 1.4.0-Insiders
- OS Version: Windows 10 x64

Steps to Reproduce:
1. Open Integrated Terminal
2. Press F5 to debug

Expected: The debugging process starts up
Actual: Nothing happens.

Not sure if it's valid but we can press function keys in Debug Console.
</Description>
    <CreatedDate>22/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9597</IssueID>
    <Title>vs-code dont popup new page</Title>
    <Description>- VSCode Version:  1.3.1
- OS Version: windows 7

Steps to Reproduce:
1. when open new code 
   vs-code dont show i for me 
   and i must click icon vs-code on task bar
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9586</IssueID>
    <Title>Cannot reference regex group for find and replace in Search Panel</Title>
    <Description>- VSCode Version:  1.3.1
- OS Version: Win7

Steps to Reproduce:
1. Open the search panel
2. Click the regex search option
3. Enter a regex with a group
4. Open the replace text field
5. Reference the group from the Find text field with $1
6. Replace all

Expected:
$1 to replace with the match of the regex group

Actual:
Replaces with "$1" string instead 
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9583</IssueID>
    <Title>runtimeExecutable for different operating systems</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10 &amp; Ubuntu 16.04

I am using vscode on both windows (At work) and linux (At home). The issue I am having is with using electron on both OS's.

I have the `runtimeExecutable` set to `${workspaceRoot}/node_modules/.bin/electron` which works on my linux machine but doesn't work on my windows machine.

I then have to change the `runtimeExecutable` to `${workspaceRoot}/node_modules/.bin/electron.cmd` on my windows (note the `cmd`). Changing these all the time gets annoying.

Is there a way to define a windows executable and a linux executable? Maybe in a way like this:

``` json
"runtimeExecutable": {
    "linux": "${workspaceRoot}/node_modules/.bin/electron",
    "darwin": "${workspaceRoot}/node_modules/.bin/electron",
    "win32": "${workspaceRoot}/node_modules/.bin/electron.cmd",
},
```

And when mac/linux use the same executable:

``` json
"runtimeExecutable": {
    "unix": "${workspaceRoot}/node_modules/.bin/electron",
    "win32": "${workspaceRoot}/node_modules/.bin/electron.cmd",
},
```
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9563</IssueID>
    <Title>there is NO Scrolling Bar in the Integrated Terminal Panel</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: OS X EI Capitan 10.11.5

Steps to Reproduce:
1. In a word, there is NO Scrolling Bar in the Integrated Terminal Panel, and I can't scroll view up to top to review more information.
2. Detail:
   In the **Integrated Terminal Panel**, execute `dotnet run` command, then visit `http://localhost:5000/api/values/5` in the Chrome browser, response 500 status code(_I leave an error in my codes purposely, so as to generate more information_) from server side. Back to VSCode, in the Integrated Terminal Panel output information more than shown at Panel's Height, but **MISSING the Scrolling Bar** in the panel, result in failing to scroll view up to review entire exception information. At present, only via resizing the height of Integrated Terminal Panel for looking more output info up.
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9557</IssueID>
    <Title>Cannot select multiple files in workspace explorer</Title>
    <Description>- VSCode Version: 1.4.0-insider - SHA: 0aa920
- OS Version: Win10x64-insider build 1607.14383

Steps to Reproduce:
1. Open folder with plus &gt;1 files
2. click on the first file, hold shift click the last file you want to select.

Actual Result:
Only the first file is selected.

Expect Result:
Should have the same result as windows explorer when selecting multiple files with shift held.

Reason:
Trying to copy a group of files with out leaving vs code
</Description>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9552</IssueID>
    <Title>Blackout overwrote my file with empty data</Title>
    <Description>- VSCode Version: 1.3
- OS Version: Windows 10

Steps to Reproduce:
1. unsaved state on existing file
2. cut power to desktop

VSCode no longer understands the encoding and there's nothing in the file, although it's not zero bytes either.
</Description>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9540</IssueID>
    <Title>(Duplicate) Request: Reveal in tree (In Open Editors context menu)</Title>
    <Description>Hi there, I believe this has not been requested yet after my search.

What I want is to be able to right click on files in the `Open Editors` and have an option `Reveal in tree` which would find the file in vscode tree. That option could be listed right before `Reveal in explorer`.

That feature would be awesome as I am currently working with an angular project. I sometimes open a `controller` and find myself adding a depedency which is then needed in the `component`, so an option like that could save time in a big project.
</Description>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9530</IssueID>
    <Title>Make command based variables available to task.json </Title>
    <Description>Since we plan to consolidate launch.json and tasks.json, we'll have to make sure that variables types are not specific to debug or tasks.
</Description>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>25/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9515</IssueID>
    <Title>Use require logic for typescript.tsdk</Title>
    <Description>- VSCode Version: 1.3.1

In the `settings.json` you can configure the path for `typescript.tsdk`.
You _can_ use an absolute path which _always_ finds a TypeScript language server (at least if it is available), but you can't have different versions of TypeScript for different projects.
You _can_ use a relative path (like `node_modules/typescript/lib`) which allows you to use different versions of TypeScript for different projects, but it _can't_ find a TypeScript language server, if `node_modules/typescript/lib` isn't in your root (e.g. if you use multi-package repositories or multiple independent examples in one repository).

It would be nice, if vscode could just try to `require` `typescript/lib` relative to the current opened TypeScript file which would probably be the most natural way.
</Description>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>20/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9510</IssueID>
    <Title>[Request] Enable reopening VS Code to the same workspace and set of files as when VS Code was closed (like Notepad++ default)</Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (f4780e67933164a2289b86f2c279aaa05fda672f, 2016-
  07-19T05:07:05.876Z)
- OS Version: Windows_NT ia32 10.0.14390

Steps to Reproduce:
1. Open VS Code
2. Open some files from disk
3. Open some Untitled editors and make some changes
4. Close VS Code
5. Reopen VS Code

Actual:
Nothing was opened and need to reopen editors (especially frustrating with daily updates to VS Code).
(And no option to change this behavior to opt-in.)

Desired:
The same editors and workplace that was opened when I closed VS Code are reopened so I can continue working where I left off with minimal disruption.
(There should at least be an option to opt-in/opt-out of this behavior.)

Clarifcation:
Should work even if a workspace/folder was not opened (just using VS Code as a text editor).
</Description>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>20/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9491</IssueID>
    <Title>How about add a new plugin 'code map'?</Title>
    <Description>I have used several editor like sublime, atom,webstorm and so on, they all have the code map itself or the plugin, while there are too many lines of code, the code map may help us go to somewhere faster, so I wish it that vscode can also have this kind plugin, I long for it.
</Description>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>20/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9478</IssueID>
    <Title>It is not possible to select multiple file from the file explorer</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Win 10 x64

Steps to Reproduce:

It is not possible to select multiple file from the file explorer of vs code like ctrl+click or shift+click. To perform operation as delete, copy etc.
</Description>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>20/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9470</IssueID>
    <Title>throw '存储空间不足，无法处理此命令。' when I open the terminal(ctrl + `)</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:
1. all of triminal configs are defualt; and I installed a plugin --"Terminal", contributed by Jun Han
2. use `Ctrl `` open the terminal,and then it tell me `存储空间不足，无法处理此命令。`  I didn't run any command, just open it. 
</Description>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9466</IssueID>
    <Title>Missing output with clear then scroll</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: OSX Yosemite 10.10.5

This could be a mismatch in opinion for the behavior of `clear` or `Ctrl-L` and scrolling (as I believe I've seen this behavior on a Linux Mint machine), but here's my problem:

Let's say I have a lot of output from a certain command in the integrated terminal (mine uses bash). If I enter `clear` or `Ctrl-L`, the terminal gets cleared, which is good! However, if I scroll up, a chunk of output from the verbose command is missing (seems directly related to the height of the terminal window).

What I expected: Using _my_ default bash terminal on my Mac, the screen gets cleared, but if I scroll up, **all** the output is still there.

Steps to Reproduce:
1. Open the integrated terminal (I supply the `-l` option in `settings.json` in order to use my `~/.bash_profile`)
2. Run a command with lengthy ouput (e.g. `ruby -e 'puts "START";100.times { |n| puts "Line #{ n + 1 }" };puts "END"'`)
3. Enter `clear`
4. Scroll up

With the terminal occupying around 80% of my screen height, I only got output of that Ruby command to around line 50 (i.e. I never see "END" after clearing).

If this is just a matter of terminal opinion, it might be nice to have an option in `settings.json` to define the clear/scroll behavior.
</Description>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9454</IssueID>
    <Title>Highlight changed files in a Git repo when folder is open in the Explorer view</Title>
    <Description>- VSCode Version: any
- OS Version: any

If you open a folder in the Explorer view, and the folder is part of a Git repo, highlight files that have changes that are uncommitted. Atom Editor does that today and it adds tremendous value to the workflow.
</Description>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9443</IssueID>
    <Title>Feature Request: Horizontal split in addition to the vertical split</Title>
    <Description>I am submitting a feature request here, because the page to do feature requests does not work (https://visualstudio.uservoice.com/forums/293070-visual-studio-code).

My feature request is for a horizontal split in addition to a vertical split. Currently, you can only view tabs next to each other, but I'd like to be able to view them top and bottom. This would be especially helpful when you have files that have really long lines of code.
</Description>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>21/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9439</IssueID>
    <Title>can't open intergrated terminal in dir ,named with chinese words</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.open dir named with chinese words, eg: e:\pp\新项目
2.open,vscode in this dir^
3.ctrl+~ 
</Description>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9438</IssueID>
    <Title>intergrated terminal bug , can't input chinese. </Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.open vscod any dir ,named with english.
2.ctrl+~ ,open intergated terminal (cmd).
3.try to input chinese
</Description>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9403</IssueID>
    <Title>VS Code does not play nicely with Git Bash for Windows</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10.0.10586

Frequently when I open a repository in VSCode and do some kind of operation from the command-line in [Git Bash](https://git-for-windows.github.io/), such as `git rebase`, `git commit`, etc. I will get this error message:

```
fatal: Unable to create 'C:/Users/James/Code/git/coreclr/.git/index.lock': File exists.

If no other git process is currently running, this probably means a
git process crashed in this repository earlier. Make sure no other git
process is running and remove the file manually to continue.
```

Sometimes this conflict will mess up local changes I've made (e.g. once it caused Git to skip 2 commits while I was rebasing), which means I had to force-pull everything from the remote and start all over again.

The thing that's kind of strange about it is when I do a `rm .git/index.lock`, most of the times the file will no longer be present; it appears spontaneously _only_ when I try to run a Git command from the terminal. Re-running the command once or twice seems to get rid of the error most of the time; however sometimes the `index.lock` file stays and I have to manually remove it.

Unfortunately, I wasn't able to get a consistent repro for this since it seems to only occur randomly when VSCode is open on the repository; but it's never happened after I closed the editor. (I haven't noticed any pattern even though this has been happening to me for months.) Nevertheless, it would be greatly appreciated if someone could take a look into this, even though I can't tell what's causing it.

Thanks! :)
</Description>
    <CreatedDate>17/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9399</IssueID>
    <Title>Extend the Search tab (Search Results) with Context Menu</Title>
    <Description>The Search results has no Context Menu entries today. It shows files and lines, but you can only click to expand/collapse the results in file, remove a file from the list and navigate to one of the results (lines in file).

It would be interesting to have the same operations for files, that you can use in the Explorer tab, like `Open on the Side`, `Reveal in Explorer` and so on. And also, open a similar Context Menu API that was added to Explorer tab in vesion 1.3.0.

Thanks in advance
</Description>
    <CreatedDate>17/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9397</IssueID>
    <Title>Shift + Ctrl + M - Should move focus to errors panel, even if it's already active</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: OSX 10.11.5

Steps to Reproduce:
1. Open a .cs file
2. Introduce 2 syntax errors that will show up as problems
3. Use Shift + Ctrl + M to navigate to the first error an fix it
4. Attempt to use Shift + Ctrl + M to navigate to the next error

**Result:**
Errors panel is hidden

**Expected Result:**
Errors panel receives focus
</Description>
    <CreatedDate>16/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9396</IssueID>
    <Title>scss scss scss!</Title>
    <Description>not support scss
</Description>
    <CreatedDate>16/07/2016</CreatedDate>
    <ClosedDate>22/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9359</IssueID>
    <Title>Setting PowerShell version commandline switch fails</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows

Steps to Reproduce:
1. update settings.json to "terminal.integrated.shell.windows": "C:\Windows\system32\WindowsPowerShell\v1.0\powershell.exe -version '2.0'"
2. ctrl+` to open terminal.
3. Terminal Window crashes and goes away.
</Description>
    <CreatedDate>15/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9322</IssueID>
    <Title>Is there any file icon package official？</Title>
    <Description>- VSCode Version: 1.4
- OS Version: 10.12
  
  **I think file icons can help people find file easily. So, it would be better to have file icons in the near future.** 
</Description>
    <CreatedDate>15/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9298</IssueID>
    <Title>Changing a parent folder's name causes loss of unsaved file changes.</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Edit a file in a sub-folder, but do not save it.
2. Rename the sub-folder.

The file will still be marked as dirty, however it will no longer appear in the OPEN EDITORS section and all changes will be lost.

Possibly related to issue [#1350](https://github.com/Microsoft/vscode/issues/1350).
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9289</IssueID>
    <Title>Dragging tabs to another open window does not do anything</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:31:10.994Z)
- OS Version: Darwin x64 15.5.0

Steps to Reproduce:
1. Open two separate windows with files
2. Drag the a tab from one window to the tab bar in the other window
3. Nothing happens? I would expect this to move the file/tab to the window I just dragged it to. 
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9287</IssueID>
    <Title>cannot copy paste from/to terminal</Title>
    <Description>- VSCode Version:1.3.1
- OS Version: ubuntu 16.4

Steps to Reproduce:

try to copy something `ctrl+c` naturally fails but normally on a terminal on linux you can use `ctrl+shift+c`
in vscode it opens a new terminal and also right click wont work 
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9275</IssueID>
    <Title>Closing one of multiple editors for a dirty file forces save</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:31:10.994Z)
- OS Version: Darwin x64 15.5.0

Closing an editor for a file that is opened in another editor group, shouldn't force the save dialog.

Steps to Reproduce:
1. Edit some file
2. Split Editor
3. Close Editor &lt;- I shouldn't be prompted to save here
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9264</IssueID>
    <Title>Extensions don't install</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 7 Pro SP1

Steps to Reproduce:
1. Do a new clean Visual Studio Code installation
2. Try to install any extension

It stays "installing" forever and doesn't throw an error.

It could be because of domain policies, but then I think it should throw some kind of error.
![image](https://cloud.githubusercontent.com/assets/10497736/16834097/98f9a76e-49b2-11e6-970f-b342d4cc3cf6.png)

(Running as an administration doesn't change the situation)

Also it should show the progress of the downloads or something, the ouput window is empty.
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9263</IssueID>
    <Title>Cannot open Code when an instance with admin rights is running</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Win 10.0 (build 10240)

Steps to Reproduce:
1. Open an instance of VSCode with Admin privileges 
2. Go to any folder, right click and choose "Open with Code" 

**Actual**: a new instance of VSCode fails to open (or one does open but crashes instantly)
**Expected**: a new instance of VSCode with the folder open
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9259</IssueID>
    <Title>不能直接通过拖拽文件夹打开项目</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.不能直接通过拖拽文件夹打开项目
2.
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9258</IssueID>
    <Title>Duplicate extensions after creating new files while updating them</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: win10-x64-10586.420

Steps to Reproduce:
1.  Switch to `Extension` tab on the left
   ![1](https://cloud.githubusercontent.com/assets/6079112/16832247/08a3858e-49dc-11e6-9ae5-2a4a70d221ac.PNG)
2.  Click to update some extensions
   ![2](https://cloud.githubusercontent.com/assets/6079112/16832255/0d04f4aa-49dc-11e6-8411-9bccf833f70b.PNG)
3.  Switch to `Explorer` tab and add some new files
   ![3](https://cloud.githubusercontent.com/assets/6079112/16832259/107fe928-49dc-11e6-811a-7301a55e4a57.PNG)
4.  Switch to `Extension` tab again and duplicate extension will show on the bottom
   ![4](https://cloud.githubusercontent.com/assets/6079112/16832265/13bcf356-49dc-11e6-83fa-0e9b8cdc9f18.PNG)
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9253</IssueID>
    <Title>Arrows left-right not moving in top menu</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10.0.14388.0 (but not version specific)

Steps to Reproduce:
1. Press Alt+H.
2. Press left arrow.

Expected behavior:
- The arrow keys should navigate between top level menu items.
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9252</IssueID>
    <Title>reveal in explorer opens in the background</Title>
    <Description>- VSCode Version: 1.3
- OS Version: win 10

Steps to Reproduce:
1. right click on filte -&gt; reveal in explorer
2. the explorer opens iin the background instead in the front
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9251</IssueID>
    <Title>select multiple files in the tree</Title>
    <Description>- VSCode Version:  1.3
- OS Version: windows 10

Steps to Reproduce:
1. can't select multiple files for cut paste

my workaround is to go to the explorer and do it there.
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9247</IssueID>
    <Title>ContextMenu in Editor/Title only available with Tabs active</Title>
    <Description>- VSCode Version:1.3.0
- OS Version: Windows 10

Using the [newly available API](https://code.visualstudio.com/updates#_extension-authoring)

Steps to Reproduce:
1. Add a `menu - editor/title` entry to `package.json`

``` json
    "menus": {
        "editor/title": [
            {
                "command": "bookmarks.list",
                "group": "bookmarks"
            }
        ]
     }
```
1. Turn off showTabs (`"workbench.editor.showTabs": false`)

The new context menu command is not available. But if you turn on showTabs (`"workbench.editor.showTabs": true`), the command appears.

Thanks in advance
</Description>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9237</IssueID>
    <Title>terminal does not have scroll bar in the right.. it's very important </Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 
2. 
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9234</IssueID>
    <Title>Windows Explorer shows File type as Visual Studio Code for Files Set to Open with VSCode</Title>
    <Description>- VSCode Version: 1.3.1
- OS Version: Windows 10 Pro Build 10586.420

Steps to Reproduce:
1. Set VSCode as default application to open with raw text file of yet-unknown file type (e.g. README.md has unknown .md file type; set README.md to Open With VSCode - and default VSCode to open all files of .md file type)
2. View file in Windows Explorer and under "Type" column, shows "Type" as Visual Studio Code.

The file shown should display whatever the file-type/extension is; in the example given above, should display MD File or perhaps even Markdown as file type as it does if set to open with any other text editor like Sublime.
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9224</IssueID>
    <Title>Sideloading an extension .vsix doesn't prompt the user</Title>
    <Description>- VSCode Version:1.3.1
- OS Version:Windows 10

Steps to Reproduce:
1. Open an extension .vsix file with File &gt; Open File...

The extension is correctly installed but there is no indication that the install finished or succeeded. If you go to the Extensions view, you can see the extension but only Uninstall is shown and not the blue Enable button to prompt the user for a restart.
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9223</IssueID>
    <Title>Global Find/Replace with Regex not working</Title>
    <Description>_From @jchannon on July 13, 2016 7:55_
## Environment data

`dotnet --info` output:

```
.NET Command Line Tools (1.0.0-preview2-003121)

Product Information:
 Version:            1.0.0-preview2-003121
 Commit SHA-1 hash:  1e9d529bc5

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  10.11
 OS Platform: Darwin
 RID:         osx.10.11-x64
```

VS Code version:1.3
C# Extension version:1.2.2
## Steps to reproduce

Do a global search with regex turned on and with capture groups eg `(this)` then in the replace enter `$1` which will replace what it finds with the first capture group
## Expected  behavior

Replace with the value of `$1` not the actual string of `$1`
## Actual behavior

Replaces all found items with the string of the capture group

&lt;img width="454" alt="screen shot 2016-07-13 at 08 55 02" src="https://cloud.githubusercontent.com/assets/105126/16795865/860b71fe-48d7-11e6-8d90-a15362db8cc4.png"&gt;

_Copied from original issue: OmniSharp/omnisharp-vscode#562_
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9210</IssueID>
    <Title>Closing a duplicate view of an unsaved file closes both views</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:52:42.674Z)
- OS Version: Darwin x64 15.5.0

Steps to Reproduce:
1. Create a new file and type some character into it
2. Go to another editor and open the new file with Command + P
3. Close either of the editors
4. You are asked if you want to save the file, and both views are closed when an action is selected
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9201</IssueID>
    <Title>Paste doesn't work in terminal in VSCode windows</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:35:06.227Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. open terminal with Ctrl Shift `
2. press Ctrl+V, you see ^V entered
3. pressing Ctrl+V in just cmd.exe (running it separately) pastes the clipboard
4. using Edit-&gt;Paste menu in VS Code works. Interesting, this menu has shortcut Ctrl+V
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9193</IssueID>
    <Title>Tilde (~) character not available in integrated terminal</Title>
    <Description>- VSCode Version: Code 1.3.1 (e6b4afa53e9c0f54edef1673de9001e9f0f547ae, 2016-07-12T13:31:10.994Z)
- OS Version: Darwin x64 15.5.0

Steps to Reproduce:
1. Open integrated terminal
2. Press alt+n
3. no tilde character is produced in terminal

BUT
if you press alt+n in the normal editor pane the character can be entered.
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9190</IssueID>
    <Title>Unneeded menu separator in the diff editor </Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/172399/16797648/c68af432-48e8-11e6-9f99-3763f7ea02c0.png)
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9188</IssueID>
    <Title>Debug variable overlay disappears when mouse not over text editor</Title>
    <Description>- VSCode Version: 1.4.0-insider (commit 50a0945)
- OS Version: Windows 7 x64

Steps to Reproduce:
1. Start a JavaScript or TypeScript application in debugging mode (F5)
2. Set a breakpoint
3. Hit the breakpoint
4. Mouse-over a variable
5. The "debug variable"? overlay appears
6. Move the mouse cursor still inside that overlay, but outside of the editor region
7. The overlay disappears

Description: When I wanted to debug an application, I used the debugger with the "variable overlay" to inspect variables inside the editor. However, when I wanted to inspect a variable that was rendered in that overlay _but_ was outside of the editor region, the overlay disappeared, even though it should have had the mouse focus.

The following image shows what I mean:
![debug_overlay_bug](https://cloud.githubusercontent.com/assets/7488613/16797622/acd9e50c-48e8-11e6-9b62-7a1e3a13ebd8.png)
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>19/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9187</IssueID>
    <Title>when i drop a file to vscode,editor is unable to work.</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9176</IssueID>
    <Title>Setting extensionHomePath does not install extensions into there</Title>
    <Description>When I set the `extensionHomePath` from the command line and install extensions, I do not find the extension in that location I specified.
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9166</IssueID>
    <Title>Go to symbol filters on truncated symbol name, not actual symbol name</Title>
    <Description>- VSCode Version: Code - Insiders 1.4.0-insider (583f439c1d49128a4775c1ba5a1ac8c6ddd63d5f, 2016-07-12T05:13:58.023Z)
- OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04

File used: https://github.com/sourcelair/xterm.js/blob/master/src/xterm.js

![image](https://cloud.githubusercontent.com/assets/2193314/16791018/ad8f9146-486f-11e6-9f54-f78c4b6ee6a1.png)

Press e

![image](https://cloud.githubusercontent.com/assets/2193314/16791028/c0987366-486f-11e6-91e5-7fee79a52961.png)
</Description>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9155</IssueID>
    <Title>Cant install extension - Regresion</Title>
    <Description>- VSCode Version: 1.3
- OS Version: ubuntu 14.04 LTS 
- Node.js Version: 6.2.2

Hi there, I can't install extension in VSCode 1.3 I just updated my editor to 1.3 and want to install a theme 

`ext install theme-dracula`

I click the little green buttons to install the theme but nothing happens. I opened the Dev Tool and the following error appears.

```
shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/opt/VSCode-linux-x64/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/opt/VSCode-linux-x64/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /opt/VSCode-linux-x64/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/opt/VSCode-linux-x64/resources/app/out/vs/code/node/sharedProcessMain.js:6:23456),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)
```

Hope this can help!
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9151</IssueID>
    <Title>auto-update not working on mac</Title>
    <Description>- VSCode Version: 1.2.1 tried to update to 1.3.0
- OS Version: OSX 10.11.5

Steps to Reproduce:

I'm not working as a root user. Each time the app asks me to download/install the update, it seems to work, but when the app is restarted, I get the old version. After a while the app asks again to update.
I always need to download the new version manually from the site and install it.
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9144</IssueID>
    <Title>Git diff traversing buttons are missing</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Win 7 Pro

Version 1.3 misses git diff traversing buttons when git file compare is opened:
![vsc13](https://cloud.githubusercontent.com/assets/2411422/16773936/cde70fa2-4827-11e6-9dc7-1e2261e6b332.png)

I guess it has something to do with new tabs feature. Right click gives missing options but it's really tedious to right click every time you want to move to the next change...

Older version 1.1 looked like this:
![vsc11](https://cloud.githubusercontent.com/assets/2411422/16773984/06b2e2ac-4828-11e6-85a5-e25039e84edf.png)

Also it would be nice to have some keyboard shortcut for this.
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9141</IssueID>
    <Title>Cannot download extensions</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Linux Mint 18 64 bit
- Kernel: 4.4.0-28-generic

Steps to Reproduce:
1. Open Visual Studio Code
2. Open Extension Manager
3. Search for any extension
4. Click install and nothing happens

I'm not sure if this has anything to do with it but the console is outputting the following
`shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)`
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9131</IssueID>
    <Title>Can't install, update, delete, view extentions</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Linux RFE005 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux

Steps to Reproduce:
1. Ctrl+P
2. paste any install e.g.:  ext install JavaScriptSnippets
3. Press "install" button
4. No results

Also 
1. Ctrl+Shift+X
2. press "..."
3. Show Installed extentions
4. No results at all.

Toggle Developer tools:
Every second or like that exception in console:

`Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23456),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416(anonymous function) @ shell.ts:318e.onUnexpectedError @ errors.ts:73u @ errors.ts:88(anonymous function) @ winjs.base.js:43(anonymous function) @ winjs.base.js:38
winjs.base.js:45 WARNING: Promise with no error callback:154`
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9127</IssueID>
    <Title>Can't install extensions on 1.3.0</Title>
    <Description>When pressing the install button on an extension, absolutely nothing happens. Tried to launch code with --verbose too, but no errors are logged. 
- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 4.6.0-0.bpo.1-amd64
- Distro LMDE2
  Steps to Reproduce:
1. Install code on LMDE2 (debian jessie based)
2. Try to install extension
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9122</IssueID>
    <Title>Autocomplete (intellisense) suggestions - lower priority for code snippets</Title>
    <Description>- VSCode Version:1.3.0
- OS Version: Win10

Some code snippets are very usefull but extremly annoying at the same time.

In some cases, code snippets take precedence over class members, see this .tsx file for example:

&lt;img src="http://i.imgur.com/sxd7fa2.gif" alt="http://i.imgur.com/sxd7fa2"
 /&gt;

another example is conflict between new keyword and new code snippet:
&lt;img src="http://imgur.com/lvgXy2x.gif" alt="http://i.imgur.com/sxd7fa2"
 /&gt;

it makes intellisense quite annoying
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9121</IssueID>
    <Title>Allow to 'resolve' a SymbolInformation</Title>
    <Description>Working on a Java language server...

`WorkspaceSymbolProvider.provideWorkspaceSymbols` returns a set of `SymbolInformation` where each SymbolInformation contains a location, including the source range of the element.

The problem is that acquiring the source range of an element is quite expensive in our case, as it requires opening the document that contains the symbol. (The symbol index we have does not contain source ranges).
As the open symbol action doesn't really need the range until the user selects a symbol to be opened, it would be good if the API would have an additional hook that allows to resolve a SymbolInformation element, similar to what is there for CompletionResults.
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9116</IssueID>
    <Title>cant drag the folder to the editor. </Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:
1. open a new window in VS code
2. try to drag and drop the folder in the editor, the window flickers but it shows No folder in the left panel.
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9113</IssueID>
    <Title>Duplicate copy of file created when renaming the containing folder and changes to file not saved.</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10 Build 14385

Steps to Reproduce:
1. Create a folder (A) and place a couple of files in the folder with VSCode
2. Save any changes
3. Make an edit to one of the files in folder (A)
4. Do not save the changes to the file
5. Now rename folder A to folder B
6. You will not be prompted to save any changes or prevented from renaming the folder
7. If all goes as expected you will end folder B containing all the files from A _AND_ folder A will still exist with the edited version of the file and no others.

Certainly not a showstopper but it caused me concern at first when I went to edit the edited file in the new folder B and my edits had apparently been lost.

Would be great if it prompted you to save changes and proceed OR cancel the rename until changes had been saved.

Cheers,
James
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9111</IssueID>
    <Title>Drag and drop tabs from this window to other one</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Open a new file in new window
2. Can not drag and drop this tab to old window
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9109</IssueID>
    <Title>Right-click to make a menu and VSC Not Responding</Title>
    <Description>### I right-click to make a menu and keep it for a long time(no more than one minute). It will report VSC Not Responding. But the fact is reverse. Actually, it is responding.
- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.![image](https://cloud.githubusercontent.com/assets/7413974/16753229/b7c1cf26-481a-11e6-8be3-db3346daa9af.png)

2.
![image](https://cloud.githubusercontent.com/assets/7413974/16753243/d73de1c8-481a-11e6-86a6-97d72f2cd8e1.png)
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9108</IssueID>
    <Title>Error</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:

1.Cannot drag and drop open folder
2.Cannot open multiple folders at the same time
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9107</IssueID>
    <Title>Unable to Install Extensions in Ubuntu</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 3.19.0-64-generic (Ubuntu 14.04)

Steps to Reproduce:
1. Enter Ctrl+Shift+P, type `&gt;install extensions`, and press Enter.
2. In the Extensions column, type `ReactSnippets`. Extension `Reactjs code snippets` should populate.
3. Click the green `Install` button, and there is no response. This behavior is the same for every extension attempted at this time. 

Maybe worth noting that this behavior only began after upgrading to 1.3.0. Extensions installed correctly before the upgrade. In addition, can confirm that extensions install properly on OS X after VSCode upgrade.
</Description>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9102</IssueID>
    <Title>Why did we lose the ability to visualize markdown files? </Title>
    <Description>- VSCode Version: 1.3.0 
  e724f269ded347b49fcf1657fc576399354e6703

2016-07-07T16:50:53.590Z
- OS Version: Mac latest

Steps to Reproduce:
1. I used to be able to click an icon in the upper left to see how the markdown will render.
2. The icon is now gone.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9096</IssueID>
    <Title>global search and replace doesn't respect regex variables</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Mac OS X 10.11.5

Steps to Reproduce:
1. Try using a regex with a `$` variable in global search and replace. For example replace

`for(.*)` with `cat$1`

In a single file search and replace this replaces 'for' with 'cat'. In a global search and replace it deleted the whole line after `for` (including for), replacing it with `cat$1`, removing the rest of the line. Basically, it doesn't realise it should treat `$1` specially.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9094</IssueID>
    <Title>Dragging folders no longer works on Mac</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:52:42.674Z)
- OS Version: Darwin x64 15.4.0

Steps to Reproduce:
1. Open Finder on Mac
2. Find a folder with a number of source files. Drag the folder onto the VS Code window.

Past behavior would add the folder/subfolders and files to the VC Code "solution". This is now broken and you must click the folder icon, "Open Folder" button and go find the folder you would like to add, which is cumbersome and time consuming.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9091</IssueID>
    <Title>Latest update causes intermittent freezes in active editor</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows Server 2008 R2 Datacenter (Remote Workspace)

Steps to Reproduce:
1. Open more than one tab/file
2. One or more tabs become unresponsive (happens intermittently) and the only way to regain responsiveness (e.g. select text or scroll) within the affected tab is to restart VS Code

This issue only started happening after the 1.3.0 update.

Thanks!
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9088</IssueID>
    <Title>The keyboard cursor disappears while side is open</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10

Steps to Reproduce:
1. Open files side by side.
2. Adjust the width to a low value (e. g. 40% of the screen.
3. Go right with the keyboard cursor.

The cursor disappears if you do this. Only it won't render at the righter positions but it is there and you can type.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9074</IssueID>
    <Title>Zoom + not working when I preview file</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Win10

Steps to Reproduce:
1.  Open a md file, edit, and zoom + Editor
2.  OpenPreview

![image](https://cloud.githubusercontent.com/assets/7908062/16734118/ee0f727c-47b6-11e6-9b5b-491d50aa1c8a.png)
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9073</IssueID>
    <Title>Dragging and Dropping a folder from file explorer doesn't work.</Title>
    <Description>- VSCode `Version:1.3
- OS Version:Win 7 64bit

Steps to Reproduce:
1. Open VS Code
2. Open File Explorer
3. Drag a folder from file explorer to VS Code editor pane.

In previous versions of VS Code you could drag and drop folders to the editor pane in VS Code to open them.  As of 1.3 this functionality no longer works.  Nothing in the release notes says that this was removed, only that the drag and drop was enhanced.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9072</IssueID>
    <Title>Autocomplete for "console.log()" in JavaScript and TypeScript is wrong.</Title>
    <Description>- VSCode Version: 1.3.0 (1.3.0)
- OS Version: OS X 10.11.5 (15F34)

Steps to Reproduce:
1. type console.l
2. Press tab to autocomplete
3. the result is "console.console.log();"

It looks like not the method "log" is autocompleted but the entire class + function.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9070</IssueID>
    <Title>Closing split view prompts to discard saved changes</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10

Steps to Reproduce:
1. Open any file, make some changes to it (don't save)
2. Split the editor
3. Make more changes; close one of the splits and choose "Don't save" -- changes are reverted even though the file is still open and in plain sight.

It makes sense that the changes are discarded since I said Don't save, but it does not make sense that I should have been prompted that at all.

Don't quote me on this (I didn't test it) but I have a feeling this is a regression.  I feel like I've done this all the time.  I quickly tested by disabling tabs and still get the same result though.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9068</IssueID>
    <Title>Feature Request: Right Click -&gt; Copy Path on file list</Title>
    <Description>It would be really helpful to copy the path of a file. For example, if I search for something and a file is pulled up, with a long and complex path, it would be good to capture that, see below:

[![enter image description here](http://i.stack.imgur.com/hanic.png)](http://i.stack.imgur.com/hanic.png)

Being able to right click (ctrl + click on mac) on the file (which I am hovering over in the picture) and copy the file path would be really handy. 
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9066</IssueID>
    <Title>Error of token transformation</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 3.16.0-73-generic

I tested JavaScript and CSS: The Syntax highlighting doesn't work at all.
The error message is: Mode error while token transfomation of input.

HTML works fine!
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9063</IssueID>
    <Title>(Linux, V1.3) Cannot install extensions</Title>
    <Description>- VSCode Version: 1.3.0-1467909982
- OS Version: Linux Mint 17.3 (Ubuntu 14.04 based)

Steps to Reproduce:
1. Install version 1.2
2. Update to version 1.2.1
3. Update to version 1.3
4. Click extension icon
5. Search for "eslint" (for example)
6. Click on "install"
7. Nothing happens, but errors show in Developer tools.

Error in developer tools:

shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416(anonymous function) @ shell.ts:318e.onUnexpectedError @ errors.ts:73u @ errors.ts:88(anonymous function) @ winjs.base.js:43(anonymous function) @ winjs.base.js:38
winjs.base.js:45 WARNING: Promise with no error callback:46
winjs.base.js:46 Object {exception: null, error: Error: Cannot read property 'call' of undefined, promise: i.C…s.d…e._oncancel, handler: undefined, id: 46…}
winjs.base.js:45 WARNING: Promise with no error callback:47
winjs.base.js:46 Object {exception: null, error: Error: Cannot read property 'call' of undefined, promise: i.C…s.d…e._oncancel, handler: undefined, id: 47…}

It seems that version 1.2 was called visual-studio-code and version 1.3 is called code so both are installed simultaneously. Removing version 1.2 does not make a difference.

Workaround: 
1. Remove version 1.3, 
2. Install version 1.2.1 &amp; start application
3. ctrl-P, type ?  (typing ext install directly will not work)
4. select "Extension install"
5. Search &amp; install the wanted extensions
6. close application
7. Install version 1.3
8. Extensions are installed and working
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9054</IssueID>
    <Title>TypeScript errors in new files until reload VSCode</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 7 Version 6.1 SP1

Steps to Reproduce:
1. Install angular-cli 1.0.0-beta.9 `npm install -g angular-cli`
2. Create a new Angular project `ng new TestApp`
3. Open TestApp-Folder with VSCode
4. Create a new TypeScript file in the src/app folder e.g. first.component.ts
5. Insert code in file (see below)

As you can see now VSCode shows some errors in first.component.ts
1. Cannot find name 'module'
2. Experimental support for decorators is a feature that is subject to change in a future release. Set the 'experimentalDecorators' option to remove this warning.

When you take a look in src/tsconfig.json you'll see that **experimentalDecorators** is set to true that typings.d.ts is included in the files section. While src/typings.d.ts declares the module variable.

Only if you reload VSCode the errors disappear but when you have a TypeScript file in a (sub-) subfolder it may happen, that the error will appear again.

**src/app/first.component.ts**

``` typescript
import { Component, OnInit, OnDestroy } from "@angular/core";

@Component({
    moduleId: module.id,
    selector: "first-component",
})
export class NameComponent implements OnInit, OnDestroy {

    constructor() {}

    public ngOnInit() {}

    public ngOnDestroy() {}

}
```
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9053</IssueID>
    <Title>Cant Scroll up on integrated terminal</Title>
    <Description>- 1.3.9:
- OS X El Capitan:

Steps to Reproduce:
1. has long string in terminal (integrated terminal)
2. cant scroll up.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9052</IssueID>
    <Title>mouse-wheel scroll on integrated terminal scrolls 1 line at a time</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Xenial

Steps to Reproduce:
1. Print a lot of text to the integrated terminal
2. Scroll the mouse wheel

Notice that the mouse-wheel scrolls one line at a time... this is really slow, and not like other terminals (gnome terminal scrolls 4 lines at a time by default).
Would be nice if mouse-scroll did scroll the normal amount of lines.
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9048</IssueID>
    <Title>CTRL+&lt;Right|Left&gt; arrow is not working in integrated console</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10

In the editor, and in general many consoles, Ctrl+Right or Left arrow moves the cursor left or right by a word. This functionality is immensely helpful within the integrated console too. At the moment, in the integrated console, this key combination results in inserting '5D'. 

Steps to Reproduce:
1. Open Integrated Console
2. Type a command and then try Ctrl+Left
</Description>
    <CreatedDate>11/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9029</IssueID>
    <Title>Cursor dissapear after move between parameters</Title>
    <Description>- VSCode Version:  1.3.0
- OS Version: Ubuntu 16.04

Cursor dissappear on functions parameters

Steps to Reproduce:
1. Move cursor between functions parameters
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9024</IssueID>
    <Title>Integrated terminal can not be opened,on path contains chinese char</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.Ctrl+` open intergrated terminal 
2.terminal window flash and closed

The project parent directory contains Chinese ，like  

&gt; c:\projects\经验教训库\webapp

rename this folder ,terminal can been opend  success. like

&gt; c:\projects\Expriences\webapp
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9022</IssueID>
    <Title>cant't load more than one directory in the explorer</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.3.9600

Steps to Reproduce:
I don't want to load it's parentdir , just load some which exsist in the  parentdir,but not all 

![image](https://cloud.githubusercontent.com/assets/13084076/16712964/95ce3888-46ca-11e6-9925-6f4c3b66d476.png)
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9021</IssueID>
    <Title>Cursor gone missing</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Multiple files open in tabs with both panes, switching between a js on the right hand pane and an html on the left hand pane
2. In the html file, hitting home the cursor is present 
3. Either hit end or arrow right and once the cursor gets to a tag attribute value (within the "") that is partially hidden off screen, the cursor disappears
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9020</IssueID>
    <Title>Install extension extremely slow</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. install markdownlint extension 
2. location: China mainland and HongKong

It takes almost 30 mins, and still in processing
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9016</IssueID>
    <Title>Visual Studio Code will not start on Debian 8.5 over VNC</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Debian 8.5 jessie 64-bit

Steps to Reproduce:
1. Type "code" into the MATE terminal

When I try to start Visual Studio Code on my Debian machine, nothing happens. No window appears on the screen. I am using MATE on Debian 8.5 64-bit. When I type "code" and press enter, I can see that the code process appears in the MATE System Monitor and top for about 4 or 5 seconds, then closes. I get no error message in the terminal. Visual Studio Code used to work on this machine, but the last few releases would not start.
</Description>
    <CreatedDate>10/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9015</IssueID>
    <Title>VSCode remains opened sometimes after being closed</Title>
    <Description>- VSCode Version: just updated to 1.3.0
- OS Version: Debian Jessie 64bit

Steps to Reproduce:
1. Start VSCode
2. Close VSCode

**Detailed description:**

I've recently installed VSCode for the first time on my system. I've noticed that after closing VSCode a couple of processes remain active namely `code/code`, `Microsoft.VSCode.CPP.Extension.linux` , `code/code /usr/share/resources/app/out/bootstrap --type=SharedProcess` and probably a bunch of others which I haven't found yet. `code/code` is (if I'm not mistaken) the main process of VSCode. And the fact that all other processes remain in memory can only mean that VSCode hasn't actually closed and keeps running in the background.

The first time my alarm bell rang was when my system exhibited high memory usage and high CPU usage (resulting in a core temperature of 68 degrees Celsius or so with the usual temperature being approx. 50). I then noticed that this happened **quite often** (but **not always**) after I used VSCode. When I opened `htop` to view the active processes I was really surprised to find out that `Microsoft.VSCode.CPP.Extension.linux` was there and it was eating up approx. 25% of my CPU resources...half an hour or so after closing VSCode. Further investigation showed me the other processes related to VSCode that I've mentioned above.
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9004</IssueID>
    <Title>Allow to customize command palette via CSS</Title>
    <Description>Hi there,

This is not an issue, more like a request/suggestion.

I'm probably not the only one prefering the command palette from Atom to the one of vscode.
I like how they styled it.

My request/suggestions is that you add something to allow us to customize vscode visual elements (like the command palette) from within a custom stylesheet(that we would specify on the configuration file) or change the style of elements via the Extension API.

Thanks for taking the time to read this and I am hoping we can see this one day
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>9000</IssueID>
    <Title>Feature Request: Bind mouse buttons</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Linux (Fedora 24)

Unless I am mistaken, there seems to be no way to remap/bind mouse buttons. One very useful use case for this is to drag-create multiple cursors by holding ctrl/alt+middle_mouse. Currently I need to manually select each individual line with alt+left_mouse (which i cannot remap to ctrl+left_mouse) which can be very tedious when I want to quickly select 15~ lines on the same column.

A good example of this would be the following Atom extension: https://atom.io/packages/Sublime-Style-Column-Selection or, as the name suggests, it is a native feature in Sublime Text.
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8999</IssueID>
    <Title>default error in debug</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 4.4.0-29-generic

Steps to Reproduce:
1. start code
2. HELP-&gt;Toggle Developers Tools

Error: 13...*

shell.ts:416 Cannot read property 'version' of undefined: TypeError: Cannot read property 'version' of undefined
    at t.Object.defineProperty.get [as latestVersion](file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:21735)
    at t.Object.defineProperty.get [as outdated](file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:23158)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:105:4512
    at Array.reduce (native)
    at e.onServiceChange (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:105:4480)
    at e.invoke (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:37:16332)
    at e.fire (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:37:18116)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:24683
    at Object.g [as _notify](file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:7416)
    at Object.W.enter (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:10994)
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8996</IssueID>
    <Title>Markdown preview lost after updating to v1.3</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: OS X 10.11.5

Steps to Reproduce:
1. Open README.md in VS Code
2. No preview button in upper right corner
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>09/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8994</IssueID>
    <Title>JS: Symbols in command palette are truncated.</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. I have the simple script (pasted below) open in VS Code.
2. Press Ctrl+P to invoke command palette
3. Type the @ symbol to display symbols in the script.
4. (Refer to screenshot) Symbols are truncated with ... Unable to see the full symbol name.

Notes : Running on a 4K display, full-screen.

```
var CapsuleSpinner = pc.createScript('capsuleSpinner');

CapsuleSpinner.attributes.add('spinSpeed', {
    type: 'number',
    default: 12
});

CapsuleSpinner.prototype.initialize = function() {
    this.angle = 30;
};

CapsuleSpinner.prototype.update = function(dt) {
    this.angle += this.spinSpeed * dt;
    this.entity.setEulerAngles(this.angle, 0, 0);
};

CapsuleSpinner.prototype.swap = function(old) {

};
```

![image](https://cloud.githubusercontent.com/assets/4445791/16707087/ffd588ea-45bb-11e6-8450-95b9e10d746b.png)
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8993</IssueID>
    <Title>Add support for rebinding Column Selection</Title>
    <Description>Currently there is no way to rebind column selection. The only bindings that can be changed for column selection are as follows:
![](http://puu.sh/pVyet/447aaf5f64.png)

 In other programs it's bound by default to `middle click` or `alt+drag`, but in VSCode it's bound to `alt+shift`. It's not an inherently bad thing to do bindings different than other programs, but it'd be nice if it was configurable. I'd really like to change it to `alt`, personally. [And I'm not alone, either.](https://github.com/Microsoft/vscode/issues/1515#issuecomment-224232517)

It's possible that it can already be rebound, but as it's not in the `Default Keyboard Shortcuts` file, there's no way for the basic user to find out that it can be rebound. This would be an even easier fix if that was the case, tho--simply add an entry for it.
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8984</IssueID>
    <Title>Ubuntu extension manager not working properly</Title>
    <Description>- VSCode Version: 1.3.0 
- OS Version: Ubuntu 16.04

I have extensions installed, but they do not show up. I can not install them either. here are some screen shots:

![screenshot from 2016-07-08 19-35-55](https://cloud.githubusercontent.com/assets/1571806/16704911/570e02a0-4543-11e6-85b8-7f994ed826bd.png)

![screenshot from 2016-07-08 19-40-41](https://cloud.githubusercontent.com/assets/1571806/16704962/f738c1f2-4543-11e6-8ffa-febdebfd77b1.png)

![screenshot from 2016-07-08 19-41-01](https://cloud.githubusercontent.com/assets/1571806/16704961/f7341d78-4543-11e6-9f63-f355a3ba7d88.png)
</Description>
    <CreatedDate>09/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8976</IssueID>
    <Title>VSCode does not restore its window after minimized and called for open another file</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10 Pro 1511 Build 10586.420

Steps to Reproduce:
1. Open VSCode
2. Minimize it
3. Open another file from any file manager, for example by pressing F4 in Total Commander (where VSCode is set as default editor)
4. VSCode does not restore its window, but just flashes in taskbar. One need to Alt-Tab to its window. It is uncomfortable.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>09/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8972</IssueID>
    <Title>Can not paste into terminal</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Windows 10

Steps to Reproduce: 
1. Open terminal in editor
2. Right click in terminal window

Expected: 
Context menu shows

Actual:
No context menu. Ctrl+V does not paste so there is no way to mark or paste into the terminal. 
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8964</IssueID>
    <Title>Add key binding condition - terminalFocus</Title>
    <Description>Correct me if I'm wrong, but there doesn't seem to be a key binding condition for when the terminal is focused.

This makes commands like `workbench.action.terminal.focusNext` useless as you have to use the mouse to focus the editor.. defeating the purpose of the key binding in the first place.

Something along the lines of `terminalFocus` would be awesome.
- VSCode Version: 1.3.0
- OS Version: OSX
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8959</IssueID>
    <Title>Too long path of an extension side effects in Windows flipping to TEMP user profile</Title>
    <Description>- VSCode Version: 1.2.\* and 1.3
- OS Version: Win7
- User: User with a roaming profile

Steps to Reproduce:
0. Have an Windows user with a roaming profile
1. Install VS Code
2. Make sure that your .vscode got created within profile
3. Install extension with a bit too long path, i.e. lukehoban.Go-0.6.39 will do
4. From now on 
- in your profile might be already corrupted (logout might take longer or on login you will get TEMP profile)
- upon login, in Event Viewer, you should see something along the lines of
  Windows cannot copy file \?\UNC\SOMESERVER$\profile$\SOMEPROFILE.vscode\extensions\lukehoban.Go-0.6.39\node_modules\console-stamp\node_modules\dateformat\node_modules\meow\node_modules\normalize-package-data\node_modules\validate-npm-package-license\node_modules\spdx-expression-parse\node_modules\spdx-license-ids to location \?\C:\Users\SOMEPROFILE.vscode\extensions\lukehoban.Go-0.6.39\node_modules\console-stamp\node_modules\dateformat\node_modules\meow\node_modules\normalize-package-data\node_modules\validate-npm-package-license\node_modules\spdx-expression-parse\node_modules\spdx-license-ids. This error may be caused by network problems or insufficient security rights. 
  
  DETAIL - The filename or extension is too long.

I suppose it's related to #3884 as having extensions outside profile or even in AppData wouldn't cause such issue?
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8953</IssueID>
    <Title>Images are not showing on markdown preview on v1.3.0</Title>
    <Description>- VSCode Version:

```
Version 1.3.0
Commit e724f269ded347b49fcf1657fc576399354e6703
Date 2016-07-07T16:50:12.291Z
Shell 0.37.6
Renderer 49.0.2623.75
Node 5.10.0
```
- OS Version:

```
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.4 LTS
Release:    14.04
Codename:   trusty
```

Steps to Reproduce:
1. put an image under your project directory (e.g. `.docs/media/Screenshot from 2016-03-04 15:47:50.png`)
2. create a makrdown file, reference the image inside it:

```
![](.docs/media/Screenshot from 2016-03-04 15:47:50.png)
```
1. hit `CTRL+SHIFT+V` and you will see that image is not being rendered.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8941</IssueID>
    <Title>Updated to  1.30 now I get the error - Cannot launch debug target (spawn node ENOENT).</Title>
    <Description>- VSCode Version: 1.30
- OS Version: OSX 10.11.5

Steps to Reproduce:
1. Open a node.js project - by starting VSCode from the Dock vs the Terminal
2. Configure launch.json
3. Start the debugger
4. You will receive Updated to  1.30 now I get the error - Cannot launch debug target (spawn node ENOENT).

The prior version worked fine and this started right after Visual Studio Code updated.  If I rollback to the 1.2.1 version everything operates correctly
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8931</IssueID>
    <Title>Crash after opening and closing dev tools twice</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:
1. Open Developer Tools
2. Close Developer Tools
3. Open Developer Tools
4. Close Developer Tools
5. VS shuts down

(Happens with --disable-extensions too.)

[operation_log.txt](https://github.com/Microsoft/vscode/files/354115/operation_log.txt)
[crash_checkpoint.txt](https://github.com/Microsoft/vscode/files/354114/crash_checkpoint.txt)
[1ab17383-925f-48f0-9369-2d6f6fa80746.txt](https://github.com/Microsoft/vscode/files/354116/1ab17383-925f-48f0-9369-2d6f6fa80746.txt)
[f3254ad4-4229-4c49-a5a9-d2cfb59b3a46.txt](https://github.com/Microsoft/vscode/files/354117/f3254ad4-4229-4c49-a5a9-d2cfb59b3a46.txt)
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8929</IssueID>
    <Title>Syntax highlighting bug in .TSX when using generic type annotation</Title>
    <Description>- VSCode Version:1.3.0
  Commit   `e724f269ded347b49fcf1657fc576399354e6703`
  Date 2016-07-07T16:56:12.476Z
  Shell 0.37.6
  Renderer 49.0.2623.75
  Node 5.10.0
- OS Version: CPWin10 April 2016

Steps to Reproduce:
1. Open or create .tsx file in VSCode
2. type `interface IFoo {  bar: Array&lt;any&gt;; }`
3. Syntax highlighter will treat `&lt;any&gt;` as unclosed tag. 

![capture](https://cloud.githubusercontent.com/assets/3494407/16685168/91b47c3e-4509-11e6-9b57-b750cd64c6f3.PNG)
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8927</IssueID>
    <Title>EXTENSIONS: Install buttons not triggering installation</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 3.13.0-88-generic

Steps to Reproduce:

1.Install latest version
2.Try to install extension
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8926</IssueID>
    <Title>Add extension disable feature</Title>
    <Description>There is no extension disable feature. If we want to temporally to disable one extension we have to uninstall it and when to enable it we have to download it and install. What if there is no internet around? In my opinion, this is not right.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8923</IssueID>
    <Title>Installing extensions problem version 1.3.0</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 3.13.0-37-generic

Steps to Reproduce:

1.Can't install extensions: nothing happened when I click on Install
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8916</IssueID>
    <Title>Extension install on ubuntu not working</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Ubuntu 16

Steps to Reproduce:
1. Try install an extension

Not working for me. I just click the install button and nothing happen.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8910</IssueID>
    <Title>I can't install extensions</Title>
    <Description>- VSCode Version: 1.3.0
- OS Version: Ubuntu 14.04 - 64bits
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8907</IssueID>
    <Title>When I start Visual Studio Code by using command,it will open a command line window and can't automatically close</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.3.9600

When I start Visual Studio Code by using command,it will open a command line window and can't automatically close

Steps to Reproduce:
1.win+r ,enter words "code"
2.the visual studio will start and a command line window will open at the same time.
3.After a period of time,the command line window is still opened..
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8898</IssueID>
    <Title>Unable to install Protocol Buffer extension</Title>
    <Description>- VSCode Version: 1.3
- OS Version: Ubuntu 14.04.4 LTS

Steps to Reproduce:
1. Click Extension symbol on left side
2. Search for Protocol Buffer
3. One of the results come (https://marketplace.visualstudio.com/items?itemName=peterj.proto)
4. Clicking on green install does nothing.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8897</IssueID>
    <Title>Unable to see installed extentions in v1.3 from Extensions </Title>
    <Description>- VSCode Version: 1.3
- OS Version: ubuntu 16.4 LTS

Steps to Reproduce:
1. Click on the extentions icon. and the click more
2. Click the "show Installed extensions" 
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8895</IssueID>
    <Title>Extensions Web View does not follow zoom</Title>
    <Description>&lt;img width="762" alt="capture" src="https://cloud.githubusercontent.com/assets/1858678/16678711/547cf86a-44ea-11e6-8d6b-25af6cc27447.PNG"&gt;
- VSCode Version: 1.3.0
- OS Version: Windows 10

Steps to Reproduce:
1. code --enable-use-zoom-for-dsf (Due to bug #1896)
2. Open an extension tab
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8890</IssueID>
    <Title>tsx style error</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. tsx file
2. class or interface add property
3. `list: Array&lt;string&gt;;`
4. code style error
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8889</IssueID>
    <Title>The editor have breakdown</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 6.1.7601

Steps to Reproduce:

1.open a html file in the editor ,and the extension html css class completion is loading,then there is no
response and i can not edit the file and can not click anything
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8887</IssueID>
    <Title>Installing Extensions not working</Title>
    <Description>- VSCode Version: 1.3
- OS Version: Ubuntu 16.4

Steps to Reproduce:
1. Open Extensions from the left
2. On any extension click "Install"

The install does not work.  In the debugger, I noticed there is an error.

shell.ts:416Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8881</IssueID>
    <Title>The BUG about files</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:56:12.476Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:

1.When I draged the file into VS code, nothing was happended.
2.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8877</IssueID>
    <Title>Extension viewlet is broken on Ubuntu</Title>
    <Description>- VSCode Version: Code 1.3.0 (e724f269ded347b49fcf1657fc576399354e6703, 2016-07-07T16:50:12.291Z)
- OS Version: Linux x64 4.4.0-28-generic, Ubuntu 16.04

Related #8859

This is what I see when mousing over the extension viewlet

![image](https://cloud.githubusercontent.com/assets/2193314/16675600/5322ffd2-4477-11e6-830b-5b5355bad0d6.png)

&lt;details&gt;
&lt;summary&gt;

There are a lot of errors in the console (click to toggle)&lt;/summary&gt;



&lt;pre&gt;
Conflict detected, command `workbench.action.output.toggleOutput` cannot be triggered by ctrl+shift+h due to workbench.action.replaceInFiles
shell.ts:416Cannot read property 'version' of undefined: TypeError: Cannot read property 'version' of undefined
    at t.Object.defineProperty.get [as latestVersion] (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:21735)
    at t.Object.defineProperty.get [as outdated] (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:23158)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:105:4512
    at Array.reduce (native)
    at e.onServiceChange (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:105:4480)
    at e.invoke (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:37:16332)
    at e.fire (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:37:18116)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:81:24683
    at Object.g [as _notify] (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:7416)
    at Object.W.enter (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:10994)e.onUnexpectedError @ shell.ts:416
shell.ts:416Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23456),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416
winjs.base.js:45WARNING: Promise with no error callback:4
winjs.base.js:46Object
winjs.base.js:45WARNING: Promise with no error callback:6
winjs.base.js:46Object
winjs.base.js:45WARNING: Promise with no error callback:8
winjs.base.js:46Object
mainThreadExtensionService.ts:96[/home/daniel/.vscode/extensions/ms-vscode.omnisharp-0.3.2]: Command `o.restart` appears multiple times in the `commands` section.
mainThreadExtensionService.ts:96[/home/daniel/.vscode/extensions/ms-vscode.omnisharp-0.3.2]: Command `o.pickProjectAndStart` appears multiple times in the `commands` section.
mainThreadExtensionService.ts:90[/home/daniel/.vscode/extensions/vscode-project-manager]: Cannot read file /home/daniel/.vscode/extensions/vscode-project-manager/package.json: ENOENT: no such file or directory, open '/home/daniel/.vscode/extensions/vscode-project-manager/package.json'.t.$localShowMessage @ mainThreadExtensionService.ts:90
threadService.ts:214[Extension Host] [/home/daniel/.vscode/extensions/ms-vscode.omnisharp-0.3.2]: Command `o.restart` appears multiple times in the `commands` section.
threadService.ts:214[Extension Host] [/home/daniel/.vscode/extensions/ms-vscode.omnisharp-0.3.2]: Command `o.pickProjectAndStart` appears multiple times in the `commands` section.
threadService.ts:214[Extension Host] [/home/daniel/.vscode/extensions/vscode-project-manager]: Cannot read file /home/daniel/.vscode/extensions/vscode-project-manager/package.json: ENOENT: no such file or directory, open '/home/daniel/.vscode/extensions/vscode-project-manager/package.json'.(anonymous function) @ threadService.ts:214
winjs.base.js:45WARNING: Promise with no error callback:9
winjs.base.js:46Object
index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:28 [uncaught exception]: TypeError: Cannot read property 'publisher' of undefinedonError @ index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:28
index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:31 TypeError: Cannot read property 'publisher' of undefined
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27943
    at Array.every (native)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27908
    at Array.filter (native)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27880
    at i.Class.define.done (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:14123)
    at Object.g [as _notify] (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:7558)
    at Object.W.enter (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:10994)
    at i.Class.define._run (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:12822)
    at i.Class.define._completed (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:12263)onError @ index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:31
winjs.base.raw.js:2036Uncaught TypeError: Cannot read property 'publisher' of undefined
winjs.base.js:45WARNING: Promise with no error callback:10
winjs.base.js:46Object
winjs.base.js:45WARNING: Promise with no error callback:11
winjs.base.js:46Object
keybindingResolver.ts:188Conflict detected, command `workbench.action.output.toggleOutput` cannot be triggered by ctrl+shift+h due to workbench.action.replaceInFiles
keybindingResolver.ts:188Conflict detected, command `editor.debug.action.toggleBreakpoint` cannot be triggered by f9 due to sortLines.sortLines
winjs.base.js:45WARNING: Promise with no error callback:12
winjs.base.js:46Object
winjs.base.js:45WARNING: Promise with no error callback:13
winjs.base.js:46Object
shell.ts:416Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416
winjs.base.js:45 WARNING: Promise with no error callback:14
winjs.base.js:46 Object
shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23456),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416
winjs.base.js:45 WARNING: Promise with no error callback:15
winjs.base.js:46 Object
shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416
winjs.base.js:45 WARNING: Promise with no error callback:16
winjs.base.js:46 Object
winjs.base.js:45 WARNING: Promise with no error callback:17
winjs.base.js:46 Object
shell.ts:416 Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23456),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)e.onUnexpectedError @ shell.ts:416
winjs.base.js:45 WARNING: Promise with no error callback:18
winjs.base.js:46 Object
winjs.base.js:45 WARNING: Promise with no error callback:19
winjs.base.js:46 Object
winjs.base.js:45WARNING: Promise with no error callback:20
winjs.base.js:46Object
index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:28 [uncaught exception]: TypeError: Cannot read property 'publisher' of undefinedonError @ index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:28
index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:31 TypeError: Cannot read property 'publisher' of undefined
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27943
    at Array.every (native)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27908
    at Array.filter (native)
    at file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:96:27880
    at i.Class.define.done (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:14123)
    at Object.g [as _notify] (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:7558)
    at Object.W.enter (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:10994)
    at i.Class.define._run (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:12822)
    at i.Class.define._completed (file:////usr/share/code/resources/app/out/vs/workbench/workbench.main.js:30:12263)onError @ index.html?config={"pathArguments"%3A[]%2C"programStart"%3A0%2C"enablePerformance"%3Afalse%2C"verbo…:31
winjs.base.raw.js:2036Uncaught TypeError: Cannot read property 'publisher' of undefined
shell.ts:416Cannot read property 'call' of undefined: TypeError: Cannot read property 'call' of undefined,    at e.onCommonRequest (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:20045),    at e.onMessage (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19889),    at /usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:19697,    at Socket.&lt;anonymous&gt; (/usr/share/code/resources/app/out/vs/code/node/sharedProcessMain.js:6:23531),    at emitOne (events.js:90:13),    at Socket.emit (events.js:182:7),    at readableAddChunk (_stream_readable.js:153:18),    at Socket.Readable.push (_stream_readable.js:111:10),    at Pipe.onread (net.js:531:20)
&lt;/pre&gt;

&lt;/details&gt;

It keeps repeating after this.
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8872</IssueID>
    <Title>Syntax highlight bug in .tsx files around &lt; &gt;</Title>
    <Description>- VSCode Version: Version 1.3.0 (1.3.0)
- OS Version: OS X Version 10.11.5

**Steps to Reproduce:**

create a new file test.tsx with a class having an Array:  for example: 

`export default class Foo {
    poof:Array&lt;string&gt;
    renderHtml() {        
    }
}`

Find the syntax highlighting busted once &lt; &gt; is encountered:
&lt;img width="380" alt="tsx_test png" src="https://cloud.githubusercontent.com/assets/8072161/16674664/4ea2047e-446f-11e6-98f4-bfb1c9011bf2.png"&gt;
</Description>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8846</IssueID>
    <Title>Editor layout not preserved on restart</Title>
    <Description>- VSCode Version: 1.3.0 Stable
- OS Version: Windows 10

Steps to Reproduce:
1. open a markdown file
2. right click on the tab, open preview
3. drag preview to the right to create a second editor well
4. restart VS Code

Result: the markdown preview is not opened and i only have one editor well
</Description>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8841</IssueID>
    <Title>Give API to theme things OUTSIDE the editor frame</Title>
    <Description>Including: sidebar, status bar, etc.
</Description>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8838</IssueID>
    <Title>Path must be string recieved null</Title>
    <Description>- VSCode Version: insider
- OS Version: os x

Steps to Reproduce:
1. Start debugging some node code
2. Click on an internal module, notice error in console

![screen shot 2016-07-07 at 16 40 50](https://cloud.githubusercontent.com/assets/1926584/16657146/ad14b50a-4461-11e6-90a4-e2590ca68df0.png)
</Description>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8837</IssueID>
    <Title>Crash after resuming from sleep</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: 10.10.5

Steps to Reproduce:
1. Put Mac to sleep
2. Resume next day, VSCode has crashed
</Description>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8831</IssueID>
    <Title>hover markdown formatting is too spacious</Title>
    <Description>```
The System class contains several useful class fields and methods. It cannot be instantiated. 
 Among the facilities provided by the System class are standard input, standard output, and error output streams; access to externally defined properties and environment variables; a means of loading files and libraries; and a utility method for quickly copying a portion of an array. 
* **Author:**
    * unascribed
* **Since:**
    * JDK1.0
```

becomes:

&lt;img width="744" alt="_extension_development_host__-_app_java_-_my-app" src="https://cloud.githubusercontent.com/assets/54129/16650599/55aa432e-443f-11e6-9cfe-dfd559fa61f3.png"&gt;

I would expect something more compact like this:

&lt;img width="786" alt="_extension_development_host__-_preview__test_md__-_my-app_and_extension_ts_-_client_and_new_issue_ _microsoft_vscode" src="https://cloud.githubusercontent.com/assets/54129/16650614/696b31fc-443f-11e6-8fba-9fe6ece46a4d.png"&gt;
</Description>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8796</IssueID>
    <Title>scripts\npm.bat install no longer installs extensions's deps</Title>
    <Description>```
c:\Alex\src\vscode&gt;scripts\npm.bat --version
3.10.4
```

I had to go to npm version `3.10.4` to get the latest `node-gyp` that can compile native modules with the headless C++ compiler
</Description>
    <CreatedDate>06/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8791</IssueID>
    <Title>Errors/warnings only shown for open files</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10

Steps to Reproduce:
1. Create a typescript project with a tsconfig
2. Open a file with no errors, see there are no errors in the project
   ![image](https://cloud.githubusercontent.com/assets/2505474/16612218/1bdf8c82-4366-11e6-9aad-2caa23a9f5af.png)
3. Open a file with errors, and the errors start popping up
   ![image](https://cloud.githubusercontent.com/assets/2505474/16612245/37ff3a98-4366-11e6-98b7-f82939f31ed7.png)

My tsconfig:

``` json
{
  "compilerOptions": {
    "module": "commonjs",
    "noImplicitAny": false,
    "removeComments": true,
    "preserveConstEnums": true,
    "outDir": "dist/",
    "rootDir": "src/",
    "allowJs": true,
    "sourceMap": true,
    "listFiles": true,
    "target": "es6",
    "jsx": "react",
    "moduleResolution": "node"
  },
  "exclude": [
    "node_modules",
    "dist",
    ".vscode",
    "test"
  ]
}
```
</Description>
    <CreatedDate>06/07/2016</CreatedDate>
    <ClosedDate>06/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8783</IssueID>
    <Title>ctrl+n/p doesn't work which works in sublime line</Title>
    <Description>- VSCode Version: all versions
- OS Version: OS X

Steps to Reproduce:
1. [shift+]cmd+p
2. ctrl+n/p doesn't work which works in sublime 
</Description>
    <CreatedDate>06/07/2016</CreatedDate>
    <ClosedDate>06/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8766</IssueID>
    <Title>resourceScheme not available for editor/context</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Win7

@jrieken I'm trying to add specific editor/context menus to my TextDocumentContentProvider using my scheme 'hexdump', but this never show up when I right-click on the editor.

``` javascript
  "contributes": {
    "commands": [
      {
        "command": "hexdump.hexdumpFile",
        "title": "Show hexdump for file"
      },
      {
        "command": "hexdump.editValue",
        "title": "Edit the value under the cursor"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "hexdump.hexdumpFile"
        }
      ],
      "editor/context": [
        {
          "when": "resourceScheme == 'hexdump'",
          "command": "hexdump.editValue"
        }
      ]
    },
```

![image](https://cloud.githubusercontent.com/assets/7251102/16594774/e7166ad6-42b9-11e6-89b3-7d6010bb96a6.png)

Any idea what's happening ? You can take a look at the code in https://github.com/stef-levesque/vscode-hexdump
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8758</IssueID>
    <Title>Something is severely different with intellisense and snippets</Title>
    <Description>I believe snippets were not offered before when the line had content on it.

I expect `getTabFocusMode` to be selected when intellisense pops up.

![image](https://cloud.githubusercontent.com/assets/5047891/16584386/21b4f8b8-42bc-11e6-9c25-573174be06e4.png)
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8750</IssueID>
    <Title>Auto-hide sidebar</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Win 10

Currently, when you open a side panel and then click back in the editor area, the side panel remains open. 
It would be rather handy to add a button (pin or something) which changes this behavior for each panel, allowing to either keep the current way of working or making the side panel auto-collapse when you click outside.
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8748</IssueID>
    <Title>Bug when dragging folder or extension file into vscode</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: windows7

Steps to Reproduce:
1.  Drag a `folder` from outside into vscode.
2.  `folder` would not open as an new workspace.
3. Drag a `vsix` file from outside into vscode.
4. vscode would open the file instead of install the extension
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8745</IssueID>
    <Title>Git operations in VSCode prevent git operations in other applications.</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Windows 10

I have been running into some issues with the the auto-fetch and other polling git operations. My general workflow is that I:
*Edit files as necessary
*Switch to the command line and do whatever git magic I need to do
*go back to using VSCode

However, since VSCode performs git actions at least every 10 seconds which means that if I am perfoming a long string of git operations in my terminal, then I often run into the `fatal: Unable to create 'C:/path/to/repo/.git/index.lock': File exists.` error. The only way to ensure this doesn't happen is to close out of the editor and reopen when I am done with whatever I am doing with git.

The editor really shouldn't have to be running full-on locking git operations every time it wants to check up on a file. This is a problem I haven't had with Atom, so I will look into what they are doing, and post that below in this issue. There are definitely other options on determining the file changes.

Steps to Reproduce:
1. Open a repository in VSCode
2. Try switching between branches
3. Every third (or so) operation will result in the `fatal: Unable to create 'C:/Users/Austin/Documents/rust-on-gpu/.git/index.lock': File exists.` error

Note: It might be more likely to occur with more expensive git operations.
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8743</IssueID>
    <Title>cannot delte some folder/files in work place after VS code opened.</Title>
    <Description>- VSCode Version:1.2.1
- OS Version:Windows 7 Professional 64bit
- Git Version:2.9.0.windows.1

Steps to Reproduce:
1. open my work space, i see the process info like this:
   ![1](https://cloud.githubusercontent.com/assets/15505291/16571312/692507b8-428c-11e6-830f-55c1f8b000f5.png)
   as you can see, no process opens the folder.
2. Click the Git Icon on the left navigator, and open a changed file to see the changes on index or stage a file or other git operations, then i see another two code process actived, and they're handling the angular folder result that the folder can't deleted or renamed.
   ![2](https://cloud.githubusercontent.com/assets/15505291/16571448/fc4a2170-428e-11e6-8905-eaf15710d1b3.png)
</Description>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8742</IssueID>
    <Title>command variables severely broken</Title>
    <Description>- VSCode Version: 1.3.0

Steps to Reproduce:

In a launch config pass this argument array to a node program that prints the arguments:

``` ts
   "args": [
      "--pid=${command.PickProcess}"
   ]
```

Observe: the argument value is only the value of the PickProcess command. The "--pid=" is missing.

This bug breaks command variable substitution in a severe way.
</Description>
    <CreatedDate>04/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8725</IssueID>
    <Title>TS errors leak on git undo</Title>
    <Description>- open a TS files
- create an error
- close the file, as expected errors still show
- git undo the changes
- 🐛 errors still show tho they shouldn't 
</Description>
    <CreatedDate>04/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8722</IssueID>
    <Title>VS Code intellisense does not suggest members of js object.</Title>
    <Description>- VSCode Version:1.3.0 - insider
- OS Version: windows 7 enterprise

Steps to Reproduce:
1. Create a simple object like var person = { name = "foo" , age = 24 };
2. write person. (type dot). Nothing happens. Press ctrl + space, it shows no suggestion.

I just want to know is this the desired behavior ? I have tried the same thing in brackets and it works perfectly fine.
![vscode-code-suggestion-not-working](https://cloud.githubusercontent.com/assets/7105293/16559914/c8b2d11c-420d-11e6-938c-6960a8fb5d4b.png)
</Description>
    <CreatedDate>04/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8710</IssueID>
    <Title>Search results can differ between disk match and editor match</Title>
    <Description>@sandy081 not really something that you caused, but I thought I would file this because you seem to want to look into reducing debt in search land for disk match vs. editor buffer match.

Consider you have 1 match in a file and you edit the file to remove the match. The search results nicely update live and show that you no longer have results. However, once you close the file in the editor, its associated model gets disposed and search suddenly goes back to showing the disk result, which now is outdated and still shows the match. I think the disk result needs to be updated as well when the editor changes.

Here is a video showing the issue:

![jul-04-2016 09-06-56](https://cloud.githubusercontent.com/assets/900690/16553130/ad417114-41c6-11e6-811b-481ff77254e1.gif)
</Description>
    <CreatedDate>04/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8700</IssueID>
    <Title>In the integrated terminal CTRL + V prints ^V and do not paste.</Title>
    <Description>In the integrated terminal CTRL + V prints ^V and do not paste.
- VSCode Version: 1.2.1
- OS Version: Windows 10
- Node 5.10.0

Steps to Reproduce:
1. Press CTRL + V in the integrated terminal
2. It prints ^V and do not paste
</Description>
    <CreatedDate>03/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8683</IssueID>
    <Title>Allow VSCode save files that need administrator permission.</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Windows 10

-- Sorry for the English, I used Google Translator --

Allow VSCode save files that need administrator permission, similiar as with Notepad ++.
Currently VSCode show this message when trying to save the file.

![capturar5](https://cloud.githubusercontent.com/assets/19866231/16543131/e9ee25a6-409c-11e6-931f-9a59e7f1dd36.jpg)

This is the Notepad ++ message when you try to save the file.

![capturar3](https://cloud.githubusercontent.com/assets/19866231/16543133/1299492c-409d-11e6-903e-a17e2fcf0e91.jpg)

Suggested VSCode

![capturar7](https://cloud.githubusercontent.com/assets/19866231/16543134/21399284-409d-11e6-8581-c2d4d4ba0533.jpg)

Suggestion that the VSCode show when it is in Administrator mode as in Notepad ++.

![capturar4](https://cloud.githubusercontent.com/assets/19866231/16543135/2dae3204-409d-11e6-9725-785d76b72704.jpg)

![capturar6](https://cloud.githubusercontent.com/assets/19866231/16543144/5b19adb8-409d-11e6-8ac5-daf28c3ba935.jpg)
</Description>
    <CreatedDate>03/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8681</IssueID>
    <Title>"Alt Gr" (Alt ground) not working inside terminal</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10 Home

Steps to Reproduce:
1. Open the terminal inside VS Code
2. Try to write a letter that is only accessible using the "Alt Gr" keyboard button.

In my case, the "/" is under the "Q" in my notebook keyboard. When I tried to write "/" inside the terminal using the "Alt Gr", it was not possible. Out of the terminal I could write it without problem.  
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8680</IssueID>
    <Title>Search is slow </Title>
    <Description>Suddenly, search (and file name search) is behaving far more slowly than it used to. VSCode search was instant, now, it is just faster for me to go to to the sidebar which i dont want to do.
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8674</IssueID>
    <Title> I don't use Japanese IME on integrated terminal</Title>
    <Description>- VSCode Version: 1.3.0-insiders
- OS Version: Windows 10 th2

Steps to Reproduce:
1. Ctrl + `, Open integrated terminal. Set cursor on integrated terminal.
2. Alt + `, turn on IME.
3. I can't | ALT + ` should turn on IME | But it doesn't, I don't use Japanese IME on integrated terminal.
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>02/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8661</IssueID>
    <Title>Cannot access extensions search result using the keyboard</Title>
    <Description>- VSCode Version: insiders 7/1
- OS Version: Windows

Steps to Reproduce:
1. Open Extensions
2. Press Tab key
   -&gt; Extensions search results get focus, but I can not get to the individual extensions using the arrow keys or the tab key.
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8658</IssueID>
    <Title>Tree element actions not readable by screen reader (open editors, git, search)</Title>
    <Description>VSCode Version: insiders 7/1
OS Version: Windows

Screenreader can not read Close Editor button in front of an editor in the explorer's Open Editor section.
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8657</IssueID>
    <Title>Save All in editor group not readable by screenreader</Title>
    <Description>- VSCode Version: insiders 7/1
- OS Version: Windows

Screenreader can not read Save All button on an editor group in the explorer's Open Editors section.
</Description>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8656</IssueID>
    <Title>Alt text on tabs' close button</Title>
    <Description>- VSCode Version: Code - Insiders 1.3.0-insider (a2b9738a942237b59cb920940b93a0206f1b61d0, 2016-07-01T19:26:22.011Z)
- OS Version: Darwin x64 15.5.0

Steps to Reproduce:
1. Enable OS X Voice Over
2. 'Tab' to editor tabs
3. -&gt; You can't distinguish between the tab and it's close button
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8644</IssueID>
    <Title>Terminal window doesn't have a scrollbar</Title>
    <Description>- VSCode Version:1.21
- OS Version:Windows 10

Steps to Reproduce:
1. Open integrated terminal
2. Type enough to make it scroll
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>02/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8639</IssueID>
    <Title>Debug popup collapses when mouse goes into the debug console</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 7

Steps to Reproduce:
1. While debugging with the debug console displaying, hover over an object so that the popup will partially be displayed in the debug console.
2. Move the mouse into the debug popup and start moving it down until is crosses into the debug console.
3. The debug popup will collapse.  As long as the mouse is in the code window section of the popup, you are OK.  But as soon as you drift into the debug console (you're still within the debug popup), the popup will collapse.
4. See the attachment

![debugwindowbug](https://cloud.githubusercontent.com/assets/6989056/16532408/614cab2e-3f97-11e6-82d6-27482b881184.png)
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8633</IssueID>
    <Title>Mac OS - Highlighting text in the editor requires two clicks when the integrated terminal is open</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: 10.11.5 (15F34) (El Capitan)

Steps to Reproduce:
1. Open a file in the editor
2. Open the integrated terminal
3. Type some commands on the terminal
4. Try to copy some text on the editor by highlighting and typing Mac + c
5. You will have to click on the section twice before the text successfully copies
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8613</IssueID>
    <Title>Atom Java Script Grammar doesn't work  with the Oceanic - Next theme</Title>
    <Description>See https://github.com/Microsoft/vscode/issues/8204#issuecomment-229202771

The theme used is: 
![image](https://cloud.githubusercontent.com/assets/172399/16519297/2c196104-3f88-11e6-9527-ce3f14b7b4ec.png)

![image](https://cloud.githubusercontent.com/assets/172399/16519285/1782285c-3f88-11e6-8828-0c5704605316.png)
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>19/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8609</IssueID>
    <Title>html in php not highlight elements</Title>
    <Description>- VSCode Version: 1.3.0-insider and 1.2.1
- OS Version: W8.1

Steps to Reproduce:
1. Open an php file that has both php and html and the file type is PHP - the html brackets highlight not workingas it should

You should add the option to select html brackets including in php file not only html
The right selection - http://prntscr.com/bnfaaa
The bad selection and that should be combined - http://prntscr.com/bnfaym

Thanks
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>19/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8604</IssueID>
    <Title>Unable to install extensions</Title>
    <Description>- VSCode Version: 1.3.0-insider
- VSCode Commit: 716f76458e4dc93e865b6a999e437ed45774744e
- OS Version: Elementary OS 0.3

Now I am able to search for extensions. Only I am not able to install them. Nor do I get any feedback.

I really wish to give more information. But also the dev tools do not give any feedback. Even with Pause On Caught Exceptions. 
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>01/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8599</IssueID>
    <Title>Extensions search box not centered nicely in viewlet</Title>
    <Description>I suggest to align the paddings and margins with git and search

![image](https://cloud.githubusercontent.com/assets/900690/16514398/e21dc688-3f6b-11e6-918b-e429999868f0.png)
</Description>
    <CreatedDate>01/07/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8583</IssueID>
    <Title>Markdown Preview is not using complete editor space</Title>
    <Description>- VSCode Version: a21c12346f388e51858c930875ca30968604c116
- OS Version: OSX

Steps to Reproduce:
1. Make window zoom level configuration to 1. `"window.zoomLevel": 1`
2. Right click on a markdown file in Explorer view and open preview

Expected: Preview should take complete editor space
Actual: Not complete editor space is consumed

&lt;img width="1393" alt="screen shot 2016-06-30 at 7 41 41 pm" src="https://cloud.githubusercontent.com/assets/10746682/16498201/de104bb8-3efa-11e6-939d-a8917580e9c0.png"&gt;
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8571</IssueID>
    <Title>Snippets are not always on top of the context menu</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 8.1

Steps to Reproduce:
1. open JS file
2. type "for" to trigger the for loop snippet or "if" or just "fun" for function

The snippet is not on top and when the "tab" button is pressed, nothing happens.

![if](https://cloud.githubusercontent.com/assets/5782506/16487776/86a09dd0-3ed5-11e6-8ca6-c916521db2d3.PNG)
![function](https://cloud.githubusercontent.com/assets/5782506/16487777/86a2c5e2-3ed5-11e6-9098-a75edfbbe33c.PNG)
![for](https://cloud.githubusercontent.com/assets/5782506/16487778/86a650f4-3ed5-11e6-8083-79d8c3f443e6.PNG)
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8567</IssueID>
    <Title>Current open file relative path variable</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Mac OS X 10.11.5 ( OS X El Capitan )

Steps to Reproduce:

I have this line in my launch json for testing just current open file:

```
{
            "name": "Test - active test file only",

            "type": "Ruby",

            "request": "launch",

            "cwd": "${workspaceRoot}",

            "program": "${workspaceRoot}/bin/rake",

            "args": [
                "test",
                "${fileBasename}" or "${file}"
            ]
        }


```

rake test needs relative path of the file. ${file} gives complete absolute path and ${fileBasename} just gives the name of the file. is there any variable to get relative path of the current open file? I want to run this script:

rake test test/integration/my_test.rb
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>10/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8549</IssueID>
    <Title>Pinch to zoom causes UI confusion</Title>
    <Description>- VSCode Version: 1.3.0-insiders 798b41ab1cf3636a27042020a54ddfb4cfb8d23c
- OS Version: 10.11.5
1. Use a Mac's trackpad and the pinch to zoom gesture within a Code window
2. The content's size is heavily zoomed in or out
3. There's no obvious way to reset the zoom level

Anything I'm missing about this? If not, can we improve this or disable pinch to zoom completely?
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>01/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8541</IssueID>
    <Title>Feature request: add confirmation dialog to `Synchronize Changes` button</Title>
    <Description>'Synchronize Changes' button is located directly under file explorer and next to 'Show Errors' button so it can be clicked accidentially. Once clicked it performs git pull &amp; push without any confirmation.

I think having such a tiny button, silently performing such a significant action, may cause troubles.

Can you add confirmation dialog for this button or/and move it somewhere?
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8484</IssueID>
    <Title>Suggest widget rendering broken (IE9)</Title>
    <Description>1. IE9, https://microsoft.github.io/monaco-editor/index.html
2. Trigger suggest widget, scroll down, scroll back up -&gt; notice how the rendering is broken, none of the suggestions get rendered

![screen shot 2016-06-29 at 11 16 44](https://cloud.githubusercontent.com/assets/1926584/16447098/24dabef4-3deb-11e6-8550-e737cafccd1a.png)
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8483</IssueID>
    <Title>Command pallete rendering broken (IE9)</Title>
    <Description>Ref: #8229
1. IE9, https://microsoft.github.io/monaco-editor/index.html
2. open the command pallete, scroll down, scroll up, after scrolling up notice how the command pallette is broken

![screen shot 2016-06-29 at 11 14 09](https://cloud.githubusercontent.com/assets/1926584/16447018/ba3b9988-3dea-11e6-8bed-4ccc15eed97f.png)
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8445</IssueID>
    <Title>Integrated terminal: "editor.cursorBlinking": "hidden" not applied</Title>
    <Description>Testing #8222 
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:07:32.441Z)
- OS Version: Windows_NT ia32 6.3.9600

Steps to Reproduce:
1. Change settings to "editor.cursorBlinking": "hidden"
2. -&gt; Cursor in integrated terminal doesn't hide
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8440</IssueID>
    <Title>Expand selection doesnt honor editor.wordSeparators</Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. Set editor.wordSeparators to "_"
2. Try to expand selection (alt+shift+right on linux) on "^a_b"

Expected: "^a$_b"
Result: "^a_b$"
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8342</IssueID>
    <Title>Integrated terminal always eats up tab key</Title>
    <Description>#8222
1. It is not possible to tab out of the terminal which can make it hard for keyboard accessibilty
2. This also makes the actions in the terminal header not accessible by keyboard

The editor has a command to use tab key for moving focus, maybe something similar is needed for the terminal.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8310</IssueID>
    <Title>Too much empty space between terminal header and first line</Title>
    <Description>#8222

@Tyriar all the bugs I file are on mac and insiders vscode.

IMHO there is too much space between the terminal header and the first line, I would expect this to be more compact - especially since most of the time the vertical space is very limited.

![screen shot 2016-06-28 at 12 45 04](https://cloud.githubusercontent.com/assets/1926584/16412760/4da9ad3a-3d2e-11e6-82ed-82729399b72b.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8161</IssueID>
    <Title>Compile errors are not supported by intellisense in real time</Title>
    <Description>- VSCode Version: 1.3.0 insider
- OS Version: win 10 x64

Steps to Reproduce:
1. Create a .ts file like an angular customer-edit.component.ts
2. Create another spec.ts file for the above .ts file.
3. Change the constructor of the customer-edit.component.ts by adding a parameter.
4. Open the "Error and Warnings"-Window
5. No errors are displayed although the spec.ts will not be able to compile due to a changed constructor in the customer-edit.component.ts.
6. OPEN the spec.ts file
7. Suddenly in the opened "Error and Warnings"-Windows you get the typescript error.
8. But thats far too late.
9. I do not want to click in every file to see the errors...
</Description>
    <CreatedDate>26/06/2016</CreatedDate>
    <ClosedDate>10/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8147</IssueID>
    <Title>Support using environment variables in settings.json</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10 (1511)

It would be nice to be able to use environment variables in paths in settings.json, this is not possible in build 1.2.1 and older.

In my scenariio I`m syncing VS Code settings between computers, for example:

// Specifies the path to a PowerShell Script Analyzer settings file. Use either an absolute path (to override the default settings for all projects) or use a path relative to your workspace.
    "powershell.scriptAnalysis.settingsPath": "%home%\.vscode\PSScriptAnalyzerSettings.psd1"

%home% is different on the computers VS Code is used on, thus it can`t be hardcoded.
</Description>
    <CreatedDate>26/06/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8138</IssueID>
    <Title>Workbench to support left hand side of diff editor to be editable</Title>
    <Description>It seems that the left hand side of a diff editor is now suddenly editable with the new search &amp; replace preview feature. The workbench is not really fit for allowing other editors (non-file, non-file-diff) to be editable nor do I believe is it discoverable or expected to be able to type on the left hand side. You will quickly notice that typing in the left hand side suddenly opens the file (as a tab in the background) and you also do not get any dirty indicators in the title area of the editor.

If we want the diff to be editable I suggest to do what we do when you compare 2 files or open a git change: The right hand side is editable because the right hand side is an instance of `FileEditorInput`.

Otherwise, please disable editing to the left until we have a story from the workbench to make this happen.
</Description>
    <CreatedDate>25/06/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8118</IssueID>
    <Title>SetVariable doesn't trigger reevaluation of stale variables</Title>
    <Description>- VSCode Version: 1.3.0-insider, 2016-06-23

Assigning to a variable doesn't prompt a reevaluation of any variables that depend on it. Variables can be stale after setting a variable in languages such as C# (e.g. a property in the locals window), and watch expressions can be stale in all languages since they can be arbitrary expressions dependent on the changed variable.
</Description>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8103</IssueID>
    <Title>Visual Studio Code shouldn't hijack .config extension association</Title>
    <Description>After installing 'Visual Studio Code' .config files started to be associated with VSCode.
I am not sure that VSCode is a better editor for config files than Visual Studio or Notepad++. So user should make a decision which program should be associated with each extension, in particular such multi-purpose as .config. Installation should associate with VSCode only new extensions, that not used by anyone else.

And now in file explorer for files with .config extension type is shown as 'Visual Studio Code'.  It doesn't make any sense.
Please fix the installation ASAP.

It's a second bug with VSCode type associations that I noticed 
[Installation of vscode-powershell replaced File Explorer right-click menus for .ps1 files ](https://github.com/Microsoft/vscode/issues/6387) 
- OS Version:Windows 10

Steps to Reproduce:Install VSCode
</Description>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8005</IssueID>
    <Title>documentationLabel does not accept carriage return</Title>
    <Description>- VSCode Version: Latest
- OS Version: Windows 10

per Erich

this suggestSupport snippet does not respect any character I could possibly use for the section [should be carriage return here]. I've tried various combinations of html tags and of the construction of the label itself with no luck.

type: 'operator',
label: 'ge',
codeSnippet: 'ge',
documentationLabel: "Greater Than or Equal To [should be a carriage return here] StoryPoints ge 8"
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>06/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7963</IssueID>
    <Title>Problems with git commands and vscode</Title>
    <Description>- VSCode Version: ANY
- OS Version: Windows 10 (should be any)

When I try to run commands such as `git checkout`, `git rebase`, or even `git stash pop` from the command line (powershell), many times it fails to complete the command, failing with this error, or an equivalent:

```
fatal: cannot create directory at 'src/app/...': Permission denied
```

The command also fails and thus leaving me to do a lot of manual cleaning up to restore to previous version.

It seems to me that vscode locks up the files and doesn't let Windows access them creating this problem.

Probable Steps to Reproduce: (I can't reproduce it completely reliably, but it's a start)
1. In a git repo, create a new folder and move an existing (tracked) file into that folder
2. Now stash your changes with a `git stash -u`
3. Now, apply your stash.
4. Fail

---
1. Make some changes to your code.
2. Pull from upstream.
3. Try a rebase
4. Fail (70% of the time)
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7899</IssueID>
    <Title>Right alt key does not work in terminal</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10 Pro (Build 1511)

Right Alt key does not work in integrated terminal. Ctrl + Alt works fine.

Steps to Reproduce: 
1. Set Czech QWERTZ keyboard layout in Windows
2. Toggle integrated terminal in VSCode
3. Right Alt + Q (should produce \)
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7528</IssueID>
    <Title>ENOSPC errors not showing up on the gui, but breaks intellisense.</Title>
    <Description>- VSCode Version: 1.2
- OS Version: Linux Mint 17.4 x64

When using vscode on Mint Linux the intellisense starts as broken.
with no clear indication of there being a problem.
only after toggling the developer tools and looking at the console is it clear some problem exists and googling it brings up the FAQ.

A user may just assume intellisense is not supported because no indication of an error is displayed on the GUI.

I believe such errors should be shown to the user with a link to the page explaining how adjust the configuration of the system to avoid them.

Steps to Reproduce:
1. install vscode on fresh vanilla mint 17.4 x64 (tested on 4gb ram , 2cpu core, 20gb ssd VMware player and virtualbox instances)
2. try to use intellisense functionality on a javascript project.
</Description>
    <CreatedDate>10/06/2016</CreatedDate>
    <ClosedDate>14/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7496</IssueID>
    <Title>TypeScript syntax highlighting not working</Title>
    <Description>- VSCode Version:
  Version 1.3.0-insider
  Commit 2dbc938ccf6a985d4c474e28af54aff865f2ee46
  Date 2016-06-09T06:03:30.045Z
- OS Version: Ubuntu 16.04

Steps to Reproduce:
1. Open code-insiders on vscode repo
2. Open terminalPanel.ts
   ![image](https://cloud.githubusercontent.com/assets/2193314/15945794/e6f836ea-2e48-11e6-852d-212cb1ca1526.png)

There is a module mismatch in the console as well, so `marked` is built with the wrong version of Electron? Also not sure why `marked` is being touched when opening a .ts file at all.

![image](https://cloud.githubusercontent.com/assets/2193314/15945857/22e85040-2e49-11e6-9c0f-75de4a78b3e9.png)

This is happening after closing and opening insiders again.
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>04/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7494</IssueID>
    <Title>Reveal in Explorer does not bring the File Explorer window to the foreground</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: Windows 10

Steps to Reproduce:
1. Right click on a file in the files list, choose "Reveal in Explorer"

observe that the explorer window opened does not come to the foreground.

Usually this type of problem us due to not passing the foreground privilege on correct. If COM is used to transport the call from one thread to another use CoAllowSetForegroundWindow() on the COM object that will invoke the API that opens File Explorer.
Also verify you are using SHOpenFolderAndSelectItems API to open the window and select the file.
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>15/07/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8557</IssueID>
    <Title>Extension incorrectly reporting an update available</Title>
    <Description>#8215
- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

Was greeted by a (1) indicator immediately after updating.

![image](https://cloud.githubusercontent.com/assets/2193314/16478850/4fafae3a-3e51-11e6-854b-28bdd1096b70.png)

Restarting showed same thing, no errors in console.
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8551</IssueID>
    <Title>Tab high contrast border shifts tab text when active</Title>
    <Description>#7854
- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z)
- OS Version: Linux x64 4.4.0-24-generic

Notice the text is aligned slightly differently. Whenever you make a tab active, both the previously active and the new active tab text shifts by 1 px. I think it may also shift horizontally too.

![image](https://cloud.githubusercontent.com/assets/2193314/16472915/8ff72cc2-3e1d-11e6-9ea5-2dd6f66bfc3b.png)
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8550</IssueID>
    <Title>Tabs in high contrast are difficult to differentiate when the editor is not active</Title>
    <Description>#7854
- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z)
- OS Version: Linux x64 4.4.0-24-generic

![image](https://cloud.githubusercontent.com/assets/2193314/16472868/ee05b19a-3e1c-11e6-931e-fb60be8c5c24.png)

It's actually higher contrast on a dark theme 

![image](https://cloud.githubusercontent.com/assets/2193314/16472880/0bc419b0-3e1d-11e6-9b81-d08a7d9ebbec.png)
</Description>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8529</IssueID>
    <Title>Massive replace makes window unresponsible and then crashes the window</Title>
    <Description>Testing #8184.
- VSCode Version: Insiders 6/29
- OS Version: Windows

Steps to Reproduce:
1. Use a large code base such as the vscode repo
2. "View: Show Search"
3. Expand Search
4. Enter `a` as search string 
5. Enter `b` as replace  string
6. Press Enter
7. Wait for the search to finish
8. Press Replace All

&lt;img width="694" alt="screen shot 2016-06-29 at 10 36 32 am" src="https://cloud.githubusercontent.com/assets/4674940/16462467/4643da9e-3de6-11e6-9ced-c7219c0534b9.png"&gt;

Then:
&lt;img width="710" alt="screen shot 2016-06-29 at 10 37 27 am" src="https://cloud.githubusercontent.com/assets/4674940/16462474/4ece30c4-3de6-11e6-98d5-91c8b91e0820.png"&gt;

Eventually the window will crash.

We should have safeguards against this kind of abuse. Independently, the window should never become unresponsive.
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8523</IssueID>
    <Title>Tab under dragged tab flickers</Title>
    <Description>Test item #7852 
- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z)
- OS Version: Linux x64 3.13.0-34-generic

Steps to Reproduce:
1. Enable showTabs
2. Open two files
3. Drag tab of first file towards the right and left
4. -&gt; The tabs under the mouse flicker
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8522</IssueID>
    <Title>Editor tab dropped before mouse up</Title>
    <Description>Test item #7852 
- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:14:50.570Z)
- OS Version: Linux x64 3.13.0-34-generic

Steps to Reproduce:
1. Enable showTabs
2. Open two files
3. Drag tab of first file towards the right
4. -&gt; The tab eventually drops without the mouse button being released
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8508</IssueID>
    <Title>Tasks: [OSX] Task no longer executes in correct user environment</Title>
    <Description>- VSCode Version: Insiders June 28th 2016.
- OS Version: Capitan 10.11.5

Steps to Reproduce:
1. Define a task that executes a shell script. In this shell script invoke an `npm` command
2. Result: `./build.sh: line 2: npm: command not found`

This works fine in VSCode v. 1.2.1
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8503</IssueID>
    <Title>Intergrated Terminal not showing</Title>
    <Description>- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:07:11.483Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. Open Visual Studio Code
2. Go to View-&gt; Integrated Terminal
3. Terminal shows for about 1 milisecond and then it disappears.

I've tried also with the other methods for showing it with no success (Command Pallette, Shortcut)
I've also tried to change from cmd.exe to powershell. Same results
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8492</IssueID>
    <Title>Symbol quick open: filter for Cmd+P, relax for Cmd+T</Title>
    <Description>Should also document this in the quick open help and commands.
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8473</IssueID>
    <Title>Unable to scroll in the integrated terminal</Title>
    <Description>- VSCode Version: Code - Insiders 1.3.0-insider (798b41ab1cf3636a27042020a54ddfb4cfb8d23c, 2016-06-29T05:07:11.483Z)
- OS Version: Windows_NT ia32 10.0.10586

Steps to Reproduce:
1. toggle the terminal open (ctrl+`)
2. press enter a couple of times, until the text starts scrolling
   --&gt; no scrollbar appears
</Description>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8457</IssueID>
    <Title>Linux: VS Code needs to be restarted before Emmet preferences take effect</Title>
    <Description>#8207
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

Steps to Reproduce:
1. Add to settings:
   
   ``` json
   "emmet.syntaxProfiles": {
     "html": {
       "attr_case": "upper"
     }
   }
   ```
2. Open HTML editor
3. Type `.foo` and press &lt;kbd&gt;tab&lt;/kbd&gt; to expand, the setting doesn't apply
4. Reload the window and repeat 2-3, the setting doesn't apply

I needed to do a full restart to get the settings to take effect.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8453</IssueID>
    <Title>Emmet split/join tag eats opening bracket of following tag</Title>
    <Description>#8207
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

Steps to Reproduce:
1. Paste `&lt;li&gt;&lt;a href=""&gt;Item 3&lt;/a&gt;&lt;/li&gt;`
2. Put cursor before `I` in `Item`
3. Trigger Emmet: Split/Join tag, notice the opening `&lt;` from the closing `li` tag is missing

![image](https://cloud.githubusercontent.com/assets/2193314/16433471/3b274e72-3d3f-11e6-8618-98addde5b7e7.png)

This is likely happening because vscode is trying being clever when the edit is applied, so it omits adding another opening `&lt;`.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8451</IssueID>
    <Title>Missing screen redraw after resize</Title>
    <Description>Testing #8222.
1. Open the terminal
2. cd to a directory with some entries
3. `ls -lasi`
4. use the left border to horizontally resize the window
5. make the console so narrow that text is 'cut off' on the right (scrolls out of the window)
6. resize console back to its original size
   -&gt; text that was cut off in step 5 remains cut off
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8447</IssueID>
    <Title>Emmet commands should be applied in a single edit</Title>
    <Description>#8207
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04
1. Type `a&gt;b&gt;c`
2. &lt;kbd&gt;tab&lt;/kbd&gt; to expand abbreviation
3. &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;z&lt;/kbd&gt; to undo, notice the text is removed
4. &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;z&lt;/kbd&gt; to undo, `a&gt;b&gt;c` appears again

Ideally there should only be a single edit and therefore a single undo.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8436</IssueID>
    <Title>Weird indentation on emmet expand abbreviation with tags inside an anchor tag</Title>
    <Description>#8207
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

```
a&gt;b&gt;d
```

Expands to:

```
&lt;a href=""&gt;&lt;b&gt;
        &lt;d&gt;&lt;/d&gt;
    &lt;/b&gt;&lt;/a&gt;
```

Expected:

```
&lt;a href=""&gt;
    &lt;b&gt;
        &lt;d&gt;&lt;/d&gt;
    &lt;/b&gt;
&lt;/a&gt;
```

or

```
&lt;a href=""&gt;&lt;b&gt;&lt;d&gt;&lt;/d&gt;&lt;/b&gt;&lt;/a&gt;
```

The same happens with `a&gt;span&gt;div`
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8407</IssueID>
    <Title>Extension images look bad in dark themes</Title>
    <Description>#8215
- VSCode Version: Code - Insiders 1.3.0-insider (d0c2b891903d73e83dcdc7786398ebfa764fc4ee, 2016-06-28T05:01:27.563Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

The images are designed for a light background on the marketplace and an optional custom color selected by the author. This makes extension images that were designed to look good in those circumstances look crappy and unprofessional in the dark theme.

These are all the bad entries from a search of "sort lines":

![image](https://cloud.githubusercontent.com/assets/2193314/16426601/a0ec2028-3d1e-11e6-9d98-38ed0c841b8d.png)
![image](https://cloud.githubusercontent.com/assets/2193314/16426606/a7c2fe76-3d1e-11e6-8d3e-88e0d905a26b.png)
![image](https://cloud.githubusercontent.com/assets/2193314/16426611/ab435172-3d1e-11e6-840c-99f03ef179cd.png)
![image](https://cloud.githubusercontent.com/assets/2193314/16426618/b0c9004c-3d1e-11e6-9e01-508035d46b33.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8368</IssueID>
    <Title>No margin between Extensions viewlet and the editor</Title>
    <Description>No margin between Extensions viewlet and the editor. When selecting an extension, selection outline is almost overlapping with content in the editor
![screen shot 2016-06-28 at 3 49 07 pm](https://cloud.githubusercontent.com/assets/10746682/16417864/e012a618-3d47-11e6-941f-ffd7c242084f.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8356</IssueID>
    <Title>pressing cmd/ctrl+f in problems view should focus search field</Title>
    <Description>- open markers view and expand a few
- press &lt;kbd&gt;Cmd+F&lt;/kbd&gt; in the hope of being brought to the search box
- ⚡ in the active editor the find box shows
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8354</IssueID>
    <Title>Files: logic to open dirty editor does not work well for many edits</Title>
    <Description>Should optimize https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/fileTracker.ts#L91 for the case of many dirty at once.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8351</IssueID>
    <Title>Replace: removing last match of a file should not show "no matches"</Title>
    <Description>Refs: #8184

Instead it should just be removed from the list as long as I am in replace mode.

![image](https://cloud.githubusercontent.com/assets/900690/16416449/951a2c1c-3d42-11e6-9870-81d890666283.png)

Same for when applying a replacement.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8332</IssueID>
    <Title>Replace: make it more obvious that you are in replace mode</Title>
    <Description>Refs: #8184

I find it currently hard to understand that the results list shows different matches when you have focus in replace and typed something. You show the preview of the operation. If we want to keep this concept, we should at least show the before and after in one line, e.g. you could strike through the old result and show the replacement right after. I would also use different colors for that.

Related: https://github.com/Microsoft/vscode/issues/8302
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8327</IssueID>
    <Title>Replace in search viewlet is hard to discover</Title>
    <Description>Refs: https://github.com/Microsoft/vscode/issues/8184

I think what we have now is a good start but I fear that people will not find the affordance to bring search into replace mode:

![image](https://cloud.githubusercontent.com/assets/900690/16414775/fb54687a-3d39-11e6-9c0c-3cebd969d899.png)

We should look into alternatives how to design this experience. 
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8326</IssueID>
    <Title>Add Edit &gt; Replace in Files and keybinding</Title>
    <Description>Refs: https://github.com/Microsoft/vscode/issues/8184

For discoverability.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8320</IssueID>
    <Title>Standalone editor: strange code assist behaviour</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Windows 10.

Code complete triggered after c. Observe no proposals.
![capture](https://cloud.githubusercontent.com/assets/1931590/16413479/7979042a-3d32-11e6-9821-a86162d9d3c6.png)

Code complete triggered after co. Observer there are proposals.
![capture](https://cloud.githubusercontent.com/assets/1931590/16413494/91d247d4-3d32-11e6-822f-0aea98a8a084.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8313</IssueID>
    <Title>Integrated terminal auto completaion produces bogus prefix</Title>
    <Description>#8222
1. Open vscode repo, open terminal
2. type 'sc' press tab
3. I get scsc as result and can not delete the first sc

Most of the time I use completion in the integrated terminal I get some bogus prefix rendered
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8307</IssueID>
    <Title>bad spacing for extension readme</Title>
    <Description>![screen shot 2016-06-28 at 12 35 07](https://cloud.githubusercontent.com/assets/1794099/16412504/d91ea73c-3d2c-11e6-9f16-bc5b467c32f4.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8306</IssueID>
    <Title>Extension UI mixes with editors</Title>
    <Description>- two editors open
- endup in the extension viewlet
- select an extension
- you have the extension 'viewlet', a code editor, and an extension view which looks all wrong

![screen shot 2016-06-28 at 12 32 32](https://cloud.githubusercontent.com/assets/1794099/16412450/8fbd9b7a-3d2c-11e6-9f50-8fa09673fc2e.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8294</IssueID>
    <Title>Tab title background should not be current line highlight</Title>
    <Description>This is a unhappy collision of styles (GitHub Clean White theme) and the background color of the tab area. I wonder if we should use the background color of viewlets inside of the darker tone?

![screen shot 2016-06-28 at 12 02 21](https://cloud.githubusercontent.com/assets/1794099/16411638/4958b704-3d28-11e6-9b39-e62f3c0b43de.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8290</IssueID>
    <Title>Extensions: styling is bad for links in markdown preview</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/900690/16411515/b80c56a2-3d27-11e6-8e8c-c0856603cc9c.png)

We could maybe revive the CSS we used for the built in markdown preview?
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8286</IssueID>
    <Title>Replace vs search background color difference too subtle</Title>
    <Description>#8184

Steps to Reproduce:
1. I like how we use a different background color in the search box depending if we show search results or replaced results
2. However the color difference is very subtle - it should be much more prominent IMHO
3. You just change the transparency by 0.15 - maybe increase this, and also you might need different change based on light / dark theme
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8277</IssueID>
    <Title>Markdown: nested HTML not colored anymore</Title>
    <Description>Refs: https://github.com/Microsoft/vscode/issues/7945

See:

![image](https://cloud.githubusercontent.com/assets/900690/16410784/651d05fc-3d24-11e6-9bf7-7d1d96dec8a9.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8276</IssueID>
    <Title>IPC library watcher spitting errors like crazy</Title>
    <Description>- VSCode Version: insider
- OS Version: linux

Steps to Reproduce:
1. Open vscode repo
2. Notice a bunch of exceptions in the  console
3. After some time vscode crashes
4. I guess there is something wrong with my configuration - we might have discussed this in the past

![screen shot 2016-06-28 at 11 32 51](https://cloud.githubusercontent.com/assets/1926584/16410737/36b5b308-3d24-11e6-995c-058094c44733.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8257</IssueID>
    <Title>Extension UI: introduce a small margin around the  </Title>
    <Description>Extension description is too close to the view edge and looks cutoff:

![2016-06-28_11-01-48](https://cloud.githubusercontent.com/assets/1898161/16409869/f8f30c86-3d1f-11e6-8e5a-2c4d66b985f8.png)

I suggest to introduce a small margin around the Extension description.
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8254</IssueID>
    <Title>Extensions: readme could have some margins to the left</Title>
    <Description>Currently the text seems to be too far to the left:

![image](https://cloud.githubusercontent.com/assets/900690/16409789/8273ed82-3d1f-11e6-8bdd-b007a4c8e70d.png)
</Description>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8220</IssueID>
    <Title>Default settings does not retain position in document when put in background</Title>
    <Description>- VSCode Version: Code - Insiders 1.3.0-insider (41f53d27a8cb477130f84116c78f43ddacbaf24b, 2016-06-27T05:15:21.343Z)
- OS Version: Linux x64 4.4.0-24-generic, Ubuntu 16.04

Steps to Reproduce:
1. Open settings
2. Focus Default Settings editor
3. Scroll down, put cursor somewhere
4. Open a file in the same editor
5. Open Default Settings tab, notice the cursor is at `0,0` in the document
</Description>
    <CreatedDate>27/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8175</IssueID>
    <Title>Whitespace symbols are missed in the middle of a text</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Win7 x64 Enterprise (also reproduced under Linux)

Preconditions:
1. User set following option:
{
    "editor.renderWhitespace": true
}

Steps to Reproduce:
1. Create new file
2. Type few spaces, then few words devided by space, then few spaces again.

Actual result: whitespaces shown only before the first word and after the last word. No whitespace symbols between words. Screenshot: http://zoltor.org/scr/2016-06-27_115413.png

Expected result: whitespace symbol is showing everywhere in text where space was typed.
</Description>
    <CreatedDate>27/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8166</IssueID>
    <Title>Chinese characters garbled in task output panel</Title>
    <Description>- VSCode Version: 1.3.0-insider 2016-06-24 (commit de6652)
- OS Version: window 10

Steps to Reproduce:
1. Launch the task
2. Chinese characters were display like this
   ![image](https://cloud.githubusercontent.com/assets/8966236/16367211/d301de2a-3c53-11e6-8638-fe1322021461.png)
   3.Normal should be like this
   ![image](https://cloud.githubusercontent.com/assets/8966236/16367238/00e5329c-3c54-11e6-8f2e-bb7e783f43d1.png)
</Description>
    <CreatedDate>27/06/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8148</IssueID>
    <Title>Extensions: Double scroll bar on Windows</Title>
    <Description>&lt;img width="258" alt="screen shot 2016-06-26 at 09 20 44" src="https://cloud.githubusercontent.com/assets/900690/16361002/4edb227a-3b7f-11e6-9e9c-0e68c191c42b.png"&gt;

This looks super bad and we should use the custom scroll bar if possible for the inner scroll bar and the outer scrollbar should just be hidden via CSS if possible.

@isidorn if you have cycles next week, moving to you.
</Description>
    <CreatedDate>26/06/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8137</IssueID>
    <Title>Debug nodejs output - incorrect hyperlink </Title>
    <Description>Version 1.3.0-insider (1.3.0-insider)

de66522e06d74752d48d92e934dcd026050355ba

2016-06-24T05:02:09.613Z

OS X El Capitan

![screen shot 2016-06-25 at 16 27 14](https://cloud.githubusercontent.com/assets/512816/16357264/d92c05ea-3af1-11e6-9968-4a8f531a3067.png)
</Description>
    <CreatedDate>25/06/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8095</IssueID>
    <Title>API request: Tab-Complete event</Title>
    <Description>In the process of working on a [Vim plugin for VSCode](https://github.com/VSCodeVim/Vim) I've run into a number of areas where I need a little bit of API help. Apologies if any of my suggestions already exist!

It would be _very_ useful for me to have some sort of way both to monitor when a tab-complete action is triggered (and in particular to retrieve the text that was completed). I need this for things like macros and the . command, which repeats what the user just did. 
</Description>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8092</IssueID>
    <Title>Terminal inside Code</Title>
    <Description>- VSCode Version:

![image](https://cloud.githubusercontent.com/assets/7235212/16332142/07b112ec-3a12-11e6-8957-aac55721f5c5.png)
- OS Version: Windows 8.1

I am getting this terminal in Code : 
![image](https://cloud.githubusercontent.com/assets/7235212/16332127/f149440c-3a11-11e6-9dad-ab22f7f3d97c.png)
Whats wrong here?
</Description>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8091</IssueID>
    <Title>Find all references doesn't work in default exports</Title>
    <Description>@jrieken I suggest we stop using default exports them until Find All References work in them.

![image](https://cloud.githubusercontent.com/assets/22350/16331215/07bb65bc-39ef-11e6-8d08-afd475e28258.png)

![image](https://cloud.githubusercontent.com/assets/22350/16331199/db611d0e-39ee-11e6-8539-804fcf0d213a.png)
</Description>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8065</IssueID>
    <Title>wordBasedSuggestions: false doesn't work in Markdown files</Title>
    <Description>- VSCode Version:1.2.1
- OS Version:Windows 10

Steps to Reproduce:
1. Set "editor.wordBasedSuggestions": false
2. Place the cursor in a Markdown document (no text highlighted)
3. Ctrl+space yields full word list and not just available md snippets
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8039</IssueID>
    <Title>Copy and paste doesn't work properly in Debug Console</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10 Pro 1511, Node 5.10
### Steps to Reproduce:
1. Create an app with a large output to the console, e.g. crash report, console.dump etc.
2. Try to copy and paste 10 + lines of output on a small screen
### The Issue

I am using an M'soft surface, so the small screen makes the debug window is small. 
1. Using `shift + up` to select multiple lines rolls over into the code screen rather than scrolling the console. 
2. If I select a line and then manually scroll up through many lines while holding shift and then click the new line (10 or so lines higher - they don;t all fit on the screen) however, scrolling up and down shows them highlighted, copy and paste only shows the last 4 lines (presumably the only ones that were visible at one go). 
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8035</IssueID>
    <Title>terminal cannot display Chinese correctly</Title>
    <Description>Chinese words crowd together so user can not see them clearly.
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8033</IssueID>
    <Title>Uninstall extension button text incomplete</Title>
    <Description>- VSCode Version: 1.3.0-insiders 2016-06-23T05:07:59.360Z
- OS Version: window 10

Steps to Reproduce:
1. open extension manage,choose one
2. Uninstall extension button text incomplete

![image](https://cloud.githubusercontent.com/assets/8966236/16293407/41040106-394c-11e6-911f-c1d00ecd54c7.png)
</Description>
    <CreatedDate>23/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8024</IssueID>
    <Title>Extensions Commands Missing/Confusion from Marketplace</Title>
    <Description>- VSCode Version: Insiders 1.3
- OS Version: OS X (all)

Steps to Reproduce:
1. Marketplace has guidelines for installing i.e. type ext inst...
2. In the marketplace copy the link and guidance to install i.e.
   Cmd+P and paste
3. commands are missing so does nothing - need to add them back 

See this page:
![image](https://cloud.githubusercontent.com/assets/1051190/16284664/231b1faa-3887-11e6-986e-49e9774156d3.png)
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8023</IssueID>
    <Title>Support `ext install`</Title>
    <Description>Redirect to viewlet

And all the other global commands
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>8021</IssueID>
    <Title>"ext install" broken on Insiders build</Title>
    <Description>- VSCode Version: b985edc9f5441678cf071fc7925a569e623e7431
- OS Version: OSX

Experienced this on 2 different Macs today. Got the usual notice asking me to if I wanted to "Update Now" by restarting Visual Code. Restarted and once I restart, I'm asked the same question again. Once again, I restarted Visual Code. After this "ext install" says "No results found" even if I try extensions I know should work ("ext install c++", "ext install cmake"). 

I noticed this by luck on one Mac earlier this morning. I thought I had screwed up my install somehow, but now that I see it on two different Macs I believe it's a bug with Visual Studio Code.
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7979</IssueID>
    <Title>Native input box out of style from the rest of vscode</Title>
    <Description>In the extensions viewlet we use a native input box.
1. It looks out of style compared to rest of vscode
2. It looks very bad on linux

![screen shot 2016-06-22 at 10 49 07](https://cloud.githubusercontent.com/assets/1926584/16260290/11634c30-3867-11e6-817a-4656f0ba1af6.png)
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7965</IssueID>
    <Title>Uninstall button color blends too much in extensions header background</Title>
    <Description>The uninstall button needs a clearer distinction from the extensions header background. Currently it blends too much and the user can easily ignore this button.
I like how it looks in the list, and I think it should have consistent color with the one in the header but I believe we can find a color which will work for both places.

Maybe increasing the size as suggested in #7964 might fix this issue

![screen shot 2016-06-22 at 09 41 54](https://cloud.githubusercontent.com/assets/1926584/16258313/973a20b8-385d-11e6-941b-a7150dbd90fb.png)
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7962</IssueID>
    <Title>Clear button not visible enough </Title>
    <Description>The current extensions input clear has some flaws:
1. Too far away from input
2. Looks disabled
3. Too small
4. Mouse does not transform to click while hovering over it
5. No hover information
6. Looks out of style compared to our other input buttons (find, search)

Due to this reasons this button can easily get ignored 

![screen shot 2016-06-22 at 09 35 10](https://cloud.githubusercontent.com/assets/1926584/16258129/a544f18e-385c-11e6-84d9-be968c3636dc.png)
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7957</IssueID>
    <Title>With hungarian layout '\' cannot be entered to the the nested terminal</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10 Professional versin 1511 build 10586.420

Steps to Reproduce:
1. Start VSCode
2. Press the Ctrl+ö keys, which toogle the terminal (why not Ctrl+0, the key placed to the same position as Ctrl+` on the US layout?
3. Press AltGr+q to input '\' on hungarian layout

Expected result:
Terminal opens with cmd.exe, and \ appears in the terminal.

Actual result:
Terminal opens with cmd.exe and q appears in the terminal.
</Description>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7936</IssueID>
    <Title>VSCode doesn't run the Node.js program</Title>
    <Description>- VSCode Version:1.2.1
- OS Version:Fedora 24 Linux, x86_64, kernel 4.5.7

Steps to Reproduce:
1. Open Node.js project
2. Press F5, run the program
3. Appear the info message: Please set up the launch configuration file for your application.
4. I have got a correct launch.json file, but the info message appear again, and the JavaScript program doesn't run
5. Workround: go to the debug mode, then click the green start debugging button or press F5 button, the program is begin to run
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7927</IssueID>
    <Title>VSCode never starts the second time</Title>
    <Description>- VSCode Version: 1.2.1 fe7f407b95b7f78405846188259504b34ef72761
- OS Version: OS X 10.11.5

Steps to Reproduce:
1. Download VSCode
2. Unzip
3. Run (from Finder or Alfred)
4. Quit
5. Run (never opens, crashes on start-up)
   
    6/21/16 9:40:09.385 AM com.apple.xpc.launchd[1]: (com.microsoft.VSCode.445792[5119]) Service exited with abnormal code: 1
6. Go back to step 1 and you can run it once.

Interestingly, I can run it from the terminal over and over again.

```
open Visual\ Studio\ Code.app
```

I had it in ~/Applications and thought that might be the issue, but after moving it to /Applications, I get the same behavior. It's happened I think for a couple versions. I only run it once every 2 weeks or so. Also, if it helps, I have had my laptop crash while VSCode was opened in case you can think of any kind of corrupted application state data that might do this.

My guess is something to do with my .bash_profile.
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7924</IssueID>
    <Title>Default settings: Incorrect type for the property ``markdown.styles``</Title>
    <Description>Open Default settings file and see

A warning is generated for the property `markdown.styles`
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7917</IssueID>
    <Title>Editor hover is easily lost in editor content</Title>
    <Description>I am not a big fan of our hover when it has lots of contents because the content blends too easy into the other contents of the editor making it hard to read.

![image](https://cloud.githubusercontent.com/assets/900690/16224554/c9e51f4c-37a2-11e6-8c17-06b18d24fc45.png)

At the minimum the hover should have a different background color. Also in this example the JS doc comments look very similar to the actual method signature. I would love if both could be made more distinct so that its clear the one is documentation and the other is signature.

/cc @joaomoreno @bgashler1 @stevencl @alexandrudima 
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7915</IssueID>
    <Title>Crash/not responding after Filesearch in big Project</Title>
    <Description>Every Time I use the file search (F1 -&gt; enter Filename) the Editor starts lagging and stop responding a while later (maybe half an hour, sometimes longer) and forces me to restart after "not responding"-message.
- VSCode Version: 1.2.1 
- OS Version: Win10 
- current Project: ~148.000 Files,  ~25.000 Folders

Steps to Reproduce:
1. "Open Folder" of big Project
2. Search for files and open them (F1)
3. after a longer Time (upwards of 15min) window stops responding
</Description>
    <CreatedDate>21/06/2016</CreatedDate>
    <ClosedDate>28/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7900</IssueID>
    <Title>Incorrect rendering of some ASCII in Terminal. Try F7</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Win10 10586

Steps to Reproduce:
1. Open Terminal. Do some commands.
2. Press F7

![image](https://cloud.githubusercontent.com/assets/2892/16206917/814e44ca-36df-11e6-87fb-50da8a4772b3.png)

I tried it on VSCode 1.3.0 and it is closer, but there's weird spacing:

![image](https://cloud.githubusercontent.com/assets/2892/16206956/ae3a5168-36df-11e6-90a6-187d1ef7ecee.png)
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7897</IssueID>
    <Title>Install Extension fails: does not properly install node_modules into extension folder</Title>
    <Description>- VSCode Version:
  1.3.0
- OS Version:
  Mac OS 10.11.5

Steps to Reproduce:
1. Install extension ForceCode
2. Open in Visual Studio Code - Insiders Build v. 1.3.0 while not debugging.
3. Attempt to activate extension with compile
4. Get the error 'No handler found for the command ...' An extension might be missing an activation event.

Notes:  Extension works properly when `npm install` is run in the extension directory.  When it's packaged or published and installed in the client, not all dependencies get installed, leading to "missing module" showing up in the developer console.  I've added about 30 low level dependencies, and it currently works on one of my macs and not the other, they are the same versions and OSs
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7895</IssueID>
    <Title>Variable view update on variable changes from the debugger console</Title>
    <Description>Copying an issue opened in our vscode-cordova repo, because it appears to be VSCode-specific:

&gt; During a debugging session which stopped at a breakpoint, changing the value of a variable through the debugger console does not update the variable's value in the variables view.
&gt; The update can first be seen after stepping forward

I was able to repro this using VSCode 1.2.1 with the built-in NodeJS debugger.

Is this by design?
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7889</IssueID>
    <Title>Double click on empty header area should open a new tab</Title>
    <Description>We need some action to easily open a new tab via mouse. Chrome has that small square and sublime has double click on empty area to open a new tab.

Since I might not like rendering the extra square, I vote for double click on empty header area opens a new tab - same as sublime.
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7883</IssueID>
    <Title>1.3.0-insider breaks alt+left/right word skipping</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: OS X El Capitan 10.11.3

Steps to Reproduce:
1. Create/open an empty file
2. Type the text "Hello World"
3. While the cursor is at the end of the line, press Alt-Left
4. Expected behavior is that the cursor will jump to the left of the letter 'W'
5. Actual behavior is that the cursor just jumps to the left of the letter 'd'
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>20/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7881</IssueID>
    <Title>Grunt autodetection fails if local grunt is not installed</Title>
    <Description>- VSCode Version: 1.2.x

Steps to Reproduce:
1. Workspace with grunt file but no local grunt installed
2. Global grunt cli installed
3. Configure task runner.

Observe: generate tasks.json with empty tasks array which hide the original problem of grunt not auto detecting.
</Description>
    <CreatedDate>20/06/2016</CreatedDate>
    <ClosedDate>20/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7868</IssueID>
    <Title>中文出现乱码了</Title>
    <Description>- VSCode Version:1.2.1
- OS Version: win7 x64

命令行 不能正常显示中文
</Description>
    <CreatedDate>19/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7858</IssueID>
    <Title>[js] highlight break</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 7

Steps to Reproduce(disable extension):

![image](https://cloud.githubusercontent.com/assets/7885426/16175072/699206a2-3615-11e6-846c-cbdf73dd6d77.png)
</Description>
    <CreatedDate>19/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7846</IssueID>
    <Title>[Update] cannot update: the setup files are corrupted</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10

On a computer which was running an old version of VSCode, I decided to update it. When clicking on the update popup that appeared, I got the following message:

![setup](https://cloud.githubusercontent.com/assets/199648/16170125/a0c4126e-3548-11e6-9fa0-c37fdeec431d.png)

Restarting VSCode and choosing "check for updates" brings the same message again.
</Description>
    <CreatedDate>18/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7836</IssueID>
    <Title>Breakpoints don't work on imported TypeScript modules</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: OS X 10.11.5
- node version 4.4.2
- tsc version 1.8.9
  [chorus copy.zip](https://github.com/Microsoft/vscode/files/321280/chorus.copy.zip)

Steps to Reproduce:
1.  Open attached project
2.  Set breakpoint on src/subtext/subtext.ts line 2 (console.log...)
3.  run debugger on "all tests"
4. debugger hits the "debugger" statement on line 3 but skips the breakpoint.
</Description>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>20/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7831</IssueID>
    <Title>jsonschema $ref not loading relative URL</Title>
    <Description>- VSCode Version: Version 1.2.1 (1.2.1)
- OS Version: OSX 10.11.5 

Steps to Reproduce:
## Setup

Serve the following from `localhost:8090`
### test-parent.json

```
{
  "$schema" : "http://json-schema.org/draft-04/schema#",
  "id": "http://localhost:8090/test-parent.json",
  "properties": {
    "external" : {
      "$ref" : "external.json"
    }
  }
}
```
### external.json

```
{
  "$schema" : "http://json-schema.org/draft-04/schema#",
  "id": "http://localhost:8090/external.json",
  "properties": {
    "foo" : {
      "type" : "string",
      "description": "A String"
    }
  }
}
```
## Include from another project

Create `instance.json` in a separate project:

``````
{
  "$schema" : "http://localhost:8090/test-parent.json"
}

# Expected
Now get prompts for `external` &amp; `external.foo` properties a la https://code.visualstudio.com/Docs/languages/json#_json-schemas-settings

# Actual
```html
Problems loading reference 'external.json': Unable to load schema from 'external.json': &lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"&gt;
&lt;html&gt;&lt;head&gt;
&lt;title&gt;400 Bad Request&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;h1&gt;Bad Request&lt;/h1&gt;
&lt;p&gt;Your browser sent a request that this server could not understand.&lt;br /&gt;
&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
Cmd + click to follow link
``````
</Description>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7825</IssueID>
    <Title>Only Render Whitespace on Selection</Title>
    <Description>- VSCode Version: any
- OS Version: any

In Sublime, there's an option to only show whitespace when text is highlighted. 

&lt;img width="363" alt="screenshot 2016-06-17 09 19 42" src="https://cloud.githubusercontent.com/assets/1269421/16157344/fb07502e-346c-11e6-990a-c7ffa44d511f.png"&gt;

In my opinion, this helps with code readability, while still allowing you to see whitespace if you need to. Code currently only supports whitespace on/whitespace off.

It might also help to tone down the weight of the whitespace indicator. 

![screenshot 2016-06-17 09 30 03](https://cloud.githubusercontent.com/assets/1269421/16157609/1a5d3f00-346e-11e6-960c-041317d26fa4.png)
</Description>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7801</IssueID>
    <Title>Abort on running script on intregrated terminal does not respond.</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Fedora 23

Steps to Reproduce:
1. Open a VSCode 
2. Run a PHP script which runs forever
3. Try to kill the running PHP script by Ctrl+C. 

What is happening?
It does not abort the running script. 
</Description>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>17/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7793</IssueID>
    <Title>Intellisense breaks if not suppying null for optional parameters</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Windows 10

Steps to Reproduce:

**proto.js**

``` js
module.exports = MyClass;

function MyClass() {
  this.prop = null;
}

/**
 * @param  {any} required
 * @param  {any} [notRequired]
 * @returns {MyClass}
 */
MyClass.prototype.optionalParam = function(required, notRequired) {
  this.prop = required;

  if (notRequired)
    this.prop += notRequired;

  return this;
};

MyClass.prototype.secondMethod = function(param) {
  return 'Hello';
};
```

**index.js**

``` js
const proto = require('./proto');

let pInst = new proto();

//pInst.optionalParam('hello')
//pInst.optionalParam('hello', null)
```

Uncomment the second line and hit `.` after it. You'll get the proper Intellisense.

![properintelli](https://cloud.githubusercontent.com/assets/286972/16132534/892b1778-33e1-11e6-818f-49634b9bcf4b.PNG)

Uncomment the first line and hit `.`.

![badintelli](https://cloud.githubusercontent.com/assets/286972/16132549/95f32ebe-33e1-11e6-867b-faa119ec859e.PNG)

The Intellisense is broken if you don't supply something for the parameter, even though it is clearly recognized as optional.

![optional](https://cloud.githubusercontent.com/assets/286972/16132596/d53376b0-33e1-11e6-9132-a46693dbe6ce.PNG)
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>17/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7785</IssueID>
    <Title>Italic markup style color should not be applied in markdown</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/2193314/16129269/0bb73c5e-33b9-11e6-8c94-6d3c6c18195d.png)

The style overriding link styling is:

``` css
.monaco-editor.vs-dark.vscode-theme-defaults-themes-dark_plus-json .token.markup.italic {
    font-style: italic;
    color: rgba(86, 156, 214, 1);
}
```
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7779</IssueID>
    <Title>Markdown: lost ability to provide custom CSS to use for styling?</Title>
    <Description>I am missing the `markdown.styles` configuration we used to have for a user to use their own CSS for the preview. Was there a reason to not have it in our new extension?

Marking as important because this is feature loss that can be ugly for our users if they rely on it.

//cc @jrieken 
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7768</IssueID>
    <Title>Project Management</Title>
    <Description>An idea for an improvement is creating a builtin Project manager. (Could be git projects) So that you don't need to open folders in the editor. 
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>17/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7756</IssueID>
    <Title>Debugger controls overlay tabs</Title>
    <Description>![capture](https://cloud.githubusercontent.com/assets/1931590/16109600/0b9c347c-33aa-11e6-866d-777d97555a6e.png)
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7751</IssueID>
    <Title>can't delete asar file</Title>
    <Description>- VSCode Version:1.2.1
- OS Version:win10 x64

Steps to Reproduce:

step1. i clicked *.asar(electron build) file in vscode
step2. when i delete *.asar use cmd,error:Error: EBUSY: resource busy or locked 

i must first close vscode then open again to delete *.asar file
</Description>
    <CreatedDate>16/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7742</IssueID>
    <Title>Intellisense dialogue for signature help is smaller then the text</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Win 10 x64

intellisense dialogue is smaller then the text and isn't scrollable so you can't see the text i.e arguments and options

![Proof](http://i.imgur.com/9628D34.png)

I guess this is the right place for this issue
https://github.com/OmniSharp/omnisharp-vscode/issues/443

I'm not sure but could be a problem with calculating the height [Here](https://github.com/Microsoft/vscode/blob/8a9ddea7f979912cea99dd39369fa88e033f7d5f/src/vs/editor/contrib/parameterHints/browser/parameterHintsWidget.ts#L289) when the text is wrapped
</Description>
    <CreatedDate>15/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7733</IssueID>
    <Title>constantly getting error </Title>
    <Description>- VSCode Version: Code - Insiders 1.3.0-insider (0dba5abc3dcc0b69c04374dee90a2726dcbbdabf, 2016-06-14T07:51:29.842Z)
- OS Version: Windows_NT ia32

Steps to Reproduce:

1.it comes randomly anytime
![screenshot 12](https://cloud.githubusercontent.com/assets/9436987/16091178/275a65f8-3350-11e6-8c9f-f78a635ef34c.png)
</Description>
    <CreatedDate>15/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7731</IssueID>
    <Title>Consider making Open dialog start from folder of current file</Title>
    <Description>In other Microsoft code editors (VS in particular), if I do Ctrl-O, the current folder of the open dialog is automatically set to the folder that contains the current open source file. This makes it very easy to open up matching headers or related source files without doing a search through the files pane. Please consider adding this behavior. 
</Description>
    <CreatedDate>15/06/2016</CreatedDate>
    <ClosedDate>18/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7720</IssueID>
    <Title>Weird snippets suggested before obvious ones</Title>
    <Description>- VSCode Version: 1.21
- OS Version: Windows 7 Professional

When editing JavaScript files in my project and I want to use the built in snippets like `for` and `console.log`, VSCode suggests a ton of snippets, but none of the ones I want. They're all random ones that I have never seen before, like `Performance` and `onbeforeupload`. I don't know where these snippets come from. 

![image](https://cloud.githubusercontent.com/assets/13225609/16081712/8f689380-3306-11e6-92e7-0b04e6415fb0.png)

To test this in isolation I actually created a new JS file on my desktop and it didn't have any of these random snippets and it did go directly to suggesting the pure JS snippets. 

![image](https://cloud.githubusercontent.com/assets/13225609/16081779/e104e8ec-3306-11e6-8128-97899dd6d8f2.png)

So I'm not sure what's happening here. Any suggestions would be appreciated. Thanks!
</Description>
    <CreatedDate>15/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7694</IssueID>
    <Title>Code is still runing after close it</Title>
    <Description>- VSCode Version: 1.2.1
- OS Version: Ubuntu 16.04

Steps to Reproduce:
1. open code use it as normal
2. close it and you have this  _/usr/share/code/code ./terminalProcess_ still runing

I don't know if this is a problem but I guess this isn't normal!
![code](https://cloud.githubusercontent.com/assets/9899682/16069690/072c4fcc-3296-11e6-9c8e-e848a2e52586.png)
</Description>
    <CreatedDate>15/06/2016</CreatedDate>
    <ClosedDate>15/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7681</IssueID>
    <Title>Adding a root level item experience</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: OS X 10.11

Steps to Reproduce:
1. Open a Folder in VS Code that has no root files, only Folders
2. Try to create an item at the root and not inside any of the folders.

If a folder is selected, items are created as a child of it. If a file is selected, new items are created along side that file. This makes adding "root" items a bit tricky, and if your project has no files in the root, only folders, seemingly impossible.
</Description>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>16/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7680</IssueID>
    <Title>Integrated Terminal should be able to be moved</Title>
    <Description>I would like to be able to move the integrated terminal to a vertical pane alongside my code, rather than below my code.
</Description>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>15/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7649</IssueID>
    <Title>Find widget does not blend well when tabs enabled</Title>
    <Description>IMHO the find widget does not visually blend well when tabs are enabled
Two similar gray colors and no seperation between them does not look good to me.

Just my 2 cents so feel free to close

![screen shot 2016-06-14 at 11 52 28](https://cloud.githubusercontent.com/assets/1926584/16038735/c96b8384-3226-11e6-928a-cc8b32627301.png)
</Description>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7647</IssueID>
    <Title>Cmd + number should focus editor at index and not focus groups or split</Title>
    <Description>1. Have multiple tabs open
2. Press cmd + 2 - expect that the second tab gets focus (like in all other aps)
3. Instead a new editor group gets created

While in tab mode cmd + number should always focus that tab. Opening a new group should have a stronger shorctur (more keybindings).

I think this could be solved by just adding additional shortcuts in keybindings.json on appropriate positions because Alex gives priority based on where in file it appears.
</Description>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7637</IssueID>
    <Title>File associations</Title>
    <Description>With VSCode installed, both *.cs and *.xml are shown in Explorer as being of type "Visual Studio Code", so when sorting by type, XML and *.cs files are mixed up. Rinse and repeat with other formats I presume.

No, no, no.

Please fix that.

File associations has plagued Windows for more than 3 decades and still does... :-(
</Description>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7630</IssueID>
    <Title>Clink integrated terminal occasionally drops keystrokes on the UI when using backspace</Title>
    <Description>Steps to Reproduce:
1. Type a command
2. Press backspace, if you notice a character not being deleted and the cursor jumping back, run the command
3. The command ran will not be equal to the command on the UI
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7626</IssueID>
    <Title>Add Document Types to Webview</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: Linux

When providing html to `vscode.previewHtml` the doctype is stripped [here in the webview.html](https://github.com/Microsoft/vscode/blob/aaa65451f6f2d6de290ee3cb1c8ce1f2def7a52a/src/vs/workbench/parts/html/browser/webview.html#L81).  This can prevent some styles from not working properly, such as KaTeX which can cause problems like [this here](https://github.com/Khan/KaTeX/issues/332).  I was working on a plugin that would allow me to render Markdown and KaTeX in previewHtml when I ran into this issue.

I simply wanted to replace the linked code above with

```
target.contentDocument.write('&lt;!DOCTYPE html&gt;' + newDocument.documentElement.innerHTML);
```

This **does** fix the problem for me.  But I had issues following the contribution guidelines (probably another issue), and there probably is a better way to handle this.
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7622</IssueID>
    <Title>Cannot read property 'getStatus' of null</Title>
    <Description>- VSCode Version: 

```
Version 1.3.0-insider
Commit 51e9802304ee59dcc1d05ec15f26ec5019e28f48
Date 2016-06-13T14:48:54.118Z
Shell 0.37.6
Renderer 49.0.2623.75
Node 5.10.0
```
- OS Version: Windows 7

Steps to Reproduce:
1. Change "git.enabled" to false in settings.json
2. (re)start vscode
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7604</IssueID>
    <Title>Javascript highlighting is broken by const, conditional operator and string templates</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: OSX 10.10.5

Steps to Reproduce:
1. Assigning a constant value an expression with the conditional operator where the third operand is a string template will break all further syntax highlighting.  I.e:

``` javascript
function foo(bar) {
    const baz = bar ? `anything` : `${bar}`;  // From here on, there is no syntax highlighting anymore.
    console.log(baz);
}
```
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7603</IssueID>
    <Title>Cannot read property 'status' of null</Title>
    <Description>- VSCode Version: The latest
- OS Version: Win10

Steps to Reproduce:
1.  git can not open error：Cannot read property 'status' of null
   ![1](https://cloud.githubusercontent.com/assets/8591065/16003129/d2a14252-318d-11e6-8eb7-5a23a5653217.png)
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7593</IssueID>
    <Title>Cannot read property 'status' of null</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: Windows 10

Steps to Reproduce:
1. Open https://github.com/rubyide/vscode-ruby in Insider
2. F5 to debug
3. A new vscode instance pops up, wait for a few seconds. There is an error message pops up saying `Cannot read property 'status' of null`

Expected:
It should tell me local extension is overriden by the developing one.

StackTrace

```
Cannot read property 'status' of null: TypeError: Cannot read property 'status' of null,    at c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:7:12524,    at Object.m [as _notify] (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:7980),    at Object.W.enter (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:12065),    at n.Class.define._run (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:13386),    at n.Class.define._chainedError (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:12745),    at n (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:10568),    at n.Class.define.then (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:14195),    at Object.N.enter (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:10637),    at n.Class.define._run (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:13386),    at n.Class.define._setCompleteValue (c:\Program Files (x86)\Microsoft VS Code Insiders\resources\app\out\vs\workbench\parts\git\node\gitApp.js:5:13080)e.doShow @ messageService.ts:119
keybindingResolver.ts:188 Conflict detected, command `scrollPageDown` cannot be triggered by ctrl+pagedown due to workbench.action.nextEditor
```

The error is thrown from  https://github.com/Microsoft/vscode/blob/c843d58563919cad115448fb93cd8774f722a5e5/src/vs/workbench/services/message/browser/messageService.ts#L119
</Description>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7590</IssueID>
    <Title>[Feature Request] Extensions: add an API to determine the type of word of a selection</Title>
    <Description>Right now, there's no way to determine the type of word of the selection.

It would be useful if from an extension I could know that some word is a string, a regexp,.. depending on the language.

I am working on an extension that will show a visual diagram of a regex. The problem is that there is no way to know the current selected word is a string and/or regex.
</Description>
    <CreatedDate>12/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7588</IssueID>
    <Title>Adding ability to insert characters in Keyboard Shortcuts </Title>
    <Description>- VSCode Version:
- OS Version:

Steps to Reproduce:
1. 1.2.0
2. OS X 10.11.2 (15C50)

Extending Keyboard Shortcuts with the ability to type letters. I think this would be useful in general as it provides more extensibilty to the shortcuts, but it also allows convenience shortcuts for many languages that are used by many programmers. 

Convenience Examples: c++ and Java, adding the semicolon to the end of a line and moving cursor to next line (this functionality is default in many editors/IDEs and is a clickable option in others like Eclipse).  Python, adding the colon to an end of a line and moving down, another example that is default in many editors/IDEs.
</Description>
    <CreatedDate>12/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7586</IssueID>
    <Title>Add the features to display whitespace when selected.</Title>
    <Description>- VSCode Version: 1.3.0-insider
- OS Version: OS X 10.11.4

Steps to Reproduce:

Sublime text demo:

![demo](http://ww4.sinaimg.cn/mw690/534b48acgw1f4svpe2mikg208l05s1kx.gif)
- `"editor.renderWhitespace": "all"` The default display all whitespace.
- `"editor.renderWhitespace": "selection"` display whitespace when selected.

cc @outcoldman in https://github.com/Microsoft/vscode/pull/5423
</Description>
    <CreatedDate>12/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7560</IssueID>
    <Title>[Feat] Add project support</Title>
    <Description>One of the nice things Sublime has over VS Code is workspaces and projects, Sublime allows to set a workspace with configs for it, as well as saving those to load the workspace later.

However the feature i want to reccomend is projects, Sublime is great in that regard since the projects are kind like the workspaces, just that they are remembered and is very easy to change between projects with a few keystrokes.

Currently VS Code doesn't have those concepts so i'm forced to open the top folder that contains all the projects i'm working / had worked on, that's a lot of folders to see, i like clean development environment so it would be a great addition to be able to set projects with just the folders or projects i need, and easily change between projects.

Lastly when i mean change between projects i don't mean like the workspaces of Sublime that we need to change by searching the workspace config file in the root of the workspace or wherever you saved it, i mean like Sublime projects that remember the last ones that were used and with a keyboard shortcut allow to see a list of those and quick change between them.

**Sumary:**
- Add support for multiple base folders in same window.
- Add support for a project manager that allows to save the previous item as a project for easy dev env restoration.
- Add an easy way to switch between projects recently used.

I think this would make VS Code even better, any thoughts about this?
</Description>
    <CreatedDate>11/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7558</IssueID>
    <Title>Electron Helper draws 100% CPU</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: Mac OS X 10.11.5

Steps to Reproduce:
1. Start VS Code
2. Open project folder

Electron Helper process draws 100% CPU as soon as I open a project folder. GUI is still responsive though.

Somehow I suspect that this has something to do with the git pane (**the project is managed by mercurial, not by git!**):
- Open the project -&gt; CPU usage goes to 100% for ~3 minutes
- Git icon shows badge "99+" -&gt; CPU usage falls down to a reasonable level
- After some seconds, CPU usage rises again to 100% for ~4 minutes
- CPU usage is again at a reasonable level

Then, after a make any modification to a file, the git badge switches to a clock icon and after a few seconds it starts again drawing 100% CPU.
</Description>
    <CreatedDate>11/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7539</IssueID>
    <Title>Cannot support Unicode or Chinese characters!</Title>
    <Description>- VSCode Version:1.2.0
- OS Version: Windows 10 1511

Steps to Reproduce:
1. install C++ extension
2. create a c++ file with blankspace or Unicode or Chinese character in the filedir or filename
3. compile by using vscode command (use my own compiling batch script which will echo the filename)
4. garbled characters appear in the output panel, and cannot debug normally(cannot open source code file when meet the breakpoint)

This illustrates that VSCode can not support Unicode or Chinese character completely. Please add complete support to those character. Thank u!

![8888](https://cloud.githubusercontent.com/assets/14960345/15968264/ccee5db8-2f5d-11e6-94bd-2c9c277fd748.PNG)

compiling batch script code:
`@echo off
rem ----config----
set directory="C:\Program Files (x86)\MinGW64"
rem --------------

echo Compiling...
set "directory=%directory:"=%"

if exist "%directory%\bin\g++.exe" (
path="%directory%\bin"
cd /d "%directory%"
echo MinGW64 Directory: "%directory%"
echo g++.exe %1 -o %2 -g3
bin\g++.exe %1 -o %2 -g3
echo Complete!
exit
)

echo Please correctly config the MinGW64 Directory in Compile.bat!
`

launch.json:
`
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "C++ Launch (GDB)",
            "type": "cppdbg",
            "request": "launch",
            "launchOptionType": "Local",
            "targetArchitecture": "x64",
            "program": "${workspaceRoot}/a.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceRoot}",
            "environment": [],
            "externalConsole": true,
            "miDebuggerPath": "C:\\Program Files (x86)\\MinGW64\\bin\\gdb.exe"
        }
    ]
}
`

tasks.json:
`{
    "version": "0.1.0",
    "command": "${workspaceRoot}\\.vscode\\Compile.bat",
    "isShellCommand": true,
    "args": ["${file}","${workspaceRoot}\\a.exe"],
    "showOutput": "always"
}`
</Description>
    <CreatedDate>10/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7513</IssueID>
    <Title>An API to get a range of visible positions in the editor</Title>
    <Description>It would be useful for extension developers to get a range of visible positions (or lines) in the editor.

This would be useful when the extension is dealing with the visual aspect of the VSCode since the extension does not need to update the visual on invisible area.

For example, [Guides](https://marketplace.visualstudio.com/items?itemName=spywhere.guides) needs to update its indentation guide lines but this has impact the extension performance (https://github.com/spywhere/vscode-guides/issues/6) due to a calculation on whole file which cause the lag on the VSCode. With this API, Guides can now update only visible area, reduce the necessity of update the invisible area which can improve the performance a lot.
</Description>
    <CreatedDate>10/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7510</IssueID>
    <Title>code --install-extension fails when ~/.config/Code/User/ does not exist</Title>
    <Description>- VSCode Version: 1.2
- OS Version: Debian Jessie

Steps to Reproduce:
A fresh install doesn't have this directory. Or just remove it to test.

```
rm -rf ~/.config/Code/User
```
1. Try installing any extension.

```
code --install-extension ms-vscode.csharp
Error: watch /home/vscode/.config/Code/User ENOENT
    at exports._errnoException (util.js:890:11)
    at FSWatcher.start (fs.js:1323:19)
    at Object.fs.watch (fs.js:1351:11)
    at new e (/usr/share/code/resources/app/out/vs/code/node/cliProcessMain.js:6:1245)
    at m (/usr/share/code/resources/app/out/vs/code/node/cli.js:4:11378)
    at t._createInstance (/usr/share/code/resources/app/out/vs/code/node/cliProcessMain.js:6:7605)
    at t._createAndCacheServiceInstance (/usr/share/code/resources/app/out/vs/code/node/cliProcessMain.js:6:8580)
    at t._getOrCreateServiceInstance (/usr/share/code/resources/app/out/vs/code/node/cliProcessMain.js:6:7766)
    at /usr/share/code/resources/app/out/vs/code/node/cliProcessMain.js:6:7122
    at Array.map (native)
```

Found while working on https://github.com/ctaggart/rusty-vscode/issues/16.
</Description>
    <CreatedDate>10/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7492</IssueID>
    <Title>VSCode/CodeHelper process is blocking folders (Cordova)</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: Windows 7 Professional (7601: Service Pack 1)

Steps to Reproduce:
1. Edit some file in VSCode.
2. Try to run cordova (compile, etc)

![process](https://cloud.githubusercontent.com/assets/1462548/15943923/838f6f1a-2e61-11e6-8114-786da361792d.png)

When i try to compile my app I get the **enotempty directory not empty** because of blocking of vscode/codehelper.
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7466</IssueID>
    <Title>Click twice to get cursor from terminal to editor</Title>
    <Description>- VSCode Version: 1.2
- OS Version: Ubuntu 16.04

We need to click twice to get our cursor from integrated terminal to the file we are editing

Steps to Reproduce:
1. Open a file to edit
2. Open embedded terminal
3. Click on terminal and type something.
4. Click on editor(Just above terminal)

If you are editing any *.c file, and you click on opening round bracket, then it will highlight the closing bracket, however the cursor will neither be on terminal nor on editor pane. 
1. Click on editor pane again.

Now the cursor will be on editor pane.
![workspace 1_002](https://cloud.githubusercontent.com/assets/8456197/15923763/609fb114-2e4c-11e6-8be6-2b8531b82927.png)
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7462</IssueID>
    <Title>open with visual studio code , opens the file minimized </Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: windows 10

Steps to Reproduce:
1. open instance of the application
2. minimize it 
3. go to any text file , right click -&gt; open with visual studio code 
4. it will opened minimized
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7460</IssueID>
    <Title>Associate custom shortcuts to custom tasks not yet possible.</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: Win 10 64 bit

Steps to Reproduce:
1. crate a new task named "myTask"
2. add a shortcut like this: { "key": "ctrl+shift+b", "command": "workbench.action.tasks.myTask" }

The command associated to the shortcut isn't recognized.
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7450</IssueID>
    <Title>Terminal: Cannot set property 'innerHTML' of undefined</Title>
    <Description>Seeing this when making the terminal visible in selfhost after having quite some output. It seems to try to access a div that is not existing in the array:

&lt;img width="1458" alt="screen shot 2016-06-09 at 07 44 54" src="https://cloud.githubusercontent.com/assets/900690/15919920/173df0b6-2e16-11e6-90e8-dededd2c457a.png"&gt;
</Description>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7440</IssueID>
    <Title>Terminal instantly closes</Title>
    <Description>- VSCode Version: both 1.2.0 and latest insiders
- OS Version: Windows 10, latest updates

Steps to Reproduce:
1. Try to open terminal (both ctrl+` and view -&gt; ...)

It just shows terminal for a brief moment (few miliseconds) and then it closes.
I'm (sometimes, not everytime I try to open it) getting error "write EPIPE".
(this might be cause by holding the key binding button).

I dont have anything else bound to ctrl + `.
Tried restarting, reinstalling, restarting PC.
Tried using both powershell and cmd. (as described in your post).

Thank you for looking at this isuue. (or possibly telling me what am I doing wrong).
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7438</IssueID>
    <Title>when a task started using visual studio code tasks , environment variables aren't working</Title>
    <Description>- VSCode Version:1.2.0
- OS Version: ubuntu 15.10

Steps to Reproduce:
1. create gulp tasks
2. user exec in a task and set env option to exec as process.env
3. run the task by issuing gulp command from terminal (it works)
4. run task from visual studio interface by using shortcut key (environment variables are not set !!!)
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7428</IssueID>
    <Title>Huge git repo causes hang</Title>
    <Description>- VSCode Version: 1.2.0
- OS Version: OS X 10.11.5

Steps to Reproduce:
1. Open VSCode
2. Open any folders
3. Browse some code (eg. c++, ts, php). Loading speed should be normal at this point.
4. Leave VSCode alone and do step 3 every 10min. At 30min the opening time of file should be noticeable slower. After 1hr, VSCode will take 3-4 sec to load a 1KB c++ file.

Additionally, I notice one of the VSCode process is using a lot of cpu time even I just let it stay in the background. I highlighted it below:

&gt; ps -ef|grep Studio
&gt;   501   553     1   0 10:16AM ??         0:26.77 /Applications/Visual Studio Code.app/Contents/MacOS/Electron
&gt;   501   554   553   0 10:16AM ??         0:08.45 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper --type=gpu-process --channel=553.0.727979350 --no-sandbox --supports-dual-gpus=false --gpu-driver-bug-workarounds=16,17,31,36,40,50,54,61,67,70 --gpu-vendor-id=0x8086 --gpu-device-id=0x0166 --gpu-driver-vendor --gpu-driver-version
&gt;   501   669   553   0 10:16AM ??         0:01.60 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap --type=SharedProcess
&gt;   501   679     1   0 10:16AM ??         0:00.01 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Resources/crashpad_handler --database=/tmp/VSCode Crashes --url=https://ticinocrashreporter.azurewebsites.net/crash --handshake-fd=61
&gt;   501   698     1   0 10:16AM ??         0:09.87 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap /usr/bin/git /Volumes/HD2/JS/Documents/code/JSDS/Test/angularjs2/qs utf8 /Applications/Visual Studio Code.app/Contents/MacOS/Electron 2.7.4 (Apple Git-66)
&gt;   501  1117     1   0 11:28AM ??         0:06.76 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap /usr/bin/git /Volumes/HD2/JS/Documents/code/JSDS/Test/c utf8 /Applications/Visual Studio Code.app/Contents/MacOS/Electron 2.7.4 (Apple Git-66)
&gt;   **501  1196   553   0 12:06PM ??         1:08.19 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper --type=renderer --no-sandbox --lang=en-US --node-integration=true --background-color=#131313 --num-raster-threads=4 --enable-zero-copy --enable-gpu-memory-buffer-compositor-resources --content-image-texture-target=3553,3553,3553,3553,3553,34037,3553,3553,3553,3553,34037,3553,34037,34037 --video-image-texture-target=34037 --channel=553.7.1240100061**
&gt;   501  1198  1196   0 12:06PM ??         0:00.42 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap --type=extensionHost
&gt;   501  1199  1196   0 12:06PM ??         0:00.35 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap --type=watcherService
&gt;   501  1203  1196   0 12:06PM ??         0:03.30 /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper /Applications/Visual Studio Code.app/Contents/Resources/app/out/bootstrap /usr/bin/git /Volumes/HD2/JS/Documents/code/JSDS/Test/c utf8 /Applications/Visual Studio Code.app/Contents/MacOS/Electron 2.7.4 (Apple Git-66)
&gt;   501  1219   783   0 12:08PM ttys000    0:00.00 grep --color=auto Studio
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7421</IssueID>
    <Title>Error view: can not open warnings in default settings.json</Title>
    <Description>- open User settings
- check the errors view, 2 warnings in settings.json (caused by #7312)
- click on the warning. Error:

&gt; Unable to open 'settings.json': Cannot read property 'then' of null.
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>08/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7385</IssueID>
    <Title>Stacks - Debugger frequently covers actionable editor buttons requiring editor resize</Title>
    <Description>This was always an issue but with more actionable buttons in the new editors like the overflow menu, it is more of an issue now.
- VSCode Version: 1.3 insider
- OS Version: Win10

Steps to Reproduce:
1. Open an editor on the left
2. Run a program

![](http://i.imgur.com/EwUE5YG.png)

I'm not sure what the solution is here. Maybe a small handle on either side of the debugger that allows us to drag the debugger out of the way? Maybe putting the debugger in the completely blank header of the debug panel?

![](http://i.imgur.com/TAI9o91.png)
</Description>
    <CreatedDate>08/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7364</IssueID>
    <Title>Support back/forward across preview editors</Title>
    <Description>This may be by design but it means you can't backtrack through preview files which is disorienting/not intuitive imo

Steps to Reproduce:
1. Open a file as a preview, click around
2. Open another file as a new preview
3. Trigger go back, notice the previous file won't popup

cc @bpasero @alexandrudima 
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>08/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7327</IssueID>
    <Title>Marketplace extension installation instructions are wrong</Title>
    <Description>From @Tyriar, related to #7105

&gt; I think this should be dealt with sooner rather than later, right now the installation advice given on the marketplace is wrong because of this. Consider https://marketplace.visualstudio.com/items?itemName=AdamCaviness.theme-monokai-dark-soda
&gt; 
&gt; ![image](https://cloud.githubusercontent.com/assets/2193314/15854362/41815188-2c5e-11e6-9a60-8406e0822ac7.png)
&gt; 
&gt; ![image](https://cloud.githubusercontent.com/assets/2193314/15854373/54d8a0b0-2c5e-11e6-8826-e148b0f19a6e.png)
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7317</IssueID>
    <Title>An option to hide the side bar when it's toggled</Title>
    <Description>The **Toggle Sidebar** action only _minimizes_ the sidebar.  It would be really nice to get an option to completely hide the sidebar when it's toggled.

Sometimes I use it but most of the time I do not, and it just takes up space.

A user setting named, for example, `hideSidebarWhenToggled` would be perfect.
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>08/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7313</IssueID>
    <Title>Opening terminal gives "Cannot set property 'innerHTML' of undefined"</Title>
    <Description>- VSCode Version: 1.2.0-insider (24e811)
- OS Version: Windows 10.0.10586

Steps to Reproduce:
1. Open integrated terminal
2. Type e.g. 'dir' and press enter
3. Toggle/close integrated terminal
4. Toggle/open integrated terminal

Expected: Terminal opens
Actual: Error: Cannot set property 'innerHTML' of undefined

Problem exists both with cmd.exe as terminal, and with `"terminal.integrated.shell.windows": "\\Program Files\\Git\\Bin\\bash.exe"`
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7296</IssueID>
    <Title>Markdown syntax highlighing confused by backslashes and quotes</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10

Steps to Reproduce:
1.  Open the attached file [markdown.txt](https://github.com/Microsoft/vscode/files/301913/markdown.txt) in VSCode.
2.  Enable word wrap to be able to view the entire paragraph.
3.  Rename the file to have the '.md' extension identifying it as Markdown
4.   Observe syntax coloring of the markdown text.   The entire sentence starting with the phrase "One set of encoded values" is inappropriately colored blue because the syntax highlighting code in VSCode is confused by the example.   

Note: results from processing this markdown using grunt-markdown results in HTML producing the desired effect, the flaw seems to be in the markdown highlighting logic.
</Description>
    <CreatedDate>07/06/2016</CreatedDate>
    <ClosedDate>11/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7274</IssueID>
    <Title>Allow repositioning of the debug control panel</Title>
    <Description>On smaller screens (15" in this case), the debug control panel is hiding anything below it's top-center position. It would be great if users could drag the debug control panel across the horizontal axis (or wherever) to reveal anything hidden.

In this example I have two panes and the split editor button in the first pane is covered:

![screen shot 2016-06-06 at 6 54 49 pm](https://cloud.githubusercontent.com/assets/15803541/15840597/e42b3700-2c18-11e6-80e8-5ba834fc7287.png)

In this example I have a three panes and the name of the file in the center pane and the button to close the left pane are covered:

![screen shot 2016-06-06 at 7 00 36 pm](https://cloud.githubusercontent.com/assets/15803541/15840613/fabf427c-2c18-11e6-9f2f-a3b2873f5729.png)
</Description>
    <CreatedDate>06/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7249</IssueID>
    <Title>Would like to see errors in explorer</Title>
    <Description>- VSCode Version: alpha
- OS Version:

Since we are rendering a flat list of markers it would be very valuable if we render files that contain an error with an overlay in the explorer. This would allow me to easily spot where in my project problems exists. 
</Description>
    <CreatedDate>06/06/2016</CreatedDate>
    <ClosedDate>06/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7230</IssueID>
    <Title>Debug console window formatting : missing leading spaces</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Win10 x64

Steps to Reproduce:
1. Write NodeJS server that uses console.log to logging purposes
2. Format output, I use `JSON.stringify(packet, null, 2)`
3. Start debugging, output will go to "debug console" (in ru_RU translation it is 'консоль отладки')

Problem is that all leading spaces (between line start and formatted text) are missing.
So if I want to see readable JSON structs, I must run server in OS native shell...
</Description>
    <CreatedDate>06/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7225</IssueID>
    <Title>TM coloring does not work anymore because path.join and path.normalize have changed</Title>
    <Description>
    </Description>
    <CreatedDate>05/06/2016</CreatedDate>
    <ClosedDate>06/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7212</IssueID>
    <Title>Debugger start failing. Not recognizing launch.json file.</Title>
    <Description>- VSCode Version: 1.2.0-insider
- OS Version: Windows, OS X, Linux

Steps to Reproduce:
1. Create a new app or open an existing one.
2. Hit F5 to start debugger.

When no `launch.json` file exists VSCode creates it but then refuses to recognize it and start the debugger.

This buggy behavior is noticeable when at start you press F5 from anywhere but the Debugger. If you navigate to the Debugger and hit F5 it works and then VSCode remembers it.

Note: VSCode 1.1.1 works.
</Description>
    <CreatedDate>04/06/2016</CreatedDate>
    <ClosedDate>07/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7208</IssueID>
    <Title>Tabs: Make the editor title area a richer control</Title>
    <Description>Both with tabs enabled or disabled, the title area should become a richer area where you can:
- drag it to move the editor around
- right click to open a context menu with editor specific actions (pin, move, close others)
</Description>
    <CreatedDate>04/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7207</IssueID>
    <Title>Quick open: make editors of different kinds distinguishable</Title>
    <Description>Currently we show all kinds of editors in one quick open list (editor, diff editor, preview). This can make it hard to find the right one so we should play with showing icons in the list to distinguish them.
</Description>
    <CreatedDate>04/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7206</IssueID>
    <Title>Store editor view settings per group and not per file</Title>
    <Description>An editor can be opened in multiple groups and each should store its own view state.
</Description>
    <CreatedDate>04/06/2016</CreatedDate>
    <ClosedDate>08/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7190</IssueID>
    <Title>feature-request: pause extension like chrome plugin manager</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: oxs 10.11.4

In china, install extension is very slowly, sometime i want to pause one extension at some project
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>06/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7174</IssueID>
    <Title>put marker filter into panel header</Title>
    <Description>Instead of having a toggle button that reveal the filter widget we should just move into the panel header. That would make it not take extra space and still be easily discoverable.

&lt;img width="1027" alt="screen shot 2016-06-03 at 10 13 52" src="https://cloud.githubusercontent.com/assets/1794099/15772900/33712628-2974-11e6-8034-91abb8a56197.png"&gt;
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7173</IssueID>
    <Title>marker list should toggle when pressing the status bar again</Title>
    <Description>- press marker indication in status bar
- marker list shows
- press marker indication again
- ⚡ the list should hide
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7166</IssueID>
    <Title>Category for Extensions</Title>
    <Description>It would be really greate if you guys can add some categorys, filters , or if better - something like "extension store" page right inside VS Code. It's better when themes, snippets, and language supports ... get their own place.

something like editor Atom.
![Extension Store](http://www.noupe.com/wp-content/uploads/2015/01/die-einstellungen-von-atom.jpg)

Btw, really good job done guys :+1: 
</Description>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7159</IssueID>
    <Title>Feature Request: Open file with an extension scheme</Title>
    <Description>It would be nice to be able to open files from the Explorer with a TextDocumentContentProvider scheme from an extension, 

![image](https://cloud.githubusercontent.com/assets/7251102/15763190/349bfebc-28f0-11e6-9965-e6b99b84dd13.png)

It would then only be a matter of calling openTextDocument() with a different schema than file:

``` javascript
var fileUri = vscode.Uri.file(filePath);
var hexUri = vscode.Uri.parse(fileUri.toString().replace('file:', 'hexdump:'));
vscode.workspace.openTextDocument(hexUri).then(function (doc) {
    vscode.window.showTextDocument(doc);
}
```

It would be useful for opening binary files with extension like [vscode-hexdump](https://marketplace.visualstudio.com/items?itemName=slevesque.vscode-hexdump)
</Description>
    <CreatedDate>02/06/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7144</IssueID>
    <Title>Problems: tree should not be clickable when there are no problems</Title>
    <Description>&lt;img width="623" alt="screen shot 2016-06-02 at 16 32 30" src="https://cloud.githubusercontent.com/assets/900690/15754073/bdba2c72-28f6-11e6-8abe-2aeeaff16fb9.png"&gt;

Maybe just hide it if you show the message?
</Description>
    <CreatedDate>02/06/2016</CreatedDate>
    <ClosedDate>02/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7143</IssueID>
    <Title>Maximizing the editor in a snap setup causes the interface to not update</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10, Build 14352

Steps to Reproduce:
1. Snap a program to the right (I used Groove at minimum width)
2. Snap VS Code to top left
3. Enlarge the window down until Windows snaps it to the top of the taskbar
4. Clicking in the window appears to do nothing until you unsnap the app
5. This does not affect snapping to left, only corner snapping
</Description>
    <CreatedDate>02/06/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7131</IssueID>
    <Title>Clicking on the error does not pass focus to editor if editor already open</Title>
    <Description>- VSCode Version: alpha
- OS Version: os x

Steps to Reproduce:
1. have some errors, open error list
2. click on the error - notice how the focus nicely moves to the editor
3. click on the same error again - editor looses focus

I would expect that the behavior is the same if I click first, second or third time...
The issue is that the focus is not passed to editor if that editor is already opened
</Description>
    <CreatedDate>02/06/2016</CreatedDate>
    <ClosedDate>02/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7087</IssueID>
    <Title>Debug popovers do not work for class' fields/properties</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: OSX 10.11.5

When debugging a unity project, debug popovers do not seem to be working for a class' fields/properties, but do work for local variables:

Hovering over the local variable `schedule` correctly shows its value:
![image](https://cloud.githubusercontent.com/assets/1172479/15700510/9760d532-27aa-11e6-9308-cd8a61921d43.png)

Hovering over the private field `data` does nothing, but it's values do appear on the left panel:
![image](https://cloud.githubusercontent.com/assets/1172479/15700567/fdd69b62-27aa-11e6-8d19-055cf00ef430.png)

Sorry if duplicate!
</Description>
    <CreatedDate>01/06/2016</CreatedDate>
    <ClosedDate>01/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7083</IssueID>
    <Title>Option to auto-pin all</Title>
    <Description>I would like to have an option to auto-pin every editor.
An alternative naming is to disable preview tab.

My workflow is that I am used to having all the editors I navigate between in my history. I believe some of our users use it in the same way and with the june changes we might break their mental model.
Due to that we should introduce this setting such that we behave as before - nothing is preview, everything is pinned.
</Description>
    <CreatedDate>31/05/2016</CreatedDate>
    <ClosedDate>01/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7052</IssueID>
    <Title>integrated terminal cannot open if the folder is Chinese</Title>
    <Description>- VSCode Version: 1.2.0-insider
- OS Version: Win10

Steps to Reproduce:

as the title says
</Description>
    <CreatedDate>31/05/2016</CreatedDate>
    <ClosedDate>27/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>7036</IssueID>
    <Title>Chinese display problem in integrated terminal</Title>
    <Description>- VSCode Version: 1.2.0-insider
- OS Version: 10.0.10586

All Chinese characters huddle together when I open the terminal, and if I resize the window , the space will change too.

![vscode-problem](https://cloud.githubusercontent.com/assets/13583692/15661209/1d832158-2718-11e6-95c2-14ca88311c72.png)
</Description>
    <CreatedDate>31/05/2016</CreatedDate>
    <ClosedDate>21/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6787</IssueID>
    <Title>Allow to configure where editors open</Title>
    <Description> #6536
- see attach gif
- from a folder I have two files pinned
- from the folder I know preview each file and I don't understand why determines their sort order

![may-24-2016 14-45-43](https://cloud.githubusercontent.com/assets/1794099/15504268/76d33b1c-21be-11e6-8050-91a3acbaa124.gif)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6719</IssueID>
    <Title>Strange build behaviour building TypeScript from VSCode with Node v6 on Windows</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 7, Windows 10

Steps to Reproduce:

See https://github.com/yortus/repro-build-bug for full repro details and a cut-down project.

From the README:
## Bug Repro
### Problem Description
- Building a project with `Shift+Ctrl+B` puts some built files in the wrong location
### Environment
- **O/S**: Windows 7 and Windows 10
- **VSCode**: v1.1.1
- **Node.js**: v6.2
- **TypeScript**: v1.9.0-dev.20160524-1.0
### Steps to Reproduce
##### Project setup
1. `git clone https://github.com/yortus/repro-build-bug.git`
2. `cd repro-build-bug`
3. `npm install`
##### Baseline build/run (this should work fine)
1. Open a command prompt
2. Build from the command prompt using `npm run build`
   - should be no errors, and `/built` will contain built `.js` files
3. Run from the command prompt using `node .`
   - should be no errors, outputs `"Hello, World!"` to console
##### VSCode build/run (this should repro the bug)
1. Open the project folder in VSCode
2. Delete the `/built` directory created in the previous steps
3. Build from VSCode by pressing `Shift+Ctrl+B`
   - should be no errors, but one `.js` file is output to `/built` and the other to `/src`
4. Run from the command prompt using `node .`
   - should show an error `"cannot find module..."` because of the wrong placement of built files
### Further Notes
- Bug could not be reproduced on linux
- Bug could not be reproduced with node v4 or v5.
- Bug goes away if `"options": {"cwd": "&lt;absolute project path&gt;"}` is added to `.vscode/tasks.json`
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6684</IssueID>
    <Title>Integrated powershell terminal says it cannot load PSReadline module</Title>
    <Description>#143
- OS Version: Windows 10

Steps to Reproduce:
1. Launch terminal with default settings

![image](https://cloud.githubusercontent.com/assets/2193314/15478907/23deee2a-20d2-11e6-97b4-c4d96c85d5ad.png)
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>07/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5554</IssueID>
    <Title>Make pinning of editors configurable</Title>
    <Description>There is a desire to configure preview editors via settings:
- allow to always pin an editor when it opens
- allow to always pin a file when it opens from quick open

**Original Post**:
I would expect Ctrl+P opening a new editor (which it does) and then adding that file to working files (which it doesn't). Instead the file is just revealed in the tree view and I have to double click on it to add it.

Surely Ctrl+P should be viewed as a "I mean to edit" action and not "Just a quick glance"? Does anybody else share my view? 
</Description>
    <CreatedDate>20/04/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4668</IssueID>
    <Title>User markdown-it or remarkable to replace marked for markdown render</Title>
    <Description>Should we use [markdown-it](https://github.com/markdown-it/markdown-it) or [remarkable](https://github.com/jonschlinkert/remarkable) to replace marked for markdown preview?

It seems that marked had beed dead for a long time(see [issue](https://github.com/chjj/marked/issues/724)), and many issues and PRs are not responsed.

From above issue, it seems that markdown-it is better than remarkable. see [here](https://github.com/markdown-it/markdown-it#authors)

Such as, marked now not support table in lists, but markdown-it and remarkable does. 
</Description>
    <CreatedDate>25/03/2016</CreatedDate>
    <ClosedDate>15/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4418</IssueID>
    <Title>[feature request]Support vertical indent level line and renderWhitespace when selection</Title>
    <Description>1. Does Code support showing vertical indent level line?
2. now `editor.renderWhitespace` only have `true` or `false`, can we have a option to only render whitespace when selection?
</Description>
    <CreatedDate>18/03/2016</CreatedDate>
    <ClosedDate>29/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4364</IssueID>
    <Title>FileEditorInput: Holds on to all inputs that got created until file is deleted</Title>
    <Description>Somehow FILE_EDITOR_MODEL_CLIENTS keeps some clients although switching between files should dispose their associated inputs and clients too.
</Description>
    <CreatedDate>17/03/2016</CreatedDate>
    <ClosedDate>03/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2910</IssueID>
    <Title>marker view truncates text</Title>
    <Description>Please refer to this screenshot:

![vscode-truncated-text](https://cloud.githubusercontent.com/assets/1445483/12964156/985210d6-d01c-11e5-9171-f97e03aa341a.png)

It appears as though the command palette is truncating parts of the text, and likewise mousing over these messages does _not_ show a tooltip with all the text.

From what I can see, there is no way to see the entire text.

I believe that the proper behavior would either be to:
- show all the text with no action
- or mouse over the message and show a tooltip to display all the text
</Description>
    <CreatedDate>10/02/2016</CreatedDate>
    <ClosedDate>02/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2754</IssueID>
    <Title>Provide a setting to add each opened file as pinned editor</Title>
    <Description>There is  key bindings `⌘K Enter` to `Add to Working Files`. Is is possible to update some settings to add file to `Working Files` by default when the file is opened in editor?

Many a time I open files just for reference, and since I have not performed any action on the file, it does not get added to `Working Files`. 
If I switch to another file, and want to switch to the previous file, I got to search and open the file again.
If any opened file, would get added to `Working Files`, accessing it again, would be easy in large code bases.

Thanks!!
</Description>
    <CreatedDate>06/02/2016</CreatedDate>
    <ClosedDate>09/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2211</IssueID>
    <Title>Allow to bind keybindings for opening individual indexes of the opened editors</Title>
    <Description>The usual keystroke pattern on a Mac for referencing one of several windows (as might be open on the left Explorer/Working Files area) is cmd-1, cmd-2, etc, either from top to bottom or left to right. What would be the proper way to adjust my settings so that I accomplish this way of selecting windows in the Working Files area? 

Besides that, I'm not sure why choosing cmd-2 would open a second/duplicate window for the one I'm already on...
</Description>
    <CreatedDate>25/01/2016</CreatedDate>
    <ClosedDate>15/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1940</IssueID>
    <Title>VSCode freezes if run as a background process on Linux (0.10.6)</Title>
    <Description>I could start it easily from a terminal as a background process in Fedora 23 (using ampersand). However, after an upgrade to 0.10.6 (64bit), it freezes soon after opening. It was not the case in the previous versions.

I suspect it might be related to the git integration somehow. It freezes if a folder is under git source control. It does not freeze otherwise. When I run it with the verbose option, it stops right before prompting for my repository credentials (which it normally does if not frozen).

vscode:
Version 0.10.6
Commit a80232bbcfe8a5cdad1ebc98638673d9dcb02458
Date 2015-12-19T11:26:42.359Z
Shell 0.34.5
Renderer 45.0.2454.85
Node 4.1.1

git:
2.5.0

Normal start-up (with a git repository address being changed):

``` text
bash: cannot set terminal process group (-1): Inappropriate ioctl for device
bash: no job control in this shell
### VSCode main.js ###
/home/rbazhenov/Software/VSCode-linux-x64/resources/app { pathArguments: [ '/home/rbazhenov/Projects/ec+' ],
  programStart: 0,
  workers: -1,
  enablePerformance: false,
  verboseLogging: true,
  debugPluginHostPort: undefined,
  debugBrkPluginHost: undefined,
  logPluginHostCommunication: false,
  firstrun: false,
  openNewWindow: false,
  openInSameWindow: false,
  gotoLineMode: false,
  pluginHomePath: undefined,
  pluginDevelopmentPath: undefined,
  pluginTestsPath: undefined,
  disablePlugins: false }
Lifecycle#unload() 1
IPC#vscode-workbenchLoaded
Password for 'MYGITREPOADDRESS':
```

Failed start-up (freezes after opening):

``` text
bash: cannot set terminal process group (-1): Inappropriate ioctl for device
bash: no job control in this shell
### VSCode main.js ###
/home/rbazhenov/Software/VSCode-linux-x64/resources/app { pathArguments: [ '/home/rbazhenov/Projects/ec+' ],
  programStart: 0,
  workers: -1,
  enablePerformance: false,
  verboseLogging: true,
  debugPluginHostPort: undefined,
  debugBrkPluginHost: undefined,
  logPluginHostCommunication: false,
  firstrun: false,
  openNewWindow: false,
  openInSameWindow: false,
  gotoLineMode: false,
  pluginHomePath: undefined,
  pluginDevelopmentPath: undefined,
  pluginTestsPath: undefined,
  disablePlugins: false }
Lifecycle#unload() 1
IPC#vscode-workbenchLoaded
```
</Description>
    <CreatedDate>12/01/2016</CreatedDate>
    <ClosedDate>01/06/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6961</IssueID>
    <Title>Some install-extension hang forever</Title>
    <Description>- VSCode Version: alpha
- OS Version: OS X

Steps to Reproduce:
1. code-alpha --install-extension lukehoban.go
2. hangs forever

Also for code-alpha --install-extension 4tron.angular-material-snippets

Not sure if somethign is wrong on the marketplace
</Description>
    <CreatedDate>27/05/2016</CreatedDate>
    <ClosedDate>27/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6944</IssueID>
    <Title>Integrated terminal sometimes scrolls right after paste</Title>
    <Description>- VSCode Version: 1.2.0-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. Open integrated terminal
2. Type git clone 
3. Right click just to the right of the typing cursor
4. Paste https://github.com/Microsoft/vscode-smoketest-express.git 

![image](https://cloud.githubusercontent.com/assets/12900364/15592020/61d125ba-2355-11e6-9dad-1b8cc1fe6744.png)

After scrolling back using the left arrow on the keypad, you cant get all the way back:

![image](https://cloud.githubusercontent.com/assets/12900364/15592051/8a311952-2355-11e6-8c9f-296dc17fb65c.png)
</Description>
    <CreatedDate>26/05/2016</CreatedDate>
    <ClosedDate>27/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6906</IssueID>
    <Title>Jump to error by double clicking on message in output window does not work</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: windows 7

Steps to Reproduce:
1. My project is in C language.
2. Root folder structure:
   ---+.vscode

---prj

------(this is where build starts)

---headers

------(only *.h. There are other folders with header files)

---source

------(only _.c. There are other folders with source files)
3. Error message structure:
    ..\source&lt;file&gt;.c(&lt;line&gt;): error: &lt;message&gt;
    example:
    ..\source\serial_commands.c(511): error:  #65: expected a ";"
    task.json :
    "problemMatcher": {
     "owner": "c",
     "fileLocation": ["relative", "${workspaceRoot}"],
     "pattern": {
     "regexp": "^.{3}(._c|._h)\((\d+)\):\s+(error|warning):._:\s+(.+)$",
        "file": 1,
        "line": 2,
        "severity": 3,
        "message": 4
    }
   }
This captures errors and warnings.
4. When error occurs double click on message to jump to error. That does not work:/
</Description>
    <CreatedDate>26/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6899</IssueID>
    <Title>Don't debounce searches in the type-to-filter-menus</Title>
    <Description>- VSCode Version: Version 1.1.1 (1.1.1)
- OS Version: OSX

Steps to Reproduce:
1. Open any menu, like the find files menu, with ⌘P
2. Type the name of the file

Expected:

The file should show up almost instantly, as I'm typing, since after the first 3 keystrokes it should match, **as I'm typing**

Actual:

I have to stop typing and wait 500ms - 1000ms for the file to show up. It looks like you're debouncing the search function from the menu. This makes the editor feel sluggish. It should be based on an interval instead.
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6877</IssueID>
    <Title>Visual studio code crashes every 2 mins</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: win 10 pro, version 1511, os build 10586.318

Steps to Reproduce:
1. Start visual studio
2. open folder
3. wait

Get an error msg, window has crashed We are sorry.....  You can reopen... 
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6875</IssueID>
    <Title>Intellisense Makes Suggestions When Writing Comments</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: OSX El Capitan 10.11.4

Steps to Reproduce:
1. Working on a C# file, add /\* ... */ to make a block comment or // to make an inline comment
2. Start typing a comment

Intellisense suggest hints based on what I'm typing in the comment. I don't find this helpful, in fact it's distracting and possibly a somewhat wasteful use of resources.
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6865</IssueID>
    <Title>Hover misses border in Dark theme</Title>
    <Description>![image](https://cloud.githubusercontent.com/assets/22350/15536515/eeb16f06-2271-11e6-80d1-011f0bb2e78c.png)
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6861</IssueID>
    <Title>Have to delete twice to remove a multi-level folder containing JavaScript/TypeScript files</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10 10586.318

Steps to Reproduce:
1. Open a folder.
2. Create file `f/f/f.js`.
3. Delete top folder `f`.
   
   Then it prompts a message asking whether I would want to move it to recycle bin.
4. Click "Move to Recycle Bin".
   
   Explorer prompts "File Access Denied".
5. Click "Continue" (to gain administrator permission), and "OK" on UAC prompt.
   
   Code prompts "Failed to move `f` to the trash".
6. Delete it again or retry in anyway, success.
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6850</IssueID>
    <Title>Allow terminal to be relaunched without restarting VS Code when it exits with a non-zero exit code</Title>
    <Description>#6683 fix means the integrated terminal cannot be restarted after the process errors without reloading the window.
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>27/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6849</IssueID>
    <Title>Whitespace found via regex find is not highlighted throughout the document</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 10 Enterprise

Steps to Reproduce:
1. Open a large document with many lines and whitespace, such as a large code file.
2. Use find dialog with regex enabled to search for "\s".
3. Whitespace will be highlighted, but only on the first or second screen of text. As you scroll down the highlight will terminate.
</Description>
    <CreatedDate>25/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6846</IssueID>
    <Title>Terminal scrolls content to the left without a reliable way of recovering</Title>
    <Description>OS: Windows

1) open the built-in terminal 
2) run command that produces a bunch of output such as 'npm list' or cat a file
3) try to scroll up to reveal text that was already scrolled out of sight
-&gt; content is scrolled to the left (and then gets stuck)
-&gt; there is no reliable way to get the terminal back into a 'normal' state; sometime Enter works, sometimes not

Here is a [screen recording](https://www.dropbox.com/s/y0x7m77ys8xne3v/scroll-issue.mov?dl=0).
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6826</IssueID>
    <Title>Presented intellisense for variable definitions is not useful</Title>
    <Description>#6656

![image](https://cloud.githubusercontent.com/assets/2193314/15514959/85f3bb6c-21a0-11e6-8df9-59be4980c1dd.png)

Expanding add the border snippet:

![image](https://cloud.githubusercontent.com/assets/2193314/15514987/a654bece-21a0-11e6-939f-8654e8107d1a.png)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6825</IssueID>
    <Title>Expanding a CSS variable within var() sometimes add another var inside</Title>
    <Description>#6656

This is the most reliable repro I found:

![image](https://cloud.githubusercontent.com/assets/2193314/15514901/3ccf3ad8-21a0-11e6-9109-a54f88fbf344.png)

![image](https://cloud.githubusercontent.com/assets/2193314/15514912/477ad53c-21a0-11e6-9e80-a901f911250a.png)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6805</IssueID>
    <Title>code-alpha --install-extension: How to know the id</Title>
    <Description>Testing #6099

When installing an extension with `code-alpha --install-extension` I need to pass the id that includes publisher and name.
It's not easy to find that id out. Especially the publisher part is not mentioned on the marketplace page itself: https://marketplace.visualstudio.com/items?itemName=donjayamanne.python
It is in the URL of that page though.

It would be good if it where as easy as described here
![image](https://cloud.githubusercontent.com/assets/6461412/15506189/fd130920-21c6-11e6-8c12-6a2785110bd7.png)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6799</IssueID>
    <Title>code-alpha --install-extension lets me install the same extension twice</Title>
    <Description>Testing #6099

```
&gt; code-alpha --install-extension aeschli.vscode-css-formatter
Found 'aeschli.vscode-css-formatter' in the marketplace.
Installing...
Extension 'aeschli.vscode-css-formatter' v0.0.2 was successfully installed!
&gt; code-alpha --install-extension aeschli.vscode-css-formatteR
Found 'aeschli.vscode-css-formatteR' in the marketplace.
Installing...
WARNING: Promise with no error callback:14
{ exception: null,
  error: [ , , [ [Object] ] ],
  promise:
   { _oncancel: null,
     _nextState: null,
     _state:
      { name: 'error',
        enter: [Function],
        cancel: [Function: r],
        done: null,
        then: null,
        _completed: [Function: r],
        _error: [Function: r],
        _notify: [Function: h],
        _progress: [Function: r],
        _setCompleteValue: [Function: r],
        _setErrorValue: [Function: r] },
     _listeners: null,
     _value: [ , , [Object] ],
     _isException: false,
     _errorId: 14,
     done: [Function],
     then: [Function] },
  handler: undefined,
  id: 14,
  parent: undefined }

C:\Program Files (x86)\Microsoft VS Code Alpha\resources\app\out\vs\code\node\cli.js:5
enter:function(e){if(e.done=z.prototype.done,e.then=z.prototype.then,e._listeners)for(var t,n=[e];n.length;)t=n.pop(),t._state._notify(t,n);e._setState(I)},cancel:r,done:null,then:null,_completed:r,_error:r,_notify:h,_progress:r,_setCompleteValue:r,_setErrorValue:r},I={name:"error",enter:function(e){e.done=z.prototype.done,e.then=z.prototype.then,e._cleanupAction()},cancel:r,done:null,then:null,_completed:r,_error:r,_notify:h,_progress:r,_setCompleteValue:r,_setErrorValue:r};var H,V=t.Class.define(null,{_listeners:null,_nextState:null,_state:null,_value:null,cancel:function(){this._state.cancel(this),this._run()},done:function(e,t,n){this._state.done(this,e,t,n)},then:function(e,t,n){return this._state.then(this,e,t,n)},_chainedError:function(e,t){var n=this._state._error(this,e,a,t);return this._run(),n},_completed:function(e){var t=this._state._completed(this,e);return this._run(),t},_error:function(e){var t=this._state
,,Error: ENOTEMPTY: directory not empty, rmdir 'C:\Users\martinae\.vscode-alpha\extensions\aeschli.vscode-css-formatter-0.0.2\node_modules\js-beautify'
```
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6796</IssueID>
    <Title>code-alpha --install-extension errors are in JSON</Title>
    <Description>Testing #6099

```
&gt; code-alpha --install-extension vscode-css-formatter
{ responseText: '{"$id":"1","innerException":null,"message":"The query supplied was not valid, one of the filters contained an error. The fully qualified name MUST contain a \'.\' between the publisher and extension names.","typeName":"Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidExtensionQueryException, Microsoft.VisualStudio.Services.Gallery.WebApi","typeKey":"InvalidExtensionQueryException","errorCode":0,"eventId":3000}',
  status: 500,
  getResponseHeader: [Function],
  readyState: 4 }
```

Having the error as JSON is uncommon. Should be a human readable string.
If structured error messages are useful, maybe add a extra option to the command that defines the resonse format.
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6790</IssueID>
    <Title>Terminal: Can't press Escape key</Title>
    <Description>Testing #6654

The escape key surfaces to the workbench, closing the terminal. This is bad in situations where commands really need the escape key, such as vim.
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6779</IssueID>
    <Title>multiple close actions in Open Editors section</Title>
    <Description>#6536

![may-24-2016 12-46-41](https://cloud.githubusercontent.com/assets/1794099/15501404/9a927d4e-21ad-11e6-89a8-701a7fd2442c.gif)

sometimes when dragging an item within a group section the close actions don't hide
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6775</IssueID>
    <Title>Can not read property then of undefined</Title>
    <Description>#6655
- VSCode Version: alpha
- OS Version: os x

Steps to Reproduce:
1. open .html file
2. find all references -&gt; notice exception

![screen shot 2016-05-24 at 12 18 28](https://cloud.githubusercontent.com/assets/1926584/15500606/b9b514c4-21a9-11e6-91f7-de607cd2f902.png)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6769</IssueID>
    <Title>multi-cursor editing stops working on ubuntu</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Ubuntu 16.04

alt+click and column selection "hold shift" + "alt" + "drag" stopped working gradually, now i can't use these at all.
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6765</IssueID>
    <Title>[less] grammar does not highlight variables correctly</Title>
    <Description>``` less
:root {
  --main-bg-color: block;

}
```

![image](https://cloud.githubusercontent.com/assets/6461412/15499613/6b4756a2-21a5-11e6-9ae6-c2e0db6737c2.png)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6747</IssueID>
    <Title>Change file association is doing too many things at once and it is not clear what's going on</Title>
    <Description>Testing #6657 

IMHO the experience is bad. Clicking this action pops over two message boxes and does an edit in an untracked file that gets autosaved immediately.

IMHO this should show a preview of what it will do before jumping in and doing it and not pop over 2 message boxes! Preferably it would select the new added text.

![association-insane](https://cloud.githubusercontent.com/assets/5047891/15499131/d515a942-21a2-11e6-8790-fdec374a61eb.gif)
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6736</IssueID>
    <Title>TypeError: Cannot read property 'getLineCount' of null</Title>
    <Description>Found this stack while pressing escape from a intellisense window, unfortunately minified:

```
TypeError: Cannot read property 'getLineCount' of null
    at e.computeSync (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:64:29584)
    at e._triggerSyncComputation (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:37:14837)
    at e.runner (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:37:13805)
    at e.onTimeout (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:32:18294)
```
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6715</IssueID>
    <Title>file associations action should only open settings.json file</Title>
    <Description>#6712
- open a file
- run the `File Associations` actions
- two editors open: (1) LHS are all settings, (2) RHS is the file that actually has changes
- I would be better if I can keep my current file and only see the settings file that has changed
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6712</IssueID>
    <Title>file associations should do the full thing</Title>
    <Description>#6657

Instead of adding only the `files.associations` part to the config, the _Configure File Associations_ action should show a seconds quick pick which allows me to select the language do all modification. Optionally it could reveal the changes it made.
</Description>
    <CreatedDate>24/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6691</IssueID>
    <Title>Cannot use both dotnet and gulp tasks</Title>
    <Description>- VSCode Version: 1.1
- OS Version: Linux/Mint

Steps to Reproduce:
1. Install DotNet Core RC2 &amp; upgrade generator-aspnet
2. Scaffold a new Web Application
3. Open app in VS Code 1.1.1
4. Type F1, followed by task, select 'Run Task'

Expected:
List of Gulp tasks

Actual:
Build

Notes:
tasks.json is set up for "command": "dotnet".  If I delete this file and configure a new one for Gulp, I can enumerate my Gulp tasks, but F5 no longer works.
The documentation and file format seem to indicate that there's no way to configure _two_ task runners, so I see no way to run my DotNet Core app _and_ use Gulp.

I plan to use React.  I don't see how I can accomplish this w/o access to a task runner other than dotnet.  I _must_ configure both dotnet and gulp somehow.
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6682</IssueID>
    <Title>Dark theme: hover no longer has a border</Title>
    <Description>On Mac in dark + theme (standard) the hover no longer has a background shadow or border, making it indistinguishable from the rest.
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6664</IssueID>
    <Title>Hover lost border which makes it very hard to distinguish from normal text</Title>
    <Description>- VSCode Version: alpha
- OS Version: Windows 10

See attached screen shot. I was hovering modesId. The hover looks like a normal text editor line.

![capture](https://cloud.githubusercontent.com/assets/1931590/15470975/e6833384-20f3-11e6-9a58-6290f1961d53.png)
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6663</IssueID>
    <Title>Equal text highlighting over multiple rows (like Sublime)</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 7

Steps to Reproduce:
1. Open this file in VSCode: https://gist.github.com/juristr/0a3a294ce70660f59ba4265f86699fda
2. Select a multi-line code block that from the `activateBaseMap(..)` function that has an identical occurrence in the `onChange(...)` function, like.
   
   ``` javascript
   if (basemap !== vm.emptyBaseMap) {
     vm.emptyBaseMap.olNode.visible = false;
   }
   ```
3. Press `Ctrl+D` (or `Cmd+D`) to enter multi-cursor mode. Actually also just highlighting the line should out-of the box highlight the same multi-line code block in other parts of the file as well.

**Outcome:**

![multiline-vscode](https://cloud.githubusercontent.com/assets/542458/15469884/73b1ff30-20ed-11e6-8d38-19978fa5f38d.gif)

**Expected:**

This is how Sublime does it on the same JavaScript file.
![multiline-sublime](https://cloud.githubusercontent.com/assets/542458/15469932/9e321d76-20ed-11e6-845d-4250dece1cde.gif)
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6660</IssueID>
    <Title>Test trace option for Linter/language protocol</Title>
    <Description>Test for #xxx:
- [ ] Windows - **@xxxx**
- [ ] OS X - **@xxxx**
- [ ] Linux - **@xxxx**

Verify....
</Description>
    <CreatedDate>23/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6612</IssueID>
    <Title>Git console is super buggy</Title>
    <Description>- VSCode Version:

1.1.1
- OS Version:

Windows 7

Scenario 1:

We have git hooks installed (a mix of #!/bin/sh and #!/bin/node). The printout messages from these do not show in the VSCode console, only when running from command line (in this case, CMD)

Steps
1. Try to commit something with an improper commit message 
2. VSC says the commit failed, offers to show console output for git. Console does not contain output message.

Scenario 2:

We use git pull rebase by default (git config --global pull.rebase true). When Syncing or pulling, VSC will show an error if it didn't succeed. When you show the console output for the error, it does not contain the output message.

Steps
1. Try to rebase after all your commits are in
2. VSC says the action failed, offers to show console output for git. Console does not contain rebase output

Scenario 3:

All git console output just randomly stops sometimes (sometimes totally blank) and won't fix until restarting the editor. Dies again shortly after after usually. It may be dying from one of the above scenarios, however.

Summary:

In all scenarios, git from the command line produces output just fine.
</Description>
    <CreatedDate>21/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6601</IssueID>
    <Title>Some problems of personal habits</Title>
    <Description>- VSCode Version:
- OS Version:1.1

Steps to Reproduce:
1. Is it wrong to be here?

![22](https://cloud.githubusercontent.com/assets/10474968/15446429/51b9f496-1f53-11e6-87f0-a1e8bcf2ce67.png)
1.  Can you add an item to the top that you can manage to open the file?

![55](https://cloud.githubusercontent.com/assets/10474968/15446430/59e8720a-1f53-11e6-8a34-cdfe88db1e5d.png)
1. If you can increase the settings will be left column can be hidden away?

![66](https://cloud.githubusercontent.com/assets/10474968/15446431/61c18958-1f53-11e6-9a1e-6db6d67931f9.png)

Vscode is a good editor, but I have a habit of being forced to correct it.
I like some of ui.'s sublime
Hope vscode can also have these UI
</Description>
    <CreatedDate>21/05/2016</CreatedDate>
    <ClosedDate>22/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6570</IssueID>
    <Title>Move history service functionality into stacks model</Title>
    <Description>
    </Description>
    <CreatedDate>20/05/2016</CreatedDate>
    <ClosedDate>27/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6540</IssueID>
    <Title>Unable to open a file with right click and "open with"&gt; "Visual Studio Code" in a folder with spaces in the name.</Title>
    <Description>- VSCode Version: 1.1.1-1463146452
- OS Version: Ubuntu 16.04 LTS
- Gnome Nautilus  version: 3.14.3

Steps to Reproduce: Inside a folder with spaces in the name (exemple: "my folder"), try to open the file with "right click" &gt; "open with" &gt; "Visual Studio Code". 
1. The original file
   ![1](https://cloud.githubusercontent.com/assets/677007/15396595/cf264768-1daa-11e6-8c34-57668e30f546.png)
2. Using "Open with"
   ![my folder_002](https://cloud.githubusercontent.com/assets/677007/15396615/db9d7250-1daa-11e6-8819-29176f801bf9.png)
3. The result with Visual Studio Code.
   ![my - visual studio code_002](https://cloud.githubusercontent.com/assets/677007/15396637/ee0d4172-1daa-11e6-8497-6cff48993780.png)

If the file was in a folder with name without space, the file would have been opened normally.
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>20/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6532</IssueID>
    <Title>Open file (Ctrl+O) should use directory of currently edited file as starting point</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: Windows 7 SP1

Steps to Reproduce:
1. Open folder in the VSCode with many subdirectories
2. Navigate to some file in sub-sub directory and start to edit it
3. Press Ctrl+O to open other file from the same directory of currently edited file
4. But open file dialog starts with something really different directory, probably with directory I last used Ctrl+O with.
5. That's counter-intuitive and in usual Visual Studio it works the way I expect it to behave.

Should I enable some hidden config rule to get desired behaviour?
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6528</IssueID>
    <Title>select text - equals are highlighted only to 1000 rows</Title>
    <Description>- VSCode Version:1.1.1
- OS Version: Windows 7 Pro SP1

Steps to Reproduce:
1. Select a text at the editor
2. If you have 2000 rows with equal texts then the one selected, those are highlighted only to 1000 row. The other ones are not highlighted .
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6517</IssueID>
    <Title>only CSharp extension cannot install.</Title>
    <Description>- VSCode Version:
  1.1.1
- OS Version:
  RHEL 7.2

Steps to Reproduce:
1.  type `Ctrl+P` and `ext install csharp`
2. The status bar at the left bottom remains "installing" status. It doesn' t finish for several hours.

I get into this situation only csharp extension. I can install other extensions such as go, python.
I have a workaround that I install csharp extension other Linux distro machine and copy ~/.vscode/extensions/ms-vscode.csharp-1.0.11 to RHEL machine. 
However, I'd like to know the root cause. Could you help me?
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6507</IssueID>
    <Title>After opening a file it should remain in working files even though its not edited</Title>
    <Description>A lot of times you want to look at a file for reference e.g the generated js while you modify ts.

The working files tend only only keep files with modification. It should behave like sublime where it stays open
</Description>
    <CreatedDate>19/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6503</IssueID>
    <Title>No apparent way to know whether an output channel is shown</Title>
    <Description>- VSCode Version: 1.1.0
- OS Version: Windows

For some reason (https://github.com/bbenoist/vscode-shell/issues/2), I need to know whether an output channel instance is shown or not.

However, I see no way to get the information with current vscode API.

How can I obtain it from my extension?
</Description>
    <CreatedDate>18/05/2016</CreatedDate>
    <ClosedDate>19/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6497</IssueID>
    <Title>Feature request: CommandOptions at task level in tasks.json</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: any

CommandOptions is set only at the top level. 
Feature request to make that CommandOptions per task level. So that cwd can be set based on the task. 
</Description>
    <CreatedDate>18/05/2016</CreatedDate>
    <ClosedDate>19/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6444</IssueID>
    <Title>Can't modify each file when comparing two different files</Title>
    <Description>- VSCode Version: 1.1.0-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. In the Explorer viewlet, right click on a file &gt; Select for Compare
2. Right click another file &gt; Compare with 'selected.js'
3. Try to modify the first file (left side compare window)

It makes sense when comparing the changes of a single file, but when two different files are being compared you should be able to modify the first opened one.
</Description>
    <CreatedDate>17/05/2016</CreatedDate>
    <ClosedDate>18/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6419</IssueID>
    <Title>Code Formating : HTML does not work as expected</Title>
    <Description>- VSCode Version: 1.1.1-Insider
- OS Version: Win 10

Steps to Reproduce:
1. Copy HTML code and try ALT+SHIFT+F
2. Does not work properly.

```
&lt;h2 class="project_header section_header"&gt;
                    &lt;a class="project_link" href="#"&gt;&lt;span&gt;Shopping&lt;/span&gt;
                    &lt;/a&gt;
                    &lt;div class="right_task_actions"&gt;
                        &lt;a href="#"&gt;&lt;img class="cmp_share_project" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
                        &lt;/a&gt;
                        &lt;a href="#"&gt;
                            &lt;img class="cmp_task_actions icon" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
                            &lt;/a&gt;
                        &lt;/div&gt;
                &lt;/h2&gt;
```

Copy/Paste above code and try to press, Format Code shortcut, nothing happens.

Expected behavior is that span would indent below in "a" tag. also that div's and a's ending tags will align but nothing happens.

What would I expect is following:

```
&lt;h2 class="project_header section_header"&gt;
        &lt;a class="project_link" href="#"&gt;
               &lt;span&gt;Shopping&lt;/span&gt;
        &lt;/a&gt;
        &lt;div class="right_task_actions"&gt;
               &lt;a href="#"&gt;
                       &lt;img class="cmp_share_project" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
               &lt;/a&gt;
               &lt;a href="#"&gt;
                       &lt;img class="cmp_task_actions icon" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
               &lt;/a&gt;
         &lt;/div&gt;
&lt;/h2&gt;
```

I have tried also CTRL+SHIFT+X to delete spaces and then do a format again but nothing happened.

Format will not work on following code as well:

```
&lt;h2 class="project_header section_header"&gt;
&lt;a class="project_link" href="#"&gt;&lt;span&gt;Shopping&lt;/span&gt;
&lt;/a&gt;
&lt;div class="right_task_actions"&gt;
&lt;a href="#"&gt;&lt;img class="cmp_share_project" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
&lt;/a&gt;
&lt;a href="#"&gt;
&lt;img class="cmp_task_actions icon" src="/app/app/assets/76084e29cb2cf72b320e888edc583dfb.gif" height="16" width="26"&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;/h2&gt;
```

What is the logic behind code formatting, is there anything we can do by config?
</Description>
    <CreatedDate>17/05/2016</CreatedDate>
    <ClosedDate>23/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6409</IssueID>
    <Title>upgrade failed</Title>
    <Description>- VSCode Version: v1.1.0
- OS Version: Windows 7

Steps to Reproduce:
1. Check for updates
2. When network connection is bad, it will run the corrupted installer. I think it didn't check the downloaded installer's checksum.
</Description>
    <CreatedDate>17/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6398</IssueID>
    <Title>Open in Terminal with iTerm on Mac</Title>
    <Description>- VSCode Version: 1.1.1
- OS Version: 10.11.4

Steps to Reproduce:
1. Use iTerm2 version: 2.1.4
2. in iTerm2, Make iTerm2 the default terminal: Ctrl-Shift-Cmd-\
3. in VsCode: Right-click on a Folder, Select: Open in Terminal

The terminal opens in the last folder that iTerm was used and not the selected one.
</Description>
    <CreatedDate>16/05/2016</CreatedDate>
    <ClosedDate>16/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6378</IssueID>
    <Title>安装插件时,在搜索或下载插件页面好慢.切换到另外窗口.就马上把安装插件界面给关了</Title>
    <Description>- VSCode Version:
- OS Version: windows 1.1

Steps to Reproduce:
1. Ctrl+p后.搜索某个插件
2. 比喻填上ext install crane 会进行等待差不多1分钟,才能显示出来插件列表.
   3,在这个等待过程中.界面不能失去焦点.不然就取消了插件的下载或安装.
   这个体验很不好.希望能在后台自动下载安装.可以最小化或切换到另外的程序或窗口.避免长时间等待...
</Description>
    <CreatedDate>15/05/2016</CreatedDate>
    <ClosedDate>16/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6368</IssueID>
    <Title>Allow multiple extensions to be installed/uninstalled through the CLI</Title>
    <Description>By the looks of the code this is partially implemented, not sure if it's just incomplete or a bug.

Expected syntax:

``` bash
code --install-extension ext1 ext2
```
</Description>
    <CreatedDate>14/05/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6362</IssueID>
    <Title>editor.insertSpaces setting ignored based on status bar setting</Title>
    <Description>- VSCode Version: 1.1.0-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. Open settings
2. Add "editor.insertSpaces": false
3. Open a file and press tab

Spaces are still being inserted if your status bar setting is set to spaces.
</Description>
    <CreatedDate>13/05/2016</CreatedDate>
    <ClosedDate>16/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6355</IssueID>
    <Title>VSCode terminating without any error or warning when launching with keyboard shortcut key.</Title>
    <Description>- VSCode Version:1.1.0-alpha
- OS Version: Windows10

Steps to Reproduce:
1. Launch VS code 
2. Open keybinding.json to add keyboard shortcut to launch developer tool as below:
    {"key": "CTRL+F12",
    "command": "workbench.action.toggleDevTools",
    "when": "editorTextFocus"
    }
3. Try to launch developer tool by pressing CTRL+F12.
4. Repeat step 3 multiple times and verify app behavior.

Actual: Developer tool launching successfully but with few quick user's action to launch developer tool VScode is closing without any error or warning.
Expected: Application should not be closed.
![keybindingissuewithdevtool](https://cloud.githubusercontent.com/assets/17735796/15261395/150ac4f0-1911-11e6-8de3-0429cc6a3d26.gif)

Tried on MAC and getting below warning message:

&lt;img width="457" alt="keybindingkeyboardshortcut" src="https://cloud.githubusercontent.com/assets/17735796/15262710/e4af76d6-1918-11e6-8f9e-265566af6a84.png"&gt;
</Description>
    <CreatedDate>13/05/2016</CreatedDate>
    <ClosedDate>18/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6348</IssueID>
    <Title>Disk name in ${workspaceRoot} is lowercase may result in a bug related to node6, webpack and babel</Title>
    <Description>- VSCode Version: v1.1
- OS Version: windows 10
- nodejs Version: v6

Steps to Reproduce:
( a little bit complicate)
1. mkdir try-bugs &amp;&amp; cd try-bugs 
2.npm install -g vue-cli
2.vue init webpack
3.npm install
4.set up a task in task.json, whose command is `npm`, args is `["run", "build"]`
5. press `contrl + shift + b` to build the project
6.then babel of webpack does not work in the right way
![image](https://cloud.githubusercontent.com/assets/3315274/15247779/e2c30e2a-1948-11e6-85ef-065a9c4bb524.png)

Further description and guess:
I have install a extension of vscode called [new-cmd ](https://marketplace.visualstudio.com/items?itemName=odonno.new-cmd), which can enable you to open a new terminal from current work space directory by typing command `cmd` after pressing `f1` in vscode.
If I open a terminal using this extension and then run `npm run build` in this terminal, it will show me the same bug as run the build task from vscode.
![image](https://cloud.githubusercontent.com/assets/3315274/15247757/cc4b29d4-1948-11e6-98da-07de74a8b956.png)

However, if I open a terminal manually by right click and run the same command, everything goes well.
![image](https://cloud.githubusercontent.com/assets/3315274/15247842/53734e96-1949-11e6-9f70-fee948c954c0.png)

I notice that there is one difference between the two terminal is that the disk name. The disk name in former terminal is `d:\` while the later one is `D:\`. 
In the project, from one hand, there are some code, the config of webpack specifically, related to `path.join(__dirname, ...)`, which will generate an absolute path to files begin with `D:\`. From the other hand, there are some other code use relative path to locate file, which will result in path to file begin with `d:\`.
I wonder whether this caused my problem or not.
By the way, if I repeat the process with node5, the bug disappear.
</Description>
    <CreatedDate>13/05/2016</CreatedDate>
    <ClosedDate>22/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6341</IssueID>
    <Title>html formatting (shift + alt+ f) not working with certain tags</Title>
    <Description>The formatting on a .html file is not working if there is for example a `&lt;template&gt;` tag in it:

```
&lt;template&gt;
    &lt;require from="valueConverters"&gt;&lt;/require&gt;
    &lt;div class="artistView" if.bind="!loading"&gt;
        &lt;div class="row"&gt;
            &lt;div class="col-xs-12"&gt;
                &lt;h3&gt;${artist.name}&lt;/h3&gt;
            &lt;/div&gt;
        &lt;/div&gt;
                        &lt;/div&gt;
&lt;/template&gt;
```

Without the &lt;template&gt; tag, the formatting is working. Please support any tags here. Thanks.
- VSCode Version: 1.1.0
- OS Version: Win10

Steps to Reproduce:
1. Copy my code
2. paste it in VSCode
3. press shift + alt + f
4. code will not be formatted &lt; --- wrong, should be formatted
5. remove the &lt;template&gt; tags
6. press shift + alt + f
7. code will be formatted
</Description>
    <CreatedDate>13/05/2016</CreatedDate>
    <ClosedDate>13/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6313</IssueID>
    <Title>Ctrl + Open Recent could open the folder in a new Window</Title>
    <Description>- VSCode Version: 1.1.0
- OS Version: any

I constantly see myself doing the following two actions:
- new window
- then select a recently opened folder.

Would either be cool to have a special menu entry for this, make open recent configurable to create a new window or to support Ctrl + Open Recent which does both (my preferred solution)
</Description>
    <CreatedDate>12/05/2016</CreatedDate>
    <ClosedDate>17/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6305</IssueID>
    <Title>save file shortcuts repeat</Title>
    <Description>- VSCode Version:1.1.0
- OS Version:Windows 10 64Bit

Steps to Reproduce:
1. hot key is same  'S' ,look this image

![qq 20160512093417](https://cloud.githubusercontent.com/assets/6504537/15201576/1bf69380-1825-11e6-86b4-a494e8b41ee4.png)
1. 
</Description>
    <CreatedDate>12/05/2016</CreatedDate>
    <ClosedDate>12/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6292</IssueID>
    <Title>incorrect command line help shown for uninstall-extension</Title>
    <Description>- VSCode Version:1.1.0-alpha
- OS Version:Windows 10

Steps to Reproduce:
1. Run code-alpha --help

Shown as "list-extensions", should be "uninstall-extension"

```
 --list-extensions     List the installed extensions.
  --install-extension &lt;extension&gt;
                        Installs an extension.
  --list-extensions &lt;extension&gt;
                        Uninstalls an extension.
```

See https://github.com/Microsoft/vscode/commit/b455db9f356a9e395aefa44d9b3f5597c67b7aa0#diff-e255a28340d4f20061d11494e99bd60b
</Description>
    <CreatedDate>11/05/2016</CreatedDate>
    <ClosedDate>11/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6274</IssueID>
    <Title>Autocomplete text overlapping</Title>
    <Description>- VSCode Version: 1.1.0
- OS Version: Windows 10

Steps to Reproduce:
1. Open **User Settings** file `settings.json`
2. Suppose you are going to add a new setting
3. Press `ctrl` + `space` and scroll to `editor.lineHeight`

![text-overlapping-vscode](https://cloud.githubusercontent.com/assets/3720424/15168974/1e9acb76-16fc-11e6-96bf-48f2ad3ff187.gif)
</Description>
    <CreatedDate>11/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6270</IssueID>
    <Title>Not getting any message in the output console when getting issue with git operation.</Title>
    <Description>- VSCode Version: 1.1.0-alpha
- OS Version: Windows10
  Steps to Reproduce:
- launch app and open any folder which contains smoke test project. 
- Click on "Initialize Git repository" to map.
- Click on more icon (...) and perform operation "Undo latest commit".
- Verify error message should be displayed with below text.
  Note:  This is expected as folder is not mapped with any GIT repo.
  "There was an issue running a git operation. Please review the output or use a console to check the state of your repository."
- Click on "show output" button and verify error message in the console output for git.

Actual: There is no error message showing up in the console output for GIT.
Expected: User should get info in the output window.
![gitoutputissue](https://cloud.githubusercontent.com/assets/17735796/15166875/14f39928-16d8-11e6-8a0c-f328aef63aa8.gif)

**Error Message from Dev tool:**
messageService.ts:119 There was an issue running a git operation. Please review the output or use a console to check the state of your repository.: Error: There was an issue running a git operation. Please review the output or use a console to check the state of your repository.
    at Object.w [as create](file:///C:/Program Files %28x86%29/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:31:16710)
    at file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:85:29479
    at Object.p [as _notify](file:///C:/Program Files %28x86%29/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:16421)
    at Object.__dirname.undefined.F.enter (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:19749)
    at __dirname.undefined.t.Class.define._run (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:21070)
    at __dirname.undefined.t.Class.define._chainedError (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:20429)
    at n (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:18257)
    at Object.p [as _notify](file:///C:/Program Files %28x86%29/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:16421)
    at Object.__dirname.undefined.F.enter (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:19749)
    at __dirname.undefined.t.Class.define._run (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:21070)
</Description>
    <CreatedDate>11/05/2016</CreatedDate>
    <ClosedDate>11/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6229</IssueID>
    <Title>language specific config</Title>
    <Description>is there a way to set different "editor.tabSize" for different language? like 4 spaces for python and 2 spaces for javascript
</Description>
    <CreatedDate>10/05/2016</CreatedDate>
    <ClosedDate>11/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6218</IssueID>
    <Title>Git output doesn't contain sanity checking errors anymore</Title>
    <Description>- VSCode Version: 1.1, latest from HEAD
- OS Version: Linux Elementary OS

I want to commit, error dialag says there has been an issue, please check output, but no message in output.
![image](https://cloud.githubusercontent.com/assets/6461412/15127197/d86b4584-1635-11e6-8389-b0fef7d3b392.png)
</Description>
    <CreatedDate>09/05/2016</CreatedDate>
    <ClosedDate>11/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6213</IssueID>
    <Title>Extension install should stay when focus lost for bad internet connections</Title>
    <Description>- VSCode Version: 1.1.0-insider (1.1.0-insider)
- OS Version: It may happen on all OS, not clear

Steps to Reproduce:
1. press **cmd(ctrl) - shift - p**
2. enter _install ext rainbow_
3. blur from Quick Command Action then it disappears and stops searching.
</Description>
    <CreatedDate>09/05/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6208</IssueID>
    <Title>Read from OutputChannel in a vscode extension</Title>
    <Description>I want to read logging information from the Tasks OutputChannel and show a status bar information based on this data. I can only find a way to append text to a OutputChannel but no api to register to an output changed event. Is this scenario currently supported? Is there another way to get output from a running vscode task within an extension?
</Description>
    <CreatedDate>09/05/2016</CreatedDate>
    <ClosedDate>10/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6186</IssueID>
    <Title>Not able to find special characters like \n, \r, \t</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Mac OS 10.11.4

Steps to Reproduce:
1. Enter some text in editor with tabs and new lines.
2. Open the find box and check the regular expression button.
3. Type "\n" in the search field.
</Description>
    <CreatedDate>07/05/2016</CreatedDate>
    <ClosedDate>09/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6178</IssueID>
    <Title>Required extensions in workspace settings</Title>
    <Description>I would like to have a required extensions section in settings.json of my workspace. These extensions should be automatically installed when a project is opened the first time or a warning message should be shown that required extensions are missing. 
At the moment I need to instruct my team to install specific extensions to work on a shared project. It would be nice to automate this process.
</Description>
    <CreatedDate>06/05/2016</CreatedDate>
    <ClosedDate>12/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6177</IssueID>
    <Title>Search is slow for network shares</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: OS X 10.11.4

Steps to Reproduce:
1. Use OSXFuse + sshfs to mount a remote directory
2. open the directory in Code
3. type cmd-P and type a file name

The command window will indicate it's working for a few seconds, but nothing will happen.
</Description>
    <CreatedDate>06/05/2016</CreatedDate>
    <ClosedDate>13/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6168</IssueID>
    <Title>VS Code crashes when left running for several days</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Windows 10

**Steps to Reproduce:**
1. Open two or more separate VSCode windows.
2. In each window, open a different project.
3. Leave running for several days.

**Actual:**
A message box pops up in one of the windows reporting a crash.
</Description>
    <CreatedDate>06/05/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6142</IssueID>
    <Title>Allow adding non-workspace files from working files</Title>
    <Description>- VSCode Version: 1.0.0-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. Open a folder
2. Open a file outside that folder
3. Drag the non-workspace file from working files to your open folder in explorer

You cannot move the non-workspace file into your project from working files. I'm guessing this might be by design based on #4893
</Description>
    <CreatedDate>05/05/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6137</IssueID>
    <Title>VS Code does not start sometimes</Title>
    <Description>Often I'll have Code open and then try to open a new file either through code.bat, "Open With Code", or even from the Start Menu and nothing will happen. I assume this has been reported several times before, but couldn't find anything as there are lots of issues reported here.
- VSCode Version: 1.0.0
- OS Version: 10.14335

Steps to Reproduce:
Not 100% sure of the steps to get this to happen every time
1. Have code running already with some files open (1 or more instances of it)
2. Right click on a file and select `Open with Code`
3. Nothing starts up - no additional `code.exe`s show up in Task Manager

![Task Manager when code is not working - only 1 window](https://cloud.githubusercontent.com/assets/1149244/15053789/126e454a-12b9-11e6-9382-92cf2350672c.png)

If I then close all of the active Code windows and try again, things work.
This means that I then lose my active files :( 
</Description>
    <CreatedDate>05/05/2016</CreatedDate>
    <ClosedDate>26/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6133</IssueID>
    <Title>Editor not working!</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Linux 4.5.1-1-ARCH x86_64

Steps to Reproduce:
1. Open editor (i think this happened with latest update)

Well i just opened the editor and got blank screen. With this message in the console:
![image](https://cloud.githubusercontent.com/assets/1268576/15046659/37c42684-12e1-11e6-8424-e0501ec579af.png)
</Description>
    <CreatedDate>05/05/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6132</IssueID>
    <Title>Quick File Navigation as you type</Title>
    <Description>It would be great when I want to perform a Quick Open on a file that VSCode would search as I type. Atom and Sublime do this and it makes finding files so much easier.
</Description>
    <CreatedDate>05/05/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6119</IssueID>
    <Title>After set "window.zoomLevel": -1 or -2. the character on editor is blurred.</Title>
    <Description>- VSCode Version:1.0.0
- OS Version:Win 10 Pro

Steps to Reproduce:
1. Add setting to user setting.json "window.zoomLevel": -1,
2. Go to editor and all code is blurred. When scroll sometime it clear back then go blur again. Ref this:
   ![bug blurred](https://cloud.githubusercontent.com/assets/19192116/15036130/0d8c3ec8-12b5-11e6-9025-e0d88193906f.gif)
</Description>
    <CreatedDate>05/05/2016</CreatedDate>
    <ClosedDate>05/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6112</IssueID>
    <Title>Can't open more than one instance of vscode</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Windows 10 Pro Insider Preview Build 14332

Steps to Reproduce:
1. Open folder in vscode
2. Try to open a new instance of vscode
</Description>
    <CreatedDate>04/05/2016</CreatedDate>
    <ClosedDate>05/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6103</IssueID>
    <Title>package.json files for private packages should not warn about missing name and version properties</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Mac OS 10.11.4
## Steps to Reproduce
1. Create the following `package.json` file and open it in Code: `{ "private": true }`
2. View the linter warnings (hover over the green squiggles)
## Expected

No warnings, because `npm install` no longer warns about missing names and versions in private packages.
## Actual

Code produces the following warnings:
- Missing property "name"
- Missing property "version"
</Description>
    <CreatedDate>04/05/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6082</IssueID>
    <Title>Render problem under high DPI monitor</Title>
    <Description>- VSCode Version: 1.1.0-insider, 
- OS Version: Win10 Pro

I got two different text render styles, one is blurry, and another is clear.
![image](https://cloud.githubusercontent.com/assets/628293/15003152/68b30c4e-11db-11e6-961d-c06e76d8ebba.png)

You can see middle window is more blurry than both left and right window.
My monitor size is 13 inches, with 1920x1080 resolution. Display zoom level is **125%**, and I've set up **Code - Insiders.exe**'s compatible settings, and checked '**Disable display zoom under high DPI**' (may be this, as I'm using a Chinese edition). 

My settings:
![image](https://cloud.githubusercontent.com/assets/628293/15003219/37d97896-11dc-11e6-9131-109af8bf26a4.png)
![image](https://cloud.githubusercontent.com/assets/628293/15003227/5276f0fc-11dc-11e6-9ac0-29e46431a86f.png)
</Description>
    <CreatedDate>04/05/2016</CreatedDate>
    <ClosedDate>04/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6069</IssueID>
    <Title>Unable to read long message in debug console.</Title>
    <Description>- VSCode Version: 1.1.0-alpha
- OS Version: Windows10

Steps to Reproduce:
1. Launch app and open folder which contains Aspnet console app.
2. Configure for debugging.
3. Start debugging  and verify debug console window.
Actual: Long message is truncated and user unable to read complete message from debug console.
Expected: Message should not be truncated and wrap properly. or Mouse hove should show message contents.

The program 'c:\src\TestCSharpProj\TestCSharpWithVSCode/bin/Debug/dnx451/win7-x64/TestCSharpWithVSCode.exe' has exited with code -1 (0xffffffff).

![image](https://cloud.githubusercontent.com/assets/17735796/14988198/b72f099c-1107-11e6-94a6-0da5d8887268.png)
</Description>
    <CreatedDate>03/05/2016</CreatedDate>
    <ClosedDate>03/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6047</IssueID>
    <Title>Keep history independent of splits</Title>
    <Description>- VSCode Version: Version 1.0.0 (1.0.0) fa6d0f03813dfb9df4589c30121e9fcffa8a8ec8
- OS Version: Mac OS X 10.11.4

If I split my editor and then navigate through history, navigation will linearize my history such that I cannot step back in history in my in-focus editor split without inadvertently affecting my out-of-focus editor.

For example, if I have editor splits 1 and 2 and my navigation history looks like this (with time moving from left to right):

```
Split 1: File A              --&gt; File B
Split 2: File X  --&gt; File Y            --&gt; File Z
```

If my in-focus editor is split 2 and I want to navigate back in history to File X, I cannot do so without also causing Split 1 revert back to File A, which is very undesirable.
</Description>
    <CreatedDate>02/05/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6033</IssueID>
    <Title>Add a menu for extension commands</Title>
    <Description>https://github.com/Microsoft/vscode/pull/6000 introduces a new top level menu for extension commands. We should discuss if such a menu is desired or not.

![1](https://cloud.githubusercontent.com/assets/7069719/14929697/5e4848f2-0e91-11e6-8641-f683860decda.png)

@Microsoft/vscode for input
</Description>
    <CreatedDate>02/05/2016</CreatedDate>
    <ClosedDate>02/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>6023</IssueID>
    <Title>Debugger fails silently (Python)</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Ubuntu Mate 16.04 LTS

Steps to Reproduce:
1. Create a Hello World Python program, with a syntax error. 
2. Make sure the Debug Console is closed. 
3. Press F5 to start debugger

Get this notification at the top:

&gt; [Error] Debug adapter process has terminated unexpectedly      [Close]

_If the Debug Console is open, sometimes (not every time) it shows the syntax error_
</Description>
    <CreatedDate>01/05/2016</CreatedDate>
    <ClosedDate>04/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5946</IssueID>
    <Title>Ubuntu hotkeys</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Ubuntu 16.04

Steps to Reproduce:
1. Ctrl+Shift+Alt+Down - default ubuntu hotkeys to move window to other desktop

I set Ctrl+Shift+D for me right now, but it will be nice to have OS dependency of hotkeys out of the box
</Description>
    <CreatedDate>28/04/2016</CreatedDate>
    <ClosedDate>12/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5936</IssueID>
    <Title>Node.js 6.0 messes up debugger when using Typescript with sourcemaps</Title>
    <Description>- VSCode Version: 1.00
- OS Version: Win 10

Steps to Reproduce:
1. Install node.js 6.0.0
2. Try to debug within a router.get function.

```
router.get("/:id", (req, res, next) =&gt; {
    controller.getSingle(req.params.id).then(data =&gt; res.json(data));
});
```

When I add a breakpoint at the `controller.` call, the debugger stops when I'm using node 5.11.0. It does not after upgrading to 6.0.0. The debugger stops (so it notices a breakpoint), but it doesn't show the line where it stopped anywhere.

Breakpoints outside of the express calls work fine by the way. So when I add a breakpoint at the router.get, it works (but at the start of the application, which is good, obviously).

Changing from () =&gt; to function() did not change anything.
</Description>
    <CreatedDate>28/04/2016</CreatedDate>
    <ClosedDate>04/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5889</IssueID>
    <Title>Make revealing debug console on debug start a configuration</Title>
    <Description>- VSCode Version: 1.1.0-alpha
- OS Version: WInodws10

Steps to Reproduce:
1. Launch app.
2. Set configuration for debugging : task.json, launch.json and tsconfig.json.
3. Set "Showoutput" property 'always' to get message in the output window.
4. Start debugging and verify debug window.
6. Now perform build operation with CTRL+Shift+B and verify output window.
7. Start debugging again and verify debug console window.

Actual: Debug console window is not showing up when user start debugging after build.
Expected: Debug console window should be on top when user start debugging.

![outoutwindowissue](https://cloud.githubusercontent.com/assets/17735796/14851037/012047bc-0c32-11e6-8167-ef728e848126.gif)
</Description>
    <CreatedDate>27/04/2016</CreatedDate>
    <ClosedDate>04/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5411</IssueID>
    <Title>Some forms change to fuzzy pixels</Title>
    <Description>`bug`
- VSCode Version: 1.0
- OS Version: Microsoft Windows 10

Issue : Some forms change to fuzzy pixels.

Steps to Reproduce:
1.  Launch the VScode
2.  Ctrl + '=' (zoom in)
3.  OUTPUT something (i.e. build project)
4.  Words are covered some mist..

Like this...
![image](https://cloud.githubusercontent.com/assets/13444035/14603615/643993d6-05a1-11e6-9c3d-030cff6723dc.png)
(PS: maybe you should zoom in the graph above to the high definition. The words in the middle form are fuzzier than the right form obviously... _Sometimes_  I select almost all the text by dragging the mouse then It will be fuzzy!)
</Description>
    <CreatedDate>17/04/2016</CreatedDate>
    <ClosedDate>06/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5407</IssueID>
    <Title>Add Event into CompletionItemKind enum</Title>
    <Description>Currently there is no icon for event in VS Code.
It would be great if you add event icon into CompletionItemKind enum.
C# extension is using property icon for events in autocompletion list.
</Description>
    <CreatedDate>17/04/2016</CreatedDate>
    <ClosedDate>25/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5353</IssueID>
    <Title>Add ability to create new file within a new folder by typing e.g. 'folder_name/file_name'</Title>
    <Description>
    </Description>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5302</IssueID>
    <Title>vscode 1.0 editor.fontSize not work for tip or autocomplete</Title>
    <Description>- VSCode Version:1.0
- OS Version:windows 10

Steps to Reproduce:
1. change the editor.fontSize in the settings.json
2. the editor font size has success changed,but not the tip and autocomplete
</Description>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4958</IssueID>
    <Title>Allow to get/set the encoding and charset</Title>
    <Description>Such as [`IEncodingSupport::setEncoding`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/browser/parts/editor/editorStatus.ts#L910) , i want to code an extension for detect file's encoding. now detect encoding successed, but i don't known how to change encoding by API, could u help me?
</Description>
    <CreatedDate>05/04/2016</CreatedDate>
    <ClosedDate>27/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4779</IssueID>
    <Title>Cannot pass environment variable that is already defined in shell's rc file.</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Ubuntu 14.04

Steps to Reproduce:
1. Export a variable in your default shell  (`~/.zlogin` for zsh;  `~/.bash_login` for bash, for example. You can use `.bashrc` as well).
   
   ``` sh
   export FOOBAR="1"
   ```
2. Pass different value of the same variable to VSCode.
   
   ``` sh
   FOOBAR=2 code .
   ```
3.  VSCode uses value defined for login shell, not current session: 
   
   Help &gt; Toggle Developer Tools. And in Console,  `process.env.FOOBAR`  gives "1"  when I expect "2".

It looks like VSCode executes default shell as login shell again before launching the program UI.

Being able to pass different values for existing environment variables greatly helps writing/testing extensions.

Related discussion:  https://github.com/Microsoft/vscode-go/issues/220#issuecomment-203092824
###### strace example:

``` sh
$ strace -E GOPATH=1 -E FOOBAR=2 -s 1000000 -e verbose=execve -e abbrev=none ./.build/electron/electron  .
execve("./.build/electron/electron", ["./.build/electron/electron", "."], [... "GOPATH=1", ...]) # What I expected
...
read(62, "...\nGOPATH=/home/saml/go\n....")  # What is this?
...
```
</Description>
    <CreatedDate>29/03/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3745</IssueID>
    <Title>Virtual Documents and compareFileWith command</Title>
    <Description>I am attempting to modify the Git History extension to use virtual documents instead of temp files, but I am running into issues while executing the `workbench.files.action.compareFileWith` command.

If I open the virtual file first, then run the `compareFileWith` command, I get an error stating `Open a file first to compare it with another file.`, which would result from `workbenchEditorCommon.asFileEditorInput(this.editorService.getActiveEditorInput());` returning falsy.

Attempting the compare in reverse (open disk file, then compare, then open virtual file) I get an exception `Notification handler 'textDocument/publishDiagnostics' failed with message: Illegal argument: line must be positive` that appears to be caused by the fact that `babel-eslint` can't be loaded.

I haven't figured out how to debug the `GlobalCompareResourcesAction` directly yet, but I'll keep on digging. Also, is there a simple way to get a copy of the current call stack, so that I can post it here? 
</Description>
    <CreatedDate>05/03/2016</CreatedDate>
    <ClosedDate>24/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3702</IssueID>
    <Title>Allow modification of sidebar font size</Title>
    <Description>The ability to change the font size in the sidebar was requested via Stack Overflow http://stackoverflow.com/questions/35774918/vs-code-customize-sidebar.
</Description>
    <CreatedDate>04/03/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3566</IssueID>
    <Title>Request to add "Close All Files Above / Below" in Working Files list</Title>
    <Description>Many modern editors that have tabs have options like "Close all to the right / left" or "Close all but this..." so you can close multiple files at once. The same can be added to the working files list. Right-click on a file and we should see options like "Close all files above", "Close all files below", and "Close all files but this one". I often organize files in tabs (or in the Working files list in the case of VS Code) according to function within the app I am working on. For instance, I may have a user view, user controller and user model open followed by login view, login controller and login model files. If I no longer need to refer to the login files, I could simply right-click the user model and select "Close all files below" rather than closing each login related file individually. I do this frequently throughout the day regardless of the project I am working on and I am sure this feature would be beneficial to others as well as it is an easy way to quickly clean up the working files list if you have many open.
</Description>
    <CreatedDate>29/02/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3260</IssueID>
    <Title>Add ability to clear recently opened files from open file dialog</Title>
    <Description>As far as I can tell, there is no way to clear the list of recently opened files that appears on the CMD+P window.

My problem: I have excluded node_modules from searching. Sometimes I open a package.json file from inside node_modules by navigating from the explorer. 

After that, CMD+P then typing 'package.json' shows all of the package.json files that are in the recently opened list, even though some are from the node_modules directory which is normally excluded from search. 

This can be useful behavior, but the user should be able to clear out the recently opened list so that the search exclusion rules can go back to hiding those files. 

There should be a clear all recently opened files button/command. It may be worth considering a way to clear specific items with an 'x' on the open file dialog that appears with CMD+P. Or perhaps a special command for clearing recently opened files that match any search exclusion rules.

![screen shot 2016-02-22 at 11 46 37 am](https://cloud.githubusercontent.com/assets/1946538/13230368/f30685e8-d959-11e5-93cf-6af3d33782fb.png)

Sounds similar to #1662, but that one is for clearing recent files from the OSX dock icon.
</Description>
    <CreatedDate>22/02/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2615</IssueID>
    <Title>Seed the native file dialog with the parent of the currently active file</Title>
    <Description>Whenever I use "Open File", the box defaults from some default directory.  I would like the Open File dialog to show the directory that the current file is in.  99% of the time when I open a file it is to find some sibling file to the one I'm looking at.  

Either a user setting, or a completely new command would be great.
</Description>
    <CreatedDate>01/02/2016</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1394</IssueID>
    <Title>Extension API - Modify file name colors / opacity</Title>
    <Description>This is a similar request to #178, but slightly different. 

I want the ability to write an extension to change the opacity / color of file names in the file tree. 

My specific use case is to show what files are being ignored by gitignore. 
</Description>
    <CreatedDate>16/12/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1389</IssueID>
    <Title>Split view, Split Working file</Title>
    <Description>For easy working with multiple files and multiple view. it is good if working file list has split based on files located in each view 
</Description>
    <CreatedDate>16/12/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1329</IssueID>
    <Title>Git checkout should create a tracking branch, if any remote contains a matching branch</Title>
    <Description>Currently when you use quick open to "git checkout branch", the branch will be created even if the branch already exists in the remote. The command line does a better job and connects to the existing branch in that case.
</Description>
    <CreatedDate>15/12/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1292</IssueID>
    <Title>Use space as a seperator between the path matching and regular quick open matching</Title>
    <Description>In the following example it would be cool if the word after the space would do regular quick open matching on all the files that passed the path filter.

&lt;img width="184" alt="screen shot 2015-12-14 at 16 39 22" src="https://cloud.githubusercontent.com/assets/1926584/11785283/5d71698a-a281-11e5-8261-79753e269651.png"&gt;
</Description>
    <CreatedDate>14/12/2015</CreatedDate>
    <ClosedDate>02/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1115</IssueID>
    <Title>Markdown Preview Under Working Files Should be Sticky</Title>
    <Description>Add a markdown (.md) file to the Working Files section
Under Working Files, right-click on this file and select "Open Preview" (you see preview)
Select another file so that the markdown file is out of view
Under Working Files, select this file again

Actual behavior:  you see the markdown source, not the preview
Preferred behavior:  you see the preview of the markdown file

In general, it would be useful if there were a way to pin the markdown preview so that one could easily switch back to it.
</Description>
    <CreatedDate>09/12/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1044</IssueID>
    <Title>Open last active file when closing a file</Title>
    <Description>It would be nice to have a feature to open the most recent active file when the current file gets closed. Ideally this would be a configurable options.
</Description>
    <CreatedDate>05/12/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>906</IssueID>
    <Title>Auto-save unsaved files</Title>
    <Description>A very handy feature in Notepad++: one can just open a new editing tab, or multiple ones, cut and paste stuff, or scribble a few notes. 
Upon closing the application or shutting down the computer, instead of the usual "Do you want to save/not save/cancel" (as vsCode does), all those unsaved and unnamed files are simply saved to a temp location by the app, and restored in the same state upon next start.

Rgds
</Description>
    <CreatedDate>02/12/2015</CreatedDate>
    <ClosedDate>10/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>442</IssueID>
    <Title>Open next file when you close one file</Title>
    <Description>when I close a working file, the next file in the buffer should be opened rather than blank window
</Description>
    <CreatedDate>22/11/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>76</IssueID>
    <Title>Allow to theme UI components of the workbench</Title>
    <Description>Currently I cannot change the style of the editor "frame", for example, sidebar color, padding or font. This makes some themes (like Solarized) looks inconsistent with the editor UI.
</Description>
    <CreatedDate>18/11/2015</CreatedDate>
    <ClosedDate>30/05/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5791</IssueID>
    <Title>api - expose configurations folder</Title>
    <Description>as discussed in #5297
</Description>
    <CreatedDate>26/04/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5768</IssueID>
    <Title>Test: API - Use web view for html preview part</Title>
    <Description>Test plan item for #2414
@jrieken Please complete...
</Description>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5765</IssueID>
    <Title>Test API: Add support for internal links in previewHtml </Title>
    <Description>Test plan item for #3676

@jrieken Please complete...
</Description>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5762</IssueID>
    <Title>Debugging mocha breakpoints not working right and value inspector not showing right info.</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: 10.11.4

Using mocha, es6 and chai with vs code does not debug properly.
1. Breakpoints in tests do not work properly, they may fire but in wrong place.
2. Value inspector does not show local variables defined using let
3. Debugging ES6 files, local variables do not show nor can you view values of function parameters.

Steps to Reproduce:

See attached file.

set breakpoint in calc.js.
when breakpoint hits and you hover over it shows nothing.
typing "value1" in the console states undefined.

set breakpoint in test that will call the calc function, a breakpoint hits but not on breakpoint position.
also can not see local values.
[test.zip](https://github.com/Microsoft/vscode/files/234769/test.zip)
</Description>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>27/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5709</IssueID>
    <Title>TextDocumentContentProvider sample extension broken</Title>
    <Description>In the latest alpha channel the TextDocumentProvider example extension is broken.
- extension: https://marketplace.visualstudio.com/items?itemName=eg2.vscode-css-properties
- source: https://github.com/Microsoft/vscode-extension-samples/tree/master/textdocumentprovider-sample

The method `provideTextDocumentContent` isn't called anymore.

The method is called when manually opening a document:

``` ts
        vscode.workspace.openTextDocument(uri).then(doc =&gt; {
            let contents = doc.getText();
        }, reason =&gt; {
            console.log(reason);
        });
```
</Description>
    <CreatedDate>24/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5661</IssueID>
    <Title>Code interferes with long(ish)-running 'git rebase' from CLI</Title>
    <Description>- VSCode Version: 1.0.1-insider (85f337ee0851a464d5459ce9a354d05f94f0b9a4)
- OS Version: OS X 10.11.4 (15E65)

Steps to Reproduce:
1. Have code open with git enabled on a repository (in particular, I'm working with @mozilla/gecko-dev)
2. Do a `git rebase -i` that will take a while (my case had 11 commits that I was squashing into 1)

A few times during the rebase, my rebase stopped because it couldn't create index.lock, saying it already existed. If I then did `git rebase --continue` things would carry on. (FTR, git also totally messed up the squashing in this case, but that's a git bug, not a code bug.) I realized that code's git integration was interfering with my rebase, quit code, `git reset --hard` to the original commit, and redid my rebase, and everything worked fine. My best guess is that the periodic `git status` (or similar) that code does was racing with the various commits of `git rebase`, and when code won, it would mess up the rebase. Code should probably avoid updating its internal knowledge of the working directory status while a rebase (or similar) is running. (Not sure if that's entirely possible, but it's at least something to think about.)
</Description>
    <CreatedDate>22/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5608</IssueID>
    <Title>JS syntax highlighting with conditionals</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Ubuntu 15.10

In JavaScript, the value that follows the colon in a conditional statement is not highlighted. For example, in the following statement, the `null` won't be highlighted.

```
var foo = bar ? true : null;
```
</Description>
    <CreatedDate>21/04/2016</CreatedDate>
    <ClosedDate>21/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5514</IssueID>
    <Title>unable to remove extension from the update extension list, getting error "Cannot find the extension".</Title>
    <Description>- VSCode Version: 1.0.0-alpha
- OS Version: Windows10

Steps to Reproduce:
1. Launch app and open any folder which contains ts project.
2. Click on extension update icon from status bar to get info about extension to be updated.
3. Try to uninstall any previously installed extension by clicking on remove extension icon from update extension list.
![image](https://cloud.githubusercontent.com/assets/17735796/14658704/cce7f5fe-064a-11e6-8beb-51b18dce655c.png)

**Note: I am able to uninstall extension from installed extension list.**

Actual: Getting error message while trying to remove extension from update window. 
![image](https://cloud.githubusercontent.com/assets/17735796/14658587/c6f31314-0649-11e6-89e6-32eeb56525d8.png)
Expected: User should be able to uninstall extension if he doesn't want to update. 

Dev tool error log message:

**workbench.main.js:91 Could not find extension: Error: Could not find extension,    at c:\Program Files (x86)\Microsoft VS Code Alpha\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js:7:30783,    at Object.p [as _notify](c:Program Files %28x86%29Microsoft VS Code Alpharesourcesappoutvsworkbenchelectron-mainsharedProcessMain.js:5:1987),    at Object.__dirname.undefined.N.enter (c:\Program Files (x86)\Microsoft VS Code Alpha\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js:5:5149),    at __dirname.undefined.t.Class.define._run (c:\Program Files (x86)\Microsoft VS Code Alpha\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js:5:6975),    at __dirname.undefined.t.Class.define._completed (c:\Program Files (x86)\Microsoft VS Code Alpha\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js:5:6416),    at FSReqWrap.cb [as oncomplete](fs.js:216:19)e.doShow @ workbench.main.js:91**
</Description>
    <CreatedDate>19/04/2016</CreatedDate>
    <ClosedDate>20/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5484</IssueID>
    <Title> Cannot read property '_acceptIsDirty' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;25627564-167f-0fb7-fa66-53028cfa6eb6&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 1.0.0-insider&lt;br /&gt;\-  fa6d0f03813dfb9df4589c30121e9fcffa8a8ec8&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property '_acceptIsDirty' of undefined&lt;br /&gt;    at e._acceptModelReverted (\out\vs\workbench\node\pluginHostProcess.js:18:26765) &lt;no sourcemaps&gt;&lt;br /&gt;    at t.e.handle (\out\vs\workbench\node\pluginHostProcess.js:15:12835) &lt;no sourcemaps&gt;&lt;br /&gt;    at c (\out\vs\workbench\node\pluginHostProcess.js:11:16222) &lt;no sourcemaps&gt;&lt;br /&gt;    at h (\out\vs\workbench\node\pluginHostProcess.js:11:16882) &lt;no sourcemaps&gt;&lt;br /&gt;    at doNTCallback0 (node.js:420:9)&lt;br /&gt;    at process._tickCallback (node.js:349:13)&lt;br /&gt;
</Description>
    <CreatedDate>19/04/2016</CreatedDate>
    <ClosedDate>19/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5481</IssueID>
    <Title> Illegal value 31 for `line`</Title>
    <Description>Issue Id: &lt;b&gt;9d49987e-1058-1c47-d977-23b53a6f81d2&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 1.0.0-insider&lt;br /&gt;\-  fa6d0f03813dfb9df4589c30121e9fcffa8a8ec8&lt;br /&gt;_Stack_ &lt;br /&gt;Error: Illegal value 31 for `line`&lt;br /&gt;    at t.lineAt (\out\vs\workbench\node\pluginHostProcess.js:18:29390) &lt;no sourcemaps&gt;&lt;br /&gt;    at Object.t.lineAt (\out\vs\workbench\node\pluginHostProcess.js:18:28204) &lt;no sourcemaps&gt;&lt;br /&gt;    at TrailingSpaces.matchTrailingSpaces (\shardulm94.trailing-spaces-0.2.8\out\src\trailing-spaces\trailing-spaces.js:150:95) &lt;no sourcemaps&gt;&lt;br /&gt;    at \shardulm94.trailing-spaces-0.2.8\out\src\trailing-spaces\trailing-spaces.js:59:23 &lt;no sourcemaps&gt;&lt;br /&gt;    at e.invoke (\out\vs\workbench\node\pluginHostProcess.js:7:14035) &lt;no sourcemaps&gt;&lt;br /&gt;    at e.fire (\out\vs\workbench\node\pluginHostProcess.js:7:15488) &lt;no sourcemaps&gt;&lt;br /&gt;    at e._acceptSelectionsChanged (\out\vs\workbench\node\pluginHostProcess.js:19:7900) &lt;no sourcemaps&gt;&lt;br /&gt;    at t.e.handle (\out\vs\workbench\node\pluginHostProcess.js:15:12835) &lt;no sourcemaps&gt;&lt;br /&gt;    at c (\out\vs\workbench\node\pluginHostProcess.js:11:16222) &lt;no sourcemaps&gt;&lt;br /&gt;    at h (\out\vs\workbench\node\pluginHostProcess.js:11:16882) &lt;no sourcemaps&gt;&lt;br /&gt;
</Description>
    <CreatedDate>19/04/2016</CreatedDate>
    <ClosedDate>19/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5441</IssueID>
    <Title>Don't offer autocomplete it the only option is what the user has already typed</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Windows 7

Steps to Reproduce:
1. Install the Python extension
2. Type `pass`

After typing `pass` you will be offered the autocomplete option `pass`. You then have to press enter or escape to dismiss autocomplete before you can press enter again for a newline (pretty much what you always want after a `pass`).

![capture](https://cloud.githubusercontent.com/assets/376842/14601549/8b406a28-055a-11e6-80be-6089fca47213.PNG)

The result is that you have to mash enter to get newlines sometimes. It's a bit annoying. Autocomplete should hide itself if the only option is what the user has already typed (i.e. if pressing enter would just dismiss it).
</Description>
    <CreatedDate>18/04/2016</CreatedDate>
    <ClosedDate>19/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5421</IssueID>
    <Title>do i have a way to change native windows console ?</Title>
    <Description>- VSCode Version:1.0.0
- windows 10 home 

Steps to Reproduce:

when i use shortcuts `workbench.action.terminal.openNativeConsole` i can only  open a cmd but i can't open a powerhsell. is there a why to change the shell vsc open?
</Description>
    <CreatedDate>17/04/2016</CreatedDate>
    <ClosedDate>18/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5391</IssueID>
    <Title>Git push doesn't ask for authentication</Title>
    <Description>- VSCode Version:1.0.0
- OS Version:Debian Stretch

Git push should ask for authentication, but vs-code reports error : 

&gt; Authentication failed on git remote.
</Description>
    <CreatedDate>16/04/2016</CreatedDate>
    <ClosedDate>18/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5382</IssueID>
    <Title>IntelliSense list item overlap.</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: Windows 10 1511 - 10586

Steps to Reproduce:
1. Generate a New Extension (yeoman -&gt; TypeScript)
2. src/extension.ts
3. 
   ![image](https://cloud.githubusercontent.com/assets/18439500/14579905/e8b8b1e2-03ed-11e6-892a-74223da1e721.png)
</Description>
    <CreatedDate>16/04/2016</CreatedDate>
    <ClosedDate>18/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5318</IssueID>
    <Title>Espose charset of TextDocument in API</Title>
    <Description>see https://github.com/Microsoft/vscode/issues/3817#issuecomment-210062644
</Description>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5277</IssueID>
    <Title>Caret position wrong when typing Thai.</Title>
    <Description>- VSCode Version: 1.0.0
- OS Version: OS X 10.11.4

Steps to Reproduce:
1. Typing English characters.
2. Typing Thai characters.

Click for see video.
[![Screenshot](https://gist.github.com/first087/4bf9f56cdc23c3dd5d671a54e2f61e5d/raw/c436a48b9fef7fa933da130810cd7a3997cefcdf/VSCode%2520v1.0.0%2520Bug%2520Report.png)](https://gist.github.com/first087/4bf9f56cdc23c3dd5d671a54e2f61e5d/raw/39cfc0cd655a664d55ce64a776b5346caf506627/VSCode%2520v1.0.0%2520Bug%2520Report.mp4)
</Description>
    <CreatedDate>14/04/2016</CreatedDate>
    <ClosedDate>28/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5220</IssueID>
    <Title>Focus vanishes after refactoring</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Ubuntu 15.10

Steps to Reproduce:
1. Press F2 on a variable
2. Refactor the name
3. Focus is somewhere else, but not in the editor anymore
</Description>
    <CreatedDate>13/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5219</IssueID>
    <Title>simplify telemetry implementation</Title>
    <Description>Today we have an interface that describes the contract of telemetry (ITelemetryService) which is OK. The bad thing is that there many implementations of that interface (AbstractTS, MainTS, ElectronTS, AbstractRemoteTS, WorkerTS, ExtHostTS, NullTS, MockTS, TestTS) which have led to leakage and duplication of events. I believe this problem should be solved with less code and abstraction
</Description>
    <CreatedDate>13/04/2016</CreatedDate>
    <ClosedDate>13/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5218</IssueID>
    <Title>Allow to open same folder in multiple windows</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Windows 7 x64

Steps to Reproduce:
1. Open Visual Studio Code (called window 1)
2. Open D:\Project
3. CTRL-SHIFT-N or File -&gt; New Window (called window 2)
4. In the new window, Open D:\Project again

expected:
New Window, the window 2, will also have the folder D:\Project just like window 1.

Result:
Instead of opening the D:\Project in window 2, it give focus to window 1 and leave window 2 sitll open nothing.

Reason:
1. I am working with multi monitors, at least 2, and 1 monitor will most likely only able to hold 2 tabs at max so that i can compare code within the same project. I will need another window to put the other tab even though it's under the same folder, maybe it's not a problem i i have the same monitor resolution, but currently, i am using one laptop monitor (1366x768) and additional lcd monitor (1920x1080) which give problem if i try to display the editor under resolution (3286x ????) just to compare codes.
1. There is no option to let the editor tab float as independent window
</Description>
    <CreatedDate>13/04/2016</CreatedDate>
    <ClosedDate>27/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5205</IssueID>
    <Title>Changing language mode keeps previous linter and shows non-errors</Title>
    <Description>- VSCode Version: 1.0.0-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. Open an HTML file
2. Change language mode to Javascript
3. Change back to HTML

Actual:
Showing many errors as it still thinks it is in Javascript language mode.
![languagemodeswap](https://cloud.githubusercontent.com/assets/12900364/14478166/f4df4824-00c7-11e6-9767-cac15b71d644.JPG)
</Description>
    <CreatedDate>12/04/2016</CreatedDate>
    <ClosedDate>13/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5199</IssueID>
    <Title>Regex search does not work with \n or \r</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Win 7 , SP 1

Steps to Reproduce:
Assume you have a document with the following lines: 
// 1
// 2
// 3
1. Open search window (ctrl+f) and activate search with regex ( alt+R) 
2. type in search box : //\s1
   Expected Result : One match 
3. add \n or \r to the end of search regex (now search regex will be : //\s1(\n|\r)
   Bug: No Result!!
</Description>
    <CreatedDate>12/04/2016</CreatedDate>
    <ClosedDate>14/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5168</IssueID>
    <Title>VS Code can not be launched from terminal on Mac</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: OS X El Capitan 10.11.4
- Node Version: 5.10.1

Steps to Reproduce:
1. Launch code from terminal `code .`. It fails with the following error - 

``` bash
File "&lt;string&gt;", line 1
import os,sys; print os.path.realpath(sys.argv[1])
                          ^
SyntaxError: invalid syntax
/usr/local/bin/code: line 10: ./MacOS/Electron: No such file or directory
```

It used to work perfectly alright before the OS X upgrade to 10.11.4. Just to be sure, I uninstalled code from PATH and installed it again through command palette but no luck.
</Description>
    <CreatedDate>11/04/2016</CreatedDate>
    <ClosedDate>12/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5160</IssueID>
    <Title>cannot create random location multi cursor</Title>
    <Description>- VSCode Version:1.8.2
- OS Version:ubuntu 15.10

Steps to Reproduce:

i can create multi cursors by alt-shift+(down/up) but not all the time where i wanna place cursor is exactly under the line in sublime i can press and hold ctrl and click to add cursor to any location but seems theres no way to do this in vscode . is there a way to to this without hacking ctrl-d combination by adding prefix? 
</Description>
    <CreatedDate>11/04/2016</CreatedDate>
    <ClosedDate>13/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5092</IssueID>
    <Title>clicking readme on the install menu closes installation pane</Title>
    <Description>- VSCode Version:1.8.2
- OS Version:ubuntu 15.10

Steps to Reproduce:
1. ctrl +shift + p open the pane
2. type ext install
3. search for extensions and click one of their readme button
4. the pane will close after clicking
</Description>
    <CreatedDate>08/04/2016</CreatedDate>
    <ClosedDate>08/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5084</IssueID>
    <Title>HoverProvider text using Markdown, URL to file + Line number?</Title>
    <Description>I've been using HoverProvider to quickly display the origin file of a user function in Lua.
I'm using the Markdown syntax for creating a clickable link, which opens the file in the editor:

`[c:\temp\file.lua](file:c:\temp\file.lua)` -&gt; [c:\temp\file.lua](#here)

I'm wondering if this link syntax also supports line number, and if it does, what is the syntax of it?

I believe this question is also generally related to all places where an extension can display text formatted with Markdown.
</Description>
    <CreatedDate>07/04/2016</CreatedDate>
    <ClosedDate>14/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5049</IssueID>
    <Title>[Errors on OS X] - Error from the extension host: channel closed AND Extension host terminated unexpectedly. Please reload to recover.</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: OS X 10.11.4

Steps to Reproduce:
1. All I have to do is open Visual Studio Code and it will give me these error. I am not able to save, and some of the keyboard commands don't work such as backspace.

Troubleshooting:
1. I've deleted all my extensions from `~/.vscode/extensions` but still experience the same errors.
2. I've completely uninstalled VS Code by using App Cleaner to make sure I got every app file possible, yet it still gave errors after I installed a fresh copy from the website. 

Screenshot:

![Screenshot](http://i.imgur.com/Pkq7kmC.png)

**EDIT:** Actually... I think I may have found the issue. This happens when I open a remote file from within FileZilla by right clicking on the **remote** filename and clicking on view/edit. What this does is open the file in VSCode and shows the temp location of the file as a very long string.

I feel like it may be this that is causing the issue because after downloading the file and **then** opening it, everything is working fine. 

Is there any log that I can submit to see if I'm right?
</Description>
    <CreatedDate>06/04/2016</CreatedDate>
    <ClosedDate>13/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>5027</IssueID>
    <Title> Cannot read property 'startLineNumber' of null</Title>
    <Description>Issue Id: &lt;b&gt;94c1f96c-ce28-b33d-26b9-ef160b532344&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 0.10.13-insider&lt;br /&gt;\-  17fa1cbb49e3c5edd5868f304a64115fcc7c9c2c&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'startLineNumber' of null&lt;br /&gt;[/vs/editor/contrib/find/common/findController.ts#L365:8 (startLineNumber)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/editor/contrib/find/common/findController.ts#L365:8 %28startLineNumber%29)&lt;br /&gt;[/vs/editor/contrib/find/common/findController.ts#L542:10 (multiCursorFind)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/editor/contrib/find/common/findController.ts#L542:10 %28multiCursorFind%29)&lt;br /&gt;[/vs/editor/contrib/find/common/findController.ts#L523:8 (_update)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/editor/contrib/find/common/findController.ts#L523:8 %28_update%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L241:18 (data)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/base/common/eventEmitter.ts#L241:18 %28data%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L267:8 (_emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/base/common/eventEmitter.ts#L267:8 %28_emitToSpecificTypeListeners%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L285:8 (_emitEvents)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/base/common/eventEmitter.ts#L285:8 %28_emitEvents%29)&lt;br /&gt;[/vs/editor/contrib/find/common/findState.ts#L202:22 (emit)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/editor/contrib/find/common/findState.ts#L202:22 %28emit%29)&lt;br /&gt;[/vs/editor/contrib/find/browser/findWidget.ts#L105:17 (change)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/editor/contrib/find/browser/findWidget.ts#L105:17 %28change%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L241:18 (data)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/base/common/eventEmitter.ts#L241:18 %28data%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L267:8 (_emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/43ff6af3d4564f59196caa9be4897fc33c15f24c/src/vs/base/common/eventEmitter.ts#L267:8 %28_emitToSpecificTypeListeners%29)&lt;br /&gt;
</Description>
    <CreatedDate>06/04/2016</CreatedDate>
    <ClosedDate>28/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4981</IssueID>
    <Title>Show extension Readme inside code</Title>
    <Description>Recently I installed an extension with the command palette. Before that I clicked on `Readme` and a new chrome window opened up. How about showing the extension Readme inside VSCode without changing focus/app?
</Description>
    <CreatedDate>05/04/2016</CreatedDate>
    <ClosedDate>06/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4972</IssueID>
    <Title>Clipboard access through Extensions API</Title>
    <Description>- VSCode Version:0.10.11
- OS Version: Windows 10, Mac OSX El Captain

Hi, I'm developing [console-wrapper](https://github.com/fabiodamasceno/vscode-console-wrapper) , that is an extension for javascript console.log (other languages support will be added soon) and I need some access for clipboard content in Extensions API. I think this methods should be enough for most of cases:
- vscode.clipboard.getContent()
- vscode.clipboard.setContent()

Some event handlers should be useful, too, like:

-vscode.clipboard.beforeContentLoad()
-vscode.clipboard.onContentLoad()
-vscode.clipboard.onContentLoaded()

Steps for the extension:
- user copy some text;
  - when ctrl+shift+q text is wrapped with console.log and inserted at below line.

hugs,
</Description>
    <CreatedDate>05/04/2016</CreatedDate>
    <ClosedDate>06/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4934</IssueID>
    <Title>Remove unnecessary values from intellisense popup</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Windows 10

Steps to Reproduce:
1. Setup code like screenshot:
   ![hwhlc](https://cloud.githubusercontent.com/assets/215033/14267492/6f6ccb54-fb03-11e5-854d-cf8fdfb9e678.png)
2. Notice the unnecessary values in the intellisense
</Description>
    <CreatedDate>04/04/2016</CreatedDate>
    <ClosedDate>05/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4933</IssueID>
    <Title>Tooltip background color</Title>
    <Description>_From @rogeralsing on March 29, 2016 9:17_

The tooltips when hovering method names etc. are somewhat hard to read as the background and syntax highlight is the same as the rest of the code window.
it would be nice if at least the background color was a bit different, (lighter/darker depending on theme)

For example, the peek definition makes things much clearer, there is a distinct bg color that shows that this block of code is from somewhere else.

_Copied from original issue: Microsoft/vscode-go#272_
</Description>
    <CreatedDate>04/04/2016</CreatedDate>
    <ClosedDate>05/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4912</IssueID>
    <Title>Is there a way to disable non attribute suggestions for Typescript React?</Title>
    <Description>- VSCode Version: Latest vscode-insiders release
- OS Version: Win10

Is there a way to disable appearing ctor, foreach, function and others from completion list when only inside of JSX tag? This is very annoying, 
see screenshot
![2016-04-04](https://cloud.githubusercontent.com/assets/8881674/14248454/0604cbe6-fa75-11e5-8fb6-2380625f9eca.png)
</Description>
    <CreatedDate>04/04/2016</CreatedDate>
    <ClosedDate>04/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4908</IssueID>
    <Title>Intellisense triggering after typing comma, space inside a string literal</Title>
    <Description>- VSCode Version: Feb release + March Insiders
- OS Version: Mac OS X Yosemite

Steps to Reproduce:
1) Enter the following code

```
it('Hello', () =&gt; {

});
```

2) Put your cursor after Hello but within the string and type comma then space, the intellisense will kick in (even though you are inside a string literal)
</Description>
    <CreatedDate>04/04/2016</CreatedDate>
    <ClosedDate>04/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4894</IssueID>
    <Title>Cannot search for new line character using find</Title>
    <Description>- VSCode Version: 0.10.11 (0.10.11)
- OS Version: OSX 10.11.4 (15E65)

Steps to Reproduce:
1. open code 
2. in a new file type "hello
   world" (hello [new line]world)
3. edit -&gt; find
   4 in search box type "\n" and select regular express

nothing is found but there is a new line character in the text file
</Description>
    <CreatedDate>04/04/2016</CreatedDate>
    <ClosedDate>04/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4854</IssueID>
    <Title> Cannot read property 'unshift' of null</Title>
    <Description>Issue Id: &lt;b&gt;8f79ac6d-2abf-ad4a-2527-34d2a291ce9a&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 0.10.12-insider&lt;br /&gt;\-  43ff6af3d4564f59196caa9be4897fc33c15f24c&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'unshift' of null&lt;br /&gt;[/vs/editor/common/services/modelServiceImpl.ts#L159:15 (unshift)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/services/modelServiceImpl.ts#L159:15 %28unshift%29)&lt;br /&gt;[/vs/editor/common/services/modelServiceImpl.ts#L84:18 (_createDecorationOption)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/services/modelServiceImpl.ts#L84:18 %28_createDecorationOption%29)&lt;br /&gt;    at Array.map (native)&lt;br /&gt;[/vs/editor/common/services/modelServiceImpl.ts#L81:73 (map)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/services/modelServiceImpl.ts#L81:73 %28map%29)&lt;br /&gt;[/vs/editor/common/services/modelServiceImpl.ts#L342:22 (setMarkers)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/services/modelServiceImpl.ts#L342:22 %28setMarkers%29)&lt;br /&gt;    at Array.forEach (native)&lt;br /&gt;[/vs/editor/common/services/modelServiceImpl.ts#L336:19 (forEach)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/services/modelServiceImpl.ts#L336:19 %28forEach%29)&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (apply)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/base/common/callbackList.ts#L63:26 %28apply%29)&lt;br /&gt;[/vs/base/common/event.ts#L107:26 (call)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/base/common/event.ts#L107:26 %28call%29)&lt;br /&gt;[/vs/platform/markers/common/markerService.ts#L76:25 (fire)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/platform/markers/common/markerService.ts#L76:25 %28fire%29)&lt;br /&gt;[/vs/platform/markers/common/markerService.ts#L319:17 (call)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/platform/markers/common/markerService.ts#L319:17 %28call%29)&lt;br /&gt;[/vs/workbench/api/node/extHostDiagnostics.ts#L171:22 (changeOne)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/workbench/api/node/extHostDiagnostics.ts#L171:22 %28changeOne%29)&lt;br /&gt;
</Description>
    <CreatedDate>01/04/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4853</IssueID>
    <Title> Cannot read property 'onTokensChanged' of undefined</Title>
    <Description>Issue Id: &lt;b&gt;74730508-4ac5-6cd6-832d-ddf2f9e62f40&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 0.10.12-insider&lt;br /&gt;\-  43ff6af3d4564f59196caa9be4897fc33c15f24c&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'onTokensChanged' of undefined&lt;br /&gt;[/vs/editor/browser/view/viewLayer.ts#L228:18 (onTokensChanged)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewLayer.ts#L228:18 %28onTokensChanged%29)&lt;br /&gt;[/vs/editor/common/viewModel/viewEventHandler.ts#L110:30 (onModelTokensChanged)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/common/viewModel/viewEventHandler.ts#L110:30 %28onModelTokensChanged%29)&lt;br /&gt;[/vs/editor/browser/view/viewEventDispatcher.ts#L75:23 (handleEvents)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewEventDispatcher.ts#L75:23 %28handleEvents%29)&lt;br /&gt;[/vs/editor/browser/view/viewImpl.ts#L802:23 (callback)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewImpl.ts#L802:23 %28callback%29)&lt;br /&gt;[/vs/base/common/eventEmitter.ts#L296:12 (callback)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/base/common/eventEmitter.ts#L296:12 %28callback%29)&lt;br /&gt;[/vs/editor/browser/view/viewImpl.ts#L800:31 (deferredEmit)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewImpl.ts#L800:31 %28deferredEmit%29)&lt;br /&gt;[/vs/editor/browser/view/viewImpl.ts#L99:77 (_renderOnce)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewImpl.ts#L99:77 %28_renderOnce%29)&lt;br /&gt;[/vs/editor/browser/view/viewEventDispatcher.ts#L58:7 (eventHandlerGateKeeper)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewEventDispatcher.ts#L58:7 %28eventHandlerGateKeeper%29)&lt;br /&gt;[/vs/editor/browser/view/viewEventDispatcher.ts#L53:8 (consumeQueue)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewEventDispatcher.ts#L53:8 %28consumeQueue%29)&lt;br /&gt;[/vs/editor/browser/view/viewImpl.ts#L157:24 (emitMany)](https://github.com/microsoft/vscode/blob/ef2a1fcaa553d14d7731b284a5ac5e4a55c42936/src/vs/editor/browser/view/viewImpl.ts#L157:24 %28emitMany%29)&lt;br /&gt;
</Description>
    <CreatedDate>01/04/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4848</IssueID>
    <Title>Customizable 'Open in Command Prompt' console</Title>
    <Description>_Open in Command Prompt_ currently opens `cmd.exe`, it would be nice to customize it to run e.g. Cmder or ConEmu which are much better alternatives.
</Description>
    <CreatedDate>01/04/2016</CreatedDate>
    <ClosedDate>04/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4762</IssueID>
    <Title>Feature request: allow extension developers to add items to menu</Title>
    <Description>I'd be surprised if this hasn't come up before, but if it has I haven't been able to find it. It would be extremely nice if extensions had the ability to create menus, both on the top of the screen as well as adding items to the context menu. This could be controlled through a separate .json file or by adding a section to the `contributes` section of `package.json`.
</Description>
    <CreatedDate>29/03/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4519</IssueID>
    <Title>VsCode doesn't indicate the "currently debugged thread" when multilple threads are stopped during debugging.</Title>
    <Description>- VSCode Version: 0.10.12-alpha
- OS Version: Ubuntu 14.04
- Debugging using Microsoft cpp debugger, but will happen in any "stop-all" style debugger.

Steps to Reproduce:
1. Compile following C++ code

```
#include &lt;iostream&gt;
#include &lt;cstdlib&gt;
#include &lt;pthread.h&gt;

using namespace std;
#define NUM_THREADS 5

void *PrintHello(void *threadid)
long tid;
tid = (long)threadid; //set a breakpoint here
cout &lt;&lt; "Hello World! Thread ID, " &lt;&lt; tid &lt;&lt; endl;
pthread_exit(NULL);
}

int main()
{
pthread_t threads[NUM_THREADS];
int rc;
int i;
for (i = 0; i &lt; NUM_THREADS; i++) { //set a breakpoint here
cout &lt;&lt; "main() : creating thread, " &lt;&lt; i &lt;&lt; endl;
rc = pthread_create(&amp;threads[i], NULL,
PrintHello, (void *)i);
if (rc) {
cout &lt;&lt; "Error:unable to create thread," &lt;&lt; rc &lt;&lt; endl;
exit(-1);
}
}
pthread_exit(NULL);
}
```
1. Set two breakpoints in the lines with comments "//set a breakpoint here" 
2. press F5 3~5 times 
3. Notice, that if a breakpoint or step causes the threads to switch, the UI does not indicate which thread is currently stepping. Multiple callstacks may be displayed, which can be confusing. 
</Description>
    <CreatedDate>21/03/2016</CreatedDate>
    <ClosedDate>21/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3976</IssueID>
    <Title>[C++] Semicolon in string literal messes up highlighting for rest of file</Title>
    <Description>Repro:

![screenshot from 2016-03-10 10-46-57](https://cloud.githubusercontent.com/assets/1871912/13680508/ab011482-e6ad-11e5-91ae-266d624e7939.png)

Repro'd on `22dd214678739e71bf51fcba7697e98f33ce191d` for me. This only repros in C++ mode - C mode correctly ends the string literal in the right place.
</Description>
    <CreatedDate>10/03/2016</CreatedDate>
    <ClosedDate>01/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3795</IssueID>
    <Title>Make Intellisense font and image size adjustable</Title>
    <Description>I was playing around with the `editor.fontSize` setting in VSCode because I am a little nearsighted.
Is there a way to also have the font either inherit the size from the `editor.fontSize` setting or create a new one for it?
 Keep in mind when you scale the font, the images to the left need to be scaled as well.
</Description>
    <CreatedDate>08/03/2016</CreatedDate>
    <ClosedDate>20/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2893</IssueID>
    <Title> Cannot read property 'getControl' of null</Title>
    <Description>Issue Id: &lt;b&gt;b633d420-1fcd-6703-2221-63797bcca19c&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;_Versions_ &lt;br /&gt;\- 0.10.7-insider&lt;br /&gt;_Stack_ &lt;br /&gt;TypeError: Cannot read property 'getControl' of null&lt;br /&gt;[/vs/workbench/api/node/mainThreadEditors.ts#L226:16 (MainThreadTextEditor.matches)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/workbench/api/node/mainThreadEditors.ts#L226:16 %28MainThreadTextEditor.matches%29)&lt;br /&gt;[/vs/workbench/api/node/extHostEditors.ts#L640:34 (MainThreadEditors._tryShowTextDocument)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/workbench/api/node/extHostEditors.ts#L640:34 %28MainThreadEditors._tryShowTextDocument%29)&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)&lt;br /&gt;[/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)&lt;br /&gt;[/vs/workbench/api/node/extHostEditors.ts#L627:5 (MainThreadEditors._tryShowTextDocument.contd)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/workbench/api/node/extHostEditors.ts#L627:5 %28MainThreadEditors._tryShowTextDocument.contd%29)&lt;br /&gt;[/vs/workbench/api/node/extHostEditors.ts#L630:5 (MainThreadEditors._tryShowTextDocument)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/workbench/api/node/extHostEditors.ts#L630:5 %28MainThreadEditors._tryShowTextDocument%29)&lt;br /&gt;[/vs/base/common/callbackList.ts#L63:26 (CallbackList.invoke)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/callbackList.ts#L63:26 %28CallbackList.invoke%29)&lt;br /&gt;[/vs/base/common/event.ts#L107:26 (Emitter.fire)](https://github.com/microsoft/vscode/blob/6c2d51a4b7b81753a3a4c46f9de9a15179e20304/src/vs/base/common/event.ts#L107:26 %28Emitter.fire%29)&lt;br /&gt;
</Description>
    <CreatedDate>10/02/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1775</IssueID>
    <Title>Expose API to listen to performed commands </Title>
    <Description>Similar to [`atom.commands.onWillDispatch` and `atom.commands.onDidDispatch`](https://atom.io/docs/api/v1.3.2/CommandRegistry). This would be useful for extensions wanting to perform some action before or after a command is performed.

Being able to determine the source of the event would be useful in such an API (mouse vs keyboard vs command palette).
</Description>
    <CreatedDate>04/01/2016</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1222</IssueID>
    <Title>Extensions with console-like behavior</Title>
    <Description>Currently with the extensions API, we have access to output channels (creation and access through `vscode.window.createOutputChannel()`).  And likewise, we can get adhoc user input through `vscode.window.showInputBox`.

I think what would be really helpful is if the extensions API included the capability to have a console-like experience, much like the **debug console** has (input part of the experience with the output).  Not necessarily for "debugging" purposes, but for a more consistent and extended user experience exchange for ongoing for **user input creation**, then **VS Code output consumption**, followed by more **user input creation**, ... so on and so forth.

At the moment, the `showInputBox()` functionality with the output channel can seem like a one-time exchange, without the continuity of a input/output console (like the debugger console).
</Description>
    <CreatedDate>12/12/2015</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>601</IssueID>
    <Title>Implementing an alternative jump to file?</Title>
    <Description>I'd like to implement an alternative jump to file that uses a [custom matching algorithm](https://github.com/spion/fuzzy-matcher). Is this possible, or is the extension API too limited to do this?

The closest thing seems to be [the quickpick api](https://code.visualstudio.com/docs/extensionAPI/vscode-api#QuickPickOptions), and it falls short. Perhaps `QuickPickItem` could be allowed to implement a `matches(input:string):boolean` method?
</Description>
    <CreatedDate>25/11/2015</CreatedDate>
    <ClosedDate>29/04/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4634</IssueID>
    <Title>Error Extension host terminated unexpectedly. On first and subsequent startups.</Title>
    <Description>- VSCode Version: 0.10.12-insider
- OS Version: Centos 7.2.1511 (Core)

Steps to Reproduce:
1. Installed/unzipped to /opt/VSCode-linux-x64
2. dbl clicked code-insiders icon from Files app
3. after a few seconds the following error is dropped down in the code editor:
   
   Error Extension host terminated unexpectedly. Please reload the window to recover.
</Description>
    <CreatedDate>24/03/2016</CreatedDate>
    <ClosedDate>30/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4621</IssueID>
    <Title>Installing extensions does not report progress</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Windows 8.1

Steps to Reproduce:
1. Install a big extension that is likely to take some time
2. Navigate away from VS Code and come back
3. No progress bar/indication if the extension is installing
#3341 deals with something similar to this but only a message was added as part of 83f1fe7f20b7c099246a8a8d62fd829bbf6d4840
</Description>
    <CreatedDate>23/03/2016</CreatedDate>
    <ClosedDate>24/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4516</IssueID>
    <Title>Selecting install extension then clicking Readme shows two conflicting dialogs</Title>
    <Description>- VSCode Version: 0.10.12-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. F1 -&gt; Install extension
2. Click install button
3. Click Readme button
4. Click out of the command window

Actual:
Two notifications come up. One asking if you would like to install that extension (which you already have) and another that says you need to restart to enable the extension.

![installreadme](https://cloud.githubusercontent.com/assets/12900364/13928224/154649a0-ef52-11e5-97a2-9b4a4ffc60e8.JPG)

Expected:
Only the "restart to enable it." dialog to show up.
</Description>
    <CreatedDate>21/03/2016</CreatedDate>
    <ClosedDate>22/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4475</IssueID>
    <Title>Feature request: multiple commands in tasks.json</Title>
    <Description>Hello,

For now, tasks.json allows only one command to be set.
It would be great to be able to have multiple commands, one for each tool something like this:

``` json
{
    "taskCommands": [
        {
            "command": "npm",
            "isShellCommand": true,
            "suppressTaskName": true,
            "showOutput": "always",
            "args": ["run"],
            "tasks": [
                {
                    "taskName": "npm:test",
                    // Make this the default build command.
                    "isBuildCommand": true,
                    // Show the output window only if unrecognized errors occur.
                    "args": [
                        "debug:test"
                    ]
                },
 {
                    "taskName": "npm:test2",
                    // Make this the default build command.
                    "isBuildCommand": true,
                    // Show the output window only if unrecognized errors occur.
                    "args": [
                        "debug:test2"
                    ]
                }
            ]
        },
        {
            "command": "gulp",
            "isShellCommand": true,
            "suppressTaskName": true,
            "showOutput": "always",
            "args": [],
            "tasks": [
                {
                    "taskName": "gulp:test",
                    // Make this the default build command.
                    "isBuildCommand": true,
                    // Show the output window only if unrecognized errors occur.
                    "args": [
                        "debug:test"
                    ]
                }
            ]
        }
    ],
    "version": "0.1.0"
}
```

I hope you will take my request into consideration and hope this will help to enhance vscode.

Thank you in advance for your feedback.
</Description>
    <CreatedDate>20/03/2016</CreatedDate>
    <ClosedDate>21/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4468</IssueID>
    <Title>New line always starts at the beginning of line (Col 1)</Title>
    <Description>- VSCode Version: Version 0.10.11 (0.10.11)
- OS Version: Mac OSX 10.11.2 (15C50)

Steps to Reproduce:
1. Typescript as an example, create an empty file and input "if {" 
2. Hit enter, the new line always start at Col1 instead of Col5 with correct margin on the left.
</Description>
    <CreatedDate>20/03/2016</CreatedDate>
    <ClosedDate>21/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4459</IssueID>
    <Title>story for pulling in remote origin topic branch that already exists into local repo</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: win10 10586.164

Steps to Reproduce:
1. open folder containing clone of remote origin master
2. click on git branch status area in bottom left corner, or enter ctrl+p or f1+&gt;Git: Checkout, and enter name of remote origin branch you want to local copy to reference.  the git ouput window shows "git checkout -q -b someTopicBranch" and "git fetch" were executed.
3.  folder doesn't contain copy of remote origin topic branch so from command line enter "git.exe config -l --local" where you'll see that branch.someTopicBranch.remote/.merge entries are not present
4.  from command line enter "git branch -u origin/someTopicBranch" or "git branch --set-upstream-to=someTopicBranch" to update local config to contain branch.someTopicBranch.remote/.merge entries
5.  from vscode you can now use git | ... | pull == "git pull" to retrieve the contents of the remote origin someTopicBranch that already existed

My thinking is that steps 3 thru 5 should be automated for you in case where you are not looking to create new topic branch and optionally later push it into remote origin but rather create local repo topic branch into which you sync the details of remote origin copy of topic branch that already exists.
</Description>
    <CreatedDate>19/03/2016</CreatedDate>
    <ClosedDate>22/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4439</IssueID>
    <Title>Open with Code not visible for unprivileged users</Title>
    <Description>- VSCode Version: 0.10.11 
- OS Version: Windows Server 2008 R2

Steps to Reproduce:
1. Log in as a unprivileged user
2. Run the VS Code installer as Administrator and enter password
3. Tap both "Open with Code" checkboxes in the wizard
4. Right-click on a file or folder 

The "Open with Code" option is missing. I have not investigated this more than the reproduce steps above so it may be unrelated to the user being unprivileged.
</Description>
    <CreatedDate>18/03/2016</CreatedDate>
    <ClosedDate>22/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4437</IssueID>
    <Title>Context menu in wrong location after increasing font size</Title>
    <Description>- VSCode Version: 
  Version 0.10.11
  Commit f291f4ad600767626b24a4b15816b04bee9a3049
  Date 2016-03-11T17:10:35.304Z
  Shell 0.35.6
  Renderer 45.0.2454.85
  Node 4.1.1
- OS Version: Windows 7 Enterprise Version 6.1.7601

Steps to Reproduce:
1. Start VSCode.
2. Press Control + a few times because you're getting older and your monitor is very large. :)
3. Right click on some text. 

Expected result: The context menu opens at the mouse pointer. 

Actual result: The context menu opens at what would be the right location if you hadn't increased the font size. 

Notes: 
1. I could not for the life of me find a way to search these issues, apologies in advance if this is a dupe. 
2. This is a new bug for this update - this didn't used to happen.
</Description>
    <CreatedDate>18/03/2016</CreatedDate>
    <ClosedDate>22/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4432</IssueID>
    <Title>Sorting installed extensions</Title>
    <Description>- VSCode Version: 0.10.12-alpha
- OS Version: Windows 10

Steps to Reproduce:
1. F1 -&gt; Show installed extensions

Actual:
Extensions sorted by number of downloads

Expected:
Extensions sorted by name. If this is by design, it would be nice to have an option to sort them by name if possible.
</Description>
    <CreatedDate>18/03/2016</CreatedDate>
    <ClosedDate>22/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4335</IssueID>
    <Title>Format Code doesn't work for an unsaved buffer</Title>
    <Description>- VSCode Version: 0.10.11
- OS Version: Windows 7

Steps to Reproduce:
- Open a new buffer (Ctrl+N)
- Set the language mode to JavaScript (Ctrl-K M)
- Type some code with wrong indentation, e.g.

```
var x = 1;
    var y = 2;
```
- Try to format the code (Alt+Shift+F)

**What happens**: Nothing.
**What is expected to happen**: Code should be formatted.

I tried to fix this bug, but realized that it might be a design issue:
- Code formatting is carried out by an external plugin (in case of JS it's the TS-Server)
- VSC issues a corresponding "format" message [formattingProvider.ts:102](https://github.com/Microsoft/vscode/blob/4da8ef4e95e423071596a64b3d37c638b6700a62/extensions/typescript/src/features/formattingProvider.ts#L102) to the TS-Server consisting params of the format `{"file":null,"line":1,"offset":1,"endLine":25,"endOffset":3}`.
- The TS-Server tries to open file `null` from its `syntaxTreeCache` which leads to this error:
  
  "{"seq":0,"type":"response","command":"format","request_seq":76,"success":false,
  "message":"Error processing request. Cannot read property 'replace' of null"}"

which is caught at [formattingProvider.ts:105](https://github.com/Microsoft/vscode/blob/4da8ef4e95e423071596a64b3d37c638b6700a62/extensions/typescript/src/features/formattingProvider.ts#L105) but not logged anywhere, apparently.

So the issue is, an unsaved buffer has no file path and, hence, is not accessible for the TS-Server. potentially, this might be fixed by using some internal fake path, which would be known to the TS-Server's `cacheSyntaxTree`. Apparently, a physical file is not a hard requirement. Initially I assumed, that VSC only sends a file name to the TS-Server, who reads the file, computes the range and sends the formatted code back. However, a fast test disproved this:
- save a buffer to a file
- delete file immediately from the FS 
- change the code and try to format it
- ensure it worked

So: the TS-Server uses the filename but reads the file content from some internal cache shared between VSC and TSS. This cache might be the right place to reference the unsaved buffer. But if I'm right, it's a subject for a major design change.

If you have better suggestions because I overlooked something feel free to inform me and I could make another attempt.
</Description>
    <CreatedDate>16/03/2016</CreatedDate>
    <ClosedDate>24/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4280</IssueID>
    <Title>[Localization] Default settings file contents for the intalled extensions are not localized.</Title>
    <Description>- VSCode Version:0.10.12-alpha
- OS Version: WIndows10

Steps to Reproduce:
1. Launch app with any supported locale. &gt;Code-alpha --locale=ko
2. Go to File-&gt;Preference-&gt;Workspace settings
3. Verify default setting contents.
4. Install any recommended extension by clicking on extension info icon from the status bar. In my case I installed for GO.
5. Once extension is installed successful then click on restart window button from pop-up.
6. Perform step 2-3 again.
Actual:
I verified under default setting file new entry added for extension but Commented text are not localized.
I verified with  GO, Powershell, TSLint  extensions. 
![image](https://cloud.githubusercontent.com/assets/17735796/13794845/50d1049c-eabb-11e5-9b0e-a019fb93c92d.png)

Expected : All the commented text under default settings should be localized after reload as this is read only file. 
</Description>
    <CreatedDate>15/03/2016</CreatedDate>
    <ClosedDate>16/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4209</IssueID>
    <Title>OS Language not detected</Title>
    <Description>- VSCode Version: 0.10.12-Alpha
- OS Version: OS X El Capitan 10.11.1

Steps to Reproduce:
1. Run your OS in German
2. Open VS Code

I expect to see German translated strings. I see English. From test issue #4018 
</Description>
    <CreatedDate>14/03/2016</CreatedDate>
    <ClosedDate>15/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>4111</IssueID>
    <Title>Extension status bar animation does not fit well</Title>
    <Description>I find the animation for the extension status bar entry does not fit well with the other animation we use for git where we just keep the icon but indicate progress through animation. 

I suggest to go back to how it was before so that the icon is still visible but just animated.

cc @egamma 

Refs: https://github.com/Microsoft/vscode/issues/4024
</Description>
    <CreatedDate>14/03/2016</CreatedDate>
    <ClosedDate>30/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3970</IssueID>
    <Title>Error ...Microsoft VS Code/resources/app/extensions/jrieken.vscode-omnisharp: Cannot read file package.json</Title>
    <Description>The error in the title shows up after the users updated to 0.10.10.

I suspect that the extension could not be fully removed during the update since the OmniSharp server was running.
</Description>
    <CreatedDate>10/03/2016</CreatedDate>
    <ClosedDate>10/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3941</IssueID>
    <Title>Updated code command in bash (OS X) not working</Title>
    <Description>I recently updated to the new version of code (0.10.10) on OS X, and I was asked to remove an existing `code` alias I had set up in bash. I did so by modifying my `.bashrc` and then allowed code to apply its own. But the new one doesn't work after restarting code and bash:

```
$ code
  File "&lt;string&gt;", line 1
    import os,sys; print os.path.realpath(sys.argv[1])
                          ^
SyntaxError: invalid syntax
/usr/local/bin/code: line 10: ./MacOS/Electron: No such file or directory
```
</Description>
    <CreatedDate>10/03/2016</CreatedDate>
    <ClosedDate>10/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3822</IssueID>
    <Title>File explorer in sidebar stays grey after renaming a file</Title>
    <Description>When renaming a file the file explorer becomes grey. After hitting ENTER to confirm the changed name, the explorer view (file names) stays grey instead of becoming white. Does appear randomly. The working files view works as expected.

![bildschirmfoto 2016-03-08 um 10 22 18](https://cloud.githubusercontent.com/assets/1742426/13597381/96b56028-e518-11e5-8027-4b78448c13f4.png)

Using vs code v0.10.10-insider (5b5f4db87c10345b9d5c8d0bed745bcad4533135)
Max OSX 10.11.3
</Description>
    <CreatedDate>08/03/2016</CreatedDate>
    <ClosedDate>08/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3764</IssueID>
    <Title>Exclude files and folders listed in .gitignore</Title>
    <Description>Hello,

I just tried VS Code recently and I was surprised to see it didn't exclude the files and folders listed in my `.gitignore` file.

I think an option allowing us to hide those files in the Explorer would be really nice.

Here is how Atom does it:

&lt;img width="770" alt="screen shot 2016-03-07 at 10 31 42" src="https://cloud.githubusercontent.com/assets/89233/13565344/d476f9ea-e44f-11e5-896b-3a637ee36153.png"&gt;

And when this option isn't on, Atom colorizes the excluded files like that:

&lt;img width="167" alt="screen shot 2016-03-07 at 10 36 52" src="https://cloud.githubusercontent.com/assets/89233/13565471/8abf97a2-e450-11e5-94ad-771193dd25c0.png"&gt;
</Description>
    <CreatedDate>07/03/2016</CreatedDate>
    <ClosedDate>07/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3658</IssueID>
    <Title>Configure selector keys for suggest widget</Title>
    <Description>Whenever suggest widget (e.g. a completion list) is summoned (by a configured trigger character, e.g. `.` or `&gt;`), both Tab and Enter are valid for selection by default. More than once I've accidentally accepted the suggestion rather than doing a line break as intended.

https://github.com/mitaki28/vscode-clang/issues/8 is a good example of this where a `completionProvider` is configured and triggered by `&gt;`, causing issues when trying to do a line break:
![](https://cloud.githubusercontent.com/assets/1016104/13473657/4b754dec-e088-11e5-8aa3-35e09aee946a.png)

At first I thought I'd suggest that the default should be only Tab to avoid all of this. But then I came to think that perhaps more ideally this should be configurable by the extension that registers a provider with `triggerCharacters`. What do you think?
</Description>
    <CreatedDate>03/03/2016</CreatedDate>
    <ClosedDate>09/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3627</IssueID>
    <Title>Failed to load tslint library.</Title>
    <Description>I like the tslint extension, I use it with our vscode repo.

But I now get this error in every other workspace. I think this message should just be omitted.

![image](https://cloud.githubusercontent.com/assets/22350/13459773/1ef8a73a-e076-11e5-9544-c9f1e5cd1386.png)
</Description>
    <CreatedDate>02/03/2016</CreatedDate>
    <ClosedDate>07/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3444</IssueID>
    <Title>Python UnicodeEncodeError in output window</Title>
    <Description>`arabic_bytes=b'\xd9\x83\xd9\x84\xd8\xa7 \xd8\xa8\xd8\xaf\xd8\xa7\xd9\x8a\xd8\xa9 \xd9\x88\xd8\xa8\xd8\xaf\xd8\xa7\xd9\x8a\xd8\xa9'`
`print('%s' % arabic_bytes.decode('utf-8'))`

The output in output window is: 
`UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-2: ordinal not in range(128)`

Is output window support ASCII only? Or where can I change it?
</Description>
    <CreatedDate>25/02/2016</CreatedDate>
    <ClosedDate>09/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3137</IssueID>
    <Title>disable autocomplete in .txt files</Title>
    <Description>The code completion functionality often gets in the way when typing prose into a text file. For example, if I were writing this comment in a .txt file with VS Code and tried to type the word fun immediately followed by the Enter key, I'd automatically have the word "functionality" instead, because Code "learned" from the first sentence above that "fun" might be the beginning of "functionality."

It's great that this is apparently turned off by default in Markdown files. Can the same default be applied to .txt files? It's unlikely that any useful word-completion heuristic can be deduced from the content of most text files.
</Description>
    <CreatedDate>18/02/2016</CreatedDate>
    <ClosedDate>07/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2602</IssueID>
    <Title>Suggest is still slow (saw in selfhost)</Title>
    <Description>Created a new file rulers.ts:

If you add it, be sure to refresh given new files are not picked up properly by TS....
[CPU-20160201T100230.cpuprofile.txt](https://github.com/Microsoft/vscode/files/111910/CPU-20160201T100230.cpuprofile.txt)

See `// &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TYPED BELOW LINE`

``` typescript

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

'use strict';

import 'vs/css!./rulers';

import {ViewPart} from 'vs/editor/browser/view/viewPart';
import EditorBrowser = require('vs/editor/browser/editorBrowser');
import EditorCommon = require('vs/editor/common/editorCommon');

export class Rulers extends ViewPart {

    public domNode: HTMLElement;
    private _rulers: number[];

    constructor(context:EditorBrowser.IViewContext) {
        super(context);
        this.domNode = document.createElement('div');
        this.domNode.className = 'view-rulers';
        this._rulers = [];
    }

    public dispose(): void {
        super.dispose();
    }

    // --- begin event handlers
    public onConfigurationChanged(e: EditorCommon.IConfigurationChangedEvent): boolean {
        if (e.rulers) {
            this._rulers = this._context.configuration.editor.rulers;
            return true;
        }
        return false;
    }
    public onLayoutChanged(layoutInfo: EditorCommon.IEditorLayoutInfo): boolean {
        return true;
        // if (this._width !== layoutInfo.width) {
        //  this._width = layoutInfo.width;
        //  return true;
        // }
        // return false;
    }
    // --- end event handlers

    // public onBeforeForcedLayout(): void {
    // }

    // public onReadAfterForcedLayout(ctx:EditorBrowser.IRenderingContext): void {
    // }

    _render(ctx: EditorBrowser.IRenderingContext): void {
        // console.log('rendering rulers');
        this._requestModificationFrame(() =&gt; {

            let existingRulers = this.domNode.children;
            let existingRulersLength = existingRulers.length;
            let max = Math.max(existingRulersLength, this._rulers.length);

            for (let i = 0; i &lt; max; i++) {
// &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TYPED BELOW LINE
                // if (i &lt; existingRulersLength)
                // if (i &lt; existingRulersLength)
            }

            // Update existing rulers
            let renderedRulers = this.domNode.children;
            for (let i = 0; i &lt; renderedRulers.length &amp;&amp; i &lt; this._rulers.length; i++) {
                console.log('update @ ' + i);
            }

            // Insert new rulers

            // remove extra rulers


            // ruler
            console.log('rendering rulers');
            // DomUtils.StyleMutator.setWidth(this._domNode, this._width);
            // DomUtils.toggleClass(this._domNode, EditorBrowser.ClassNames.SCROLL_DECORATION, this._shouldShow);
        });
    }

}

```
</Description>
    <CreatedDate>01/02/2016</CreatedDate>
    <ClosedDate>02/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2331</IssueID>
    <Title>[json] No value suggestions in project.json for dependencies property</Title>
    <Description>![capture](https://cloud.githubusercontent.com/assets/1931590/12581872/a957344a-c439-11e5-824b-49920f6bc255.png)
</Description>
    <CreatedDate>26/01/2016</CreatedDate>
    <ClosedDate>03/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1773</IssueID>
    <Title>"Duplicate function implementation." Error underlining</Title>
    <Description>When a JavaScript function is defined and committed to git, vscode takes further changes to the file and incorrectly notifies the user of a duplicate function implementation because of the older git version of the code and the edited version are thought to be different functions by vscode. After the change to the file is committed to git, the incorrect error underlining goes away.
</Description>
    <CreatedDate>04/01/2016</CreatedDate>
    <ClosedDate>14/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>965</IssueID>
    <Title>"Visual Studio Code has crashed" when editing an ES6 file</Title>
    <Description>VSCode crashes every time I open an ES6 file, after a few seconds. This started happening after the 0.10.3 update.

Here's the output:

```
$ ./code --verbose

### VSCode main.js ###
c:\Program Files (x86)\Microsoft VS Code\resources\app { pathArguments: [],
  programStart: 0,
  workers: -1,
  enablePerformance: false,
  verboseLogging: true,
  debugPluginHostPort: undefined,
  debugBrkPluginHost: undefined,
  logPluginHostCommunication: false,
  firstrun: false,
  openNewWindow: false,
  openInSameWindow: false,
  gotoLineMode: false,
  pluginHomePath: undefined,
  pluginDevelopmentPath: undefined,
  pluginTestsPath: undefined }
Lifecycle#unload() 1
IPC#vscode-workbenchLoaded

&lt;--- Last few GCs ---&gt;

   11777 ms: Scavenge 715.1 (742.6) -&gt; 715.1 (742.6) MB, 0.2 / 0 ms (+ 5.0 ms in 1 steps since last GC) [allocation failure] [incremental marking delaying mark-sweep].
   11865 ms: Mark-sweep 715.1 (742.6) -&gt; 714.3 (738.6) MB, 88.2 / 1 ms (+ 6.0 ms in 2 steps since start of marking, biggest step 5.0 ms) [last resort gc].
   11919 ms: Mark-sweep 714.3 (738.6) -&gt; 714.4 (737.6) MB, 54.1 / 1 ms [last resort gc].


&lt;--- JS stacktrace ---&gt;

==== JS stack trace =========================================

Security context: 12320E39 &lt;String[7]: file://&gt;
    1: slowToString [buffer.js:344] [pc=0F1B78F8] (this=0F9F3DA5 &lt;an Uint8Array with map 34609681&gt;,encoding=123236C9 &lt;String[4]: utf8&gt;,start=0,end=3694146)
    2: toString [buffer.js:~371] [pc=24AAD709] (this=0F9F3DA5 &lt;an Uint8Array with map 34609681&gt;)
    3: arguments adaptor frame: 3-&gt;0
    4: write [string_decoder.js:129] [pc=24A3D6FD] (this=0F9FD0C5 &lt;an InternalDecoder with map 2C6981DD&gt;...

[VS Code]: render process crashed!
Lifecycle#window-all-closed
Lifecycle#before-quit
App#dispose: deleting running instance handle
```
</Description>
    <CreatedDate>03/12/2015</CreatedDate>
    <ClosedDate>11/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>899</IssueID>
    <Title>Using shebangs in TypeScript are generating errors.</Title>
    <Description>I'm working on a Node script using TypeScript and the editor is generating this annoying erros.
TS compiler is working fine, it compiles my script without problems :)

Here's a screenshot of the error.

Shebang is present at the top of the file:
# ! /usr/bin/env node

![untitled](https://cloud.githubusercontent.com/assets/5412470/11522626/c20e1756-987e-11e5-84a7-4d70084d77df.png)
</Description>
    <CreatedDate>02/12/2015</CreatedDate>
    <ClosedDate>02/03/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3506</IssueID>
    <Title>Can not navigate from error list to file</Title>
    <Description>- vscode express smoke test repo
- ctrl + shift + B, ctrl + shit + M
- click on one of the errors to navigate to
- get an error, event though routes/index.js exists

Though this seems to work in the vscode repo nicely

![screen shot 2016-02-26 at 16 54 34](https://cloud.githubusercontent.com/assets/1926584/13357243/b0a36c04-dca9-11e5-9e20-26eaf3f36fab.png)
</Description>
    <CreatedDate>26/02/2016</CreatedDate>
    <ClosedDate>27/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3456</IssueID>
    <Title>mark extention as installed</Title>
    <Description>Currently it is difficult to have an overview of which extensions have been installed. I would advise marking installed components in the command palette.

![extentions](https://cloud.githubusercontent.com/assets/12623827/13323000/ac6fc9d4-dbd7-11e5-94a7-f96ae282a8aa.jpg)
</Description>
    <CreatedDate>25/02/2016</CreatedDate>
    <ClosedDate>25/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3377</IssueID>
    <Title>Top of debug panel should be responsive</Title>
    <Description>When the debug panel gets narrow the title and button disappear, becoming unusable with the mouse.

Regular view:

![image](https://cloud.githubusercontent.com/assets/2193314/13268966/39a06614-da3a-11e5-8b56-b0791ea72dc9.png)

Currently narrow view:

![image](https://cloud.githubusercontent.com/assets/2193314/13268959/2b624f9a-da3a-11e5-9f2a-aeb5ba782a34.png)

It should become something like this when the panel is sufficiently narrow so the button/title doesn't go missing.

![image](https://cloud.githubusercontent.com/assets/2193314/13269042/a3aa8dbe-da3a-11e5-85d4-d61d63271f10.png)
</Description>
    <CreatedDate>23/02/2016</CreatedDate>
    <ClosedDate>24/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3348</IssueID>
    <Title>Snippet list does not render correctly</Title>
    <Description>#3159

When looking through the snippet list I get some strange rendering.  

There are definitely 5 snippets in the list but only 4 show up until I arrow through the complete set of 5.  Once I did that the list rendered correctly.  I would not have known there were 5 items if the sample screenshot did not show 5 (vs the 4 I could see).

I also saw some other partial rendering issues such as the double up in the image below.

![screen shot 2016-02-23 at 8 33 12 am](https://cloud.githubusercontent.com/assets/1051190/13258726/31611f42-da09-11e5-8eef-aa890f663929.png)
</Description>
    <CreatedDate>23/02/2016</CreatedDate>
    <ClosedDate>23/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3281</IssueID>
    <Title>Current focused suggestion in Intellisense doesn't play well in High Contrast theme</Title>
    <Description>Testing #3248

![image](https://cloud.githubusercontent.com/assets/22350/13248024/a0fa2142-da1c-11e5-95f5-6ed7513b63f7.png)
</Description>
    <CreatedDate>23/02/2016</CreatedDate>
    <ClosedDate>23/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3277</IssueID>
    <Title>Extension tips doesn't play well with the high contrast theme</Title>
    <Description>Testing #3248

![image](https://cloud.githubusercontent.com/assets/22350/13247891/064cde14-da1c-11e5-90df-323327f70c78.png)

ping @jrieken 
</Description>
    <CreatedDate>23/02/2016</CreatedDate>
    <ClosedDate>23/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3254</IssueID>
    <Title>Git conflict decorations do not clean themselves</Title>
    <Description>- have a git conflict
- click around if the line conflict decorations don't show up
- delete the conflicting lines
- undo
- Observe: now the conflict decorations never disappear without a Reload window or a new model instantiation.

![git-conflict-decorations](https://cloud.githubusercontent.com/assets/5047891/13222873/2c86c896-d982-11e5-9a3e-6d5636690a9f.gif)
</Description>
    <CreatedDate>22/02/2016</CreatedDate>
    <ClosedDate>22/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>3196</IssueID>
    <Title>Improve hover appearance</Title>
    <Description>I find it difficult to read hovers: the font is the same as the underlying text and the hover text does not stand out from the underlying text. And the fixed width font makes hovers wider than necessary. 

Look here: where is the hover?
![2016-02-20 14-33-36](https://cloud.githubusercontent.com/assets/1898161/13196972/746a61bc-d7df-11e5-883a-1a926573f05b.png)
</Description>
    <CreatedDate>20/02/2016</CreatedDate>
    <ClosedDate>22/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2821</IssueID>
    <Title>Permission problem?</Title>
    <Description>If I run VSCode as **root** from bash on Ubuntu/Xubuntu/Lubuntu/Kubuntu it doesn't respond on startup.
This problem occurred on fresh installs, in VMs, on both of my devices.
However running a quick `chown -R root:root /` fixed the problem (It is a local VM, so whatever).
[Disclaimer: Know what you do, do not copy paste that into your terminal]

Anyone else experienced the same on a Ubuntu based distro lately? On Debian/Arch it works just fine.

BTW: I couldn't install the omnisharp plugin for Atom because of the exact same reason.
</Description>
    <CreatedDate>09/02/2016</CreatedDate>
    <ClosedDate>09/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2731</IssueID>
    <Title>Extension tips should dynamically show only when there is something to show</Title>
    <Description>Otherwise it pushes other things to the right:

![image](https://cloud.githubusercontent.com/assets/900690/12843343/f02791c8-cbf8-11e5-8ff3-90f582eed1c2.png)
</Description>
    <CreatedDate>05/02/2016</CreatedDate>
    <ClosedDate>05/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2688</IssueID>
    <Title>[0.10.7] Should a developer's name show up in source for insiders build?</Title>
    <Description>I know we're not talking release quality code, that this is still beta...but I do wonder if `Insiders.app/Contents/Resources/app/extensions/jrieken.vscode-omnisharp/bin/omnisharp' with process id 47120...` should be there. The error is that Omnisharp is not starting "[ERROR:OmniSharp.Dnx.DesignTimeHostManager] Failed to launch DesignTimeHost in a timely fashion." 
But the main question is if code should include developers' names or be more generically named. 
</Description>
    <CreatedDate>04/02/2016</CreatedDate>
    <ClosedDate>04/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2591</IssueID>
    <Title>Auto Format setting(s)</Title>
    <Description>Could you please add a setting for where the brace gets placed when autoformat runs.

When the auto format runs it moves the brace to a new line. This is very annoying to me.
</Description>
    <CreatedDate>31/01/2016</CreatedDate>
    <ClosedDate>01/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2505</IssueID>
    <Title>editor.action.format does not use editor.insertSpaces?</Title>
    <Description>i have it set to false but format replaces tabs with spaces and there is no tabify command to repair it? thanks
</Description>
    <CreatedDate>28/01/2016</CreatedDate>
    <ClosedDate>01/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2413</IssueID>
    <Title>Resizing editor lets the scrollbar area flicker and jump heaviley</Title>
    <Description>![hover](https://cloud.githubusercontent.com/assets/900690/12608365/066870e8-c4dc-11e5-9a9f-ac1607ef0699.gif)

Can we do something maybe to improve this?
</Description>
    <CreatedDate>27/01/2016</CreatedDate>
    <ClosedDate>22/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>823</IssueID>
    <Title>Gallery should only install compatible extensions based on VSCode's version</Title>
    <Description>
    </Description>
    <CreatedDate>30/11/2015</CreatedDate>
    <ClosedDate>19/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>269</IssueID>
    <Title>Shell script to install vs code in Unix systems</Title>
    <Description>We need a shell script which will be a one click install for vs code in a unix machine, the thing is when we run the app in linux it opens as an internal app and it isn't registered with the machine, we need a `.desktop` file to register an app there, I am willing to submit the patch which I am writing to install vscode in my elementary os desktop, it'd be great if you guys accept it!

We can distribute it in the code and in the final release.
</Description>
    <CreatedDate>19/11/2015</CreatedDate>
    <ClosedDate>03/02/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2534</IssueID>
    <Title>Auto indent not working with Salsa</Title>
    <Description>- enable salsa
- write a function like `function() {`
- hint enter: :skull: indentation is off
</Description>
    <CreatedDate>29/01/2016</CreatedDate>
    <ClosedDate>29/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2314</IssueID>
    <Title>Updating to vscode alpha breaks my command line shrotcut</Title>
    <Description>I guess this is as designed, but should we somehow improve this experience?
Windows.

![image](https://cloud.githubusercontent.com/assets/1926584/12579941/f0de0b08-c42b-11e5-9609-16f45e790013.png)
</Description>
    <CreatedDate>26/01/2016</CreatedDate>
    <ClosedDate>26/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2277</IssueID>
    <Title>suggest details have no scrollbar</Title>
    <Description>![screen shot 2016-01-26 at 11 03 52](https://cloud.githubusercontent.com/assets/1794099/12577709/842de4b0-c41c-11e5-819e-c1415cde7247.png)
</Description>
    <CreatedDate>26/01/2016</CreatedDate>
    <ClosedDate>26/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2260</IssueID>
    <Title>Installing Extensions behind proxy fails</Title>
    <Description>On Windows, when I am behind a proxy server I am able to get the list of possible extensions to install but every time I try to install one of them it gives an error that it can't find the proxy server.  

Note in the error message that I replaced the real address with the text proxyAddress.  I did notice that some of the message has the port number appended twice.  

I tried using both the system environment variable for http_proxy and https_proxy as well as setting it just in the VS Code settings.json file.   Same error on both.

```
getaddrinfo ENOTFOUND proxyAddress:911 proxyAddress:911:911: Error: getaddrinfo ENOTFOUND proxyAddress:911 proxyAddress:911:911,    at errnoException (dns.js:25:10),    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:76:26)
```

About screen version info:

![image](https://cloud.githubusercontent.com/assets/708423/12568443/2ddf7a7c-c383-11e5-94ee-9bf0287b0de5.png)
</Description>
    <CreatedDate>25/01/2016</CreatedDate>
    <ClosedDate>26/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2162</IssueID>
    <Title>Problem installing extension</Title>
    <Description>If I try to install the extension, vscode asks to restart, then after restarting I see an "issue" at the bottom left of the vscode window.

[c:/Program Files (x86)/Microsoft VS Code/resources/app/extensions/csharp-o]: Cannot read file c:/Program Files (x86)/Microsoft VS Code/resources/app/extensions/csharp-o/package.json: ENOENT: no such file or directory, open 'c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\csharp-o\package.json'

This also breaks the install system, as the extension is half installed, I had to remove the extensions folder to fix that.
</Description>
    <CreatedDate>21/01/2016</CreatedDate>
    <ClosedDate>25/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2161</IssueID>
    <Title>Expose extension URL for SSL white listing</Title>
    <Description>doc feedback verbatim:
"please put the extensions url that visual studio code tries to reach (all of them) when installing an extension. we use ssl inspection and installation is failing because of certificates. but I'm not able to whitelist the urls"
</Description>
    <CreatedDate>21/01/2016</CreatedDate>
    <ClosedDate>25/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2114</IssueID>
    <Title>vsce should package closure without devDependencies</Title>
    <Description>Using mainly the default generated files from `generator-code`, a significant number of devDependencies (mostly recursive) are pulled in - mainly because of Mocha. For development this is fine (I love Mocha). But why blindly package them all with `vsce package`? Perhaps create an output directory of everything `vsce ls` would find but _node_modules_, then run `npm install --production` and package that directory. Would certainly reduce the size of VSCode extensions. Mine - with only the addition of 1 small module (with no dependencies itself) is over 5MB.
</Description>
    <CreatedDate>19/01/2016</CreatedDate>
    <ClosedDate>19/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2101</IssueID>
    <Title>snippets show 'undefined' in suggestion details</Title>
    <Description>![screen shot 2016-01-19 at 10 51 33](https://cloud.githubusercontent.com/assets/1794099/12415214/b40f7a86-be9a-11e5-87c8-e89045937974.png)
</Description>
    <CreatedDate>19/01/2016</CreatedDate>
    <ClosedDate>19/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2062</IssueID>
    <Title>C# Language Extension missing?!</Title>
    <Description>After updating I now receive an error.

[c:/Program Files (x86)/Microsoft VS Code/resources/app/extensions/csharp-o]: Cannot read file c:/Program Files (x86)/Microsoft VS Code/resources/app/extensions/csharp-o/package.json: ENOENT: no such file or directory, open 'c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\csharp-o\package.json'

Upon checking I found that the entire c# extension is empty and have found no solutions yet to remedy this.
</Description>
    <CreatedDate>16/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2056</IssueID>
    <Title>No intellisense for Javascript projects</Title>
    <Description>For example without even having to analyze user Javascript classes, basic intellisense is missing:

![screen shot 2016-01-15 at 5 11 58 pm](https://cloud.githubusercontent.com/assets/79215/12369394/374adca8-bbab-11e5-8537-771681f7fca6.png)

I type `test.`, nothing happens so I type `Ctrl-Space` and after 1-2 seconds(!) an empty menu comes up.

Function arguments aren't suggested:

![screen shot 2016-01-15 at 5 13 46 pm](https://cloud.githubusercontent.com/assets/79215/12369402/60b84a76-bbab-11e5-8993-1363213ebd4c.png)

My `jsconfig.json`:

```
{
    "compilerOptions": {
        "target": "ES6",
        "module": "commonjs"
    },
    "exclude": [
        "node_modules"
    ]
}
```
</Description>
    <CreatedDate>16/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2055</IssueID>
    <Title>Language: Javascript vs Language: Javascript React breaks context menu</Title>
    <Description>Context menu with Javascript:

![screen shot 2016-01-15 at 5 09 27 pm](https://cloud.githubusercontent.com/assets/79215/12369371/bf56a236-bbaa-11e5-81fb-0f3e51b3981b.png)

Context menu with Javascript React:

![screen shot 2016-01-15 at 5 08 56 pm](https://cloud.githubusercontent.com/assets/79215/12369366/b1f47d0c-bbaa-11e5-90c9-bea1a2957660.png)
</Description>
    <CreatedDate>16/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2050</IssueID>
    <Title>Git authentication</Title>
    <Description>Trying to publish while the repo url contains username will still ask me for username. 
Leaving empty or filling in the username and password will result in authentication fail by remote server.

Example, 
repo url: https://FilipDz@bitbucket.org/FilipDz/baze.git
username: &lt;empty&gt; or FilipDz
password: ******
output:
remote: Invalid username or password. If you log in via a third party service you must ensure you have an account password set in your account profile.
fatal: Authentication failed for 'https://FilipDz@bitbucket.org/FilipDz/node-baze.git/'
</Description>
    <CreatedDate>15/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2046</IssueID>
    <Title>Completion does not work with instanceof operator (typescript)</Title>
    <Description>With a typescript source file, when using the [type guarded type inference](https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#type-guards), the auto completion does not work...

An example :

```
if(myObj instanceof MyClass) {
    myObj.ab// hit Ctrl+Space, the autocompletion will not trigger but should propose members of MyClass
}
```

Thanks !
</Description>
    <CreatedDate>15/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>2027</IssueID>
    <Title>Suggest widget stalls typing</Title>
    <Description>- open viewLine.ts
- after the first interface in the file type as fast as you can
- `class HorizontalRange implements EditorBrowser.IHorizontalRange`

Please observe the 153ms stall due to `onDidSuggest` &gt; `refresh`

![image](https://cloud.githubusercontent.com/assets/5047891/12331073/46dddcce-bae8-11e5-8ad5-d174b972478f.png)
</Description>
    <CreatedDate>14/01/2016</CreatedDate>
    <ClosedDate>14/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1991</IssueID>
    <Title>Renaming local variable in Javascript crashes with "Maximum call stack size exceeded"</Title>
    <Description>See this handy gif:

![visual-studio-fail](https://cloud.githubusercontent.com/assets/79215/12303205/e97ba5a8-b9dd-11e5-9ea0-2b852101ac42.gif)

Here's a snippy snip of the last line of the developer console:

```
RangeError: Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded
    at o (typescriptServices.js:10)
    at n (typescriptServices.js:10)
    at r (typescriptServices.js:10)
    at o (typescriptServices.js:10)
    at n (typescriptServices.js:10)
    at r (typescriptServices.js:10)
    at o (typescriptServices.js:10)
    at n (typescriptServices.js:10)
    at r (typescriptServices.js:10)
    at o (typescriptServices.js:10)e.doShow @ workbench.main.js:63
workbench.main.js:16 Main Thread sent to worker the following message:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19
workbench.main.js:16 Object {type: "threadService", payload: Array[3]}
workbench.main.js:16 And the worker replied with an error:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19
workbench.main.js:16 Object {stack: "RangeError: Maximum call stack size exceeded↵    a…ript/common/js/importAndExportRewriter.js:4:3903)", message: "RangeError: Maximum call stack size exceeded"}
workbench.main.js:91 RangeError: Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded
    at importAndExportRewriter.js:4
    at r (typescriptServices.js:10)
    at Object.o [as forEachChild] (typescriptServices.js:10)
    at e._visitNode (importAndExportRewriter.js:4)
    at e.visitBinaryExpression (importAndExportRewriter.js:4)
    at importAndExportRewriter.js:4
    at r (typescriptServices.js:10)
    at Object.o [as forEachChild] (typescriptServices.js:10)
    at e._visitNode (importAndExportRewriter.js:4)
    at e.visitBinaryExpression (importAndExportRewriter.js:4)
```

...?
</Description>
    <CreatedDate>13/01/2016</CreatedDate>
    <ClosedDate>20/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1983</IssueID>
    <Title>DiffEditorWidget.setModel: Original model is null.</Title>
    <Description>Do some changes, open some files, try to view the changes in the diff view. Only started happening today (vscode cf459844188555d540353402b6849c2d91c05289). I occassionaly get the following:

![screen shot 2016-01-13 at 13 01 44](https://cloud.githubusercontent.com/assets/1926584/12293739/d3186c52-b9f5-11e5-9ab2-a1d838cae5d9.png)
</Description>
    <CreatedDate>13/01/2016</CreatedDate>
    <ClosedDate>13/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1974</IssueID>
    <Title>Add support for ES2016 Object Spread Initializer</Title>
    <Description>Object Spread Initializers is a proposed feature of ES2016 and is very useful when writing Redux reducers. The syntax is supported in babel, but when using the feature in Visual Studio Code it will mark the spread operator as a syntax error.

See: https://github.com/sebmarkbage/ecmascript-rest-spread/blob/master/Spread.md
for more information of the feature.

It would be very nice if Visual Studio Code did not mark the use of this feature as an error with a red squiggly.

The current behavior in Visual Studio Code is also described in Issue #1640 
</Description>
    <CreatedDate>13/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1970</IssueID>
    <Title>Random placement for Snippets in autocomplete</Title>
    <Description>The CSS snippets always show up in the auto-complete suggestions. This isn't ideal for CSS when completing values as they insert a bunch of properties, which isn't valid in that context. This isn't terrible as they're hidden at the end of the list, but in the latest code, they are included randomly, with one of them mostly (always?) showing first in the list:

See gradient, border and transition dispersed through the list, with border as the first completion
![screen shot 2016-01-12 at 6 21 47 pm](https://cloud.githubusercontent.com/assets/465069/12283201/5c619c7e-b959-11e5-9a7e-96dee55dcd9b.png)

They should be last like the old behaviour, and ideally not show up for value completions in CSS (although perhaps there could be snippets that are valid to be inserted in that position?)

Ideally there would be some kind of weighting or ordering to the list of initial completions, as they seem random currently. They're not in defined order in the source file or alphabetical. In an ideal world, I’d like the CSS wide keywords to be kept together and listed last and property specific features first (they're added that way when generating the file)
</Description>
    <CreatedDate>13/01/2016</CreatedDate>
    <ClosedDate>27/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1946</IssueID>
    <Title>expose command to preview/render html</Title>
    <Description>We should expose and document our commands to preview/render html from a text document, like preview markdown or render html from doc etc.
</Description>
    <CreatedDate>12/01/2016</CreatedDate>
    <ClosedDate>18/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1782</IssueID>
    <Title>Copy Line Down or Up Shortcut - Not Working</Title>
    <Description>The copy line down or up shortcuts are not working on Linux (currently using mint 17)
</Description>
    <CreatedDate>05/01/2016</CreatedDate>
    <ClosedDate>05/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1598</IssueID>
    <Title>install extension is slow (needs caching?)</Title>
    <Description>Invoking the command `ext install` repeatedly is really slow.

When you invoke the command, a little blue line scrolls horizontally to show it's doing something (fetching the extension database?), and eventually displays a list of extensions you can install. Repeatedly invoking the command should cache this work from last time, but it seems to re-fetch (or whatever it's doing) every time, which is fairly annoying when I want to install a few extensions at once.
</Description>
    <CreatedDate>23/12/2015</CreatedDate>
    <ClosedDate>04/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1576</IssueID>
    <Title>When I opened my solution, always got this error message.</Title>
    <Description>When I opened my solution, always got this error message.I am from China.
My dev-environment:

&gt; OS: Microsoft Windows 10
&gt; IDE: Visual Studio Code 0.10.5
&gt; DNX: 1.0.0-rc1-update1

**The solution created by visual studio 2013.**

---

*.csproj
   �� Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)
   �� Microsoft.Build.Evaluation.Project.Data.InitializeForEvaluation(IToolsetProvider toolsetProvider)
   �� Microsoft.Build.Evaluation.Evaluator`4..ctor(IEvaluatorData`4 data, ProjectRootElement projectRootElement, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)
   �� Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCache projectRootElementCache, BuildEventContext buildEventContext, ProjectInstance projectInstanceIfAnyForDebuggerOnly)
   �� Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation)
   �� Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings)
   �� Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings)
   �� Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)
   �� OmniSharp.MSBuild.ProjectFile.ProjectFileInfo.Create(MSBuildOptions options, ILogger logger, String solutionDirectory, String projectFilePath, ICollection`1 diagnostics)
   �� OmniSharp.MSBuild.MSBuildProjectSystem.CreateProject(String projectFilePath)
</Description>
    <CreatedDate>22/12/2015</CreatedDate>
    <ClosedDate>20/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1509</IssueID>
    <Title>C# intellisense broken in constructors (0.10.5)</Title>
    <Description>For regular C# functions, intellisense works as expected:
![screen shot 2015-12-20 at 18 13 01](https://cloud.githubusercontent.com/assets/594564/11918988/59a01e0a-a745-11e5-8d09-fb4790af69d8.png)

However, no intellisense shows up for constructors:
![screen shot 2015-12-20 at 18 12 21](https://cloud.githubusercontent.com/assets/594564/11918989/6dd4fb48-a745-11e5-8736-55dd50bb501a.png)
</Description>
    <CreatedDate>20/12/2015</CreatedDate>
    <ClosedDate>20/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1320</IssueID>
    <Title>Can't install extensions through proxy on windows </Title>
    <Description>The List of extensions is displayed, but when I click on one iE `Elm` it shows

`Error` `getaddrinfo ENOTFOUND marketplace.visualstudio.com marketplace.visualstudio.com:443`

Vscode was started from the commandline  with 

```
&gt;set | grep proxy
https_proxy=http://user:pw@ip:port
http_proxy=http://user:pw@ip:port
```

System proxy is defined though an `Automatic configuration script` via th url of a *.pac file.
When I start `vscode` from start, without those  environment variables, the above error shows already when loading the list of extensions.

PS. Thanks for the great work. 
</Description>
    <CreatedDate>15/12/2015</CreatedDate>
    <ClosedDate>04/01/2016</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1434</IssueID>
    <Title>Show syntax error while open all es6 files in folder 'node_modules' and it subfolders, and</Title>
    <Description>Show syntax error while open all es6 files in folder 'node_modules' and it's subfolders, and reopen the file, will show repeatedly syntax error in multilines.

open the es6 project:
![1](https://cloud.githubusercontent.com/assets/12825770/11888441/91b6ae54-a578-11e5-8d3d-d7e2b1550e98.GIF)
open es6 file in root folder, no syntax error:
![2](https://cloud.githubusercontent.com/assets/12825770/11888442/91dde730-a578-11e5-8545-207daa8a6c2e.GIF)
but, open the es6 file in folder 'node_modules', will show  syntax error:
![3](https://cloud.githubusercontent.com/assets/12825770/11888445/91f47298-a578-11e5-8e98-fcd33c961c77.GIF)
text of  syntax error:
![4](https://cloud.githubusercontent.com/assets/12825770/11888446/91f6dac4-a578-11e5-84c3-3374070c9f29.GIF)
show same error while open es6 file in subfolder of  'node_modules':
![5](https://cloud.githubusercontent.com/assets/12825770/11888444/91f3cc94-a578-11e5-85fa-41b15681329a.GIF)
open others not in folder 'node_modules',  no syntax error:
![6](https://cloud.githubusercontent.com/assets/12825770/11888447/91f91960-a578-11e5-8bd3-3ef885870baf.GIF)

and, will show repeatedly syntax error in multilines while reopen the es6 file which has syntax error:
![7](https://cloud.githubusercontent.com/assets/12825770/11888443/91ef39a4-a578-11e5-9833-e85635d4ef1d.GIF)
repoen repeatedly:
![8](https://cloud.githubusercontent.com/assets/12825770/11888448/9217c086-a578-11e5-9983-a74781c50a00.GIF)
![9](https://cloud.githubusercontent.com/assets/12825770/11888449/921ec390-a578-11e5-82bf-a13588d5b327.GIF)
</Description>
    <CreatedDate>18/12/2015</CreatedDate>
    <ClosedDate>18/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1332</IssueID>
    <Title>All of the sudden today I keep getting a prompt to reinstall VSCode and it keeps failing</Title>
    <Description>I see the following error after choosing to restart VSCode after prompting to install the update.

&gt; The setup files are corrupted. Please obtain a new copy of the program.

Version 0.10.3
Commit 783ecf841a2b21edca6d86853670cae89b4c244f
Date 2015-11-26T14:06:31.538Z
Shell 0.34.1
Renderer 45.0.2454.85
Node 4.1.1

I've attempted to uninstall and reinstall VSCode but that hasn't seemed to help at all. I still get the same attempted update behavior.
</Description>
    <CreatedDate>15/12/2015</CreatedDate>
    <ClosedDate>15/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1132</IssueID>
    <Title>quickSuggestions auto completes numbers with decimals</Title>
    <Description>In the latest update (Version 0.10.3 (0.10.3) on Mac ), typing a number with a decimal autocompletes suggestions for other libraries in tsd.d.ts.

Example attached shows attempt to type "0.1" and "1.1"

"Power0" autocompletes with ease from tweenMax

Seems to be no way past this without removing quickSuggestions.

TSD has :

``` typescript
    /// &lt;reference path="greensock/greensock.d.ts" /&gt;
    /// &lt;reference path="pixi.js/pixi.js.d.ts" /&gt;
    /// &lt;reference path="createjs-lib/createjs-lib.d.ts" /&gt;
    /// &lt;reference path="createjs/createjs.d.ts" /&gt;
    /// &lt;reference path="easeljs/easeljs.d.ts" /&gt;
    /// &lt;reference path="tweenjs/tweenjs.d.ts" /&gt;
    ///&lt;reference path="requirejs/require.d.ts" /&gt;
```

![vs-code-autocomplete](https://cloud.githubusercontent.com/assets/4097335/11683880/b4e2c18e-9e65-11e5-8f6d-0403dfd978da.gif)
</Description>
    <CreatedDate>09/12/2015</CreatedDate>
    <ClosedDate>09/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1119</IssueID>
    <Title>Corrupted extension in the extensions folder</Title>
    <Description>(extracted from #1095)

Some time ago I've uninstalled the tslint extension. The extension was not completely removed. 
It was still in the extensions folder and consisted of empty folders only and no package.json file.

I cannot reproduce how this happened but we should recover from such incomplete extensions, so that the user doesn't have to go in manually and clean-up the extension.

On startup there is a warning that the extension is incomplete, i.e., that there is no package.json. This warning should be shown to the user and there should be a command provided that allows cleaning up such a partial extension.
</Description>
    <CreatedDate>09/12/2015</CreatedDate>
    <ClosedDate>09/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>1017</IssueID>
    <Title>Triple click selection seems to render a single line's selection twice</Title>
    <Description>Best seen on dark themes.

In the following screenshots, I triple-clicked line 381. Then I dragged down to the next line. Notice that when only line 381 is selected, the selection is brighter and misses rounded corners. As soon as I drag the selection down, the selection is OK.

![image](https://cloud.githubusercontent.com/assets/22350/11592132/0173655c-9a9d-11e5-8740-05b1578db0ea.png)

![image](https://cloud.githubusercontent.com/assets/22350/11592139/07f2f3c0-9a9d-11e5-8cd9-8a9afa7de08f.png)
</Description>
    <CreatedDate>04/12/2015</CreatedDate>
    <ClosedDate>09/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>987</IssueID>
    <Title>Can't use Git command line when Visual Studio Code is open</Title>
    <Description>It looks like Visual Studio Code locks some files and I can't use the command line Git client when it is open. Closing Visual Studio Code resolves this issue. The index.lock file did not exist when I checked for it so it must be preventing the command line client from working in some other way. Here's the output from the command line client:

Updating ca3f107..3e957b8
fatal: Unable to create 'C:/dev/GIS/.git/index.lock': File exists.

If no other git process is currently running, this probably means a
git process crashed in this repository earlier. Make sure no other git
process is running and remove the file manually to continue.
</Description>
    <CreatedDate>03/12/2015</CreatedDate>
    <ClosedDate>04/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>954</IssueID>
    <Title>Install extensions under proxy problem</Title>
    <Description>I have set up my corporate proxy as explained on the documentation.

But every time that I try to download an extension with `ext install extensionname`, it fails with this error:

![connection error](http://i.imgur.com/WI0oQWA.png)
</Description>
    <CreatedDate>03/12/2015</CreatedDate>
    <ClosedDate>03/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>923</IssueID>
    <Title>"Install Extensions" does not cache list</Title>
    <Description>Each time I do `Cmd-Shift-P` and `Install Extensions` it takes ages for the list of extensions to come up. Like literally a minute or more. 

And it doesn't seem to cache the result. It's like it has to download them each time, even if it's only a second or two after I last pulled it up.

Frustrating - like using yum in Fedora used to be. 

apt-get in Ubuntu would cache results and was always more perfomant and responsive, with a slight cost in synchronisation with the latest available packages. 

It would work for me if it downloaded the latest package list when requested - and continued to download it even when it loses focus and closes. And then uses that cached list until the program is restarted, or does the same background load if it is opened again after ten minutes. 

That way I have a delay the first time I open it, but I can keep working. At the moment I have to literally stop working _on_anything_ and wait for the list to load.
</Description>
    <CreatedDate>02/12/2015</CreatedDate>
    <ClosedDate>02/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>897</IssueID>
    <Title>Merge conflict text decorations not getting properly cleared</Title>
    <Description>Steps to reproduce:
1. Find a merge conflict
   ![image](https://cloud.githubusercontent.com/assets/9221137/11520395/a68862c2-9868-11e5-9296-026e4070ee08.png)
2. Press backspace twice on the line containing `======`
3. Undo the changes
4. Repeat 2-3 a couple times

The text decorations will stack as shown below.
![image](https://cloud.githubusercontent.com/assets/9221137/11520447/26f7fd14-9869-11e5-9eae-705852c134af.png)

Also once the text decorations are stacked you can spread the text decoration to multiple lines like so.
![image](https://cloud.githubusercontent.com/assets/9221137/11520481/760ec14e-9869-11e5-9c42-971803fae09d.png)
</Description>
    <CreatedDate>02/12/2015</CreatedDate>
    <ClosedDate>02/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>888</IssueID>
    <Title>Intellisense help text is truncated</Title>
    <Description>&lt;img width="555" alt="screen shot 2015-12-01 at 3 08 08 pm" src="https://cloud.githubusercontent.com/assets/466713/11517308/65011810-983d-11e5-9218-64ddc2d406a8.png"&gt;

The help text for the JSON property is truncated, so it ends with "Can be omitted if ......."

Cheers,
Trevor Sullivan
Microsoft MVP: PowerShell
</Description>
    <CreatedDate>01/12/2015</CreatedDate>
    <ClosedDate>02/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>873</IssueID>
    <Title>cant update. Setup files corrupted</Title>
    <Description>Code says there is an update.  when I click  update I get an error dialog saying "The setup files are corrupted.  Please obtain a new copy of the program"  What does that mean in practice? 

The net result is that I am unable to update VS Code.  

I'll uninstall and reinstall to see if that helps.
</Description>
    <CreatedDate>01/12/2015</CreatedDate>
    <ClosedDate>02/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>863</IssueID>
    <Title>Request: Git features should be available when working on a project that's below the git repo root</Title>
    <Description>Howdy!

Due to some unfortunate circumstances I'm currently stuck working on a project that's a subdirectory in part of a larger git repo. To open the entire repo directory would be a bit of a pain as well. I can work on the project just fine otherwise but none of the git features are currently available which is a disappointment.

What's preventing Code from being able to use Git regardless of the opened project folder location (relative to the git root)?

The contrived example layout:

```
/projects/engine/ &lt;--- root of the repo
/projects/engine/tools/my_application/ &lt;--- here sits a package.json, gulpfile.js, etc etc
```
</Description>
    <CreatedDate>01/12/2015</CreatedDate>
    <ClosedDate>01/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>768</IssueID>
    <Title>Does VS code support automatically importing components for Typescript?</Title>
    <Description>Are there any plans to supports automatic imports for typescript?   I don't think this currently works even if typings files are included.

Thanks.
</Description>
    <CreatedDate>28/11/2015</CreatedDate>
    <ClosedDate>08/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>577</IssueID>
    <Title>Edit of adjacent ranges does not work.</Title>
    <Description>_From @vilic on October 31, 2015 17:29_

For example:

``` ts
edit.delete(new Range(1, 1, 1, 2));
edit.delete(new Range(1, 2, 1, 3));
```

This issue applies to other operations like `replace` as well.

_Copied from original issue: Microsoft/vscode-extensionbuilders#72_
</Description>
    <CreatedDate>24/11/2015</CreatedDate>
    <ClosedDate>11/12/2015</ClosedDate>
  </Issue>
  <Issue>
    <IssueID>95</IssueID>
    <Title>ES6 support does not work</Title>
    <Description>When I open any file in my ES6 Javascript project, every single line is underlined in red, with errors like:

![screen shot 2015-11-18 at 12 03 09 pm](https://cloud.githubusercontent.com/assets/79215/11252725/88d3c130-8dec-11e5-9b18-3f5bc4337bfe.png)

In my project's root, I have a `jsconfig.json` file with the following contents:

```
{
    "compilerOptions": {
        "target": "ES6",
        "module": "commonjs"
    },
    "files": [
        "app/"
    ]
}
```

The file in question lives inside the `app` folder.
</Description>
    <CreatedDate>18/11/2015</CreatedDate>
    <ClosedDate>04/12/2015</ClosedDate>
  </Issue>
</Issues>