IssueID,Title,Description,Title_Description,PullRequestID,FixedByID,RepoID
2637,CreateAssemblyInfo alias creates invalid file when using .vb,"When running the following cake script:

```
Task(""Default"")
  .Does(() =>
{
  var file = ""./SolutionInfo.vb"";
var version = ""0.0.1"";
var buildNo = ""123"";
var semVersion = string.Concat(version + ""-"" + buildNo);
CreateAssemblyInfo(file, new AssemblyInfoSettings {
    Product = ""SampleProject"",
    Version = version,
    FileVersion = version,
    InformationalVersion = semVersion,
    Copyright = string.Format(""Copyright (c) Contoso 2014 - {0}"", DateTime.Now.Year),
    ComVisible = true
});
});

RunTarget(""Default"")
```

The following file is generated:

```
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by Cake.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System.Reflection
Imports System.Runtime.InteropServices

<Assembly: AssemblyProduct(""SampleProject"")>
<Assembly: AssemblyVersion(""0.0.1"")>
<Assembly: AssemblyFileVersion(""0.0.1"")>
<Assembly: AssemblyInformationalVersion(""0.0.1-123"")>
<Assembly: AssemblyCopyright(""Copyright (c) Contoso 2014 - 2019"")>
<Assembly: ComVisible(true)>
```

This is invalid, as this should be `True` not `true` for the ComVisible attribute.","CreateAssemblyInfo alias creates invalid file when using .vb  When running the following cake script:

```
Task(""Default"")
  .Does(() =>
{
  var file = ""./SolutionInfo.vb"";
var version = ""0.0.1"";
var buildNo = ""123"";
var semVersion = string.Conca",2639,gep13,cake
2638,CreateAssemblyInfo alias should allow creation of custom boolean attributes and also empty attributes,"Currently, it is possible to use the CustomAttributes collection of the AssemblyInfoSettings class to create custom attributes that are not covered in the base AssemblyInfoSettings class.  However, it is not currently possible to create a custom attribute that looks like the following:

```
[assembly: CustomAttributeA(false)]
```

or like this:

```
[assembly: CustomAttributeB()]
```

This is due in part to the fact that the CreateAssemblyInfo alias was never intended to cover all bases, however, I believe that this scenario is common enough that it should be possible.

This is NOT related to this issue: https://github.com/cake-build/cake/issues/1027 which is actually looking for a new alias `ModifyAssemblyInfo`, which knows and understands all the attributes in the assemblyinfo file.  This issue is constrained only to the CreateAssemblyInfo alias.","CreateAssemblyInfo alias should allow creation of custom boolean attributes and also empty attributes  Currently, it is possible to use the CustomAttributes collection of the AssemblyInfoSettings class to create custom attributes that are not covered in t",2639,gep13,cake
2499,NuGet Pack with assembly references support,"### What You Are Seeing?

With current `NuGetPackSettings` it is not possible to add assembly references to the NuGet package.

### What is Expected?

Possibility to add assembly references to NuGet package (like with `NuSpecDependency` for NuGet dependencies of the package).

### What version of Cake are you using?

- 0.32.1

### Are you running on a 32 or 64 bit system?

- x64

### What environment are you running on?  Windows? Linux? Mac?

- Win 10
- macOS

### Are you running on a CI Server?  If so, which one?

- GitLab CI

### XML example

```xml
<?xml version=""1.0"" encoding=""utf-8""?>
<package xmlns=""http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd"">
  <metadata>
    <id>RSAG.Xam.RtfEditor</id>
    <version>0.1.0-alpha0005</version>
    <title>RTF edit and view controls</title>
...
    <dependencies>
      <group targetFramework="".NETStandard2.0"">
        <dependency id=""Syncfusion.Xamarin.DocIO"" version=""16.4.0.54"" />
        <dependency id=""Xamarin.Forms"" version=""3.4.0.1029999"" />
      </group>
      <group targetFramework=""MonoAndroid5.0"">
        <dependency id=""Syncfusion.Xamarin.DocIO"" version=""16.4.0.54"" />
        <dependency id=""Xamarin.Forms"" version=""3.4.0.1029999"" />
      </group>
      <group targetFramework=""Xamarin.iOS1.0"">
        <dependency id=""Syncfusion.Xamarin.DocIO"" version=""16.4.0.54"" />
        <dependency id=""Xamarin.Forms"" version=""3.4.0.1029999"" />
      </group>
      <group targetFramework=""UAP0.0"">
        <dependency id=""Microsoft.NETCore.UniversalWindowsPlatform"" version=""6.2.7"" />
        <dependency id=""Syncfusion.Xamarin.DocIO"" version=""16.4.0.54"" />
        <dependency id=""Xamarin.Forms"" version=""3.4.0.1029999"" />
      </group>
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName=""Mono.Android.Export"" targetFramework=""MonoAndroid1.0"" />
    </frameworkAssemblies>
  </metadata>
</package>
```","NuGet Pack with assembly references support  ### What You Are Seeing?

With current `NuGetPackSettings` it is not possible to add assembly references to the NuGet package.

### What is Expected?

Possibility to add assembly references to NuGet packa",2516,daveMueller,cake
2156,Add newer nuspec properties to NuGetPackSettings,"`NuGetPackSettings` (and related classes) should implement the newer properties documented in https://docs.microsoft.com/en-au/nuget/reference/nuspec (and https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Packaging/compiler/resources/nuspec.xsd)

In particular the PackageReference-related properties like contentFiles etc",Add newer nuspec properties to NuGetPackSettings  `NuGetPackSettings` (and related classes) should implement the newer properties documented in https://docs.microsoft.com/en-au/nuget/reference/nuspec (and https://github.com/NuGet/NuGet.Client/blob/dev/src,2516,daveMueller,cake
2375,Add convenience extensions to TextTransformationExtensions,"I would like to add convenience extensions to TextTransformationExtension:

Support for dictionaries:

```c#
public static TextTransformation<TTemplate> WithTokens<TTemplate>(
    this TextTransformation<TTemplate> transformation, IDictionary<string, object> tokens)
    where TTemplate : class, ITextTransformationTemplate
{
    if (transformation != null && tokens != null)
    {
        foreach (var token in tokens)
        {
            if (token.Value != null) // leave placeholder for tokens without a value
            {
                transformation.Template.Register(token.Key, token.Value);
            }
        }
    }
    return transformation;
}
```
Support for shallow object properties, with optional key prefix, that feeds the first extension method:
```c#
public static Dictionary<string, object> ToTokens(this object value, string prefix = null, BindingFlags? bindingAttr = null)
{
    return value?.GetType()
        .GetProperties(bindingAttr ?? BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public)
        .ToDictionary(property => string.Concat(prefix, property.Name), property => property.GetValue(value));
}
```

Thoughts? Happy to submit a PR!","Add convenience extensions to TextTransformationExtensions  I would like to add convenience extensions to TextTransformationExtension:

Support for dictionaries:

```c#
public static TextTransformation<TTemplate> WithTokens<TTemplate>(
    this Text",2509,gitfool,cake
2124,Add Support for IEnumerable tokens on TextTransformationExtensions,"I would like to add the ability for adding a dictionary of tokens.

I have a JSON file of key values, and when I use newtonsoft to deserialize, it defaults into an IDictionary<string,object>, and so I'd like to simply pass that into the TextTransform Extension Method.","Add Support for IEnumerable tokens on TextTransformationExtensions  I would like to add the ability for adding a dictionary of tokens.

I have a JSON file of key values, and when I use newtonsoft to deserialize, it defaults into an IDictionary<string,ob",2509,gitfool,cake
2457,GH2456: Add logging aliases to override the log verbosity,"Fixes #2456:
- Add `Disposable` helper for creating anonymous disposables
- Refactor `TeamCityDisposableExtensions` to use `Disposable` helper
- Add logging aliases and extension methods:
  - QuietVerbosity, MinimalVerbosity, NormalVerbosity, VerboseVerbosity, DiagnosticVerbosity

Example usage:
```c#
Task(""Test"")
    .Does(() =>
{
    Debug(""Hide me"");
    using (DiagnosticVerbosity())
    {
        Error(""Show me."");
        Warning(""Show me."");
        Information(""Show me."");
        Verbose(""Show me."");
        Debug(""Show me."");
    }
    Debug(""Hide me again"");
});
```","GH2456: Add logging aliases to override the log verbosity  Fixes #2456:
- Add `Disposable` helper for creating anonymous disposables
- Refactor `TeamCityDisposableExtensions` to use `Disposable` helper
- Add logging aliases and extension methods:
  -",2486,gitfool,cake
820,Log tools command-line at higher log level (preferably default),"I'm used to and prefer being able to see the command-line of all tools being run by default. This is also the behavior in TeamCity. Obviously subjective though.

References:
- [ProcessRunner.cs#L63](https://github.com/cake-build/cake/blob/develop/src/Cake.Core/IO/ProcessRunner.cs#L63)
- [ProcessWrapper.cs#L61](https://github.com/cake-build/cake/blob/develop/src/Cake.Core/IO/ProcessWrapper.cs#L61)","Log tools command-line at higher log level (preferably default)  I'm used to and prefer being able to see the command-line of all tools being run by default. This is also the behavior in TeamCity. Obviously subjective though.

References:
- [ProcessRun",2486,gitfool,cake
2270,Allow to listen and modify redirected standard output of a process,"Currently `ProcessAliases` do not allow to receive and modify (or filter) other process's outputs in real time while the process is running.

I am implementing wrappers for command line tools like SVN, xcodebuild and it would be great to have an opportunity to pipe outputs of tools or modify it for better build logs.

After a short Gitter discussion there is a suggestion to add following output handlers to `ProcessSettings`:

```
public Func<string, string> RedirectedStandardOutputHandler;
public Func<string, string> RedirectedStandardErrorHandler;
```

By @devlead:
> if one would want to filter out sensitive information i.e. one could retract that from the buffer and null if it should be totally omitted.","Allow to listen and modify redirected standard output of a process  Currently `ProcessAliases` do not allow to receive and modify (or filter) other process's outputs in real time while the process is running.

I am implementing wrappers for command line",2447,fseegraeber,cake
2354,NuGetPush alias should capture NuGet.exe output,"When pushing with NuGetPush and expecting something like a failure because of a disabled package override on the NuGet Feed.

The expected NuGet.exe output is: 
`Response status code does not indicate success: 403 (Package Already Exists)`

However it is not captured and instead the actual return in OnError(exception => { ... }); is:
`NuGet: Process returned an error (exit code 1)`

Relevant Gitters:
[November 8, 2018 8:10 AM](https://gitter.im/cake-build/cake?at=5be3e1532138723405d2cbf5)
[November 8, 2018 9:53 AM](https://gitter.im/cake-build/cake?at=5be3f98092b7d1172156dfb8)
[November 8, 2018 11:20 AM](https://gitter.im/cake-build/cake?at=5be40e07d001b917202969c9)","NuGetPush alias should capture NuGet.exe output  When pushing with NuGetPush and expecting something like a failure because of a disabled package override on the NuGet Feed.

The expected NuGet.exe output is: 
`Response status code does not indicate su",2447,fseegraeber,cake
1485,Enable correlation of stdout and stderr in ProcessRunner,"The way `ProcessRunner` is implemented right now, redirected stdout and stderror cannot be correlated. The output is [buffered into two different queues](https://github.com/cake-build/cake/blob/v0.17.0/src/Cake.Core/IO/ProcessRunner.cs#L113-L140).

The API is designed such that you are forced to consume each collection of lines separately. [`IProcess.GetStandardOutput()` and `GetStandardError()`](https://github.com/cake-build/cake/blob/v0.17.0/src/Cake.Core/IO/IProcess.cs#L33-L43)

This means that if any script or module needs to redirect them, there is no way to piece back together the order of events:
```
[stdout] Executing test A
[stderr] Error message
[stdout] Executing test B
[stderr] Error message
[stdout] Executing test C
```
You will have to choose between showing all error output first or all last:
```
[stdout] Executing test A
[stdout] Executing test B
[stdout] Executing test C
[stderr] Error message
[stderr] Error message
```

This is a particular blocker for #156, allowing parallel execution of tasks. My [output buffering prototype](https://github.com/cake-build/cake/issues/156#issuecomment-272663967) works well except that it's impossible to buffer the correct order of error and output lines without me duplicating and fixing the implementation of `ProcessRunner`.

**The important part** though is that this is an issue you'll want to deal with at some point for sure. You'll have to use something like my buffering prototype to make #156 useful. Also, this affects ordinary modules, some of which need to redirect standard output and errors. The sooner this can be resolved the better.

---

I propose changing [`ProcessRunner`](https://github.com/cake-build/cake/blob/v0.17.0/src/Cake.Core/IO/ProcessRunner.cs#L113-L140) to put both stdout and stderr lines in the same queue with an extra bit to indicate which are stdout and which are stderr.

I propose exposing an `IProcess.GetRedirectedLines()` which returns an `IEnumerable<RedirectedLine>` with `struct RedirectedLine` containing `string Line` and `StreamType Type` with `enum StreamType { StdOut, StdErr }`.

Lastly, I propose using `BlockingCollection<RedirectedLine>` as the actual backing queue. This has immense technical benefits. You call `Add` when stdout or stderr events are raised and you call `CompleteAdding` when the process exit event is raised. It becomes super easy to build an enumerator which actually blocks [without burning CPU like the current enumerator does](https://github.com/cake-build/cake/blob/v0.17.0/src/Cake.Core/IO/ProcessWrapper.cs#L80-L85).
`BlockingCollection.TryTake(out item, Timeout.Infinite)` is the best possible way to handle this. It returns  true and an item as soon as one is available, it returns false when the blocking collection is complete and there are no items, and it blocks until one of those two things happens. It's a direct translation to the `MoveNext` behavior you want.

I'm happy to write up a PR if you want to see what this looks like in practice.","Enable correlation of stdout and stderr in ProcessRunner  The way `ProcessRunner` is implemented right now, redirected stdout and stderror cannot be correlated. The output is [buffered into two different queues](https://github.com/cake-build/cake/blob/v0.",2447,fseegraeber,cake
2026,Support for additional SignTool flags,"`Cake.Common.Tools.SignTool` is currently missing support for several flags relating to certificate locations. 

All of these should be optional, I'd propose the following additional properties are added to the `SignToolSignSettings` class:

signtool sign flag | Property Name | Type
------------ | ------------- | -------------
`/ac` | AdditionalCertificatePath | `string`
`/s` | CertStoreName | `string`
`/sm` | UseMachineStore | `bool`

Additionally, the `TimeStampUri` property of `SignToolSettings` is currently mandatory due to the following code in `SignToolSignRunner.cs`:

    if (settings.TimeStampUri == null)
    {
    	const string format = ""{0}: Timestamp server URL is required but not specified."";
    	var message = string.Format(CultureInfo.InvariantCulture, format, GetToolName());
    	throw new CakeException(message);
    }

Using a timestamp server should be completely optional as it significantly slows down the signing process and is often unnecessary for things such as internal release builds.

Also, it's worth noting that it's not possible to use `ProcessArgumentBuilder`'s `Append()` or `Prepend()` methods to add any parameters to SignTool either, as `Prepend()` inserts them before the ""sign"" parameter of ""signtool.exe sign"", and `Append()` inserts them after the list of files to sign. Currently we're using reflection to insert into the private `_tokens` list within `ProcessArgument` which is obviously not ideal.","Support for additional SignTool flags  `Cake.Common.Tools.SignTool` is currently missing support for several flags relating to certificate locations. 

All of these should be optional, I'd propose the following additional properties are added to the `Si",2437,jhromadik,cake
2372,GH2424: Adds /sm argument to SignTool,"","GH2424: Adds /sm argument to SignTool  ",2437,jhromadik,cake
2420,Add new label alias for GitReleaseManager,"With the release of GitReleaseManager 0.8.0, a new label verb has been created which allows the creation of standard labels for GitHub issues.

A new alias needs to be created within Cake.Common to exercise this verb.","Add new label alias for GitReleaseManager  With the release of GitReleaseManager 0.8.0, a new label verb has been created which allows the creation of standard labels for GitHub issues.

A new alias needs to be created within Cake.Common to exercise thi",2422,gep13,cake
2419,Extend GitReleaseManager aliases to use token parameter,"With the release of GitReleaseManager 0.8.0 a new token parameter has been added.  This can be used instead of the username/password combination.

Additional aliases will have to be created for each function of GitReleaseManager to allow this to work.","Extend GitReleaseManager aliases to use token parameter  With the release of GitReleaseManager 0.8.0 a new token parameter has been added.  This can be used instead of the username/password combination.

Additional aliases will have to be created for ea",2422,gep13,cake
2381,Zip should behave by default like standard Zip utilities,"Specifically, the following subtle but very important behaviors are expected:
- Directories should be stored as zip entries
- Empty directories should be included

For example, consider the following directory structure:
- Root/
  - Root.txt
  - Empty/
  - First/
    - First.txt
    - Nested/
      - Nested.txt

When archived by Cake Zip it looks like the following (using the flat view in 7-Zip):

![image](https://user-images.githubusercontent.com/750121/49691179-943afb80-fba1-11e8-971d-07caf103a77f.png)

When archived by Windows built-in zip, [7-Zip](https://www.7-zip.org/), [WinZip](https://www.winzip.com/), and [WinRAR](https://win-rar.com/), it looks like the following:

![image](https://user-images.githubusercontent.com/750121/49691149-22fb4880-fba1-11e8-9582-8df5d3fc3953.png)

Only the _file_ compression method differs between the various utilities; some will `Store` them rather then `Deflate` them, depending on compression level. Note that all directories are stored, including empty directories.

As trivial as it sounds, I really need this behavior, without needing another dependency. PR incoming! 😉","Zip should behave by default like standard Zip utilities  Specifically, the following subtle but very important behaviors are expected:
- Directories should be stored as zip entries
- Empty directories should be included

For example, consider the fol",2382,gitfool,cake
1283,Empty folders are not included in a ZIP archive,"### What You Are Seeing?

I'm trying to create a ZIP archive with pre-defined folder structure. Some folders are empty. After using `Zip(""./Package"", ""Package.zip"");`, I see that Package.zip is created, but when I look inside it, there are no empty folders. Only folders with files are included.
### What is Expected?

I expect empty folders to be present in the ZIP archive.
### What version of Cake are you using?

0.16.2.
### Are you running on a 32 or 64 bit system?

64-bit.
### What environment are you running on?  Windows? Linux? Mac?
- Windows 10 (1511).
- Ubuntu 16.04.1.
### Are you running on a CI Server?  If so, which one?

No.
### How Did You Get This To Happen? (Steps to Reproduce)

Create the following folder structure:

```
+ Package
|  + Empty
|  + NotEmpty
|  |  - File.txt
```

In the `build.cake` perform `Zip(""./Package"", ""Package.zip"");`.
### Output Log

``` sh
Feeds used:
  /home/havok/.local/share/NuGet/Cache
  /home/havok/.nuget/packages/
  https://api.nuget.org/v3/index.json

All packages listed in /home/havok/Projects/Cake/ZipEmptyFolders/tools/packages.config are already installed.
Module directory does not exist.
Analyzing build script...
Analyzing /home/havok/Projects/Cake/ZipEmptyFolders/build.cake...
Processing build script...
Creating script session...
Adding reference to Cake.Core.dll...
Adding reference to Cake.Common.dll...
Adding reference to Cake.exe...
Adding reference to System.Xml.dll...
Adding reference to System.Xml.Linq.dll...
Adding reference to System.Data.dll...
Importing namespace Cake.Common...
Importing namespace Cake.Common.Build...
Importing namespace Cake.Common.Build.AppVeyor...
Importing namespace Cake.Common.Build.AppVeyor.Data...
Importing namespace Cake.Common.Build.BitbucketPipelines...
Importing namespace Cake.Common.Build.BitbucketPipelines.Data...
Importing namespace Cake.Common.Build.Bitrise...
Importing namespace Cake.Common.Build.Bitrise.Data...
Importing namespace Cake.Common.Build.ContinuaCI...
Importing namespace Cake.Common.Build.ContinuaCI.Data...
Importing namespace Cake.Common.Build.Jenkins...
Importing namespace Cake.Common.Build.Jenkins.Data...
Importing namespace Cake.Common.Build.TravisCI...
Importing namespace Cake.Common.Build.TravisCI.Data...
Importing namespace Cake.Common.Diagnostics...
Importing namespace Cake.Common.IO...
Importing namespace Cake.Common.IO.Paths...
Importing namespace Cake.Common.Net...
Importing namespace Cake.Common.Security...
Importing namespace Cake.Common.Solution...
Importing namespace Cake.Common.Solution.Project...
Importing namespace Cake.Common.Solution.Project.Properties...
Importing namespace Cake.Common.Solution.Project.XmlDoc...
Importing namespace Cake.Common.Text...
Importing namespace Cake.Common.Tools...
Importing namespace Cake.Common.Tools.Cake...
Importing namespace Cake.Common.Tools.Chocolatey...
Importing namespace Cake.Common.Tools.Chocolatey.ApiKey...
Importing namespace Cake.Common.Tools.Chocolatey.Config...
Importing namespace Cake.Common.Tools.Chocolatey.Features...
Importing namespace Cake.Common.Tools.Chocolatey.Install...
Importing namespace Cake.Common.Tools.Chocolatey.Pack...
Importing namespace Cake.Common.Tools.Chocolatey.Pin...
Importing namespace Cake.Common.Tools.Chocolatey.Push...
Importing namespace Cake.Common.Tools.Chocolatey.Sources...
Importing namespace Cake.Common.Tools.Chocolatey.Upgrade...
Importing namespace Cake.Common.Tools.DNU...
Importing namespace Cake.Common.Tools.DNU.Build...
Importing namespace Cake.Common.Tools.DNU.Pack...
Importing namespace Cake.Common.Tools.DNU.Restore...
Importing namespace Cake.Common.Tools.DotCover...
Importing namespace Cake.Common.Tools.DotCover.Analyse...
Importing namespace Cake.Common.Tools.DotCover.Cover...
Importing namespace Cake.Common.Tools.DotNetCore...
Importing namespace Cake.Common.Tools.DotNetCore.Build...
Importing namespace Cake.Common.Tools.DotNetCore.Execute...
Importing namespace Cake.Common.Tools.DotNetCore.Pack...
Importing namespace Cake.Common.Tools.DotNetCore.Publish...
Importing namespace Cake.Common.Tools.DotNetCore.Restore...
Importing namespace Cake.Common.Tools.DotNetCore.Run...
Importing namespace Cake.Common.Tools.DotNetCore.Test...
Importing namespace Cake.Common.Tools.DupFinder...
Importing namespace Cake.Common.Tools.Fixie...
Importing namespace Cake.Common.Tools.GitLink...
Importing namespace Cake.Common.Tools.GitReleaseManager...
Importing namespace Cake.Common.Tools.GitReleaseManager.AddAssets...
Importing namespace Cake.Common.Tools.GitReleaseManager.Close...
Importing namespace Cake.Common.Tools.GitReleaseManager.Create...
Importing namespace Cake.Common.Tools.GitReleaseManager.Export...
Importing namespace Cake.Common.Tools.GitReleaseManager.Publish...
Importing namespace Cake.Common.Tools.GitReleaseNotes...
Importing namespace Cake.Common.Tools.GitVersion...
Importing namespace Cake.Common.Tools.ILMerge...
Importing namespace Cake.Common.Tools.ILRepack...
Importing namespace Cake.Common.Tools.InspectCode...
Importing namespace Cake.Common.Tools.MSBuild...
Importing namespace Cake.Common.Tools.MSTest...
Importing namespace Cake.Common.Tools.NSIS...
Importing namespace Cake.Common.Tools.NuGet...
Importing namespace Cake.Common.Tools.NuGet.Install...
Importing namespace Cake.Common.Tools.NuGet.Pack...
Importing namespace Cake.Common.Tools.NuGet.Push...
Importing namespace Cake.Common.Tools.NuGet.Restore...
Importing namespace Cake.Common.Tools.NuGet.SetApiKey...
Importing namespace Cake.Common.Tools.NuGet.SetProxy...
Importing namespace Cake.Common.Tools.NuGet.Sources...
Importing namespace Cake.Common.Tools.NuGet.Update...
Importing namespace Cake.Common.Tools.NUnit...
Importing namespace Cake.Common.Tools.OctopusDeploy...
Importing namespace Cake.Common.Tools.OpenCover...
Importing namespace Cake.Common.Tools.ReportGenerator...
Importing namespace Cake.Common.Tools.ReportUnit...
Importing namespace Cake.Common.Tools.Roundhouse...
Importing namespace Cake.Common.Tools.SignTool...
Importing namespace Cake.Common.Tools.SpecFlow...
Importing namespace Cake.Common.Tools.SpecFlow.StepDefinitionReport...
Importing namespace Cake.Common.Tools.SpecFlow.TestExecutionReport...
Importing namespace Cake.Common.Tools.TextTransform...
Importing namespace Cake.Common.Tools.VSTest...
Importing namespace Cake.Common.Tools.WiX...
Importing namespace Cake.Common.Tools.WiX.Heat...
Importing namespace Cake.Common.Tools.XBuild...
Importing namespace Cake.Common.Tools.XUnit...
Importing namespace Cake.Common.Xml...
Importing namespace Cake.Core...
Importing namespace Cake.Core.Diagnostics...
Importing namespace Cake.Core.IO...
Importing namespace Cake.Core.Scripting...
Importing namespace System...
Importing namespace System.Collections.Generic...
Importing namespace System.IO...
Importing namespace System.Linq...
Importing namespace System.Text...
Importing namespace System.Threading.Tasks...
Compiling build script...

========================================
Default
========================================
Executing task: Default
Creating zip file: /home/havok/Projects/Cake/ZipEmptyFolders/EmptyFolders.zip
Compressing file /home/havok/Projects/Cake/ZipEmptyFolders/Package/NotEmpty/File.txt
Zip successfully created: /home/havok/Projects/Cake/ZipEmptyFolders/EmptyFolders.zip
Finished executing task: Default

Task                          Duration            
--------------------------------------------------
Default                       00:00:00.0924718    
--------------------------------------------------
Total:                        00:00:00.0924718   
```","Empty folders are not included in a ZIP archive  ### What You Are Seeing?

I'm trying to create a ZIP archive with pre-defined folder structure. Some folders are empty. After using `Zip(""./Package"", ""Package.zip"");`, I see that Package.zip is created, b",2382,gitfool,cake
2200,Support UNC paths,"Support UNC paths

 - In `FilePath`
 - In `DirectoryPath`
 - In globber","Support UNC paths  Support UNC paths

 - In `FilePath`
 - In `DirectoryPath`
 - In globber",2296,patriksvensson,cake
2105,StartProcess cannot find specified file using native StartProcess or using Powershell version.,"<!--
BEFORE YOU SUBMIT AN ISSUE:

DO NOT CREATE AN ISSUE FOR A QUESTION - questions are better served in chat, and can be later raised as an issue if required.
-  chat - https://gitter.im/cake-build/cake

DELETE EVERYTHING IN THIS COMMENT BLOCK

TEMPLATE FOR BUG REPORTS:
-->

### What You Are Seeing?
Using StartProcess returns ""An error occurred when executing task 'taskName'.
Error: One or more errors occurred.
        The system cannot find the file specified""

`StartProcess(""//ComputerName/SomeFolder/Some.exe"")`

This same error appears when using the Powershell addin that uses a script file that invokes Start-Process.

### What is Expected?
The process should be started. As it works outside of cake just using straight powershell. 

### What version of Cake are you using?
26.1.0
### Are you running on a 32 or 64 bit system?
64
### What environment are you running on?  Windows? Linux? Mac?
Windows
### Are you running on a CI Server?  If so, which one?
Not yet, just local testing
<!--
If possible, provide a link to the failing build.
-->

### How Did You Get This To Happen? (Steps to Reproduce)
```csharp
Task(""taskName"")
    .Description(""start exe"")
    .Does(() =>
    {
        StartProcess(@""\\PCName\SomeFolder\Some.exe"");
    });
```


<!--

Can you point us to a project where this problem occurs?  i.e. a public GitHub Repo, where we can try to reproduce the problem, and help with debugging?
No
-->

### Output Log
<!--
When including the log information, please ensure you have run the command with --verbosity=diagnostic. It provides important information for determining an issue.

If running Cake.exe directly, the parameter is passed in as --verbosity=diagnostic
If running Cake via the bootstrapper, the parameter is -Verbosity Diagnostic

- Make sure there is no sensitive data shared.
- We need ALL output, not just what you may believe is relevant.

In order to rule out potential issues with the compilation of your Cake script, it would be very helpful if you could try running the script with some additional parameters.

The first, when compiling on Windows, would be to use the -Mono flag.  This can be passed into both Cake.exe and the Bootstrapper.  This will allow verification that it isn't a problem specific to one compiler or the other.

The second, would be to use the latest version of Roslyn.  This can be done using the -Experimental flag, which again can be passed to both Cake.exe and the bootstrapper.

If you can provide the output from the above when submitting an issue, this would be tremendously useful!
-->

GIST LINK - Please create a gist and link to that gist here

OR

~~~sh
PLACE LOG CONTENT HERE
~~~
![image](https://user-images.githubusercontent.com/14109666/38139941-a6cc7130-33ff-11e8-97a7-63f2b04c829a.png)

<!--
TEMPLATE FOR FEATURE REQUESTS:

It's a blank slate, have fun!
-->","StartProcess cannot find specified file using native StartProcess or using Powershell version.  <!--
BEFORE YOU SUBMIT AN ISSUE:

DO NOT CREATE AN ISSUE FOR A QUESTION - questions are better served in chat, and can be later raised as an issue if requir",2296,patriksvensson,cake
1883,Globbing does not support UNC paths,"### What You Are Seeing?

A `NotSupportedException` is thrown when calling `GetDirectories()` with a UNC path.

### What is Expected?

Globbing of UNC paths should work like other paths.

### What version of Cake are you using?

0.23.0

### Are you running on a 32 or 64 bit system?

64 bit

### What environment are you running on?  Windows? Linux? Mac?

Windows 8.1

### Are you running on a CI Server?  If so, which one?

Initially spotted in Team City but can replicate it at a local powershell prompt.

### How Did You Get This To Happen? (Steps to Reproduce)

```
Task(""demo-of-globbing-issue"")
    .Does(()=>
    {
        var directories = GetDirectories(@""\\localhost\e$\stack-exchange-data"");
        foreach(var directory in directories)
            Information(""Found: ""+directory);
    });

var target = Argument(""target"", ""demo-of-globbing-issue"");
RunTarget(target);
```

### Output Log

```
Preparing to run build script...
Running build script...
Module directory does not exist.
Analyzing build script...
Analyzing C:/dev/......./build-scripts/test.cake...
Processing build script...
Adding assembly reference to mscorlib.dll...
Adding assembly reference to System.Core.dll...
Adding assembly reference to Cake.Core.dll...
Adding assembly reference to Cake.Common.dll...
Adding assembly reference to Cake.exe...
Adding assembly reference to System.dll...
Adding assembly reference to System.Xml.dll...
Adding assembly reference to System.Xml.Linq.dll...
Adding assembly reference to System.Data.dll...
Adding assembly reference to System.Runtime.dll...
Importing namespace Cake.Common...
Importing namespace Cake.Common.Build...
Importing namespace Cake.Common.Build.AppVeyor...
Importing namespace Cake.Common.Build.AppVeyor.Data...
Importing namespace Cake.Common.Build.Bamboo...
Importing namespace Cake.Common.Build.Bamboo.Data...
Importing namespace Cake.Common.Build.BitbucketPipelines...
Importing namespace Cake.Common.Build.BitbucketPipelines.Data...
Importing namespace Cake.Common.Build.Bitrise...
Importing namespace Cake.Common.Build.Bitrise.Data...
Importing namespace Cake.Common.Build.ContinuaCI...
Importing namespace Cake.Common.Build.ContinuaCI.Data...
Importing namespace Cake.Common.Build.GitLabCI...
Importing namespace Cake.Common.Build.GitLabCI.Data...
Importing namespace Cake.Common.Build.GoCD...
Importing namespace Cake.Common.Build.GoCD.Data...
Importing namespace Cake.Common.Build.Jenkins...
Importing namespace Cake.Common.Build.Jenkins.Data...
Importing namespace Cake.Common.Build.MyGet...
Importing namespace Cake.Common.Build.TeamCity...
Importing namespace Cake.Common.Build.TFBuild...
Importing namespace Cake.Common.Build.TFBuild.Data...
Importing namespace Cake.Common.Build.TravisCI...
Importing namespace Cake.Common.Build.TravisCI.Data...
Importing namespace Cake.Common.Diagnostics...
Importing namespace Cake.Common.IO...
Importing namespace Cake.Common.IO.Paths...
Importing namespace Cake.Common.Net...
Importing namespace Cake.Common.Security...
Importing namespace Cake.Common.Solution...
Importing namespace Cake.Common.Solution.Project...
Importing namespace Cake.Common.Solution.Project.Properties...
Importing namespace Cake.Common.Solution.Project.XmlDoc...
Importing namespace Cake.Common.Text...
Importing namespace Cake.Common.Tools...
Importing namespace Cake.Common.Tools.Cake...
Importing namespace Cake.Common.Tools.Chocolatey...
Importing namespace Cake.Common.Tools.Chocolatey.ApiKey...
Importing namespace Cake.Common.Tools.Chocolatey.Config...
Importing namespace Cake.Common.Tools.Chocolatey.Download...
Importing namespace Cake.Common.Tools.Chocolatey.Features...
Importing namespace Cake.Common.Tools.Chocolatey.Install...
Importing namespace Cake.Common.Tools.Chocolatey.New...
Importing namespace Cake.Common.Tools.Chocolatey.Pack...
Importing namespace Cake.Common.Tools.Chocolatey.Pin...
Importing namespace Cake.Common.Tools.Chocolatey.Push...
Importing namespace Cake.Common.Tools.Chocolatey.Sources...
Importing namespace Cake.Common.Tools.Chocolatey.Uninstall...
Importing namespace Cake.Common.Tools.Chocolatey.Upgrade...
Importing namespace Cake.Common.Tools.DotCover...
Importing namespace Cake.Common.Tools.DotCover.Analyse...
Importing namespace Cake.Common.Tools.DotCover.Cover...
Importing namespace Cake.Common.Tools.DotCover.Merge...
Importing namespace Cake.Common.Tools.DotCover.Report...
Importing namespace Cake.Common.Tools.DotNetCore...
Importing namespace Cake.Common.Tools.DotNetCore.Build...
Importing namespace Cake.Common.Tools.DotNetCore.Clean...
Importing namespace Cake.Common.Tools.DotNetCore.Execute...
Importing namespace Cake.Common.Tools.DotNetCore.MSBuild...
Importing namespace Cake.Common.Tools.DotNetCore.NuGet.Delete...
Importing namespace Cake.Common.Tools.DotNetCore.NuGet.Push...
Importing namespace Cake.Common.Tools.DotNetCore.Pack...
Importing namespace Cake.Common.Tools.DotNetCore.Publish...
Importing namespace Cake.Common.Tools.DotNetCore.Restore...
Importing namespace Cake.Common.Tools.DotNetCore.Run...
Importing namespace Cake.Common.Tools.DotNetCore.Test...
Importing namespace Cake.Common.Tools.DotNetCore.Tool...
Importing namespace Cake.Common.Tools.DotNetCore.VSTest...
Importing namespace Cake.Common.Tools.DupFinder...
Importing namespace Cake.Common.Tools.Fixie...
Importing namespace Cake.Common.Tools.GitLink...
Importing namespace Cake.Common.Tools.GitReleaseManager...
Importing namespace Cake.Common.Tools.GitReleaseManager.AddAssets...
Importing namespace Cake.Common.Tools.GitReleaseManager.Close...
Importing namespace Cake.Common.Tools.GitReleaseManager.Create...
Importing namespace Cake.Common.Tools.GitReleaseManager.Export...
Importing namespace Cake.Common.Tools.GitReleaseManager.Publish...
Importing namespace Cake.Common.Tools.GitReleaseNotes...
Importing namespace Cake.Common.Tools.GitVersion...
Importing namespace Cake.Common.Tools.ILMerge...
Importing namespace Cake.Common.Tools.ILRepack...
Importing namespace Cake.Common.Tools.InnoSetup...
Importing namespace Cake.Common.Tools.InspectCode...
Importing namespace Cake.Common.Tools.MSBuild...
Importing namespace Cake.Common.Tools.MSTest...
Importing namespace Cake.Common.Tools.NSIS...
Importing namespace Cake.Common.Tools.NuGet...
Importing namespace Cake.Common.Tools.NuGet.Add...
Importing namespace Cake.Common.Tools.NuGet.Init...
Importing namespace Cake.Common.Tools.NuGet.Install...
Importing namespace Cake.Common.Tools.NuGet.List...
Importing namespace Cake.Common.Tools.NuGet.Pack...
Importing namespace Cake.Common.Tools.NuGet.Push...
Importing namespace Cake.Common.Tools.NuGet.Restore...
Importing namespace Cake.Common.Tools.NuGet.SetApiKey...
Importing namespace Cake.Common.Tools.NuGet.SetProxy...
Importing namespace Cake.Common.Tools.NuGet.Sources...
Importing namespace Cake.Common.Tools.NuGet.Update...
Importing namespace Cake.Common.Tools.NUnit...
Importing namespace Cake.Common.Tools.OctopusDeploy...
Importing namespace Cake.Common.Tools.OpenCover...
Importing namespace Cake.Common.Tools.ReportGenerator...
Importing namespace Cake.Common.Tools.ReportUnit...
Importing namespace Cake.Common.Tools.Roundhouse...
Importing namespace Cake.Common.Tools.SignTool...
Importing namespace Cake.Common.Tools.SpecFlow...
Importing namespace Cake.Common.Tools.SpecFlow.StepDefinitionReport...
Importing namespace Cake.Common.Tools.SpecFlow.TestExecutionReport...
Importing namespace Cake.Common.Tools.TextTransform...
Importing namespace Cake.Common.Tools.VSTest...
Importing namespace Cake.Common.Tools.VSWhere...
Importing namespace Cake.Common.Tools.VSWhere.All...
Importing namespace Cake.Common.Tools.VSWhere.Latest...
Importing namespace Cake.Common.Tools.VSWhere.Legacy...
Importing namespace Cake.Common.Tools.VSWhere.Product...
Importing namespace Cake.Common.Tools.WiX...
Importing namespace Cake.Common.Tools.WiX.Heat...
Importing namespace Cake.Common.Tools.XBuild...
Importing namespace Cake.Common.Tools.XUnit...
Importing namespace Cake.Common.Xml...
Importing namespace Cake.Core...
Importing namespace Cake.Core.Diagnostics...
Importing namespace Cake.Core.IO...
Importing namespace Cake.Core.Scripting...
Importing namespace System...
Importing namespace System.Collections.Generic...
Importing namespace System.IO...
Importing namespace System.Linq...
Importing namespace System.Text...
Importing namespace System.Threading.Tasks...
Compiling build script...

========================================
demo-of-globbing-issue
========================================
Executing task: demo-of-globbing-issue
An error occurred when executing task 'demo-of-globbing-issue'.
Error: System.AggregateException: One or more errors occurred. ---> System.NotSupportedException: UNC paths are not supp
orted.
   at Cake.Core.IO.Globbing.GlobParser.ParseRoot(GlobParserContext context)
   at Cake.Core.IO.Globbing.GlobParser.Parse(GlobParserContext context)
   at Cake.Core.IO.Globber.Match(String pattern, Func`2 predicate)
   at Cake.Common.IO.GlobbingAliases.GetDirectories(ICakeContext context, String pattern)
   at Submission#0.GetDirectories(String pattern)
   at Submission#0.<<Initialize>>b__0_0()
   at Cake.Core.CakeTaskBuilderExtensions.<>c__DisplayClass8_0.<Does>b__0(ICakeContext x)
   at Cake.Core.ActionTask.<Execute>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.DefaultExecutionStrategy.<ExecuteAsync>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.CakeEngine.<ExecuteTaskAsync>d__29.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.CakeEngine.<RunTargetAsync>d__18.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Scripting.BuildScriptHost.<RunTargetAsync>d__3.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.Scripting.ScriptHost.RunTarget(String target)
   at Submission#0.<<Initialize>>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.<RunSubmissionsAsync>d__9`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.CodeAnalysis.Scripting.Script`1.<RunSubmissionsAsync>d__21.MoveNext()
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at Cake.Scripting.Roslyn.RoslynScriptSession.Execute(Script script)
   at Cake.Core.Scripting.ScriptRunner.Run(IScriptHost host, FilePath scriptPath, IDictionary`2 arguments)
   at Cake.Commands.BuildCommand.Execute(CakeOptions options)
   at Cake.CakeApplication.Run(CakeOptions options)
   at Cake.Program.Main()
---> (Inner Exception #0) System.NotSupportedException: UNC paths are not supported.
   at Cake.Core.IO.Globbing.GlobParser.ParseRoot(GlobParserContext context)
   at Cake.Core.IO.Globbing.GlobParser.Parse(GlobParserContext context)
   at Cake.Core.IO.Globber.Match(String pattern, Func`2 predicate)
   at Cake.Common.IO.GlobbingAliases.GetDirectories(ICakeContext context, String pattern)
   at Submission#0.GetDirectories(String pattern)
   at Submission#0.<<Initialize>>b__0_0()
   at Cake.Core.CakeTaskBuilderExtensions.<>c__DisplayClass8_0.<Does>b__0(ICakeContext x)
   at Cake.Core.ActionTask.<Execute>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.DefaultExecutionStrategy.<ExecuteAsync>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.CakeEngine.<ExecuteTaskAsync>d__29.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.CakeEngine.<RunTargetAsync>d__18.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Scripting.BuildScriptHost.<RunTargetAsync>d__3.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Cake.Core.Scripting.ScriptHost.RunTarget(String target)
   at Submission#0.<<Initialize>>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.<RunSubmissionsAsync>d__9`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.CodeAnalysis.Scripting.Script`1.<RunSubmissionsAsync>d__21.MoveNext()<---
```","Globbing does not support UNC paths  ### What You Are Seeing?

A `NotSupportedException` is thrown when calling `GetDirectories()` with a UNC path.

### What is Expected?

Globbing of UNC paths should work like other paths.

### What version of Ca",2296,patriksvensson,cake
720,Copy files from network location.,"I would like to copy files from new twork location by calling 
`CopyFiles(""\\server\directory\*.*,` `""c:\temp"");`
However this use case is not supported and I am getting ""UNC paths are not supported."" error. 

Any reason why are you not allowing file operations over the network ? ","Copy files from network location.  I would like to copy files from new twork location by calling 
`CopyFiles(""\\server\directory\*.*,` `""c:\temp"");`
However this use case is not supported and I am getting ""UNC paths are not supported."" error. 

Any re",2296,patriksvensson,cake
2113,Error when loading tools without internet connection,"<!--
BEFORE YOU SUBMIT AN ISSUE:

DO NOT CREATE AN ISSUE FOR A QUESTION - questions are better served in chat, and can be later raised as an issue if required.
-  chat - https://gitter.im/cake-build/cake

DELETE EVERYTHING IN THIS COMMENT BLOCK

TEMPLATE FOR BUG REPORTS:
-->

### What You Are Seeing?

Cake fails if it cannot get a connection to a nuget source when installing a nuget package (even if the package is already present).

### What is Expected?

Cake should work without an internet connection if the appropiate package is already present.

### What version of Cake are you using?

0.26.1

### Are you running on a 32 or 64 bit system?

64 bit

### What environment are you running on?  Windows? Linux? Mac?

Windows 7

### Are you running on a CI Server?  If so, which one?

Local

<!--
If possible, provide a link to the failing build.
-->

### How Did You Get This To Happen? (Steps to Reproduce)

[Cake script](https://github.com/fwinkelbauer/Bumpy/blob/master/Source/build.cake):

- Run `cake` or `build.ps1`
- Disconnect from the internet
- Run `cake` or `build.ps1` again

<!--

Can you point us to a project where this problem occurs?  i.e. a public GitHub Repo, where we can try to reproduce the problem, and help with debugging?

-->

### Output Log

Error messages include: `An error occurred while retrieving package metadata for 'Cake.Bumpy' from source 'nuget.org'.` or ` An error occurred while retrieving package metadata for 'octokit' from source 'nuget.org'`

```
Installing tools...
  GET https://api.nuget.org/v3/registration3-gz-semver2/vswhere/index.json
An error was encountered when fetching 'GET https://api.nuget.org/v3/registration3-gz-semver2/vswhere/index.json'. The request will now be retried.
Fehler beim Senden der Anforderung.
  Der Remotename konnte nicht aufgelöst werden: 'api.nuget.org'
  GET https://api.nuget.org/v3/registration3-gz-semver2/vswhere/index.json
An error was encountered when fetching 'GET https://api.nuget.org/v3/registration3-gz-semver2/vswhere/index.json'. The request will now be retried.
Fehler beim Senden der Anforderung.
  Der Remotename konnte nicht aufgelöst werden: 'api.nuget.org'
  GET https://api.nuget.org/v3/registration3-gz-semver2/vswhere/index.json
Error: System.AggregateException: Mindestens ein Fehler ist aufgetreten. ---> NuGet.Protocol.Core.Types.FatalProtocolException: An error occurred while retrieving package metadata for 'vswhere' from source 'nuget.org'. ---> System.Net.Http.HttpRequestException: Fehler beim Senden der Anforderung. ---> System.Net.WebException: Der Remotename konnte nicht aufgelöst werden: 'api.nuget.org'
```

<!--
When including the log information, please ensure you have run the command with --verbosity=diagnostic. It provides important information for determining an issue.

If running Cake.exe directly, the parameter is passed in as --verbosity=diagnostic
If running Cake via the bootstrapper, the parameter is -Verbosity Diagnostic

- Make sure there is no sensitive data shared.
- We need ALL output, not just what you may believe is relevant.

In order to rule out potential issues with the compilation of your Cake script, it would be very helpful if you could try running the script with some additional parameters.

The first, when compiling on Windows, would be to use the -Mono flag.  This can be passed into both Cake.exe and the Bootstrapper.  This will allow verification that it isn't a problem specific to one compiler or the other.

The second, would be to use the latest version of Roslyn.  This can be done using the -Experimental flag, which again can be passed to both Cake.exe and the bootstrapper.

If you can provide the output from the above when submitting an issue, this would be tremendously useful!
-->","Error when loading tools without internet connection  <!--
BEFORE YOU SUBMIT AN ISSUE:

DO NOT CREATE AN ISSUE FOR A QUESTION - questions are better served in chat, and can be later raised as an issue if required.
-  chat - https://gitter.im/cake-buil",2121,mholo65,cake
2114,GH2084: Resolve assemblies in NuGet packages located in lib,"- Improve dependency loading, load in correct order as installed by NuGet.
- Resolve assemblies also from lib
- Fixes #2084","GH2084: Resolve assemblies in NuGet packages located in lib  - Improve dependency loading, load in correct order as installed by NuGet.
- Resolve assemblies also from lib
- Fixes #2084",2121,mholo65,cake
2081,Possibility to override default nuget sources,"Default nuget sources should be overridable in order to work completely offline.

See discussion on Gitter [here](https://gitter.im/cake-build/cake?at=5aa7b6abe4d1c63604f497fd)","Possibility to override default nuget sources  Default nuget sources should be overridable in order to work completely offline.

See discussion on Gitter [here](https://gitter.im/cake-build/cake?at=5aa7b6abe4d1c63604f497fd)",2086,mholo65,cake
2085,GH2029 GH2082: Update NuGet.Client libraries to 4.6.0,"Wow! Such perf improvements!!
","GH2029 GH2082: Update NuGet.Client libraries to 4.6.0  Wow! Such perf improvements!!
",2086,mholo65,cake
2014,In-process NuGet don’t support multiple feeds through config,"Simple fix, put a `string.Split(’;’,..)` here https://github.com/cake-build/cake/blob/develop/src/Cake.NuGet/Install/NuGetSourceRepositoryProvider.cs#L37","In-process NuGet don’t support multiple feeds through config  Simple fix, put a `string.Split(’;’,..)` here https://github.com/cake-build/cake/blob/develop/src/Cake.NuGet/Install/NuGetSourceRepositoryProvider.cs#L37",2015,Insire,cake
1751,Cake on .Net core,"According to the documentation, Cake can run on .Net core. However, when running the build.sh package for linux, it requires mono.
How can I run a cake script without relying on mono on Linux?","Cake on .Net core  According to the documentation, Cake can run on .Net core. However, when running the build.sh package for linux, it requires mono.
How can I run a cake script without relying on mono on Linux?",1778,ErikSchierboom,cake
1779,Can't run netcoreapp1.x tests when .NET Core 2 is installed,"### What You Are Seeing?

Can't run netcoreapp1.x tests when .NET Core 2 is installed. See also: https://github.com/xunit/xunit/issues/1412

### What is Expected?

netcoreapp1.x tests run when .NET Core 2 is installed

### What version of Cake are you using?

0.21.1

### Are you running on a 32 or 64 bit system?

64-bit system

### What environment are you running on?  Windows? Linux? Mac?

Windows and Mac

### Are you running on a CI Server?  If so, which one?

None

### How Did You Get This To Happen? (Steps to Reproduce)

Run the build.ps1 or build.sh script when having only .NET Core 2 installed.
","Can't run netcoreapp1.x tests when .NET Core 2 is installed  ### What You Are Seeing?

Can't run netcoreapp1.x tests when .NET Core 2 is installed. See also: https://github.com/xunit/xunit/issues/1412

### What is Expected?

netcoreapp1.x tests run",1778,ErikSchierboom,cake
1389,Spaces in #load path will cause an Illegal characters in path error.,"If a space is included in the path to the #load directive such as #load ""../folder with space/test.cake"" an error ""Illegal characters in path"" will be generated. 

It seems the load directive processing is splitting the line by spaces, regardless if it's quoted or not.","Spaces in #load path will cause an Illegal characters in path error.  If a space is included in the path to the #load directive such as #load ""../folder with space/test.cake"" an error ""Illegal characters in path"" will be generated. 

It seems the load d",1445,patriksvensson,cake
1426,Space in Reference Preprocessor Directive Throws Illegal characters in path,"### What You Are Seeing?
adding a preprocessor directive like this:
    #r ""path to/assembly.dll""
or:
    #reference ""path to/assembly.dll""
results in:
```
    Error: System.ArgumentException: Illegal characters in path.
       at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)
       at System.IO.Path.IsPathRooted(String path)
       at Cake.Core.IO.Path..ctor(String path)
       at Cake.Core.IO.FilePath..ctor(String path)
       at Cake.Core.Scripting.Processors.ReferenceDirectiveProcessor.Process(IScriptAnalyzerContext context, String line, String& replacement)
       at Cake.Core.Scripting.Analysis.ScriptAnalyzer.<>c__DisplayClass6_2.<AnalyzeCallback>b__0(LineProcessor p)
       at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)
       at Cake.Core.Scripting.Analysis.ScriptAnalyzer.AnalyzeCallback(IScriptAnalyzerContext context)
       at Cake.Core.Scripting.Analysis.ScriptAnalyzerContext.Analyze(FilePath path)
       at Cake.Core.Scripting.Analysis.ScriptAnalyzer.Analyze(FilePath path)
       at Cake.Core.Scripting.ScriptRunner.Run(IScriptHost host, FilePath scriptPath, IDictionary`2 arguments)
       at Cake.Commands.BuildCommand.Execute(CakeOptions options)
       at Cake.CakeApplication.Run(CakeOptions options)
       at Cake.Program.Main()
```

### What is Expected?
Assuming the path is valid, the reference should be loaded, if the path is invalid, a file not found exception.

### What version of Cake are you using?
First saw with 0.11.0, updated to 0.17.0 same issue.

### Are you running on a 32 or 64 bit system?
64 bit

### What environment are you running on?  Windows? Linux? Mac?
Windows 10 Enterprise

### Are you running on a CI Server?  If so, which one?
No

### How Did You Get This To Happen? (Steps to Reproduce)

A single line .cake file with a reference as described above can reproduce the problem.","Space in Reference Preprocessor Directive Throws Illegal characters in path  ### What You Are Seeing?
adding a preprocessor directive like this:
    #r ""path to/assembly.dll""
or:
    #reference ""path to/assembly.dll""
results in:
```
    Error: Syst",1445,patriksvensson,cake
957,Corrected code example for DotNetCorePackSettings,"There is no property called `Configurations` in `DotNetCorePacKSettings`.
http://cakebuild.net/api/cake.common.tools.dotnetcore/df2c8647/2ba210e1","Corrected code example for DotNetCorePackSettings  There is no property called `Configurations` in `DotNetCorePacKSettings`.
http://cakebuild.net/api/cake.common.tools.dotnetcore/df2c8647/2ba210e1",1056,luisgoncalves,cake
1010,Corrected documentation for GitReleaseManager,"This:

https://github.com/cake-build/cake/blob/develop/src/Cake.Common/Tools/GitReleaseManager/Close/GitReleaseManagerMilestoneCloser.cs#L35

Is incorrect.  Should say:

```
Creates a Release using the specified settings.
```","Corrected documentation for GitReleaseManager  This:

https://github.com/cake-build/cake/blob/develop/src/Cake.Common/Tools/GitReleaseManager/Close/GitReleaseManagerMilestoneCloser.cs#L35

Is incorrect.  Should say:

```
Creates a Release using the",1056,luisgoncalves,cake
974,Suppress obsolete warnings on Mono,"Mono seems to care about obsoleted aliases even though they only exist in generated code and isn't explicitly called. We could work around this by creating a custom attribute for aliases like `CakeObsoletedAliasAttribute`.

![image](https://cloud.githubusercontent.com/assets/357872/15913639/8197811a-2ddb-11e6-9e33-e7f1b9822731.png)",Suppress obsolete warnings on Mono  Mono seems to care about obsoleted aliases even though they only exist in generated code and isn't explicitly called. We could work around this by creating a custom attribute for aliases like `CakeObsoletedAliasAttribut,1012,devlead,cake
15,Should throw if target wasn't found,"","Should throw if target wasn't found  ",1012,devlead,cake
421,Allow setting `/testsettings:` file for MSTest runner,"`MSBuildSettings` should expose a property to set the `/testsettings:` argument. This file is used to set various settings for the `mstest.exe` runner.","Allow setting `/testsettings:` file for MSTest runner  `MSBuildSettings` should expose a property to set the `/testsettings:` argument. This file is used to set various settings for the `mstest.exe` runner.",989,agc93,cake
527,Allow setting `/testsettings:` file for MSTest runner #421,"","Allow setting `/testsettings:` file for MSTest runner #421  ",989,agc93,cake
725,Sanitization in TeamCity Provider places extra apostrophe if '[' is used.,"Sanitation tokens is:

``` csharp
            _sanitizationTokens = new Dictionary<string, string>
            {
                { ""|"", ""||"" },
                { ""\'"", ""|\'"" },
                { ""\n"", ""|n"" },
                { ""\r"", ""|r"" },
                { ""["", ""|['"" },
                { ""]"", ""|]"" }
            };
```

while it should be

``` csharp
            _sanitizationTokens = new Dictionary<string, string>
            {
                { ""|"", ""||"" },
                { ""\'"", ""|\'"" },
                { ""\n"", ""|n"" },
                { ""\r"", ""|r"" },
                { ""["", ""|["" },
                { ""]"", ""|]"" }
            };
```","Sanitization in TeamCity Provider places extra apostrophe if '[' is used.  Sanitation tokens is:

``` csharp
            _sanitizationTokens = new Dictionary<string, string>
            {
                { ""|"", ""||"" },
                { ""\'"", ""|\'""",726,mholo65,cake
714,Added support for importing coverage to TeamCity,"This is needed to import to import Coverage to TeamCity. See https://confluence.jetbrains.com/display/TCD9/Manually+Configuring+Reporting+Coverage

Note, quick hack, I would like to test functionality on monday when I have access to TeamCity.

Also, unit tests are non-existent for TeamCity, wan't to add these also prior to merging this PR.

related to #713 

//cc @patriksvensson","Added support for importing coverage to TeamCity  This is needed to import to import Coverage to TeamCity. See https://confluence.jetbrains.com/display/TCD9/Manually+Configuring+Reporting+Coverage

Note, quick hack, I would like to test functionality on",726,mholo65,cake
592,CakeBuildLog ConsolePalette missing LogLevel.Fatal map,"[CakeBuildLog](https://github.com/cake-build/cake/blob/develop/src/Cake/Diagnostics/CakeBuildLog.cs#L76) lacks a `ConsolePalette` mapping for `LogLevel.Fatal`","CakeBuildLog ConsolePalette missing LogLevel.Fatal map  [CakeBuildLog](https://github.com/cake-build/cake/blob/develop/src/Cake/Diagnostics/CakeBuildLog.cs#L76) lacks a `ConsolePalette` mapping for `LogLevel.Fatal`",594,devlead,cake
593,Log errors to console standard error,"Many build servers have filtering, alerts and other special handling for therefore I propose we log the log levels error & fatal to console error stream.","Log errors to console standard error  Many build servers have filtering, alerts and other special handling for therefore I propose we log the log levels error & fatal to console error stream.",594,devlead,cake
471,Add NUnit 3 support,"NUnit 3 is close to final release and it is incompatible with NUnit 2. It would probably be easiest to add a new NUnit3 tool. I assume pull requests are welcome? :smile: 

Another option is that NUnit 3 has a driver to run 2.x tests. Some of the settings may need to change, but a single tool would probably be easiest to use. Do you have a preference on the approach?","Add NUnit 3 support  NUnit 3 is close to final release and it is incompatible with NUnit 2. It would probably be easiest to add a new NUnit3 tool. I assume pull requests are welcome? :smile: 

Another option is that NUnit 3 has a driver to run 2.x tests",532,rprouse,cake
525,How do I specify the version in the #tool directive?,"I'm using the `#tool` directive to reference the `NUnit.Runners` package:

```
#tool ""NUnit.Runners""
```

Currently it picks version 2.6.4, which is what I want, so it's OK. But Is there a way to specify the version explicitly? Because when NUnit 3.0 is released (if this day ever comes), I might not want to update immediately...","How do I specify the version in the #tool directive?  I'm using the `#tool` directive to reference the `NUnit.Runners` package:

```
#tool ""NUnit.Runners""
```

Currently it picks version 2.6.4, which is what I want, so it's OK. But Is there a way to",532,rprouse,cake
